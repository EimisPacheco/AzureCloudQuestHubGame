{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DndContext } from '@dnd-kit/core';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport ServiceOptionsPanel from './ServiceOptionsPanel';\nimport { generateArchitecture } from '../services/AWSArchitectureAI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSArchitectureGame = () => {\n  _s();\n  const [architecture, setArchitecture] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [serviceOptions, setServiceOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [difficulty, setDifficulty] = useState('BEGINNER');\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    loadNextArchitecture();\n  }, [difficulty]);\n  const loadNextArchitecture = async () => {\n    setIsLoading(true);\n    try {\n      const data = await generateArchitecture(difficulty);\n      setArchitecture(data.architecture);\n      setCurrentQuestion(data.question);\n      setServiceOptions(data.options);\n    } catch (error) {\n      console.error('Failed to load architecture:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleServiceSelection = async selectedService => {\n    if (currentQuestion !== null && currentQuestion !== void 0 && currentQuestion.missingServices.includes(selectedService)) {\n      setScore(prev => prev + 1);\n      await loadNextArchitecture();\n    }\n  };\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (over && over.id === 'architecture-drop-zone') {\n      handleServiceSelection(active.id);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-display\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"level-display\",\n        children: [\"Level: \", difficulty]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AWSArchitectureDisplay, {\n        architecture: architecture,\n        missingServices: (currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.missingServices) || [],\n        onServiceClick: handleServiceSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ServiceOptionsPanel, {\n        options: serviceOptions,\n        onSelect: handleServiceSelection,\n        isLoading: isLoading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureGame, \"PYg1/lwzjhBZab3J8Z0noV8XaFY=\");\n_c = AWSArchitectureGame;\nexport default AWSArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureGame\");","map":{"version":3,"names":["React","useState","useEffect","DndContext","AWSArchitectureDisplay","ServiceOptionsPanel","generateArchitecture","jsxDEV","_jsxDEV","AWSArchitectureGame","_s","architecture","setArchitecture","currentQuestion","setCurrentQuestion","serviceOptions","setServiceOptions","score","setScore","difficulty","setDifficulty","isLoading","setIsLoading","loadNextArchitecture","data","question","options","error","console","handleServiceSelection","selectedService","missingServices","includes","prev","handleDragEnd","event","active","over","id","onDragEnd","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onServiceClick","onSelect","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DndContext } from '@dnd-kit/core';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport ServiceOptionsPanel from './ServiceOptionsPanel';\nimport { generateArchitecture } from '../services/AWSArchitectureAI';\n\nconst AWSArchitectureGame = () => {\n  const [architecture, setArchitecture] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [serviceOptions, setServiceOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [difficulty, setDifficulty] = useState('BEGINNER');\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    loadNextArchitecture();\n  }, [difficulty]);\n\n  const loadNextArchitecture = async () => {\n    setIsLoading(true);\n    try {\n      const data = await generateArchitecture(difficulty);\n      setArchitecture(data.architecture);\n      setCurrentQuestion(data.question);\n      setServiceOptions(data.options);\n    } catch (error) {\n      console.error('Failed to load architecture:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleServiceSelection = async (selectedService) => {\n    if (currentQuestion?.missingServices.includes(selectedService)) {\n      setScore(prev => prev + 1);\n      await loadNextArchitecture();\n    }\n  };\n\n  const handleDragEnd = (event) => {\n    const { active, over } = event;\n    \n    if (over && over.id === 'architecture-drop-zone') {\n      handleServiceSelection(active.id);\n    }\n  };\n\n  return (\n    <DndContext onDragEnd={handleDragEnd}>\n      <div className=\"game-container\">\n        <div className=\"score-display\">Score: {score}</div>\n        <div className=\"level-display\">Level: {difficulty}</div>\n        \n        <AWSArchitectureDisplay \n          architecture={architecture}\n          missingServices={currentQuestion?.missingServices || []}\n          onServiceClick={handleServiceSelection}\n        />\n        \n        <ServiceOptionsPanel \n          options={serviceOptions}\n          onSelect={handleServiceSelection}\n          isLoading={isLoading}\n        />\n      </div>\n    </DndContext>\n  );\n};\n\nexport default AWSArchitectureGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}