{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game copy 20- copy 2/src/components/GameCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AWS_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Add these constants from IconResolver.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\n\n// Move getMissionText function to the top\nconst getMissionText = category => {\n  const categoryName = category.replace('Arch_', '').replace(/-/g, ' ');\n  return `Shoot the ${categoryName} icons!`;\n};\nconst GameCanvas = () => {\n  _s();\n  // First, declare all state\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const savedRocket = localStorage.getItem('selectedRocket');\n    return savedRocket || 'rocket1.png';\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({\n    x: 375,\n    y: 550\n  });\n\n  // Modify the instructions state initialization\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AWS_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 6);\n    };\n    return getRandomCategories().map(category => {\n      const categoryName = AWS_ICON_CATEGORIES[category].replace('Arch_', '').replace(/-/g, ' ');\n      return {\n        text: `Shoot the ${categoryName} icons!`,\n        category: AWS_ICON_CATEGORIES[category]\n      };\n    });\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => path.includes(instruction.category)).map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name\n      }));\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs and other setup code\n  const canvasRef = useRef(null);\n\n  // We'll keep arrays for icons, bullets, and feedback in refs to avoid\n  // re-rendering the whole component every time they update.\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n\n  // Images for the gun and bullets\n  const rocketImage = useRef(new Image());\n\n  // Initialize rocket image\n  useEffect(() => {\n    rocketImage.current.src = `icons/${selectedRocket}`;\n  }, [selectedRocket]); // Update when selectedRocket changes\n\n  const fireballImage = new Image();\n  fireballImage.src = 'icons/fireball.png';\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25,\n    // center of an 800px width minus half the gun width\n    y: 800 - 100,\n    // Adjust this value to move the rocket closer to the bottom\n    width: 120,\n    height: 120\n  });\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    const padding = 100; // Increase padding between icons\n    return Math.floor(Math.random() * (canvas.width - padding * 2) + padding);\n  };\n\n  // First, add a ref to track initialization\n  const isInitialized = useRef(false);\n\n  // Modify the loadIcons function to ensure category rotation\n  const loadIcons = () => {\n    // Get current category AFTER updating the instruction index\n    setCurrentInstructionIndex(prevIndex => {\n      const newIndex = (prevIndex + 1) % instructions.length;\n      const currentCategory = instructions[newIndex].category;\n      console.log('\\n--- New Set of Icons ---');\n      console.log(`Current Mission Category: ${currentCategory}`);\n\n      // Reset icons array\n      iconsRef.current = [];\n      const positions = [];\n\n      // Get all icons for current category\n      const categoryIcons = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => path.includes(currentCategory)).map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name,\n        category: currentCategory\n      }));\n\n      // Get all icons from other categories (excluding current category)\n      const otherCategoryIcons = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => !path.includes(currentCategory)).map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name,\n        category: path.split('/')[2] // Change from [1] to [2] to get the proper category name\n      }));\n\n      // For current category: Get 4 icons (with possible repeats if less than 4 available)\n      let selectedCategoryIcons = [];\n      if (categoryIcons.length <= 4) {\n        // If we have less than 4 icons, repeat icons until we have 4\n        while (selectedCategoryIcons.length < 4) {\n          selectedCategoryIcons.push(...categoryIcons.slice(0, 4 - selectedCategoryIcons.length));\n        }\n      } else {\n        // If we have more than 4 icons, randomly select 4 unique ones\n        const shuffled = [...categoryIcons].sort(() => 0.5 - Math.random());\n        selectedCategoryIcons = shuffled.slice(0, 4);\n      }\n\n      // After selectedCategoryIcons is created, log the 4 selected icons\n      console.log('\\nSelected Icons for Current Mission:');\n      console.log(`${currentCategory} = ${selectedCategoryIcons.map(icon => icon.name).join(', ')}`);\n\n      // For other categories: Get 6 random unique icons from different categories\n      const selectedOtherIcons = [];\n      const usedCategories = new Set();\n\n      // Build a mapping of categories to their icons\n      const categoryIconMap = otherCategoryIcons.reduce((acc, icon) => {\n        if (!acc[icon.category]) {\n          acc[icon.category] = [];\n        }\n        acc[icon.category].push(icon);\n        return acc;\n      }, {});\n      const availableCategories = Object.keys(categoryIconMap).filter(cat => cat !== currentCategory);\n\n      // Shuffle the categories\n      const shuffledCategories = availableCategories.sort(() => 0.5 - Math.random());\n      for (let i = 0; i < shuffledCategories.length && selectedOtherIcons.length < 6; i++) {\n        const category = shuffledCategories[i];\n        if (usedCategories.has(category)) {\n          continue;\n        }\n        const iconsInCategory = categoryIconMap[category];\n        if (iconsInCategory.length > 0) {\n          // Randomly select an icon from this category\n          const randomIconIndex = Math.floor(Math.random() * iconsInCategory.length);\n          const icon = iconsInCategory[randomIconIndex];\n          selectedOtherIcons.push(icon);\n          usedCategories.add(category);\n        }\n      }\n\n      // After selectedOtherIcons is created, log the 6 distraction icons\n      console.log('\\nDistraction Icons from Other Categories:');\n      selectedOtherIcons.forEach(icon => {\n        console.log(`${icon.name} (${icon.category})`);\n      });\n      console.log('------------------------\\n');\n\n      // If we still need more icons, fill from remaining icons irrespective of category\n      if (selectedOtherIcons.length < 6) {\n        const remainingIcons = otherCategoryIcons.filter(icon => icon.category !== currentCategory && !selectedOtherIcons.includes(icon));\n        const shuffledRemainingIcons = remainingIcons.sort(() => 0.5 - Math.random());\n        selectedOtherIcons.push(...shuffledRemainingIcons.slice(0, 6 - selectedOtherIcons.length));\n      }\n\n      // Add current category icons with random X positions\n      selectedCategoryIcons.forEach(iconInfo => {\n        let x = getRandomX();\n        while (positions.some(pos => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n        const iconImage = new Image();\n        iconImage.src = iconInfo.path;\n        iconsRef.current.push({\n          x,\n          y: -50,\n          type: currentCategory,\n          name: iconInfo.name,\n          image: iconImage,\n          hit: false\n        });\n      });\n\n      // Add other category icons with random X positions\n      selectedOtherIcons.forEach(iconInfo => {\n        let x = getRandomX();\n        while (positions.some(pos => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n        const iconImage = new Image();\n        iconImage.src = iconInfo.path;\n        iconsRef.current.push({\n          x,\n          y: -50,\n          type: 'other',\n          name: iconInfo.name,\n          image: iconImage,\n          hit: false\n        });\n      });\n      return newIndex;\n    });\n  };\n\n  // Show feedback (checkmark or X) and points after a shot\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now()\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    const currentCategory = instructions[currentInstructionIndex].category;\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter(bullet => {\n        if (bullet.x > icon.x && bullet.x < icon.x + 50 && bullet.y > icon.y && bullet.y < icon.y + 50) {\n          icon.hit = true;\n\n          // Debug logging\n          console.log('Hit icon:', {\n            iconType: icon.type,\n            currentCategory: currentCategory,\n            isMatch: icon.type === currentCategory\n          });\n\n          // Compare the exact category strings\n          if (icon.type === currentCategory) {\n            const heightPercentage = 1 - icon.y / canvas.height;\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            setScore(prev => {\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore(prev => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n\n    // Only load new icons if we have none and the game is still running\n    if (iconsRef.current.length === 0 && timeLeft > 0 && isInitialized.current) {\n      playSound('levelup');\n      loadIcons();\n    }\n  };\n\n  // The main game loop, which draws everything on the canvas\n  const gameLoop = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw the rocket (gun)\n    const {\n      x: gunX,\n      y: gunY,\n      width,\n      height\n    } = gunRef.current;\n    ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n\n    // Draw icons\n    iconsRef.current.forEach(icon => {\n      if (!icon.hit) {\n        // Save the current context state\n        ctx.save();\n\n        // Create a rounded rectangle path\n        const radius = 10; // Adjust this value to control the roundness\n        const x = icon.x;\n        const y = icon.y;\n        const width = 50;\n        const height = 50;\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n\n        // Clip to the rounded rectangle\n        ctx.clip();\n\n        // Draw the icon\n        ctx.drawImage(icon.image, x, y, width, height);\n\n        // Restore the context state\n        ctx.restore();\n        icon.y += 0.3; // Keep consistent speed\n      }\n    });\n\n    // Remove icons that are off screen and check if we need new ones\n    iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n    if (iconsRef.current.length === 0 && timeLeft > 0 && isInitialized.current) {\n      playSound('levelup');\n      loadIcons();\n    }\n\n    // Draw bullets\n    bulletsRef.current.forEach(bullet => {\n      ctx.drawImage(fireballImage, bullet.x, bullet.y, 20, 20);\n      bullet.y -= 5;\n    });\n\n    // Remove bullets that are off-screen\n    bulletsRef.current = bulletsRef.current.filter(b => b.y > 0);\n\n    // Draw feedback with consistent styling for both positive and negative points\n    const now = Date.now();\n    feedbacksRef.current = feedbacksRef.current.filter(feedback => {\n      const elapsed = now - feedback.time;\n      if (elapsed < 3000) {\n        // Draw points with consistent styling\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n        ctx.shadowBlur = 4;\n        ctx.fillStyle = feedback.isCorrect ? '#4CAF50' : '#F44336';\n        ctx.font = 'bold 28px Arial';\n\n        // Show points with + or - sign\n        const pointsText = feedback.points > 0 ? `+${feedback.points}` : `${feedback.points}`;\n        ctx.fillText(pointsText, feedback.x + 10, feedback.y - 20);\n\n        // Draw icon name\n        ctx.font = '16px Arial';\n        ctx.fillText(feedback.name, feedback.x + 60, feedback.y + 25);\n\n        // Draw feedback symbol\n        ctx.font = 'bold 55px Arial';\n        ctx.fillText(feedback.isCorrect ? '✔' : '✘', feedback.x + 10, feedback.y + 30);\n        ctx.shadowBlur = 0;\n        return true;\n      }\n      return false;\n    });\n    checkCollisions();\n\n    // Update and draw particles\n    particlesRef.current = particlesRef.current.filter(particle => {\n      if (particle.lifetime > 0 && particle.size > 0) {\n        particle.update();\n        particle.draw(ctx);\n        return true;\n      }\n      return false;\n    });\n    requestAnimationFrame(gameLoop);\n  };\n\n  // Add sound references with error handling\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Initialize sounds with error handling\n  useEffect(() => {\n    const soundFiles = {\n      shoot: '/sounds/pistol_sound.mp3',\n      correct: '/sounds/correct_sound.mp3',\n      incorrect: '/sounds/incorrect_sound.mp3',\n      levelup: '/sounds/levelup.mp3'\n    };\n\n    // Create a safe audio player that won't break if files are missing\n    const createSafeAudio = path => {\n      const audio = new Audio();\n      return new Promise(resolve => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n\n        // Set timeout in case the file takes too long to load\n        setTimeout(() => resolve(null), 2000);\n        audio.src = path;\n      });\n    };\n\n    // Load all sound files with error handling\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n    loadSounds();\n\n    // Set initial volume\n    return () => {\n      // Cleanup sounds on unmount\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  // Safe play function\n  const playSound = soundName => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Add a mute toggle button to the UI\n  const [isMuted, setIsMuted] = useState(false);\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !isMuted;\n      }\n    });\n  };\n\n  // Add new state and refs for particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n\n  // Add state to track if we've already handled game over\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  // Add state to track if game should start\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Particle class\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size; // Store initial size\n    }\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      // Calculate size based on lifetime instead of continuous subtraction\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n    draw(ctx) {\n      if (this.size <= 0) return; // Don't draw if size is 0 or negative\n\n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Function to create explosion effect\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled, gameStarted]);\n\n  // Handle game over\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    setGameOver(true);\n    setGameOverHandled(true);\n    const newScore = {\n      name: playerName,\n      score\n    };\n    const newHighScores = [...highScores, newScore].sort((a, b) => b.score - a.score).slice(0, 5);\n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  // Modify the initialization useEffect\n  useEffect(() => {\n    if (canvasRef.current && !isInitialized.current) {\n      const canvas = canvasRef.current;\n      canvas.width = 1200;\n      canvas.height = 800;\n      const ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n\n      // Only load icons once during initialization\n      loadIcons();\n      isInitialized.current = true;\n      requestAnimationFrame(gameLoop);\n    }\n  }, []);\n\n  // Second effect for event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ROCKET_WIDTH = 50;\n    const FIXED_ROCKET_Y = 550;\n    const handleMouseMove = e => {\n      const rect = canvas.getBoundingClientRect();\n\n      // Calculate new X position\n      let newX = e.clientX - rect.left - gunRef.current.width / 2;\n\n      // Add boundary checks\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n\n      // Update gun position\n      gunRef.current.x = newX;\n    };\n    const handleCanvasClick = () => {\n      if (gameStarted && timeLeft > 0) {\n        playSound('shoot');\n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20\n        });\n      }\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted]);\n\n  // Clear both name and rocket selection when component mounts\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  // Add state for modal visibility\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  // Add rocket options\n  const rocketOptions = [{\n    id: 'rocket1.png',\n    name: 'Modern Rocket'\n  }, {\n    id: 'rocket2.png',\n    name: 'Power Rocket'\n  }, {\n    id: 'rocket3.png',\n    name: 'Stealth Rocket'\n  }, {\n    id: 'rocket4.png',\n    name: 'Classic Rocket'\n  }];\n\n  // Handle rocket selection\n  const handleRocketSelect = rocketId => {\n    setSelectedRocket(rocketId);\n    localStorage.setItem('selectedRocket', rocketId);\n\n    // Update the rocket image immediately\n    rocketImage.current.src = `icons/${rocketId}`;\n    setShowRocketModal(false);\n    // Start the game after rocket selection\n    setGameStarted(true);\n  };\n\n  // Add state for cheerleader messages\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  // Add cheerleader messages for different situations\n  const cheerleaderMessages = {\n    goodShot: [\"Great shot! You're an AWS Pro! 🌟\", \"Amazing cloud skills! Keep it up! 🎯\", \"You're on fire in the cloud! 🔥\", \"That's how AWS experts do it! 👏\"],\n    combo: [\"Cloud combo! 🎮\", \"You're scaling infinitely! ⚡\", \"What an AWS streak! 🌈\"],\n    timeWarning: [\"30 seconds left - you're highly available! ⏰\", \"Time for the final deployment! 💪\", \"Make every compute unit count! ⭐\"],\n    encouragement: [\"You've got this, cloud warrior! 🚀\", \"Keep going! You're AWS certified material! 🌟\", \"I believe in your cloud powers! 💫\", \"Show them your AWS expertise! 💪\"],\n    highScore: [\"New high score! You're going serverless! 🏆\", \"You're breaking cloud records! 🎖️\", \"Legendary AWS performance! 👑\"]\n  };\n\n  // Function to show a random message from a category\n  const showCheerleaderMessage = category => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n\n    // Hide message after 3 seconds\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  // Add periodic encouragement\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  // Add time warning messages\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  // Add this function near other handlers (around line 440)\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowNameModal(false);\n  };\n\n  // Ensure proper mission text display\n  const getMissionText = category => {\n    const categoryName = category.replace('Arch_', '').replace(/-/g, ' ');\n    return `Shoot the ${categoryName} icons!`;\n  };\n\n  // Ensure icons are loaded properly\n  useEffect(() => {\n    // Preload all AWS service icons\n    Object.values(SERVICE_MAPPINGS).forEach(path => {\n      const img = new Image();\n      img.src = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameCanvas-game-title\",\n      children: \"AWS Cloud Shooter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-canvas-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"gameCanvas-game-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-instruction-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-player-name\",\n            children: [\"Player: \", playerName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 819,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-score-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"alien\",\n              children: \"\\uD83D\\uDC7E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 823,\n              columnNumber: 15\n            }, this), ' ', \"Score: \", score, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"joystick\",\n              children: \"\\uD83D\\uDD79\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 825,\n              columnNumber: 15\n            }, this), soundsLoaded && Object.values(sounds.current).some(sound => sound) && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gameCanvas-sound-toggle\",\n              onClick: toggleMute,\n              \"aria-label\": \"Toggle sound\",\n              children: isMuted ? '🔇' : '🔊'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 828,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 822,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 818,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-timer-display\",\n          children: [\"Time: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 839,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-score-explanation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"How to Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Hit correct icon: +5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 846,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Height bonus: up to +20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 847,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Wrong hit: -5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 848,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Tip: Shoot icons as high as possible!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 845,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 843,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-high-scores\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"High Scores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 854,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: highScores.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gameCanvas-high-score-name\",\n                children: [entry.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 858,\n                columnNumber: 17\n              }, this), \" \", entry.score]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 857,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-mission-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"gameCanvas-mission-title\",\n            children: \"Current Mission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 865,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-mission-text\",\n            children: instructions[currentInstructionIndex].text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 869,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 817,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 813,\n      columnNumber: 7\n    }, this), showRocketModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-rocket-selection-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Choose Your Rocket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-rocket-grid\",\n          children: rocketOptions.map(rocket => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `gameCanvas-rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`,\n            onClick: () => handleRocketSelect(rocket.id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `icons/${rocket.id}`,\n              alt: rocket.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 887,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: rocket.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 891,\n              columnNumber: 19\n            }, this)]\n          }, rocket.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 880,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 878,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 877,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 9\n    }, this), showCheerMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-cheerleader-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheerleader-character\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/cheerleader.png\",\n          alt: \"Cheerleader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 911,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 910,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheer-message\",\n        children: cheerMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 909,\n      columnNumber: 9\n    }, this), showNameModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to AWS Cloud Shooter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 922,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your name to start the game:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempPlayerName,\n            onChange: e => {\n              setTempPlayerName(e.target.value);\n              setNameError('');\n            },\n            placeholder: \"Your name\",\n            className: \"gameCanvas-name-input\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 925,\n            columnNumber: 15\n          }, this), nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-name-error\",\n            children: nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 936,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"gameCanvas-start-button\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 924,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 921,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 920,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 811,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"e5pP3E+ogRT5Tci+nqFa7Uzk+r8=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","AWS_ICON_CATEGORIES","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","S3_BUCKET_URL","ICONS_BASE_PATH","getMissionText","category","categoryName","replace","GameCanvas","_s","timeLeft","setTimeLeft","score","setScore","currentInstructionIndex","setCurrentInstructionIndex","selectedRocket","setSelectedRocket","savedRocket","localStorage","getItem","showNameModal","setShowNameModal","tempPlayerName","setTempPlayerName","nameError","setNameError","playerName","setPlayerName","savedName","rocketPosition","setRocketPosition","x","y","instructions","getRandomCategories","categories","Object","keys","shuffled","sort","Math","random","slice","map","text","iconTypes","reduce","acc","instruction","categoryServices","entries","filter","_","path","includes","name","canvasRef","iconsRef","bulletsRef","feedbacksRef","rocketImage","Image","current","src","fireballImage","gunRef","width","height","getRandomX","canvas","padding","floor","isInitialized","loadIcons","prevIndex","newIndex","length","currentCategory","console","log","positions","categoryIcons","otherCategoryIcons","split","selectedCategoryIcons","push","icon","join","selectedOtherIcons","usedCategories","Set","categoryIconMap","availableCategories","cat","shuffledCategories","i","has","iconsInCategory","randomIconIndex","add","forEach","remainingIcons","shuffledRemainingIcons","iconInfo","some","pos","abs","iconImage","type","image","hit","showFeedback","isCorrect","points","iconName","time","Date","now","checkCollisions","bullets","icons","iconIndex","bullet","iconType","isMatch","heightPercentage","heightBonus","prev","max","highScores","s","showCheerleaderMessage","playSound","createExplosion","splice","gameLoop","ctx","getContext","clearRect","gunX","gunY","drawImage","save","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","b","feedback","elapsed","shadowColor","shadowBlur","fillStyle","font","pointsText","fillText","particlesRef","particle","lifetime","size","update","draw","requestAnimationFrame","sounds","soundsLoaded","setSoundsLoaded","soundFiles","shoot","correct","incorrect","levelup","createSafeAudio","audio","Audio","Promise","resolve","addEventListener","warn","setTimeout","loadSounds","loadedSounds","key","values","sound","pause","soundName","isMuted","currentTime","volume","play","catch","err","setIsMuted","toggleMute","muted","setHighScores","saved","JSON","parse","gameOver","setGameOver","gameOverHandled","setGameOverHandled","gameStarted","setGameStarted","Particle","constructor","color","speedX","speedY","initialSize","globalAlpha","arc","PI","fill","timer","setInterval","clearInterval","handleGameOver","newScore","newHighScores","a","setItem","stringify","imageSmoothingEnabled","ROCKET_WIDTH","FIXED_ROCKET_Y","handleMouseMove","e","rect","getBoundingClientRect","newX","clientX","left","min","handleCanvasClick","removeEventListener","removeItem","showRocketModal","setShowRocketModal","rocketOptions","id","handleRocketSelect","rocketId","cheerMessage","setCheerMessage","showCheerMessage","setShowCheerMessage","cheerleaderMessages","goodShot","combo","timeWarning","encouragement","highScore","messages","randomMessage","encouragementInterval","handleNameSubmit","preventDefault","trim","img","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","role","onClick","entry","index","rocket","alt","window","location","reload","onSubmit","value","onChange","target","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game copy 20- copy 2/src/components/GameCanvas.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AWS_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Add these constants from IconResolver.js\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\n\n// Move getMissionText function to the top\nconst getMissionText = (category) => {\n  const categoryName = category.replace('Arch_', '').replace(/-/g, ' ');\n  return `Shoot the ${categoryName} icons!`;\n};\n\nconst GameCanvas = () => {\n  // First, declare all state\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const savedRocket = localStorage.getItem('selectedRocket');\n    return savedRocket || 'rocket1.png';\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({ x: 375, y: 550 });\n\n  // Modify the instructions state initialization\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AWS_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 6);\n    };\n\n    return getRandomCategories().map(category => {\n      const categoryName = AWS_ICON_CATEGORIES[category]\n        .replace('Arch_', '')\n        .replace(/-/g, ' ');\n      \n      return {\n        text: `Shoot the ${categoryName} icons!`,\n        category: AWS_ICON_CATEGORIES[category]\n      };\n    });\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS)\n        .filter(([_, path]) => path.includes(instruction.category))\n        .map(([name, path]) => ({\n          path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n          name: name\n        }));\n\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs and other setup code\n  const canvasRef = useRef(null);\n\n  // We'll keep arrays for icons, bullets, and feedback in refs to avoid\n  // re-rendering the whole component every time they update.\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n\n  // Images for the gun and bullets\n  const rocketImage = useRef(new Image());\n  \n  // Initialize rocket image\n  useEffect(() => {\n    rocketImage.current.src = `icons/${selectedRocket}`;\n  }, [selectedRocket]); // Update when selectedRocket changes\n\n  const fireballImage = new Image();\n  fireballImage.src = 'icons/fireball.png';\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25, // center of an 800px width minus half the gun width\n    y: 800 - 100, // Adjust this value to move the rocket closer to the bottom\n    width: 120,\n    height: 120,\n  });\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    const padding = 100; // Increase padding between icons\n    return Math.floor(Math.random() * (canvas.width - padding * 2) + padding);\n  };\n\n  // First, add a ref to track initialization\n  const isInitialized = useRef(false);\n\n  // Modify the loadIcons function to ensure category rotation\n  const loadIcons = () => {\n    // Get current category AFTER updating the instruction index\n    setCurrentInstructionIndex(prevIndex => {\n      const newIndex = (prevIndex + 1) % instructions.length;\n      const currentCategory = instructions[newIndex].category;\n      \n      console.log('\\n--- New Set of Icons ---');\n      console.log(`Current Mission Category: ${currentCategory}`);\n      \n      // Reset icons array\n      iconsRef.current = [];\n      const positions = [];\n\n      // Get all icons for current category\n      const categoryIcons = Object.entries(SERVICE_MAPPINGS)\n        .filter(([_, path]) => path.includes(currentCategory))\n        .map(([name, path]) => ({\n          path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n          name: name,\n          category: currentCategory\n        }));\n\n      // Get all icons from other categories (excluding current category)\n      const otherCategoryIcons = Object.entries(SERVICE_MAPPINGS)\n        .filter(([_, path]) => !path.includes(currentCategory))\n        .map(([name, path]) => ({\n          path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n          name: name,\n          category: path.split('/')[2] // Change from [1] to [2] to get the proper category name\n        }));\n\n      // For current category: Get 4 icons (with possible repeats if less than 4 available)\n      let selectedCategoryIcons = [];\n      if (categoryIcons.length <= 4) {\n        // If we have less than 4 icons, repeat icons until we have 4\n        while (selectedCategoryIcons.length < 4) {\n          selectedCategoryIcons.push(\n            ...categoryIcons.slice(0, 4 - selectedCategoryIcons.length)\n          );\n        }\n      } else {\n        // If we have more than 4 icons, randomly select 4 unique ones\n        const shuffled = [...categoryIcons].sort(() => 0.5 - Math.random());\n        selectedCategoryIcons = shuffled.slice(0, 4);\n      }\n\n      // After selectedCategoryIcons is created, log the 4 selected icons\n      console.log('\\nSelected Icons for Current Mission:');\n      console.log(`${currentCategory} = ${selectedCategoryIcons.map(icon => icon.name).join(', ')}`);\n\n      // For other categories: Get 6 random unique icons from different categories\n      const selectedOtherIcons = [];\n      const usedCategories = new Set();\n\n      // Build a mapping of categories to their icons\n      const categoryIconMap = otherCategoryIcons.reduce((acc, icon) => {\n        if (!acc[icon.category]) {\n          acc[icon.category] = [];\n        }\n        acc[icon.category].push(icon);\n        return acc;\n      }, {});\n\n      const availableCategories = Object.keys(categoryIconMap).filter(\n        (cat) => cat !== currentCategory\n      );\n\n      // Shuffle the categories\n      const shuffledCategories = availableCategories.sort(() => 0.5 - Math.random());\n\n      for (let i = 0; i < shuffledCategories.length && selectedOtherIcons.length < 6; i++) {\n        const category = shuffledCategories[i];\n\n        if (usedCategories.has(category)) {\n          continue;\n        }\n\n        const iconsInCategory = categoryIconMap[category];\n\n        if (iconsInCategory.length > 0) {\n          // Randomly select an icon from this category\n          const randomIconIndex = Math.floor(Math.random() * iconsInCategory.length);\n          const icon = iconsInCategory[randomIconIndex];\n\n          selectedOtherIcons.push(icon);\n          usedCategories.add(category);\n        }\n      }\n\n      // After selectedOtherIcons is created, log the 6 distraction icons\n      console.log('\\nDistraction Icons from Other Categories:');\n      selectedOtherIcons.forEach(icon => {\n        console.log(`${icon.name} (${icon.category})`);\n      });\n      console.log('------------------------\\n');\n\n      // If we still need more icons, fill from remaining icons irrespective of category\n      if (selectedOtherIcons.length < 6) {\n        const remainingIcons = otherCategoryIcons.filter(\n          (icon) => icon.category !== currentCategory && !selectedOtherIcons.includes(icon)\n        );\n        const shuffledRemainingIcons = remainingIcons.sort(() => 0.5 - Math.random());\n        selectedOtherIcons.push(...shuffledRemainingIcons.slice(0, 6 - selectedOtherIcons.length));\n      }\n\n      // Add current category icons with random X positions\n      selectedCategoryIcons.forEach((iconInfo) => {\n        let x = getRandomX();\n        while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n\n        const iconImage = new Image();\n        iconImage.src = iconInfo.path;\n\n        iconsRef.current.push({\n          x,\n          y: -50,\n          type: currentCategory,\n          name: iconInfo.name,\n          image: iconImage,\n          hit: false,\n        });\n      });\n\n      // Add other category icons with random X positions\n      selectedOtherIcons.forEach((iconInfo) => {\n        let x = getRandomX();\n        while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n\n        const iconImage = new Image();\n        iconImage.src = iconInfo.path;\n\n        iconsRef.current.push({\n          x,\n          y: -50,\n          type: 'other',\n          name: iconInfo.name,\n          image: iconImage,\n          hit: false,\n        });\n      });\n\n      return newIndex;\n    });\n  };\n\n  // Show feedback (checkmark or X) and points after a shot\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now(),\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter((bullet) => {\n        if (\n          bullet.x > icon.x &&\n          bullet.x < icon.x + 50 &&\n          bullet.y > icon.y &&\n          bullet.y < icon.y + 50\n        ) {\n          icon.hit = true;\n\n          // Debug logging\n          console.log('Hit icon:', {\n            iconType: icon.type,\n            currentCategory: currentCategory,\n            isMatch: icon.type === currentCategory\n          });\n\n          // Compare the exact category strings\n          if (icon.type === currentCategory) {\n            const heightPercentage = 1 - (icon.y / canvas.height);\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            \n            setScore((prev) => {\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore((prev) => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n\n    // Only load new icons if we have none and the game is still running\n    if (iconsRef.current.length === 0 && timeLeft > 0 && isInitialized.current) {\n      playSound('levelup');\n      loadIcons();\n    }\n  };\n\n  // The main game loop, which draws everything on the canvas\n  const gameLoop = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw the rocket (gun)\n    const { x: gunX, y: gunY, width, height } = gunRef.current;\n    ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n\n    // Draw icons\n    iconsRef.current.forEach((icon) => {\n      if (!icon.hit) {\n        // Save the current context state\n        ctx.save();\n        \n        // Create a rounded rectangle path\n        const radius = 10; // Adjust this value to control the roundness\n        const x = icon.x;\n        const y = icon.y;\n        const width = 50;\n        const height = 50;\n        \n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        \n        // Clip to the rounded rectangle\n        ctx.clip();\n        \n        // Draw the icon\n        ctx.drawImage(icon.image, x, y, width, height);\n        \n        // Restore the context state\n        ctx.restore();\n        \n        icon.y += 0.3; // Keep consistent speed\n      }\n    });\n\n    // Remove icons that are off screen and check if we need new ones\n    iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n    \n    if (iconsRef.current.length === 0 && timeLeft > 0 && isInitialized.current) {\n      playSound('levelup');\n      loadIcons();\n    }\n\n    // Draw bullets\n    bulletsRef.current.forEach((bullet) => {\n      ctx.drawImage(fireballImage, bullet.x, bullet.y, 20, 20);\n      bullet.y -= 5;\n    });\n\n    // Remove bullets that are off-screen\n    bulletsRef.current = bulletsRef.current.filter((b) => b.y > 0);\n\n    // Draw feedback with consistent styling for both positive and negative points\n    const now = Date.now();\n    feedbacksRef.current = feedbacksRef.current.filter((feedback) => {\n      const elapsed = now - feedback.time;\n      if (elapsed < 3000) {\n        // Draw points with consistent styling\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n        ctx.shadowBlur = 4;\n        ctx.fillStyle = feedback.isCorrect ? '#4CAF50' : '#F44336';\n        ctx.font = 'bold 28px Arial';\n        \n        // Show points with + or - sign\n        const pointsText = feedback.points > 0 ? `+${feedback.points}` : `${feedback.points}`;\n        ctx.fillText(\n          pointsText,\n          feedback.x + 10,\n          feedback.y - 20\n        );\n\n        // Draw icon name\n        ctx.font = '16px Arial';\n        ctx.fillText(\n          feedback.name,\n          feedback.x + 60,\n          feedback.y + 25\n        );\n        \n        // Draw feedback symbol\n        ctx.font = 'bold 55px Arial';\n        ctx.fillText(\n          feedback.isCorrect ? '✔' : '✘',\n          feedback.x + 10,\n          feedback.y + 30\n        );\n        \n        ctx.shadowBlur = 0;\n        return true;\n      }\n      return false;\n    });\n\n    checkCollisions();\n\n    // Update and draw particles\n    particlesRef.current = particlesRef.current.filter(particle => {\n      if (particle.lifetime > 0 && particle.size > 0) {\n        particle.update();\n        particle.draw(ctx);\n        return true;\n      }\n      return false;\n    });\n\n    requestAnimationFrame(gameLoop);\n  };\n\n  // Add sound references with error handling\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Initialize sounds with error handling\n  useEffect(() => {\n    const soundFiles = {\n      shoot: '/sounds/pistol_sound.mp3',\n      correct: '/sounds/correct_sound.mp3',\n      incorrect: '/sounds/incorrect_sound.mp3',\n      levelup: '/sounds/levelup.mp3'\n    };\n\n    // Create a safe audio player that won't break if files are missing\n    const createSafeAudio = (path) => {\n      const audio = new Audio();\n      \n      return new Promise((resolve) => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n\n        // Set timeout in case the file takes too long to load\n        setTimeout(() => resolve(null), 2000);\n\n        audio.src = path;\n      });\n    };\n\n    // Load all sound files with error handling\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      \n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n\n    loadSounds();\n\n    // Set initial volume\n    return () => {\n      // Cleanup sounds on unmount\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  // Safe play function\n  const playSound = (soundName) => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Add a mute toggle button to the UI\n  const [isMuted, setIsMuted] = useState(false);\n\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !isMuted;\n      }\n    });\n  };\n\n  // Add new state and refs for particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n\n  // Add state to track if we've already handled game over\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  // Add state to track if game should start\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Particle class\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size; // Store initial size\n    }\n\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      // Calculate size based on lifetime instead of continuous subtraction\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n\n    draw(ctx) {\n      if (this.size <= 0) return; // Don't draw if size is 0 or negative\n      \n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Function to create explosion effect\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled, gameStarted]);\n\n  // Handle game over\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    \n    setGameOver(true);\n    setGameOverHandled(true);\n    \n    const newScore = { name: playerName, score };\n    const newHighScores = [...highScores, newScore]\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 5);\n    \n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  // Modify the initialization useEffect\n  useEffect(() => {\n    if (canvasRef.current && !isInitialized.current) {\n      const canvas = canvasRef.current;\n      canvas.width = 1200;\n      canvas.height = 800;\n      \n      const ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n\n      // Only load icons once during initialization\n      loadIcons();\n      isInitialized.current = true;\n      \n      requestAnimationFrame(gameLoop);\n    }\n  }, []);\n\n  // Second effect for event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    \n    const ROCKET_WIDTH = 50;\n    const FIXED_ROCKET_Y = 550;\n\n    const handleMouseMove = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      \n      // Calculate new X position\n      let newX = e.clientX - rect.left - (gunRef.current.width / 2);\n      \n      // Add boundary checks\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n      \n      // Update gun position\n      gunRef.current.x = newX;\n    };\n\n    const handleCanvasClick = () => {\n      if (gameStarted && timeLeft > 0) {\n        playSound('shoot');\n        \n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20,\n        });\n      }\n    };\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted]);\n\n  // Clear both name and rocket selection when component mounts\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  // Add state for modal visibility\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  // Add rocket options\n  const rocketOptions = [\n    { id: 'rocket1.png', name: 'Modern Rocket' },\n    { id: 'rocket2.png', name: 'Power Rocket' },\n    { id: 'rocket3.png', name: 'Stealth Rocket' },\n    { id: 'rocket4.png', name: 'Classic Rocket' },\n  ];\n\n  // Handle rocket selection\n  const handleRocketSelect = (rocketId) => {\n    setSelectedRocket(rocketId);\n    localStorage.setItem('selectedRocket', rocketId);\n    \n    // Update the rocket image immediately\n    rocketImage.current.src = `icons/${rocketId}`;\n    \n    setShowRocketModal(false);\n    // Start the game after rocket selection\n    setGameStarted(true);\n  };\n\n  // Add state for cheerleader messages\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  // Add cheerleader messages for different situations\n  const cheerleaderMessages = {\n    goodShot: [\n      \"Great shot! You're an AWS Pro! 🌟\",\n      \"Amazing cloud skills! Keep it up! 🎯\",\n      \"You're on fire in the cloud! 🔥\",\n      \"That's how AWS experts do it! 👏\",\n    ],\n    combo: [\n      \"Cloud combo! 🎮\",\n      \"You're scaling infinitely! ⚡\",\n      \"What an AWS streak! 🌈\",\n    ],\n    timeWarning: [\n      \"30 seconds left - you're highly available! ⏰\",\n      \"Time for the final deployment! 💪\",\n      \"Make every compute unit count! ⭐\",\n    ],\n    encouragement: [\n      \"You've got this, cloud warrior! 🚀\",\n      \"Keep going! You're AWS certified material! 🌟\",\n      \"I believe in your cloud powers! 💫\",\n      \"Show them your AWS expertise! 💪\",\n    ],\n    highScore: [\n      \"New high score! You're going serverless! 🏆\",\n      \"You're breaking cloud records! 🎖️\",\n      \"Legendary AWS performance! 👑\",\n    ]\n  };\n\n  // Function to show a random message from a category\n  const showCheerleaderMessage = (category) => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n    \n    // Hide message after 3 seconds\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  // Add periodic encouragement\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  // Add time warning messages\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  // Add this function near other handlers (around line 440)\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowNameModal(false);\n  };\n\n  // Ensure proper mission text display\n  const getMissionText = (category) => {\n    const categoryName = category.replace('Arch_', '').replace(/-/g, ' ');\n    return `Shoot the ${categoryName} icons!`;\n  };\n\n  // Ensure icons are loaded properly\n  useEffect(() => {\n    // Preload all AWS service icons\n    Object.values(SERVICE_MAPPINGS).forEach(path => {\n      const img = new Image();\n      img.src = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`;\n    });\n  }, []);\n\n  return (\n    <div className=\"gameCanvas-container\">\n      <h1 className=\"gameCanvas-game-title\">AWS Cloud Shooter</h1>\n      <div className=\"gameCanvas-game-content\">\n        <div className=\"gameCanvas-canvas-wrapper\">\n          <canvas ref={canvasRef} className=\"gameCanvas-game-canvas\" />\n        </div>\n        <div className=\"gameCanvas-instruction-panel\">\n          <div className=\"gameCanvas-player-info\">\n            <div className=\"gameCanvas-player-name\">\n              Player: {playerName}\n            </div>\n            <div className=\"gameCanvas-score-display\">\n              <span role=\"img\" aria-label=\"alien\">👾</span>{' '}\n              Score: {score}{' '}\n              <span role=\"img\" aria-label=\"joystick\">🕹️</span>\n              \n              {soundsLoaded && Object.values(sounds.current).some(sound => sound) && (\n                <button \n                  className=\"gameCanvas-sound-toggle\"\n                  onClick={toggleMute}\n                  aria-label=\"Toggle sound\"\n                >\n                  {isMuted ? '🔇' : '🔊'}\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"gameCanvas-timer-display\">\n            Time: {timeLeft}s\n          </div>\n\n          <div className=\"gameCanvas-score-explanation\">\n            <h4>How to Score:</h4>\n            <ul>\n            <li>• Hit correct icon: +5 points</li>\n            <li>• Height bonus: up to +20</li>\n            <li>• Wrong hit: -5 points</li>\n            <li>• Tip: Shoot icons as high as possible!</li>\n            </ul>\n          </div>\n\n          <div className=\"gameCanvas-high-scores\">\n          <h4>High Scores</h4>\n          <ul>\n            {highScores.map((entry, index) => (\n              <li key={index}>\n                <span className=\"gameCanvas-high-score-name\">{entry.name}:</span> {entry.score}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n          <div className=\"gameCanvas-mission-container\">\n            <h3 className=\"gameCanvas-mission-title\">\n              Current Mission\n            </h3>\n            \n            <div className=\"gameCanvas-mission-text\">\n              {instructions[currentInstructionIndex].text}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showRocketModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-rocket-selection-modal\">\n            <h2>Choose Your Rocket</h2>\n            <div className=\"gameCanvas-rocket-grid\">\n              {rocketOptions.map((rocket) => (\n                <div \n                  key={rocket.id} \n                  className={`gameCanvas-rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`}\n                  onClick={() => handleRocketSelect(rocket.id)}\n                >\n                  <img \n                    src={`icons/${rocket.id}`} \n                    alt={rocket.name}\n                  />\n                  <p>{rocket.name}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {gameOver && (\n        <div className=\"gameCanvas-game-over\">\n          <h3>Game Over!</h3>\n          <button onClick={() => window.location.reload()}>\n            Play Again\n          </button>\n        </div>\n      )}\n\n      {showCheerMessage && (\n        <div className=\"gameCanvas-cheerleader-container\">\n          <div className=\"gameCanvas-cheerleader-character\">\n            <img src=\"icons/cheerleader.png\" alt=\"Cheerleader\" />\n          </div>\n          <div className=\"gameCanvas-cheer-message\">\n            {cheerMessage}\n          </div>\n        </div>\n      )}\n\n      {showNameModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-modal\">\n            <h2>Welcome to AWS Cloud Shooter!</h2>\n            <p>Enter your name to start the game:</p>\n            <form onSubmit={handleNameSubmit}>\n              <input\n                type=\"text\"\n                value={tempPlayerName}\n                onChange={(e) => {\n                  setTempPlayerName(e.target.value);\n                  setNameError('');\n                }}\n                placeholder=\"Your name\"\n                className=\"gameCanvas-name-input\"\n                autoFocus\n              />\n              {nameError && <div className=\"gameCanvas-name-error\">{nameError}</div>}\n              <button type=\"submit\" className=\"gameCanvas-start-button\">\n                Start Game\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GameCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}