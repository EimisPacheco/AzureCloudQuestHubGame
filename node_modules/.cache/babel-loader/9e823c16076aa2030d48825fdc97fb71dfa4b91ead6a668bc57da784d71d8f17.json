{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\nimport '../styles/DifficultyButtons.css';\nimport ReactConfetti from 'react-confetti';\nimport { useWindowSize } from 'react-use';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\nconst isValidArchitecture = data => {\n  if (!data || !Array.isArray(data.services) || !Array.isArray(data.connections)) {\n    console.warn(\"⚠️ Invalid JSON structure: Missing 'services' or 'connections'. Retrying...\");\n    return false;\n  }\n  const requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n  const serviceNames = data.services.map(service => typeof service === 'string' ? service : service === null || service === void 0 ? void 0 : service.name);\n  if (!requiredMissingServices.every(ms => serviceNames.includes(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing.`);\n    return false;\n  }\n  const connectionNodes = new Set();\n  data.connections.forEach(conn => {\n    connectionNodes.add(conn.from);\n    connectionNodes.add(conn.to);\n  });\n  if (!requiredMissingServices.every(ms => connectionNodes.has(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing from the connections.`);\n    return false;\n  }\n  return true;\n};\nconst validateJSONStructure = (json, difficulty) => {\n  let requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n  if (difficulty === 'INTERMEDIATE') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5'];\n  } else if (difficulty === 'ADVANCED') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5', 'missing_6', 'missing_7'];\n  }\n  return requiredMissingServices.every(service => json.missingServices.includes(service));\n};\nconst AWSArchitectureGame = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [architecture, setArchitecture] = useState(null);\n  const [architectureInfo, setArchitectureInfo] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [difficulty, setDifficulty] = useState('BEGINNER');\n  const [score, setScore] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [feedback, setFeedback] = useState({\n    isCorrect: false,\n    message: '',\n    points: 0\n  });\n  const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n  const [questionStartTime, setQuestionStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showFireworks, setShowFireworks] = useState(false);\n  const {\n    width,\n    height\n  } = useWindowSize();\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(TouchSensor));\n  const getServiceIcon = serviceName => {\n    if (!serviceName) {\n      console.error('No service name provided to getServiceIcon');\n      return null;\n    }\n    if (serviceName.toLowerCase().includes('missing')) {\n      console.log('Loading missing service icon locally:', '/aws-icons/missing.svg');\n      return '/aws-icons/missing.svg';\n    }\n    const cleanedServiceName = serviceName.toLowerCase().replace(/^(amazon|aws)\\s+/, '').replace(/\\s+/g, '-');\n    const potentialS3Url = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/Arch_${cleanedServiceName}_64.svg`;\n    console.log(`🔍 Attempting to load icon for \"${serviceName}\" from: ${potentialS3Url}`);\n    const resolvedIcon = getCachedServiceIcon(serviceName);\n    if (resolvedIcon) {\n      console.log(`✅ Successfully resolved icon for \"${serviceName}\": ${resolvedIcon}`);\n      return resolvedIcon;\n    }\n    console.warn(`❌ Icon not found for \"${serviceName}\" at attempted path: ${potentialS3Url}`);\n    return '/aws-icons/default.svg';\n  };\n  const loadNextArchitecture = useCallback(async () => {\n    var _data$missingServices;\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    let attempt = 0;\n    let isValid = false;\n    let data = null;\n    let maxAttempts = 7;\n    while (!isValid && attempt < maxAttempts) {\n      try {\n        console.log(`🔄 Attempt ${attempt + 1}: Fetching architecture data...`);\n        const response = await fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            difficulty\n          })\n        });\n        if (response.status === 503) {\n          console.warn(\"⚠️ Received 503 error. Retrying in 3 seconds...\");\n          attempt++;\n          await new Promise(resolve => setTimeout(resolve, 3000)); // Wait 3 seconds before retrying\n          continue;\n        }\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        data = await response.json();\n        console.log(\"📥 Received AI Response:\", JSON.stringify(data, null, 2));\n        isValid = isValidArchitecture(data);\n        if (!isValid) {\n          console.warn(`⛔ Invalid JSON structure. Retrying in 3 seconds...`);\n          await new Promise(resolve => setTimeout(resolve, 3000)); // Wait 3 seconds before retrying\n        } else {\n          console.log(\"✅ Valid architecture received, updating state...\");\n          break;\n        }\n      } catch (error) {\n        console.error(\"❌ Failed to load architecture:\", error);\n        if (attempt >= maxAttempts - 1) {\n          setError(error.message);\n          setIsLoading(false);\n          return;\n        }\n        await new Promise(resolve => setTimeout(resolve, 3000)); // Wait 3 seconds before retrying\n      }\n      attempt++;\n    }\n    if (!isValid) {\n      console.error(\"❌ Maximum retries reached. Unable to get valid JSON.\");\n      setError(\"Failed to fetch a valid architecture after multiple attempts.\");\n      setIsLoading(false);\n      return;\n    }\n    const transformedServices = data.services.map(serviceName => ({\n      id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n      name: serviceName,\n      icon: getServiceIcon(serviceName)\n    }));\n    setArchitecture({\n      services: transformedServices,\n      connections: data.connections\n    });\n    if (((_data$missingServices = data.missingServices) === null || _data$missingServices === void 0 ? void 0 : _data$missingServices.length) > 0) {\n      const currentMissingService = data.missingServices[0];\n      setCurrentQuestion({\n        text: currentMissingService.question,\n        optimizationFocus: currentMissingService.optimizationFocus,\n        options: currentMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getServiceIcon(opt.service)\n        }))\n      });\n    }\n    setArchitectureInfo({\n      name: data.architecture.name,\n      description: data.architecture.description,\n      missingServices: data.missingServices\n    });\n    setCurrentMissingServiceIndex(0);\n    setShowFeedback(false);\n    setQuestionStartTime(Date.now());\n    setElapsedTime(0);\n    setIsLoading(false);\n  }, [difficulty]);\n  const handleServiceSelection = selectedService => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n    const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n    const correctOption = currentMissingService.options.find(opt => opt.isCorrect);\n    if (selectedOption) {\n      setShowFeedback(true);\n      if (selectedOption.isCorrect) {\n        const points = selectedOption.rating;\n        setScore(prevScore => {\n          const newScore = prevScore + points;\n          if (newScore === architectureInfo.missingServices.length * 5) {\n            setShowFireworks(true);\n            setTimeout(() => setShowFireworks(false), 5000);\n          }\n          return newScore;\n        });\n        setShowConfetti(true);\n        setTimeout(() => setShowConfetti(false), 2000);\n        setFeedback({\n          isCorrect: true,\n          message: selectedOption.explanation,\n          points: points,\n          isOptimal: selectedOption.isOptimal\n        });\n      } else {\n        setFeedback({\n          isCorrect: false,\n          message: `<div class=\"feedback-explanation\">\n              <p>${selectedOption.explanation}</p>\n              <p class=\"correct-answer-section\">\n                <span class=\"correct-answer-label\">The correct answer was: </span>\n                <strong>${correctOption.service}</strong>. ${correctOption.explanation}\n              </p>\n            </div>`,\n          points: 0,\n          correctAnswer: correctOption.service\n        });\n      }\n    }\n  };\n  const handleNext = () => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    setShowFeedback(false);\n    if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n      const nextIndex = currentMissingServiceIndex + 1;\n      setCurrentMissingServiceIndex(nextIndex);\n      const nextMissingService = architectureInfo.missingServices[nextIndex];\n      setCurrentQuestion({\n        text: nextMissingService.question,\n        optimizationFocus: nextMissingService.optimizationFocus,\n        options: nextMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getServiceIcon(opt.service)\n        }))\n      });\n      setQuestionStartTime(Date.now());\n      setElapsedTime(0);\n    }\n  };\n  const handleDifficultyChange = level => {\n    setDifficulty(level);\n  };\n  useEffect(() => {\n    if (currentQuestion && !questionStartTime) {\n      setQuestionStartTime(Date.now());\n    }\n    const timer = setInterval(() => {\n      if (questionStartTime && !showFeedback) {\n        const elapsed = Math.floor((Date.now() - questionStartTime) / 1000);\n        setElapsedTime(elapsed);\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [currentQuestion, questionStartTime, showFeedback]);\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: (architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.name) || 'AWS Architecture Challenge'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score\",\n              children: [\"Score: \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"complexity\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"complexity-icon\",\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 19\n              }, this), difficulty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 17\n            }, this), currentQuestion && !showFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `timer ${elapsedTime > 60 ? 'danger' : elapsedTime > 30 ? 'warning' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timer-icon\",\n                children: \"\\u23F1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 21\n              }, this), Math.floor(elapsedTime / 60), \":\", (elapsedTime % 60).toString().padStart(2, '0')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-architecture-button\",\n            onClick: loadNextArchitecture,\n            disabled: isLoading,\n            children: isLoading ? 'Loading...' : 'New Architecture'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 312,\n          columnNumber: 13\n        }, this), architectureInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"architecture-description\",\n          children: architectureInfo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 34\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [showConfetti && /*#__PURE__*/_jsxDEV(ReactConfetti, {\n            width: width,\n            height: height,\n            recycle: false,\n            numberOfPieces: 200\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 19\n          }, this), showFireworks && /*#__PURE__*/_jsxDEV(ReactConfetti, {\n            width: width,\n            height: height,\n            recycle: true,\n            numberOfPieces: 500,\n            colors: ['#FFD700', '#FF0000', '#00FF00', '#0000FF', '#FF00FF']\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 19\n          }, this), showFeedback && !feedback.isCorrect && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sad-face\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"sad face\",\n              style: {\n                position: 'absolute',\n                top: '50%',\n                left: '50%',\n                transform: 'translate(-50%, -50%)',\n                fontSize: '100px',\n                opacity: 0.5,\n                animation: 'fadeOut 1s ease-in-out'\n              },\n              children: \"\\uD83D\\uDE22\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(AWSArchitectureDisplay, {\n            architecture: architecture,\n            currentQuestion: currentQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 17\n          }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"question-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"highlight\",\n                children: \"Question:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 23\n              }, this), \" \", currentQuestion.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"optimization-focus-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"highlight\",\n                children: \"Optimization Focus:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 388,\n                columnNumber: 23\n              }, this), \" \", currentQuestion.optimizationFocus]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 387,\n              columnNumber: 21\n            }, this), showFeedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-content\",\n                children: [feedback.isCorrect ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [\"\\uD83C\\uDF89 Correct! +\", feedback.points, \" points\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: feedback.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 397,\n                    columnNumber: 31\n                  }, this), feedback.isOptimal && /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"optimal-bonus\",\n                    children: \"\\uD83C\\uDF1F Optimal Solution!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 398,\n                    columnNumber: 54\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"\\u274C Not quite right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 402,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    dangerouslySetInnerHTML: {\n                      __html: feedback.message\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleNext,\n                  className: \"next-button\",\n                  children: \"Next Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"service-options\",\n              children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(DraggableService, {\n                service: option,\n                onClick: () => handleServiceSelection(option.name)\n              }, `${option.id}-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 414,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-status\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices ? `Service ${currentMissingServiceIndex + 1} of ${architectureInfo.missingServices.length}` : 'Loading...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-selection\",\n          children: ['BEGINNER', 'INTERMEDIATE', 'ADVANCED'].map(level => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `difficulty-button ${difficulty === level ? 'active' : ''}`,\n            onClick: () => handleDifficultyChange(level),\n            children: level.charAt(0) + level.slice(1).toLowerCase()\n          }, level, false, {\n            fileName: _jsxFileName,\n            lineNumber: 438,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 436,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 309,\n    columnNumber: 7\n  }, this);\n};\n_s(AWSArchitectureGame, \"hDBHqbu7kk6kcHisSPz22CLqzys=\", false, function () {\n  return [useWindowSize, useSensors, useSensor, useSensor];\n});\n_c = AWSArchitectureGame;\nexport default AWSArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureGame\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","DndContext","useSensor","useSensors","PointerSensor","TouchSensor","DndProvider","HTML5Backend","AWSArchitectureDisplay","DraggableService","getCachedServiceIcon","SERVICE_MAPPINGS","ReactConfetti","useWindowSize","jsxDEV","_jsxDEV","Fragment","_Fragment","S3_BUCKET_URL","ICONS_BASE_PATH","API_URL","isValidArchitecture","data","Array","isArray","services","connections","console","warn","requiredMissingServices","serviceNames","map","service","name","every","ms","includes","join","connectionNodes","Set","forEach","conn","add","from","to","has","validateJSONStructure","json","difficulty","missingServices","AWSArchitectureGame","_s","isLoading","setIsLoading","error","setError","architecture","setArchitecture","architectureInfo","setArchitectureInfo","currentQuestion","setCurrentQuestion","setDifficulty","score","setScore","showFeedback","setShowFeedback","feedback","setFeedback","isCorrect","message","points","currentMissingServiceIndex","setCurrentMissingServiceIndex","questionStartTime","setQuestionStartTime","elapsedTime","setElapsedTime","showConfetti","setShowConfetti","showFireworks","setShowFireworks","width","height","sensors","activationConstraint","distance","getServiceIcon","serviceName","toLowerCase","log","cleanedServiceName","replace","potentialS3Url","resolvedIcon","loadNextArchitecture","_data$missingServices","attempt","isValid","maxAttempts","response","fetch","method","headers","body","JSON","stringify","status","Promise","resolve","setTimeout","ok","Error","transformedServices","id","icon","length","currentMissingService","text","question","optimizationFocus","options","opt","isOptimal","explanation","rating","description","Date","now","handleServiceSelection","selectedService","selectedOption","find","correctOption","prevScore","newScore","correctAnswer","handleNext","nextIndex","nextMissingService","handleDifficultyChange","level","timer","setInterval","elapsed","Math","floor","clearInterval","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","toString","padStart","onClick","disabled","recycle","numberOfPieces","colors","role","style","position","top","left","transform","fontSize","opacity","animation","dangerouslySetInnerHTML","__html","option","index","charAt","slice","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\nimport '../styles/DifficultyButtons.css';\nimport ReactConfetti from 'react-confetti';\nimport { useWindowSize } from 'react-use';\n\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n\nconst isValidArchitecture = (data) => {\n  if (!data || !Array.isArray(data.services) || !Array.isArray(data.connections)) {\n    console.warn(\"⚠️ Invalid JSON structure: Missing 'services' or 'connections'. Retrying...\");\n    return false;\n  }\n\n  const requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n\n  const serviceNames = data.services.map(service => \n    typeof service === 'string' ? service : service?.name\n  );\n\n  if (!requiredMissingServices.every(ms => serviceNames.includes(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing.`);\n    return false;\n  }\n\n  const connectionNodes = new Set();\n  data.connections.forEach(conn => {\n    connectionNodes.add(conn.from);\n    connectionNodes.add(conn.to);\n  });\n\n  if (!requiredMissingServices.every(ms => connectionNodes.has(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing from the connections.`);\n    return false;\n  }\n\n  return true;\n};\n\nconst validateJSONStructure = (json, difficulty) => {\n  let requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n\n  if (difficulty === 'INTERMEDIATE') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5'];\n  } else if (difficulty === 'ADVANCED') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5', 'missing_6', 'missing_7'];\n  }\n\n  return requiredMissingServices.every(service => json.missingServices.includes(service));\n};\n\nconst AWSArchitectureGame = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [architecture, setArchitecture] = useState(null);\n    const [architectureInfo, setArchitectureInfo] = useState(null);\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [difficulty, setDifficulty] = useState('BEGINNER');\n    const [score, setScore] = useState(0); \n    const [showFeedback, setShowFeedback] = useState(false);\n    const [feedback, setFeedback] = useState({ isCorrect: false, message: '', points: 0 });\n    const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n    const [questionStartTime, setQuestionStartTime] = useState(null);\n    const [elapsedTime, setElapsedTime] = useState(0);\n    const [showConfetti, setShowConfetti] = useState(false);\n    const [showFireworks, setShowFireworks] = useState(false);\n    const { width, height } = useWindowSize();\n\n    const sensors = useSensors(\n      useSensor(PointerSensor, {\n        activationConstraint: {\n          distance: 8,\n        },\n      }),\n      useSensor(TouchSensor)\n    );\n\n    const getServiceIcon = (serviceName) => {\n      if (!serviceName) {\n        console.error('No service name provided to getServiceIcon');\n        return null;\n      }\n\n      if (serviceName.toLowerCase().includes('missing')) {\n        console.log('Loading missing service icon locally:', '/aws-icons/missing.svg');\n        return '/aws-icons/missing.svg';\n      }\n\n      const cleanedServiceName = serviceName\n        .toLowerCase()\n        .replace(/^(amazon|aws)\\s+/, '')\n        .replace(/\\s+/g, '-');\n        \n      const potentialS3Url = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/Arch_${cleanedServiceName}_64.svg`;\n      console.log(`🔍 Attempting to load icon for \"${serviceName}\" from: ${potentialS3Url}`);\n\n      const resolvedIcon = getCachedServiceIcon(serviceName);\n      \n      if (resolvedIcon) {\n        console.log(`✅ Successfully resolved icon for \"${serviceName}\": ${resolvedIcon}`);\n        return resolvedIcon;\n      }\n\n      console.warn(`❌ Icon not found for \"${serviceName}\" at attempted path: ${potentialS3Url}`);\n      return '/aws-icons/default.svg';\n    };\n\n    const loadNextArchitecture = useCallback(async () => {\n      if (isLoading) return;\n      setIsLoading(true);\n      setError(null);\n\n      let attempt = 0;\n      let isValid = false;\n      let data = null;\n      let maxAttempts = 7;\n\n      while (!isValid && attempt < maxAttempts) {\n        try {\n          console.log(`🔄 Attempt ${attempt + 1}: Fetching architecture data...`);\n          const response = await fetch(API_URL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ difficulty })\n          });\n\n          if (response.status === 503) {\n            console.warn(\"⚠️ Received 503 error. Retrying in 3 seconds...\");\n            attempt++;\n            await new Promise(resolve => setTimeout(resolve, 3000)); // Wait 3 seconds before retrying\n            continue;\n          }\n\n          if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n\n          data = await response.json();\n          console.log(\"📥 Received AI Response:\", JSON.stringify(data, null, 2));\n\n          isValid = isValidArchitecture(data);\n\n          if (!isValid) {\n            console.warn(`⛔ Invalid JSON structure. Retrying in 3 seconds...`);\n            await new Promise(resolve => setTimeout(resolve, 3000)); // Wait 3 seconds before retrying\n          } else {\n            console.log(\"✅ Valid architecture received, updating state...\");\n            break;\n          }\n        } catch (error) {\n          console.error(\"❌ Failed to load architecture:\", error);\n          if (attempt >= maxAttempts - 1) {\n            setError(error.message);\n            setIsLoading(false);\n            return;\n          }\n          await new Promise(resolve => setTimeout(resolve, 3000)); // Wait 3 seconds before retrying\n        }\n\n        attempt++;\n      }\n\n      if (!isValid) {\n        console.error(\"❌ Maximum retries reached. Unable to get valid JSON.\");\n        setError(\"Failed to fetch a valid architecture after multiple attempts.\");\n        setIsLoading(false);\n        return;\n      }\n\n      const transformedServices = data.services.map(serviceName => ({\n        id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n        name: serviceName,\n        icon: getServiceIcon(serviceName)\n      }));\n\n      setArchitecture({\n        services: transformedServices,\n        connections: data.connections\n      });\n\n      if (data.missingServices?.length > 0) {\n        const currentMissingService = data.missingServices[0];\n        setCurrentQuestion({\n          text: currentMissingService.question,\n          optimizationFocus: currentMissingService.optimizationFocus,\n          options: currentMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getServiceIcon(opt.service)\n          }))\n        });\n      }\n\n      setArchitectureInfo({\n        name: data.architecture.name,\n        description: data.architecture.description,\n        missingServices: data.missingServices\n      });\n\n      setCurrentMissingServiceIndex(0);\n      setShowFeedback(false);\n      setQuestionStartTime(Date.now());\n      setElapsedTime(0);\n      setIsLoading(false);\n    }, [difficulty]);\n\n    const handleServiceSelection = (selectedService) => {\n      if (!architectureInfo?.missingServices) return;\n      \n      const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n      const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n      const correctOption = currentMissingService.options.find(opt => opt.isCorrect);\n\n      if (selectedOption) {\n        setShowFeedback(true);\n        if (selectedOption.isCorrect) {\n          const points = selectedOption.rating;\n          setScore(prevScore => {\n            const newScore = prevScore + points;\n            if (newScore === architectureInfo.missingServices.length * 5) {\n              setShowFireworks(true);\n              setTimeout(() => setShowFireworks(false), 5000);\n            }\n            return newScore;\n          });\n          \n          setShowConfetti(true);\n          setTimeout(() => setShowConfetti(false), 2000);\n\n          setFeedback({\n            isCorrect: true,\n            message: selectedOption.explanation,\n            points: points,\n            isOptimal: selectedOption.isOptimal\n          });\n        } else {\n          setFeedback({\n            isCorrect: false,\n            message: `<div class=\"feedback-explanation\">\n              <p>${selectedOption.explanation}</p>\n              <p class=\"correct-answer-section\">\n                <span class=\"correct-answer-label\">The correct answer was: </span>\n                <strong>${correctOption.service}</strong>. ${correctOption.explanation}\n              </p>\n            </div>`,\n            points: 0,\n            correctAnswer: correctOption.service\n          });\n        }\n      }\n    };\n\n    const handleNext = () => {\n      if (!architectureInfo?.missingServices) return;\n      \n      setShowFeedback(false);\n      if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n        const nextIndex = currentMissingServiceIndex + 1;\n        setCurrentMissingServiceIndex(nextIndex);\n        \n        const nextMissingService = architectureInfo.missingServices[nextIndex];\n        setCurrentQuestion({\n          text: nextMissingService.question,\n          optimizationFocus: nextMissingService.optimizationFocus,\n          options: nextMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getServiceIcon(opt.service)\n          }))\n        });\n        setQuestionStartTime(Date.now());\n        setElapsedTime(0);\n      }\n    };\n\n    const handleDifficultyChange = (level) => {\n      setDifficulty(level);\n    };\n\n    useEffect(() => {\n      if (currentQuestion && !questionStartTime) {\n        setQuestionStartTime(Date.now());\n      }\n\n      const timer = setInterval(() => {\n        if (questionStartTime && !showFeedback) {\n          const elapsed = Math.floor((Date.now() - questionStartTime) / 1000);\n          setElapsedTime(elapsed);\n        }\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }, [currentQuestion, questionStartTime, showFeedback]);\n\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <DndContext sensors={sensors}>\n          <div className=\"game-container\">\n            <div className=\"game-header\">\n              <h2>{architectureInfo?.name || 'AWS Architecture Challenge'}</h2>\n              <div className=\"game-stats\">\n                <div className=\"score\">Score: {score}</div>\n                <div className=\"complexity\">\n                  <span className=\"complexity-icon\">🎯</span>\n                  {difficulty}\n                </div>\n                {currentQuestion && !showFeedback && (\n                  <div className={`timer ${\n                    elapsedTime > 60 ? 'danger' : \n                    elapsedTime > 30 ? 'warning' : ''\n                  }`}>\n                    <span className=\"timer-icon\">⏱️</span>\n                    {Math.floor(elapsedTime / 60)}:{(elapsedTime % 60).toString().padStart(2, '0')}\n                  </div>\n                )}\n              </div>\n              <button \n                className=\"new-architecture-button\"\n                onClick={loadNextArchitecture}\n                disabled={isLoading}\n              >\n                {isLoading ? 'Loading...' : 'New Architecture'}\n              </button>\n            </div>\n            \n            {architectureInfo && <p className=\"architecture-description\">{architectureInfo.description}</p>}\n            \n            {error ? (\n              <div className=\"error-message\">{error}</div>\n            ) : (\n              <>\n                {showConfetti && (\n                  <ReactConfetti\n                    width={width}\n                    height={height}\n                    recycle={false}\n                    numberOfPieces={200}\n                  />\n                )}\n                {showFireworks && (\n                  <ReactConfetti\n                    width={width}\n                    height={height}\n                    recycle={true}\n                    numberOfPieces={500}\n                    colors={['#FFD700', '#FF0000', '#00FF00', '#0000FF', '#FF00FF']}\n                  />\n                )}\n                {showFeedback && !feedback.isCorrect && (\n                  <div className=\"sad-face\">\n                    <span role=\"img\" aria-label=\"sad face\" style={{\n                      position: 'absolute',\n                      top: '50%',\n                      left: '50%',\n                      transform: 'translate(-50%, -50%)',\n                      fontSize: '100px',\n                      opacity: 0.5,\n                      animation: 'fadeOut 1s ease-in-out'\n                    }}>\n                      😢\n                    </span>\n                  </div>\n                )}\n                <AWSArchitectureDisplay \n                  architecture={architecture}\n                  currentQuestion={currentQuestion}\n                />\n                \n                {currentQuestion && (\n                  <div className=\"question-container\">\n                    <h3 className=\"question-label\">\n                      <span className=\"highlight\">Question:</span> {currentQuestion.text}\n                    </h3>\n                    <p className=\"optimization-focus-label\">\n                      <span className=\"highlight\">Optimization Focus:</span> {currentQuestion.optimizationFocus}\n                    </p>\n                    \n                    {showFeedback ? (\n                      <div className={`feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'}`}>\n                        <div className=\"feedback-content\">\n                          {feedback.isCorrect ? (\n                            <>\n                              <h3>🎉 Correct! +{feedback.points} points</h3>\n                              <p>{feedback.message}</p>\n                              {feedback.isOptimal && <span className=\"optimal-bonus\">🌟 Optimal Solution!</span>}\n                            </>\n                          ) : (\n                            <>\n                              <h3>❌ Not quite right</h3>\n                              <div dangerouslySetInnerHTML={{ __html: feedback.message }} />\n                            </>\n                          )}\n                          <button onClick={handleNext} className=\"next-button\">\n                            Next Question\n                          </button>\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"service-options\">\n                        {currentQuestion.options.map((option, index) => (\n                          <DraggableService\n                            key={`${option.id}-${index}`}\n                            service={option}\n                            onClick={() => handleServiceSelection(option.name)}\n                          />\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                )}\n              </>\n            )}\n            \n            <div className=\"game-status\">\n              <div className=\"progress\">\n                {architectureInfo?.missingServices ? \n                  `Service ${currentMissingServiceIndex + 1} of ${architectureInfo.missingServices.length}` :\n                  'Loading...'\n                }\n              </div>\n            </div>\n\n            <div className=\"difficulty-selection\">\n              {['BEGINNER', 'INTERMEDIATE', 'ADVANCED'].map((level) => (\n                <button\n                  key={level}\n                  className={`difficulty-button ${difficulty === level ? 'active' : ''}`}\n                  onClick={() => handleDifficultyChange(level)}\n                >\n                  {level.charAt(0) + level.slice(1).toLowerCase()}\n                </button>\n              ))}\n            </div>\n          </div>\n        </DndContext>\n      </DndProvider>\n    );\n};\n\nexport default AWSArchitectureGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}