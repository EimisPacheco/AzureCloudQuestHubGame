{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { generateArchitecture } from '../services/AWSArchitectureAI';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport ServiceOptionsCard from './ServiceOptionsCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSArchitectureGame = () => {\n  _s();\n  const [architecture, setArchitecture] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [serviceOptions, setServiceOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [difficulty, setDifficulty] = useState('BEGINNER');\n  useEffect(() => {\n    loadNextArchitecture();\n  }, [difficulty]);\n  const loadNextArchitecture = async () => {\n    const data = await generateArchitecture(difficulty);\n    setArchitecture(data.architecture);\n    setCurrentQuestion(data.question);\n    setServiceOptions(data.options);\n  };\n  const handleServiceSelection = async selectedService => {\n    if (currentQuestion !== null && currentQuestion !== void 0 && currentQuestion.missingServices.includes(selectedService)) {\n      setScore(prev => prev + 1);\n      await loadNextArchitecture();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-display\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AWSArchitectureDisplay, {\n        architecture: architecture,\n        missingServices: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.missingServices,\n        onServiceClick: handleServiceSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ServiceOptionsCard, {\n        options: serviceOptions,\n        onSelect: handleServiceSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureGame, \"Z4A2QqfoMmqDCjsEpgllRm2SpZk=\");\n_c = AWSArchitectureGame;\nexport default AWSArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureGame\");","map":{"version":3,"names":["React","useState","useEffect","DndProvider","HTML5Backend","generateArchitecture","AWSArchitectureDisplay","ServiceOptionsCard","jsxDEV","_jsxDEV","AWSArchitectureGame","_s","architecture","setArchitecture","currentQuestion","setCurrentQuestion","serviceOptions","setServiceOptions","score","setScore","difficulty","setDifficulty","loadNextArchitecture","data","question","options","handleServiceSelection","selectedService","missingServices","includes","prev","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onServiceClick","onSelect","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { generateArchitecture } from '../services/AWSArchitectureAI';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport ServiceOptionsCard from './ServiceOptionsCard';\n\nconst AWSArchitectureGame: React.FC = () => {\n  const [architecture, setArchitecture] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [serviceOptions, setServiceOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [difficulty, setDifficulty] = useState('BEGINNER');\n\n  useEffect(() => {\n    loadNextArchitecture();\n  }, [difficulty]);\n\n  const loadNextArchitecture = async () => {\n    const data = await generateArchitecture(difficulty);\n    setArchitecture(data.architecture);\n    setCurrentQuestion(data.question);\n    setServiceOptions(data.options);\n  };\n\n  const handleServiceSelection = async (selectedService: string) => {\n    if (currentQuestion?.missingServices.includes(selectedService)) {\n      setScore(prev => prev + 1);\n      await loadNextArchitecture();\n    }\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"game-container\">\n        <div className=\"score-display\">Score: {score}</div>\n        <AWSArchitectureDisplay \n          architecture={architecture}\n          missingServices={currentQuestion?.missingServices}\n          onServiceClick={handleServiceSelection}\n        />\n        <ServiceOptionsCard \n          options={serviceOptions}\n          onSelect={handleServiceSelection}\n        />\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default AWSArchitectureGame; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,WAAW;AACvC,SAASC,YAAY,QAAQ,yBAAyB;AACtD,SAASC,oBAAoB,QAAQ,+BAA+B;AACpE,OAAOC,sBAAsB,MAAM,0BAA0B;AAC7D,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,mBAA6B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1C,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACmB,UAAU,EAAEC,aAAa,CAAC,GAAGpB,QAAQ,CAAC,UAAU,CAAC;EAExDC,SAAS,CAAC,MAAM;IACdoB,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,CAACF,UAAU,CAAC,CAAC;EAEhB,MAAME,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,MAAMC,IAAI,GAAG,MAAMlB,oBAAoB,CAACe,UAAU,CAAC;IACnDP,eAAe,CAACU,IAAI,CAACX,YAAY,CAAC;IAClCG,kBAAkB,CAACQ,IAAI,CAACC,QAAQ,CAAC;IACjCP,iBAAiB,CAACM,IAAI,CAACE,OAAO,CAAC;EACjC,CAAC;EAED,MAAMC,sBAAsB,GAAG,MAAOC,eAAuB,IAAK;IAChE,IAAIb,eAAe,aAAfA,eAAe,eAAfA,eAAe,CAAEc,eAAe,CAACC,QAAQ,CAACF,eAAe,CAAC,EAAE;MAC9DR,QAAQ,CAACW,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MAC1B,MAAMR,oBAAoB,CAAC,CAAC;IAC9B;EACF,CAAC;EAED,oBACEb,OAAA,CAACN,WAAW;IAAC4B,OAAO,EAAE3B,YAAa;IAAA4B,QAAA,eACjCvB,OAAA;MAAKwB,SAAS,EAAC,gBAAgB;MAAAD,QAAA,gBAC7BvB,OAAA;QAAKwB,SAAS,EAAC,eAAe;QAAAD,QAAA,GAAC,SAAO,EAACd,KAAK;MAAA;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACnD5B,OAAA,CAACH,sBAAsB;QACrBM,YAAY,EAAEA,YAAa;QAC3BgB,eAAe,EAAEd,eAAe,aAAfA,eAAe,uBAAfA,eAAe,CAAEc,eAAgB;QAClDU,cAAc,EAAEZ;MAAuB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACF5B,OAAA,CAACF,kBAAkB;QACjBkB,OAAO,EAAET,cAAe;QACxBuB,QAAQ,EAAEb;MAAuB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAElB,CAAC;AAAC1B,EAAA,CAzCID,mBAA6B;AAAA8B,EAAA,GAA7B9B,mBAA6B;AA2CnC,eAAeA,mBAAmB;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}