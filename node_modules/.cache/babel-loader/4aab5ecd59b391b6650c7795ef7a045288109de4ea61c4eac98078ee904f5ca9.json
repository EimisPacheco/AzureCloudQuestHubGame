{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/ThreeDArchitecture.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeDArchitecture = () => {\n  _s();\n  const mountRef = useRef(null);\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      alpha: true\n    });\n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Add some basic geometry (you can customize this)\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({\n      color: '#FF9F1C',\n      wireframe: true\n    });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n    camera.position.z = 5;\n\n    // Animation\n    const animate = () => {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n    animate();\n\n    // Cleanup\n    return () => {\n      if (mountRef.current) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mountRef,\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      zIndex: -1\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n_s(ThreeDArchitecture, \"V9/qkEdV8GfsDZk7lMTA1T8g5Ps=\");\n_c = ThreeDArchitecture;\nexport default ThreeDArchitecture;\nvar _c;\n$RefreshReg$(_c, \"ThreeDArchitecture\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","jsxDEV","_jsxDEV","ThreeDArchitecture","_s","mountRef","current","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","alpha","setSize","appendChild","domElement","geometry","BoxGeometry","material","MeshBasicMaterial","color","wireframe","cube","Mesh","add","position","z","animate","requestAnimationFrame","rotation","x","y","render","removeChild","ref","style","top","left","zIndex","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/ThreeDArchitecture.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\n\nconst ThreeDArchitecture = () => {\n  const mountRef = useRef(null);\n\n  useEffect(() => {\n    if (!mountRef.current) return;\n\n    // Scene setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({ alpha: true });\n    \n    renderer.setSize(window.innerWidth, window.innerHeight);\n    mountRef.current.appendChild(renderer.domElement);\n\n    // Add some basic geometry (you can customize this)\n    const geometry = new THREE.BoxGeometry();\n    const material = new THREE.MeshBasicMaterial({ color: '#FF9F1C', wireframe: true });\n    const cube = new THREE.Mesh(geometry, material);\n    scene.add(cube);\n\n    camera.position.z = 5;\n\n    // Animation\n    const animate = () => {\n      requestAnimationFrame(animate);\n      cube.rotation.x += 0.01;\n      cube.rotation.y += 0.01;\n      renderer.render(scene, camera);\n    };\n\n    animate();\n\n    // Cleanup\n    return () => {\n      if (mountRef.current) {\n        mountRef.current.removeChild(renderer.domElement);\n      }\n    };\n  }, []);\n\n  return <div ref={mountRef} style={{ position: 'absolute', top: 0, left: 0, zIndex: -1 }} />;\n};\n\nexport default ThreeDArchitecture; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAI,CAACO,QAAQ,CAACC,OAAO,EAAE;;IAEvB;IACA,MAAMC,KAAK,GAAG,IAAIP,KAAK,CAACQ,KAAK,CAAC,CAAC;IAC/B,MAAMC,MAAM,GAAG,IAAIT,KAAK,CAACU,iBAAiB,CAAC,EAAE,EAAEC,MAAM,CAACC,UAAU,GAAGD,MAAM,CAACE,WAAW,EAAE,GAAG,EAAE,IAAI,CAAC;IACjG,MAAMC,QAAQ,GAAG,IAAId,KAAK,CAACe,aAAa,CAAC;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC;IAEzDF,QAAQ,CAACG,OAAO,CAACN,MAAM,CAACC,UAAU,EAAED,MAAM,CAACE,WAAW,CAAC;IACvDR,QAAQ,CAACC,OAAO,CAACY,WAAW,CAACJ,QAAQ,CAACK,UAAU,CAAC;;IAEjD;IACA,MAAMC,QAAQ,GAAG,IAAIpB,KAAK,CAACqB,WAAW,CAAC,CAAC;IACxC,MAAMC,QAAQ,GAAG,IAAItB,KAAK,CAACuB,iBAAiB,CAAC;MAAEC,KAAK,EAAE,SAAS;MAAEC,SAAS,EAAE;IAAK,CAAC,CAAC;IACnF,MAAMC,IAAI,GAAG,IAAI1B,KAAK,CAAC2B,IAAI,CAACP,QAAQ,EAAEE,QAAQ,CAAC;IAC/Cf,KAAK,CAACqB,GAAG,CAACF,IAAI,CAAC;IAEfjB,MAAM,CAACoB,QAAQ,CAACC,CAAC,GAAG,CAAC;;IAErB;IACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;MACpBC,qBAAqB,CAACD,OAAO,CAAC;MAC9BL,IAAI,CAACO,QAAQ,CAACC,CAAC,IAAI,IAAI;MACvBR,IAAI,CAACO,QAAQ,CAACE,CAAC,IAAI,IAAI;MACvBrB,QAAQ,CAACsB,MAAM,CAAC7B,KAAK,EAAEE,MAAM,CAAC;IAChC,CAAC;IAEDsB,OAAO,CAAC,CAAC;;IAET;IACA,OAAO,MAAM;MACX,IAAI1B,QAAQ,CAACC,OAAO,EAAE;QACpBD,QAAQ,CAACC,OAAO,CAAC+B,WAAW,CAACvB,QAAQ,CAACK,UAAU,CAAC;MACnD;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,oBAAOjB,OAAA;IAAKoC,GAAG,EAAEjC,QAAS;IAACkC,KAAK,EAAE;MAAEV,QAAQ,EAAE,UAAU;MAAEW,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,MAAM,EAAE,CAAC;IAAE;EAAE;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC7F,CAAC;AAAC1C,EAAA,CAzCID,kBAAkB;AAAA4C,EAAA,GAAlB5C,kBAAkB;AA2CxB,eAAeA,kBAAkB;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}