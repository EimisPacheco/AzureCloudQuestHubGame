{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSArchitectureDisplay = ({\n  architecture,\n  missingServices,\n  onServiceClick\n}) => {\n  _s();\n  var _architecture$connect;\n  console.log('Rendering AWSArchitectureDisplay:', {\n    architecture,\n    missingServices\n  });\n  const {\n    setNodeRef,\n    isOver\n  } = useDroppable({\n    id: 'architecture-drop-zone',\n    data: {\n      accepts: missingServices\n    }\n  });\n  console.log('Drop state:', {\n    isOver\n  });\n  if (!architecture || !architecture.services) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"architecture-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-state\",\n        children: \"Loading Architecture...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n  const centerX = 400;\n  const centerY = 250;\n  const radius = 150;\n  const angleStep = 2 * Math.PI / architecture.services.length;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: setNodeRef,\n    className: `architecture-container ${isOver ? 'drop-target' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      className: \"connections-layer\",\n      width: \"100%\",\n      height: \"100%\",\n      children: (_architecture$connect = architecture.connections) === null || _architecture$connect === void 0 ? void 0 : _architecture$connect.map((conn, idx) => {\n        const fromService = architecture.services.find(s => s.id === conn.from);\n        const toService = architecture.services.find(s => s.id === conn.to);\n        const fromIndex = architecture.services.indexOf(fromService);\n        const toIndex = architecture.services.indexOf(toService);\n        const fromX = centerX + radius * Math.cos(fromIndex * angleStep);\n        const fromY = centerY + radius * Math.sin(fromIndex * angleStep);\n        const toX = centerX + radius * Math.cos(toIndex * angleStep);\n        const toY = centerY + radius * Math.sin(toIndex * angleStep);\n        return /*#__PURE__*/_jsxDEV(\"line\", {\n          x1: fromX,\n          y1: fromY,\n          x2: toX,\n          y2: toY,\n          stroke: \"#FF9900\",\n          strokeWidth: \"2\",\n          strokeDasharray: conn.dashed ? \"5,5\" : \"\"\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"architecture-diagram\",\n      children: architecture.services.map((service, index) => {\n        const x = centerX + radius * Math.cos(index * angleStep);\n        const y = centerY + radius * Math.sin(index * angleStep);\n        const isMissing = missingServices === null || missingServices === void 0 ? void 0 : missingServices.includes(service.id);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `service-node ${isMissing ? 'missing' : ''}`,\n          style: {\n            position: 'absolute',\n            left: `${x}px`,\n            top: `${y}px`,\n            transform: 'translate(-50%, -50%)',\n            cursor: isMissing ? 'pointer' : 'default'\n          },\n          onClick: () => isMissing && onServiceClick(service.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: service.icon,\n            alt: service.name,\n            className: \"service-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"service-label\",\n            children: service.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, service.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureDisplay, \"DmJTTt6A5xWIX/faBiFge3FOLrw=\", false, function () {\n  return [useDroppable];\n});\n_c = AWSArchitectureDisplay;\nexport default AWSArchitectureDisplay;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureDisplay\");","map":{"version":3,"names":["React","useDroppable","jsxDEV","_jsxDEV","AWSArchitectureDisplay","architecture","missingServices","onServiceClick","_s","_architecture$connect","console","log","setNodeRef","isOver","id","data","accepts","services","className","children","fileName","_jsxFileName","lineNumber","columnNumber","centerX","centerY","radius","angleStep","Math","PI","length","ref","width","height","connections","map","conn","idx","fromService","find","s","from","toService","to","fromIndex","indexOf","toIndex","fromX","cos","fromY","sin","toX","toY","x1","y1","x2","y2","stroke","strokeWidth","strokeDasharray","dashed","service","index","x","y","isMissing","includes","style","position","left","top","transform","cursor","onClick","src","icon","alt","name","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx"],"sourcesContent":["import React from 'react';\nimport { useDroppable } from '@dnd-kit/core';\n\nconst AWSArchitectureDisplay = ({ architecture, missingServices, onServiceClick }) => {\n  console.log('Rendering AWSArchitectureDisplay:', { architecture, missingServices });\n  \n  const { setNodeRef, isOver } = useDroppable({\n    id: 'architecture-drop-zone',\n    data: {\n      accepts: missingServices\n    }\n  });\n\n  console.log('Drop state:', { isOver });\n\n  if (!architecture || !architecture.services) {\n    return (\n      <div className=\"architecture-container\">\n        <div className=\"loading-state\">Loading Architecture...</div>\n      </div>\n    );\n  }\n\n  const centerX = 400;\n  const centerY = 250;\n  const radius = 150;\n  const angleStep = (2 * Math.PI) / architecture.services.length;\n\n  return (\n    <div \n      ref={setNodeRef}\n      className={`architecture-container ${isOver ? 'drop-target' : ''}`}\n    >\n      <svg className=\"connections-layer\" width=\"100%\" height=\"100%\">\n        {architecture.connections?.map((conn, idx) => {\n          const fromService = architecture.services.find(s => s.id === conn.from);\n          const toService = architecture.services.find(s => s.id === conn.to);\n          const fromIndex = architecture.services.indexOf(fromService);\n          const toIndex = architecture.services.indexOf(toService);\n          \n          const fromX = centerX + radius * Math.cos(fromIndex * angleStep);\n          const fromY = centerY + radius * Math.sin(fromIndex * angleStep);\n          const toX = centerX + radius * Math.cos(toIndex * angleStep);\n          const toY = centerY + radius * Math.sin(toIndex * angleStep);\n\n          return (\n            <line\n              key={idx}\n              x1={fromX}\n              y1={fromY}\n              x2={toX}\n              y2={toY}\n              stroke=\"#FF9900\"\n              strokeWidth=\"2\"\n              strokeDasharray={conn.dashed ? \"5,5\" : \"\"}\n            />\n          );\n        })}\n      </svg>\n\n      <div className=\"architecture-diagram\">\n        {architecture.services.map((service, index) => {\n          const x = centerX + radius * Math.cos(index * angleStep);\n          const y = centerY + radius * Math.sin(index * angleStep);\n          const isMissing = missingServices?.includes(service.id);\n\n          return (\n            <div\n              key={service.id}\n              className={`service-node ${isMissing ? 'missing' : ''}`}\n              style={{\n                position: 'absolute',\n                left: `${x}px`,\n                top: `${y}px`,\n                transform: 'translate(-50%, -50%)',\n                cursor: isMissing ? 'pointer' : 'default'\n              }}\n              onClick={() => isMissing && onServiceClick(service.id)}\n            >\n              <img\n                src={service.icon}\n                alt={service.name}\n                className=\"service-icon\"\n              />\n              <div className=\"service-label\">{service.name}</div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default AWSArchitectureDisplay; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}