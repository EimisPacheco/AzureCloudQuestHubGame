{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport ArchitectureVisualizer from './ArchitectureVisualizer';\nimport ServiceOptionsPanel from './ServiceOptionsPanel';\nimport { generateArchitecture } from '../services/AWSArchitectureAI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSArchitectureGame = () => {\n  _s();\n  const [architecture, setArchitecture] = useState(null);\n  const [architectureInfo, setArchitectureInfo] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [serviceOptions, setServiceOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [difficulty, setDifficulty] = useState('BEGINNER');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(TouchSensor));\n  useEffect(() => {\n    loadNextArchitecture();\n  }, [difficulty]);\n  const loadNextArchitecture = async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          difficulty\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('Raw API Response:', data);\n      const parsedBody = typeof data.body === 'string' ? JSON.parse(data.body) : data.body;\n      console.log('Parsed body:', parsedBody);\n      if (!parsedBody) {\n        throw new Error('No data received from API');\n      }\n      setArchitectureInfo({\n        name: parsedBody.architecture.name,\n        description: parsedBody.architecture.description\n      });\n      setArchitecture({\n        services: parsedBody.services,\n        connections: parsedBody.connections\n      });\n      if (parsedBody.missingServices && parsedBody.missingServices.length > 0) {\n        setCurrentQuestion(parsedBody.missingServices[0]);\n        setServiceOptions(parsedBody.missingServices[0].options);\n      } else {\n        throw new Error('No missing services found in response');\n      }\n    } catch (error) {\n      console.error('Failed to load architecture:', error);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleServiceSelection = async selectedServiceId => {\n    const selectedOption = currentQuestion.options.find(opt => opt.id === selectedServiceId);\n    if (selectedOption !== null && selectedOption !== void 0 && selectedOption.isCorrect) {\n      // Add points based on whether it was the optimal choice\n      const points = selectedOption.isOptimal ? 2 : 1;\n      setScore(prev => prev + points);\n\n      // Find next question or load new architecture\n      const currentQuestionIndex = data.questions.findIndex(q => q.position === currentQuestion.position);\n      if (currentQuestionIndex < data.questions.length - 1) {\n        const nextQuestion = data.questions[currentQuestionIndex + 1];\n        setCurrentQuestion(nextQuestion);\n        setServiceOptions(nextQuestion.options);\n      } else {\n        await loadNextArchitecture();\n      }\n    }\n  };\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (over && over.id === 'architecture-drop-zone') {\n      handleServiceSelection(active.id);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading architecture...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: loadNextArchitecture,\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score\",\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"architecture-description\",\n      children: architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"question-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"question-text\",\n        children: currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"optimization-focus\",\n        children: [\"Focus: \", currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.optimizationFocus]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      onDragEnd: handleDragEnd,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"architecture-section\",\n        children: /*#__PURE__*/_jsxDEV(AWSArchitectureDisplay, {\n          architecture: architecture,\n          missingServices: [currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.position]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"service-options\",\n        children: serviceOptions.map(option => /*#__PURE__*/_jsxDEV(DraggableService, {\n          service: option,\n          onClick: () => handleServiceSelection(option.id)\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureGame, \"ddr4POS6eViQ8XJAIjwebevXJnY=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c = AWSArchitectureGame;\nexport default AWSArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureGame\");","map":{"version":3,"names":["React","useState","useEffect","DndContext","useSensor","useSensors","PointerSensor","TouchSensor","ArchitectureVisualizer","ServiceOptionsPanel","generateArchitecture","jsxDEV","_jsxDEV","AWSArchitectureGame","_s","architecture","setArchitecture","architectureInfo","setArchitectureInfo","currentQuestion","setCurrentQuestion","serviceOptions","setServiceOptions","score","setScore","difficulty","setDifficulty","isLoading","setIsLoading","error","setError","API_URL","sensors","activationConstraint","distance","loadNextArchitecture","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","console","log","parsedBody","parse","name","description","services","connections","missingServices","length","options","message","handleServiceSelection","selectedServiceId","selectedOption","find","opt","id","isCorrect","points","isOptimal","prev","currentQuestionIndex","questions","findIndex","q","position","nextQuestion","handleDragEnd","event","active","over","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","text","optimizationFocus","onDragEnd","AWSArchitectureDisplay","map","option","DraggableService","service","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport ArchitectureVisualizer from './ArchitectureVisualizer';\nimport ServiceOptionsPanel from './ServiceOptionsPanel';\nimport { generateArchitecture } from '../services/AWSArchitectureAI';\n\n\n\nconst AWSArchitectureGame = () => {\n  const [architecture, setArchitecture] = useState(null);\n  const [architectureInfo, setArchitectureInfo] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [serviceOptions, setServiceOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [difficulty, setDifficulty] = useState('BEGINNER');\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  const API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n\n  const sensors = useSensors(\n    useSensor(PointerSensor, {\n      activationConstraint: {\n        distance: 8,\n      },\n    }),\n    useSensor(TouchSensor)\n  );\n\n  useEffect(() => {\n    loadNextArchitecture();\n  }, [difficulty]);\n\n  const loadNextArchitecture = async () => {\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ difficulty })\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log('Raw API Response:', data);\n\n      const parsedBody = typeof data.body === 'string' ? JSON.parse(data.body) : data.body;\n      console.log('Parsed body:', parsedBody);\n\n      if (!parsedBody) {\n        throw new Error('No data received from API');\n      }\n\n      setArchitectureInfo({\n        name: parsedBody.architecture.name,\n        description: parsedBody.architecture.description\n      });\n      \n      setArchitecture({\n        services: parsedBody.services,\n        connections: parsedBody.connections\n      });\n\n      if (parsedBody.missingServices && parsedBody.missingServices.length > 0) {\n        setCurrentQuestion(parsedBody.missingServices[0]);\n        setServiceOptions(parsedBody.missingServices[0].options);\n      } else {\n        throw new Error('No missing services found in response');\n      }\n\n    } catch (error) {\n      console.error('Failed to load architecture:', error);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleServiceSelection = async (selectedServiceId) => {\n    const selectedOption = currentQuestion.options.find(opt => opt.id === selectedServiceId);\n    \n    if (selectedOption?.isCorrect) {\n      // Add points based on whether it was the optimal choice\n      const points = selectedOption.isOptimal ? 2 : 1;\n      setScore(prev => prev + points);\n      \n      // Find next question or load new architecture\n      const currentQuestionIndex = data.questions.findIndex(q => q.position === currentQuestion.position);\n      if (currentQuestionIndex < data.questions.length - 1) {\n        const nextQuestion = data.questions[currentQuestionIndex + 1];\n        setCurrentQuestion(nextQuestion);\n        setServiceOptions(nextQuestion.options);\n      } else {\n        await loadNextArchitecture();\n      }\n    }\n  };\n\n  const handleDragEnd = (event) => {\n    const { active, over } = event;\n    \n    if (over && over.id === 'architecture-drop-zone') {\n      handleServiceSelection(active.id);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"loading\">Loading architecture...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <p className=\"error-message\">{error}</p>\n        <button onClick={loadNextArchitecture}>Try Again</button>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"game-container\">\n      <div className=\"game-header\">\n        <h2>{architectureInfo?.name}</h2>\n        <div className=\"score\">Score: {score}</div>\n      </div>\n      \n      <div className=\"architecture-description\">\n        {architectureInfo?.description}\n      </div>\n\n      <div className=\"question-container\">\n        <h3 className=\"question-text\">{currentQuestion?.text}</h3>\n        <p className=\"optimization-focus\">\n          Focus: {currentQuestion?.optimizationFocus}\n        </p>\n      </div>\n\n      <DndContext sensors={sensors} onDragEnd={handleDragEnd}>\n        <div className=\"architecture-section\">\n          <AWSArchitectureDisplay \n            architecture={architecture}\n            missingServices={[currentQuestion?.position]}\n          />\n        </div>\n\n        <div className=\"service-options\">\n          {serviceOptions.map(option => (\n            <DraggableService\n              key={option.id}\n              service={option}\n              onClick={() => handleServiceSelection(option.id)}\n            />\n          ))}\n        </div>\n      </DndContext>\n    </div>\n  );\n};\n\nexport default AWSArchitectureGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}