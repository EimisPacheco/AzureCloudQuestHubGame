{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/IconsMemoryGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport '../styles/GameCanvas.css';\nimport { initializeGameState, formatTime, isGameComplete, getServiceIconUrl } from '../utils/memoryGameUtils';\nimport { Link } from 'react-router-dom';\nimport CosmosDBService from '../services/CosmosDBService';\n\n// Confetti component for celebration effect\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Confetti = ({\n  active\n}) => {\n  if (!active) return null;\n  const confettiCount = 150;\n  const confetti = [];\n  for (let i = 0; i < confettiCount; i++) {\n    const left = `${Math.random() * 100}%`;\n    const animationDelay = `${Math.random() * 5}s`;\n    const initialOpacity = Math.random();\n    const size = `${Math.random() * 10 + 5}px`;\n    const rotation = `${Math.random() * 360}deg`;\n    const color = ['#00ffff',\n    // Cyan (Azure color)\n    '#0078d4',\n    // Blue (Azure color)\n    '#ffb900',\n    // Gold\n    '#e74c3c',\n    // Red\n    '#2ecc71',\n    // Green\n    '#9b59b6',\n    // Purple\n    '#3498db' // Light blue\n    ][Math.floor(Math.random() * 7)];\n    confetti.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memory-confetti-particle\",\n      style: {\n        left,\n        top: '-10px',\n        width: size,\n        height: size,\n        backgroundColor: color,\n        transform: `rotate(${rotation})`,\n        opacity: initialOpacity,\n        animationDelay\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-confetti-container\",\n    children: confetti\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n};\n_c = Confetti;\nconst IconsMemoryGame = () => {\n  _s();\n  // Game state\n  const [gameState, setGameState] = useState(() => initializeGameState());\n  const [timeLeft, setTimeLeft] = useState(300); // 5 minutes in seconds\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [score, setScore] = useState(0);\n  const [playerName, setPlayerName] = useState('Player');\n  const gameType = 'MemoryGame';\n\n  // Sound state\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const sounds = useRef({});\n\n  // Game container ref\n  const gameContainerRef = useRef(null);\n\n  // Define sound files - same approach as in GameCanvas\n  const soundFiles = {\n    select: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/flip-switch.mp3`,\n    correct: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n    incorrect: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n    hover: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/hover.mp3`,\n    achievement: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/levelup.mp3`\n  };\n\n  // Initialize or reset the game\n  const initGame = useCallback(() => {\n    const newGameState = initializeGameState();\n    setGameState(newGameState);\n    setTimeLeft(300); // Reset to 5 minutes\n    setGameStarted(true);\n    setGameOver(false);\n    setShowConfetti(false);\n  }, []);\n\n  // Helper function to safely create audio objects with timeout\n  const createSafeAudio = useCallback(path => {\n    const audio = new Audio();\n    return new Promise(resolve => {\n      audio.addEventListener('error', () => {\n        console.warn(`Sound file not found: ${path}`);\n        resolve(null);\n      });\n      audio.addEventListener('canplaythrough', () => {\n        resolve(audio);\n      });\n      // Timeout fallback in case sound loading takes too long\n      setTimeout(() => {\n        if (audio.readyState < 3) {\n          console.warn(`Sound loading timeout: ${path}`);\n          resolve(null);\n        }\n      }, 3000);\n      audio.src = path;\n    });\n  }, []);\n\n  // Load all sounds - using the same approach as GameCanvas\n  useEffect(() => {\n    const loadSounds = async () => {\n      const soundPromises = Object.entries(soundFiles).map(async ([name, path]) => {\n        try {\n          const audio = await createSafeAudio(path);\n          return [name, audio];\n        } catch (error) {\n          console.error(`Failed to load sound ${name}:`, error);\n          return [name, null];\n        }\n      });\n      try {\n        const loadedSounds = await Promise.all(soundPromises);\n        const soundsMap = Object.fromEntries(loadedSounds);\n        sounds.current = soundsMap;\n\n        // Check if at least some sounds loaded successfully\n        const hasLoadedSounds = Object.values(soundsMap).some(sound => sound !== null);\n        setSoundsLoaded(hasLoadedSounds);\n        if (hasLoadedSounds) {\n          console.log('🔊 Sounds loaded successfully');\n        } else {\n          console.warn('⚠️ No sounds could be loaded');\n        }\n      } catch (error) {\n        console.error('Failed to load sounds:', error);\n      }\n    };\n    loadSounds();\n  }, [createSafeAudio]);\n\n  // Play sound function - same as in GameCanvas\n  const playSound = useCallback(soundName => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  }, [isMuted]);\n\n  // Toggle mute function\n  const toggleMute = useCallback(() => {\n    setIsMuted(prev => !prev);\n  }, []);\n\n  // Handle card click\n  const handleCardClick = index => {\n    // Don't allow clicks if the board is locked or the card is already flipped/matched\n    if (gameState.isLocked || gameState.flippedCards.length >= 2 || gameState.cards[index].isFlipped || gameState.cards[index].isMatched) {\n      return;\n    }\n\n    // Play select sound\n    playSound('select');\n\n    // Flip the card\n    setGameState(prevState => {\n      // Create a new cards array with the clicked card flipped\n      const updatedCards = prevState.cards.map((card, i) => i === index ? {\n        ...card,\n        isFlipped: true\n      } : card);\n\n      // Add the card to flippedCards\n      const updatedFlippedCards = [...prevState.flippedCards, prevState.cards[index]];\n\n      // Check if we now have 2 flipped cards\n      const shouldCheckMatch = updatedFlippedCards.length === 2;\n      return {\n        ...prevState,\n        cards: updatedCards,\n        flippedCards: updatedFlippedCards,\n        isLocked: shouldCheckMatch // Lock the board if we need to check for a match\n      };\n    });\n  };\n\n  // Check for matches when two cards are flipped\n  useEffect(() => {\n    if (gameState.flippedCards.length === 2) {\n      const [firstCard, secondCard] = gameState.flippedCards;\n\n      // Check if the cards match (same service)\n      const isMatch = firstCard.service === secondCard.service;\n      if (isMatch) {\n        // It's a match! Update the game state\n        setTimeout(() => {\n          // Play correct sound with a slight delay to ensure it's heard\n          playSound('correct');\n          setGameState(prevState => {\n            // Mark the matched cards\n            const updatedCards = prevState.cards.map(card => card.service === firstCard.service ? {\n              ...card,\n              isMatched: true\n            } : card);\n\n            // Add the service to matched pairs\n            const updatedMatchedPairs = [...prevState.matchedPairs, firstCard.service];\n\n            // Check if the game is complete\n            const complete = isGameComplete(updatedMatchedPairs, 12); // 12 pairs total\n\n            if (complete) {\n              // Play achievement sound when game is complete\n              setTimeout(() => playSound('achievement'), 500);\n              setGameOver(true);\n\n              // Show confetti animation for winning before time is up\n              setShowConfetti(true);\n            }\n            return {\n              ...prevState,\n              cards: updatedCards,\n              flippedCards: [],\n              matchedPairs: updatedMatchedPairs,\n              isLocked: false\n            };\n          });\n        }, 300);\n      } else {\n        // Not a match, flip the cards back after a delay\n        setTimeout(() => {\n          // Play incorrect sound\n          playSound('incorrect');\n          setGameState(prevState => {\n            // Flip the cards back\n            const updatedCards = prevState.cards.map(card => card.index === firstCard.index || card.index === secondCard.index ? {\n              ...card,\n              isFlipped: false\n            } : card);\n            return {\n              ...prevState,\n              cards: updatedCards,\n              flippedCards: [],\n              isLocked: false\n            };\n          });\n        }, 1000); // Shorter delay before flipping back\n      }\n    }\n  }, [gameState.flippedCards, playSound]);\n\n  // Timer countdown\n  useEffect(() => {\n    if (!gameStarted || gameOver) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          setGameOver(true);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [gameStarted, gameOver]);\n\n  // Start the game when component mounts\n  useEffect(() => {\n    initGame();\n  }, [initGame]);\n\n  // Auto-hide confetti after celebration\n  useEffect(() => {\n    if (showConfetti) {\n      const timer = setTimeout(() => {\n        setShowConfetti(false);\n      }, 7000); // Hide confetti after 7 seconds\n\n      return () => clearTimeout(timer);\n    }\n  }, [showConfetti]);\n  useEffect(() => {\n    if (gameStarted) {\n      console.log('Game started, fetching leaderboard...');\n      CosmosDBService.getLeaderboard(gameType).then(data => {\n        console.log('Leaderboard data:', data);\n      });\n    }\n  }, [gameStarted]);\n  useEffect(() => {\n    if (gameOver) {\n      console.log('Game over, saving score...');\n      CosmosDBService.saveGameScore(playerName, gameType, score).then(result => {\n        console.log('Score save result:', result);\n      });\n    }\n  }, [gameOver]);\n\n  // Create a 5x5 grid with cards and reset button\n  const renderGrid = () => {\n    const grid = [];\n    const totalCells = 25; // 5x5 grid\n\n    for (let i = 0; i < totalCells; i++) {\n      if (i === 12) {\n        // Middle position (3rd row, 3rd column)\n        grid.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"memory-game-reset\",\n          onClick: () => {\n            playSound('select');\n            initGame();\n          },\n          children: \"Reset\"\n        }, \"reset\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this));\n      } else {\n        const cardIndex = i > 12 ? i - 1 : i; // Adjust index for cards after reset button\n        if (cardIndex < gameState.cards.length) {\n          const card = gameState.cards[cardIndex];\n          grid.push(/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `memory-game-card ${card.isFlipped || card.isMatched ? 'flipped' : ''}`,\n            onClick: () => handleCardClick(cardIndex),\n            onMouseEnter: () => playSound('hover'),\n            children: card.isFlipped || card.isMatched ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"memory-card-content\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: getServiceIconUrl(card.path),\n                alt: card.service,\n                onError: e => {\n                  e.target.onerror = null;\n                  e.target.src = `${process.env.PUBLIC_URL}/azure-icons/default.svg`;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"memory-card-text\",\n                children: card.service\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this));\n        } else {\n          // Add empty cells to complete the grid if needed\n          grid.push(/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"memory-game-card empty\"\n          }, `empty-${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 13\n          }, this));\n        }\n      }\n    }\n    return grid;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-container\",\n    ref: gameContainerRef,\n    children: [/*#__PURE__*/_jsxDEV(Confetti, {\n      active: showConfetti\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"back-to-home-button\",\n      style: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        display: 'flex',\n        alignItems: 'center',\n        padding: '10px 20px',\n        backgroundColor: 'rgba(0, 255, 255, 0.1)',\n        border: '2px solid #00ffff',\n        borderRadius: '5px',\n        color: '#00ffff',\n        textDecoration: 'none',\n        fontFamily: 'Orbitron, sans-serif',\n        fontSize: '14px',\n        transition: 'all 0.3s ease',\n        zIndex: 100\n      },\n      onMouseEnter: () => playSound('hover'),\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        style: {\n          width: '20px',\n          height: '20px',\n          marginRight: '8px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M12 2L1 12h3v9h6v-6h4v6h6v-9h3L12 2z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 430,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this), \"Back to Home\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameCanvas-game-title\",\n      style: {\n        '--azure-icon': `url(${process.env.PUBLIC_URL}/azure-icons/Microsoft_Azure_Cyan.svg)`\n      },\n      children: \"zure Icons Memory\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-canvas-wrapper\",\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"memory-game-timer\",\n          children: [\"TIMER: \", formatTime(timeLeft), soundsLoaded && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"memory-game-sound-toggle top-right\",\n            onClick: toggleMute,\n            \"aria-label\": \"Toggle sound\",\n            children: isMuted ? '🔇' : '🔊'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"memory-game-grid\",\n          children: renderGrid()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 457,\n          columnNumber: 11\n        }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-game-over\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: gameState.matchedPairs.length === 12 ? 'Congratulations!' : 'Time\\'s Up!'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: gameState.matchedPairs.length === 12 ? `You found all matches with ${formatTime(timeLeft)} remaining!` : `You found ${gameState.matchedPairs.length} out of 12 matches.`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 466,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              playSound('select');\n              initGame();\n            },\n            children: \"Play Again\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 471,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 462,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 442,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n};\n_s(IconsMemoryGame, \"/50LcYG/CMq29MvoLjfSMN4h+qs=\");\n_c2 = IconsMemoryGame;\nexport default IconsMemoryGame;\nvar _c, _c2;\n$RefreshReg$(_c, \"Confetti\");\n$RefreshReg$(_c2, \"IconsMemoryGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","initializeGameState","formatTime","isGameComplete","getServiceIconUrl","Link","CosmosDBService","jsxDEV","_jsxDEV","Confetti","active","confettiCount","confetti","i","left","Math","random","animationDelay","initialOpacity","size","rotation","color","floor","push","className","style","top","width","height","backgroundColor","transform","opacity","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","IconsMemoryGame","_s","gameState","setGameState","timeLeft","setTimeLeft","gameStarted","setGameStarted","gameOver","setGameOver","showConfetti","setShowConfetti","score","setScore","playerName","setPlayerName","gameType","soundsLoaded","setSoundsLoaded","isMuted","setIsMuted","sounds","gameContainerRef","soundFiles","select","process","env","REACT_APP_AZURE_BUCKET_URL","correct","incorrect","hover","achievement","initGame","newGameState","createSafeAudio","path","audio","Audio","Promise","resolve","addEventListener","console","warn","setTimeout","readyState","src","loadSounds","soundPromises","Object","entries","map","name","error","loadedSounds","all","soundsMap","fromEntries","current","hasLoadedSounds","values","some","sound","log","playSound","soundName","currentTime","volume","play","catch","err","toggleMute","prev","handleCardClick","index","isLocked","flippedCards","length","cards","isFlipped","isMatched","prevState","updatedCards","card","updatedFlippedCards","shouldCheckMatch","firstCard","secondCard","isMatch","service","updatedMatchedPairs","matchedPairs","complete","timer","setInterval","clearInterval","clearTimeout","getLeaderboard","then","data","saveGameScore","result","renderGrid","grid","totalCells","onClick","cardIndex","onMouseEnter","alt","onError","e","target","onerror","PUBLIC_URL","id","ref","to","position","display","alignItems","padding","border","borderRadius","textDecoration","fontFamily","fontSize","transition","zIndex","xmlns","viewBox","fill","marginRight","d","flexDirection","justifyContent","_c2","$RefreshReg$"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/IconsMemoryGame.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport '../styles/GameCanvas.css';\nimport { \n  initializeGameState, \n  formatTime, \n  isGameComplete,\n  getServiceIconUrl\n} from '../utils/memoryGameUtils';\nimport { Link } from 'react-router-dom';\nimport CosmosDBService from '../services/CosmosDBService';\n\n// Confetti component for celebration effect\nconst Confetti = ({ active }) => {\n  if (!active) return null;\n  \n  const confettiCount = 150;\n  const confetti = [];\n  \n  for (let i = 0; i < confettiCount; i++) {\n    const left = `${Math.random() * 100}%`;\n    const animationDelay = `${Math.random() * 5}s`;\n    const initialOpacity = Math.random();\n    const size = `${Math.random() * 10 + 5}px`;\n    const rotation = `${Math.random() * 360}deg`;\n    const color = [\n      '#00ffff', // Cyan (Azure color)\n      '#0078d4', // Blue (Azure color)\n      '#ffb900', // Gold\n      '#e74c3c', // Red\n      '#2ecc71', // Green\n      '#9b59b6', // Purple\n      '#3498db', // Light blue\n    ][Math.floor(Math.random() * 7)];\n    \n    confetti.push(\n      <div \n        key={i}\n        className=\"memory-confetti-particle\"\n        style={{\n          left,\n          top: '-10px',\n          width: size,\n          height: size,\n          backgroundColor: color,\n          transform: `rotate(${rotation})`,\n          opacity: initialOpacity,\n          animationDelay,\n        }}\n      />\n    );\n  }\n  \n  return <div className=\"memory-confetti-container\">{confetti}</div>;\n};\n\nconst IconsMemoryGame = () => {\n  // Game state\n  const [gameState, setGameState] = useState(() => initializeGameState());\n  const [timeLeft, setTimeLeft] = useState(300); // 5 minutes in seconds\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [score, setScore] = useState(0);\n  const [playerName, setPlayerName] = useState('Player');\n  const gameType = 'MemoryGame';\n  \n  // Sound state\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const sounds = useRef({});\n  \n  // Game container ref\n  const gameContainerRef = useRef(null);\n\n  // Define sound files - same approach as in GameCanvas\n  const soundFiles = {\n    select: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/flip-switch.mp3`,\n    correct: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n    incorrect: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n    hover: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/hover.mp3`,\n    achievement: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/levelup.mp3`\n  };\n\n  // Initialize or reset the game\n  const initGame = useCallback(() => {\n    const newGameState = initializeGameState();\n    setGameState(newGameState);\n    setTimeLeft(300); // Reset to 5 minutes\n    setGameStarted(true);\n    setGameOver(false);\n    setShowConfetti(false);\n  }, []);\n\n  // Helper function to safely create audio objects with timeout\n  const createSafeAudio = useCallback((path) => {\n    const audio = new Audio();\n    return new Promise((resolve) => {\n      audio.addEventListener('error', () => {\n        console.warn(`Sound file not found: ${path}`);\n        resolve(null);\n      });\n      audio.addEventListener('canplaythrough', () => {\n        resolve(audio);\n      });\n      // Timeout fallback in case sound loading takes too long\n      setTimeout(() => {\n        if (audio.readyState < 3) {\n          console.warn(`Sound loading timeout: ${path}`);\n          resolve(null);\n        }\n      }, 3000);\n      audio.src = path;\n    });\n  }, []);\n\n  // Load all sounds - using the same approach as GameCanvas\n  useEffect(() => {\n    const loadSounds = async () => {\n      const soundPromises = Object.entries(soundFiles).map(async ([name, path]) => {\n        try {\n          const audio = await createSafeAudio(path);\n          return [name, audio];\n        } catch (error) {\n          console.error(`Failed to load sound ${name}:`, error);\n          return [name, null];\n        }\n      });\n\n      try {\n        const loadedSounds = await Promise.all(soundPromises);\n        const soundsMap = Object.fromEntries(loadedSounds);\n        sounds.current = soundsMap;\n        \n        // Check if at least some sounds loaded successfully\n        const hasLoadedSounds = Object.values(soundsMap).some(sound => sound !== null);\n        setSoundsLoaded(hasLoadedSounds);\n        \n        if (hasLoadedSounds) {\n          console.log('🔊 Sounds loaded successfully');\n        } else {\n          console.warn('⚠️ No sounds could be loaded');\n        }\n      } catch (error) {\n        console.error('Failed to load sounds:', error);\n      }\n    };\n\n    loadSounds();\n  }, [createSafeAudio]);\n  \n  // Play sound function - same as in GameCanvas\n  const playSound = useCallback((soundName) => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  }, [isMuted]);\n  \n  // Toggle mute function\n  const toggleMute = useCallback(() => {\n    setIsMuted(prev => !prev);\n  }, []);\n\n  // Handle card click\n  const handleCardClick = (index) => {\n    // Don't allow clicks if the board is locked or the card is already flipped/matched\n    if (\n      gameState.isLocked || \n      gameState.flippedCards.length >= 2 || \n      gameState.cards[index].isFlipped || \n      gameState.cards[index].isMatched\n    ) {\n      return;\n    }\n\n    // Play select sound\n    playSound('select');\n\n    // Flip the card\n    setGameState(prevState => {\n      // Create a new cards array with the clicked card flipped\n      const updatedCards = prevState.cards.map((card, i) => \n        i === index ? { ...card, isFlipped: true } : card\n      );\n      \n      // Add the card to flippedCards\n      const updatedFlippedCards = [...prevState.flippedCards, prevState.cards[index]];\n      \n      // Check if we now have 2 flipped cards\n      const shouldCheckMatch = updatedFlippedCards.length === 2;\n      \n      return {\n        ...prevState,\n        cards: updatedCards,\n        flippedCards: updatedFlippedCards,\n        isLocked: shouldCheckMatch // Lock the board if we need to check for a match\n      };\n    });\n  };\n\n  // Check for matches when two cards are flipped\n  useEffect(() => {\n    if (gameState.flippedCards.length === 2) {\n      const [firstCard, secondCard] = gameState.flippedCards;\n      \n      // Check if the cards match (same service)\n      const isMatch = firstCard.service === secondCard.service;\n      \n      if (isMatch) {\n        // It's a match! Update the game state\n        setTimeout(() => {\n          // Play correct sound with a slight delay to ensure it's heard\n          playSound('correct');\n          \n          setGameState(prevState => {\n            // Mark the matched cards\n            const updatedCards = prevState.cards.map(card => \n              card.service === firstCard.service ? { ...card, isMatched: true } : card\n            );\n            \n            // Add the service to matched pairs\n            const updatedMatchedPairs = [...prevState.matchedPairs, firstCard.service];\n            \n            // Check if the game is complete\n            const complete = isGameComplete(updatedMatchedPairs, 12); // 12 pairs total\n            \n            if (complete) {\n              // Play achievement sound when game is complete\n              setTimeout(() => playSound('achievement'), 500);\n              setGameOver(true);\n              \n              // Show confetti animation for winning before time is up\n              setShowConfetti(true);\n            }\n            \n            return {\n              ...prevState,\n              cards: updatedCards,\n              flippedCards: [],\n              matchedPairs: updatedMatchedPairs,\n              isLocked: false\n            };\n          });\n        }, 300);\n      } else {\n        // Not a match, flip the cards back after a delay\n        setTimeout(() => {\n          // Play incorrect sound\n          playSound('incorrect');\n          \n          setGameState(prevState => {\n            // Flip the cards back\n            const updatedCards = prevState.cards.map(card => \n              card.index === firstCard.index || card.index === secondCard.index\n                ? { ...card, isFlipped: false }\n                : card\n            );\n            \n            return {\n              ...prevState,\n              cards: updatedCards,\n              flippedCards: [],\n              isLocked: false\n            };\n          });\n        }, 1000); // Shorter delay before flipping back\n      }\n    }\n  }, [gameState.flippedCards, playSound]);\n\n  // Timer countdown\n  useEffect(() => {\n    if (!gameStarted || gameOver) return;\n    \n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          setGameOver(true);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    \n    return () => clearInterval(timer);\n  }, [gameStarted, gameOver]);\n\n  // Start the game when component mounts\n  useEffect(() => {\n    initGame();\n  }, [initGame]);\n\n  // Auto-hide confetti after celebration\n  useEffect(() => {\n    if (showConfetti) {\n      const timer = setTimeout(() => {\n        setShowConfetti(false);\n      }, 7000); // Hide confetti after 7 seconds\n      \n      return () => clearTimeout(timer);\n    }\n  }, [showConfetti]);\n\n  useEffect(() => {\n    if (gameStarted) {\n      console.log('Game started, fetching leaderboard...');\n      CosmosDBService.getLeaderboard(gameType).then(data => {\n        console.log('Leaderboard data:', data);\n      });\n    }\n  }, [gameStarted]);\n\n  useEffect(() => {\n    if (gameOver) {\n      console.log('Game over, saving score...');\n      CosmosDBService.saveGameScore(playerName, gameType, score).then(result => {\n        console.log('Score save result:', result);\n      });\n    }\n  }, [gameOver]);\n\n  // Create a 5x5 grid with cards and reset button\n  const renderGrid = () => {\n    const grid = [];\n    const totalCells = 25; // 5x5 grid\n    \n    for (let i = 0; i < totalCells; i++) {\n      if (i === 12) { // Middle position (3rd row, 3rd column)\n        grid.push(\n          <div \n            key=\"reset\" \n            className=\"memory-game-reset\"\n            onClick={() => {\n              playSound('select');\n              initGame();\n            }}\n          >\n            Reset\n          </div>\n        );\n      } else {\n        const cardIndex = i > 12 ? i - 1 : i; // Adjust index for cards after reset button\n        if (cardIndex < gameState.cards.length) {\n          const card = gameState.cards[cardIndex];\n          grid.push(\n            <div\n              key={card.id}\n              className={`memory-game-card ${card.isFlipped || card.isMatched ? 'flipped' : ''}`}\n              onClick={() => handleCardClick(cardIndex)}\n              onMouseEnter={() => playSound('hover')}\n            >\n              {card.isFlipped || card.isMatched ? (\n                <div className=\"memory-card-content\">\n                  <img \n                    src={getServiceIconUrl(card.path)} \n                    alt={card.service} \n                    onError={(e) => {\n                      e.target.onerror = null;\n                      e.target.src = `${process.env.PUBLIC_URL}/azure-icons/default.svg`;\n                    }}\n                  />\n                  <div className=\"memory-card-text\">{card.service}</div>\n                </div>\n              ) : (\n                <span>?</span>\n              )}\n            </div>\n          );\n        } else {\n          // Add empty cells to complete the grid if needed\n          grid.push(\n            <div key={`empty-${i}`} className=\"memory-game-card empty\"></div>\n          );\n        }\n      }\n    }\n    \n    return grid;\n  };\n\n  return (\n    <div \n      className=\"gameCanvas-container\" \n      ref={gameContainerRef}\n    >\n      <Confetti active={showConfetti} />\n\n      {/* Back to Home button */}\n      <Link \n        to=\"/\" \n        className=\"back-to-home-button\"\n        style={{\n          position: 'absolute',\n          top: '20px',\n          left: '20px',\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px 20px',\n          backgroundColor: 'rgba(0, 255, 255, 0.1)',\n          border: '2px solid #00ffff',\n          borderRadius: '5px',\n          color: '#00ffff',\n          textDecoration: 'none',\n          fontFamily: 'Orbitron, sans-serif',\n          fontSize: '14px',\n          transition: 'all 0.3s ease',\n          zIndex: 100\n        }}\n        onMouseEnter={() => playSound('hover')}\n      >\n        <svg \n          xmlns=\"http://www.w3.org/2000/svg\" \n          viewBox=\"0 0 24 24\" \n          fill=\"currentColor\" \n          style={{\n            width: '20px',\n            height: '20px',\n            marginRight: '8px'\n          }}\n        >\n          <path d=\"M12 2L1 12h3v9h6v-6h4v6h6v-9h3L12 2z\"/>\n        </svg>\n        Back to Home\n      </Link>\n\n      <h1 \n        className=\"gameCanvas-game-title\"\n        style={{ '--azure-icon': `url(${process.env.PUBLIC_URL}/azure-icons/Microsoft_Azure_Cyan.svg)` }}\n      >\n        zure Icons Memory\n      </h1>\n      \n      <div className=\"gameCanvas-game-content\">\n        <div className=\"gameCanvas-canvas-wrapper\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n          <div className=\"memory-game-timer\">\n            TIMER: {formatTime(timeLeft)}\n            {soundsLoaded && (\n              <button \n                className=\"memory-game-sound-toggle top-right\"\n                onClick={toggleMute}\n                aria-label=\"Toggle sound\"\n              >\n                {isMuted ? '🔇' : '🔊'}\n              </button>\n            )}\n          </div>\n          \n          <div className=\"memory-game-grid\">\n            {renderGrid()}\n          </div>\n          \n          {gameOver && (\n            <div className=\"gameCanvas-game-over\">\n              <h3>\n                {gameState.matchedPairs.length === 12 ? 'Congratulations!' : 'Time\\'s Up!'}\n              </h3>\n              <p>\n                {gameState.matchedPairs.length === 12 \n                  ? `You found all matches with ${formatTime(timeLeft)} remaining!` \n                  : `You found ${gameState.matchedPairs.length} out of 12 matches.`}\n              </p>\n              <button \n                onClick={() => {\n                  playSound('select');\n                  initGame();\n                }}\n              >\n                Play Again\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default IconsMemoryGame; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,OAAO,0BAA0B;AACjC,SACEC,mBAAmB,EACnBC,UAAU,EACVC,cAAc,EACdC,iBAAiB,QACZ,0BAA0B;AACjC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,eAAe,MAAM,6BAA6B;;AAEzD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAC/B,IAAI,CAACA,MAAM,EAAE,OAAO,IAAI;EAExB,MAAMC,aAAa,GAAG,GAAG;EACzB,MAAMC,QAAQ,GAAG,EAAE;EAEnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,aAAa,EAAEE,CAAC,EAAE,EAAE;IACtC,MAAMC,IAAI,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG;IACtC,MAAMC,cAAc,GAAG,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG;IAC9C,MAAME,cAAc,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC;IACpC,MAAMG,IAAI,GAAG,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI;IAC1C,MAAMI,QAAQ,GAAG,GAAGL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,KAAK;IAC5C,MAAMK,KAAK,GAAG,CACZ,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS,CAAE;IAAA,CACZ,CAACN,IAAI,CAACO,KAAK,CAACP,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAEhCJ,QAAQ,CAACW,IAAI,cACXf,OAAA;MAEEgB,SAAS,EAAC,0BAA0B;MACpCC,KAAK,EAAE;QACLX,IAAI;QACJY,GAAG,EAAE,OAAO;QACZC,KAAK,EAAER,IAAI;QACXS,MAAM,EAAET,IAAI;QACZU,eAAe,EAAER,KAAK;QACtBS,SAAS,EAAE,UAAUV,QAAQ,GAAG;QAChCW,OAAO,EAAEb,cAAc;QACvBD;MACF;IAAE,GAXGJ,CAAC;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYP,CACH,CAAC;EACH;EAEA,oBAAO3B,OAAA;IAAKgB,SAAS,EAAC,2BAA2B;IAAAY,QAAA,EAAExB;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACpE,CAAC;AAACE,EAAA,GAzCI5B,QAAQ;AA2Cd,MAAM6B,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B;EACA,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG5C,QAAQ,CAAC,MAAMI,mBAAmB,CAAC,CAAC,CAAC;EACvE,MAAM,CAACyC,QAAQ,EAAEC,WAAW,CAAC,GAAG9C,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC+C,WAAW,EAAEC,cAAc,CAAC,GAAGhD,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACiD,QAAQ,EAAEC,WAAW,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACmD,YAAY,EAAEC,eAAe,CAAC,GAAGpD,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACqD,KAAK,EAAEC,QAAQ,CAAC,GAAGtD,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACuD,UAAU,EAAEC,aAAa,CAAC,GAAGxD,QAAQ,CAAC,QAAQ,CAAC;EACtD,MAAMyD,QAAQ,GAAG,YAAY;;EAE7B;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG3D,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC4D,OAAO,EAAEC,UAAU,CAAC,GAAG7D,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM8D,MAAM,GAAG3D,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEzB;EACA,MAAM4D,gBAAgB,GAAG5D,MAAM,CAAC,IAAI,CAAC;;EAErC;EACA,MAAM6D,UAAU,GAAG;IACjBC,MAAM,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B,+BAA+B;IAChFC,OAAO,EAAE,GAAGH,OAAO,CAACC,GAAG,CAACC,0BAA0B,iCAAiC;IACnFE,SAAS,EAAE,GAAGJ,OAAO,CAACC,GAAG,CAACC,0BAA0B,mCAAmC;IACvFG,KAAK,EAAE,GAAGL,OAAO,CAACC,GAAG,CAACC,0BAA0B,yBAAyB;IACzEI,WAAW,EAAE,GAAGN,OAAO,CAACC,GAAG,CAACC,0BAA0B;EACxD,CAAC;;EAED;EACA,MAAMK,QAAQ,GAAGvE,WAAW,CAAC,MAAM;IACjC,MAAMwE,YAAY,GAAGtE,mBAAmB,CAAC,CAAC;IAC1CwC,YAAY,CAAC8B,YAAY,CAAC;IAC1B5B,WAAW,CAAC,GAAG,CAAC,CAAC,CAAC;IAClBE,cAAc,CAAC,IAAI,CAAC;IACpBE,WAAW,CAAC,KAAK,CAAC;IAClBE,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMuB,eAAe,GAAGzE,WAAW,CAAE0E,IAAI,IAAK;IAC5C,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;IACzB,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9BH,KAAK,CAACI,gBAAgB,CAAC,OAAO,EAAE,MAAM;QACpCC,OAAO,CAACC,IAAI,CAAC,yBAAyBP,IAAI,EAAE,CAAC;QAC7CI,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,CAAC;MACFH,KAAK,CAACI,gBAAgB,CAAC,gBAAgB,EAAE,MAAM;QAC7CD,OAAO,CAACH,KAAK,CAAC;MAChB,CAAC,CAAC;MACF;MACAO,UAAU,CAAC,MAAM;QACf,IAAIP,KAAK,CAACQ,UAAU,GAAG,CAAC,EAAE;UACxBH,OAAO,CAACC,IAAI,CAAC,0BAA0BP,IAAI,EAAE,CAAC;UAC9CI,OAAO,CAAC,IAAI,CAAC;QACf;MACF,CAAC,EAAE,IAAI,CAAC;MACRH,KAAK,CAACS,GAAG,GAAGV,IAAI;IAClB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA3E,SAAS,CAAC,MAAM;IACd,MAAMsF,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAO,CAAC1B,UAAU,CAAC,CAAC2B,GAAG,CAAC,OAAO,CAACC,IAAI,EAAEhB,IAAI,CAAC,KAAK;QAC3E,IAAI;UACF,MAAMC,KAAK,GAAG,MAAMF,eAAe,CAACC,IAAI,CAAC;UACzC,OAAO,CAACgB,IAAI,EAAEf,KAAK,CAAC;QACtB,CAAC,CAAC,OAAOgB,KAAK,EAAE;UACdX,OAAO,CAACW,KAAK,CAAC,wBAAwBD,IAAI,GAAG,EAAEC,KAAK,CAAC;UACrD,OAAO,CAACD,IAAI,EAAE,IAAI,CAAC;QACrB;MACF,CAAC,CAAC;MAEF,IAAI;QACF,MAAME,YAAY,GAAG,MAAMf,OAAO,CAACgB,GAAG,CAACP,aAAa,CAAC;QACrD,MAAMQ,SAAS,GAAGP,MAAM,CAACQ,WAAW,CAACH,YAAY,CAAC;QAClDhC,MAAM,CAACoC,OAAO,GAAGF,SAAS;;QAE1B;QACA,MAAMG,eAAe,GAAGV,MAAM,CAACW,MAAM,CAACJ,SAAS,CAAC,CAACK,IAAI,CAACC,KAAK,IAAIA,KAAK,KAAK,IAAI,CAAC;QAC9E3C,eAAe,CAACwC,eAAe,CAAC;QAEhC,IAAIA,eAAe,EAAE;UACnBjB,OAAO,CAACqB,GAAG,CAAC,+BAA+B,CAAC;QAC9C,CAAC,MAAM;UACLrB,OAAO,CAACC,IAAI,CAAC,8BAA8B,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACZ,eAAe,CAAC,CAAC;;EAErB;EACA,MAAM6B,SAAS,GAAGtG,WAAW,CAAEuG,SAAS,IAAK;IAC3C,MAAMH,KAAK,GAAGxC,MAAM,CAACoC,OAAO,CAACO,SAAS,CAAC;IACvC,IAAIH,KAAK,IAAI,CAAC1C,OAAO,EAAE;MACrB,IAAI;QACF0C,KAAK,CAACI,WAAW,GAAG,CAAC;QACrBJ,KAAK,CAACK,MAAM,GAAG,GAAG;QAClBL,KAAK,CAACM,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;UACxB5B,OAAO,CAACC,IAAI,CAAC,uBAAuBsB,SAAS,GAAG,EAAEK,GAAG,CAAC;QACxD,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOA,GAAG,EAAE;QACZ5B,OAAO,CAACC,IAAI,CAAC,oBAAoBsB,SAAS,GAAG,EAAEK,GAAG,CAAC;MACrD;IACF;EACF,CAAC,EAAE,CAAClD,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMmD,UAAU,GAAG7G,WAAW,CAAC,MAAM;IACnC2D,UAAU,CAACmD,IAAI,IAAI,CAACA,IAAI,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,eAAe,GAAIC,KAAK,IAAK;IACjC;IACA,IACEvE,SAAS,CAACwE,QAAQ,IAClBxE,SAAS,CAACyE,YAAY,CAACC,MAAM,IAAI,CAAC,IAClC1E,SAAS,CAAC2E,KAAK,CAACJ,KAAK,CAAC,CAACK,SAAS,IAChC5E,SAAS,CAAC2E,KAAK,CAACJ,KAAK,CAAC,CAACM,SAAS,EAChC;MACA;IACF;;IAEA;IACAhB,SAAS,CAAC,QAAQ,CAAC;;IAEnB;IACA5D,YAAY,CAAC6E,SAAS,IAAI;MACxB;MACA,MAAMC,YAAY,GAAGD,SAAS,CAACH,KAAK,CAAC3B,GAAG,CAAC,CAACgC,IAAI,EAAE3G,CAAC,KAC/CA,CAAC,KAAKkG,KAAK,GAAG;QAAE,GAAGS,IAAI;QAAEJ,SAAS,EAAE;MAAK,CAAC,GAAGI,IAC/C,CAAC;;MAED;MACA,MAAMC,mBAAmB,GAAG,CAAC,GAAGH,SAAS,CAACL,YAAY,EAAEK,SAAS,CAACH,KAAK,CAACJ,KAAK,CAAC,CAAC;;MAE/E;MACA,MAAMW,gBAAgB,GAAGD,mBAAmB,CAACP,MAAM,KAAK,CAAC;MAEzD,OAAO;QACL,GAAGI,SAAS;QACZH,KAAK,EAAEI,YAAY;QACnBN,YAAY,EAAEQ,mBAAmB;QACjCT,QAAQ,EAAEU,gBAAgB,CAAC;MAC7B,CAAC;IACH,CAAC,CAAC;EACJ,CAAC;;EAED;EACA5H,SAAS,CAAC,MAAM;IACd,IAAI0C,SAAS,CAACyE,YAAY,CAACC,MAAM,KAAK,CAAC,EAAE;MACvC,MAAM,CAACS,SAAS,EAAEC,UAAU,CAAC,GAAGpF,SAAS,CAACyE,YAAY;;MAEtD;MACA,MAAMY,OAAO,GAAGF,SAAS,CAACG,OAAO,KAAKF,UAAU,CAACE,OAAO;MAExD,IAAID,OAAO,EAAE;QACX;QACA5C,UAAU,CAAC,MAAM;UACf;UACAoB,SAAS,CAAC,SAAS,CAAC;UAEpB5D,YAAY,CAAC6E,SAAS,IAAI;YACxB;YACA,MAAMC,YAAY,GAAGD,SAAS,CAACH,KAAK,CAAC3B,GAAG,CAACgC,IAAI,IAC3CA,IAAI,CAACM,OAAO,KAAKH,SAAS,CAACG,OAAO,GAAG;cAAE,GAAGN,IAAI;cAAEH,SAAS,EAAE;YAAK,CAAC,GAAGG,IACtE,CAAC;;YAED;YACA,MAAMO,mBAAmB,GAAG,CAAC,GAAGT,SAAS,CAACU,YAAY,EAAEL,SAAS,CAACG,OAAO,CAAC;;YAE1E;YACA,MAAMG,QAAQ,GAAG9H,cAAc,CAAC4H,mBAAmB,EAAE,EAAE,CAAC,CAAC,CAAC;;YAE1D,IAAIE,QAAQ,EAAE;cACZ;cACAhD,UAAU,CAAC,MAAMoB,SAAS,CAAC,aAAa,CAAC,EAAE,GAAG,CAAC;cAC/CtD,WAAW,CAAC,IAAI,CAAC;;cAEjB;cACAE,eAAe,CAAC,IAAI,CAAC;YACvB;YAEA,OAAO;cACL,GAAGqE,SAAS;cACZH,KAAK,EAAEI,YAAY;cACnBN,YAAY,EAAE,EAAE;cAChBe,YAAY,EAAED,mBAAmB;cACjCf,QAAQ,EAAE;YACZ,CAAC;UACH,CAAC,CAAC;QACJ,CAAC,EAAE,GAAG,CAAC;MACT,CAAC,MAAM;QACL;QACA/B,UAAU,CAAC,MAAM;UACf;UACAoB,SAAS,CAAC,WAAW,CAAC;UAEtB5D,YAAY,CAAC6E,SAAS,IAAI;YACxB;YACA,MAAMC,YAAY,GAAGD,SAAS,CAACH,KAAK,CAAC3B,GAAG,CAACgC,IAAI,IAC3CA,IAAI,CAACT,KAAK,KAAKY,SAAS,CAACZ,KAAK,IAAIS,IAAI,CAACT,KAAK,KAAKa,UAAU,CAACb,KAAK,GAC7D;cAAE,GAAGS,IAAI;cAAEJ,SAAS,EAAE;YAAM,CAAC,GAC7BI,IACN,CAAC;YAED,OAAO;cACL,GAAGF,SAAS;cACZH,KAAK,EAAEI,YAAY;cACnBN,YAAY,EAAE,EAAE;cAChBD,QAAQ,EAAE;YACZ,CAAC;UACH,CAAC,CAAC;QACJ,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;MACZ;IACF;EACF,CAAC,EAAE,CAACxE,SAAS,CAACyE,YAAY,EAAEZ,SAAS,CAAC,CAAC;;EAEvC;EACAvG,SAAS,CAAC,MAAM;IACd,IAAI,CAAC8C,WAAW,IAAIE,QAAQ,EAAE;IAE9B,MAAMoF,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC9BxF,WAAW,CAACkE,IAAI,IAAI;QAClB,IAAIA,IAAI,IAAI,CAAC,EAAE;UACbuB,aAAa,CAACF,KAAK,CAAC;UACpBnF,WAAW,CAAC,IAAI,CAAC;UACjB,OAAO,CAAC;QACV;QACA,OAAO8D,IAAI,GAAG,CAAC;MACjB,CAAC,CAAC;IACJ,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMuB,aAAa,CAACF,KAAK,CAAC;EACnC,CAAC,EAAE,CAACtF,WAAW,EAAEE,QAAQ,CAAC,CAAC;;EAE3B;EACAhD,SAAS,CAAC,MAAM;IACdwE,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACAxE,SAAS,CAAC,MAAM;IACd,IAAIkD,YAAY,EAAE;MAChB,MAAMkF,KAAK,GAAGjD,UAAU,CAAC,MAAM;QAC7BhC,eAAe,CAAC,KAAK,CAAC;MACxB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;MAEV,OAAO,MAAMoF,YAAY,CAACH,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAAClF,YAAY,CAAC,CAAC;EAElBlD,SAAS,CAAC,MAAM;IACd,IAAI8C,WAAW,EAAE;MACfmC,OAAO,CAACqB,GAAG,CAAC,uCAAuC,CAAC;MACpD9F,eAAe,CAACgI,cAAc,CAAChF,QAAQ,CAAC,CAACiF,IAAI,CAACC,IAAI,IAAI;QACpDzD,OAAO,CAACqB,GAAG,CAAC,mBAAmB,EAAEoC,IAAI,CAAC;MACxC,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAC5F,WAAW,CAAC,CAAC;EAEjB9C,SAAS,CAAC,MAAM;IACd,IAAIgD,QAAQ,EAAE;MACZiC,OAAO,CAACqB,GAAG,CAAC,4BAA4B,CAAC;MACzC9F,eAAe,CAACmI,aAAa,CAACrF,UAAU,EAAEE,QAAQ,EAAEJ,KAAK,CAAC,CAACqF,IAAI,CAACG,MAAM,IAAI;QACxE3D,OAAO,CAACqB,GAAG,CAAC,oBAAoB,EAAEsC,MAAM,CAAC;MAC3C,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAAC5F,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAM6F,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,IAAI,GAAG,EAAE;IACf,MAAMC,UAAU,GAAG,EAAE,CAAC,CAAC;;IAEvB,KAAK,IAAIhI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgI,UAAU,EAAEhI,CAAC,EAAE,EAAE;MACnC,IAAIA,CAAC,KAAK,EAAE,EAAE;QAAE;QACd+H,IAAI,CAACrH,IAAI,cACPf,OAAA;UAEEgB,SAAS,EAAC,mBAAmB;UAC7BsH,OAAO,EAAEA,CAAA,KAAM;YACbzC,SAAS,CAAC,QAAQ,CAAC;YACnB/B,QAAQ,CAAC,CAAC;UACZ,CAAE;UAAAlC,QAAA,EACH;QAED,GARM,OAAO;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQR,CACP,CAAC;MACH,CAAC,MAAM;QACL,MAAM4G,SAAS,GAAGlI,CAAC,GAAG,EAAE,GAAGA,CAAC,GAAG,CAAC,GAAGA,CAAC,CAAC,CAAC;QACtC,IAAIkI,SAAS,GAAGvG,SAAS,CAAC2E,KAAK,CAACD,MAAM,EAAE;UACtC,MAAMM,IAAI,GAAGhF,SAAS,CAAC2E,KAAK,CAAC4B,SAAS,CAAC;UACvCH,IAAI,CAACrH,IAAI,cACPf,OAAA;YAEEgB,SAAS,EAAE,oBAAoBgG,IAAI,CAACJ,SAAS,IAAII,IAAI,CAACH,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;YACnFyB,OAAO,EAAEA,CAAA,KAAMhC,eAAe,CAACiC,SAAS,CAAE;YAC1CC,YAAY,EAAEA,CAAA,KAAM3C,SAAS,CAAC,OAAO,CAAE;YAAAjE,QAAA,EAEtCoF,IAAI,CAACJ,SAAS,IAAII,IAAI,CAACH,SAAS,gBAC/B7G,OAAA;cAAKgB,SAAS,EAAC,qBAAqB;cAAAY,QAAA,gBAClC5B,OAAA;gBACE2E,GAAG,EAAE/E,iBAAiB,CAACoH,IAAI,CAAC/C,IAAI,CAAE;gBAClCwE,GAAG,EAAEzB,IAAI,CAACM,OAAQ;gBAClBoB,OAAO,EAAGC,CAAC,IAAK;kBACdA,CAAC,CAACC,MAAM,CAACC,OAAO,GAAG,IAAI;kBACvBF,CAAC,CAACC,MAAM,CAACjE,GAAG,GAAG,GAAGpB,OAAO,CAACC,GAAG,CAACsF,UAAU,0BAA0B;gBACpE;cAAE;gBAAAtH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH,CAAC,eACF3B,OAAA;gBAAKgB,SAAS,EAAC,kBAAkB;gBAAAY,QAAA,EAAEoF,IAAI,CAACM;cAAO;gBAAA9F,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACnD,CAAC,gBAEN3B,OAAA;cAAA4B,QAAA,EAAM;YAAC;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM;UACd,GAnBIqF,IAAI,CAAC+B,EAAE;YAAAvH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAoBT,CACP,CAAC;QACH,CAAC,MAAM;UACL;UACAyG,IAAI,CAACrH,IAAI,cACPf,OAAA;YAAwBgB,SAAS,EAAC;UAAwB,GAAhD,SAASX,CAAC,EAAE;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA0C,CAClE,CAAC;QACH;MACF;IACF;IAEA,OAAOyG,IAAI;EACb,CAAC;EAED,oBACEpI,OAAA;IACEgB,SAAS,EAAC,sBAAsB;IAChCgI,GAAG,EAAE5F,gBAAiB;IAAAxB,QAAA,gBAEtB5B,OAAA,CAACC,QAAQ;MAACC,MAAM,EAAEsC;IAAa;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGlC3B,OAAA,CAACH,IAAI;MACHoJ,EAAE,EAAC,GAAG;MACNjI,SAAS,EAAC,qBAAqB;MAC/BC,KAAK,EAAE;QACLiI,QAAQ,EAAE,UAAU;QACpBhI,GAAG,EAAE,MAAM;QACXZ,IAAI,EAAE,MAAM;QACZ6I,OAAO,EAAE,MAAM;QACfC,UAAU,EAAE,QAAQ;QACpBC,OAAO,EAAE,WAAW;QACpBhI,eAAe,EAAE,wBAAwB;QACzCiI,MAAM,EAAE,mBAAmB;QAC3BC,YAAY,EAAE,KAAK;QACnB1I,KAAK,EAAE,SAAS;QAChB2I,cAAc,EAAE,MAAM;QACtBC,UAAU,EAAE,sBAAsB;QAClCC,QAAQ,EAAE,MAAM;QAChBC,UAAU,EAAE,eAAe;QAC3BC,MAAM,EAAE;MACV,CAAE;MACFpB,YAAY,EAAEA,CAAA,KAAM3C,SAAS,CAAC,OAAO,CAAE;MAAAjE,QAAA,gBAEvC5B,OAAA;QACE6J,KAAK,EAAC,4BAA4B;QAClCC,OAAO,EAAC,WAAW;QACnBC,IAAI,EAAC,cAAc;QACnB9I,KAAK,EAAE;UACLE,KAAK,EAAE,MAAM;UACbC,MAAM,EAAE,MAAM;UACd4I,WAAW,EAAE;QACf,CAAE;QAAApI,QAAA,eAEF5B,OAAA;UAAMiK,CAAC,EAAC;QAAsC;UAAAzI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,gBAER;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEP3B,OAAA;MACEgB,SAAS,EAAC,uBAAuB;MACjCC,KAAK,EAAE;QAAE,cAAc,EAAE,OAAOsC,OAAO,CAACC,GAAG,CAACsF,UAAU;MAAyC,CAAE;MAAAlH,QAAA,EAClG;IAED;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAEL3B,OAAA;MAAKgB,SAAS,EAAC,yBAAyB;MAAAY,QAAA,eACtC5B,OAAA;QAAKgB,SAAS,EAAC,2BAA2B;QAACC,KAAK,EAAE;UAAEkI,OAAO,EAAE,MAAM;UAAEe,aAAa,EAAE,QAAQ;UAAEd,UAAU,EAAE,QAAQ;UAAEe,cAAc,EAAE;QAAS,CAAE;QAAAvI,QAAA,gBAC7I5B,OAAA;UAAKgB,SAAS,EAAC,mBAAmB;UAAAY,QAAA,GAAC,SAC1B,EAAClC,UAAU,CAACwC,QAAQ,CAAC,EAC3Ba,YAAY,iBACX/C,OAAA;YACEgB,SAAS,EAAC,oCAAoC;YAC9CsH,OAAO,EAAElC,UAAW;YACpB,cAAW,cAAc;YAAAxE,QAAA,EAExBqB,OAAO,GAAG,IAAI,GAAG;UAAI;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CACT;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAEN3B,OAAA;UAAKgB,SAAS,EAAC,kBAAkB;UAAAY,QAAA,EAC9BuG,UAAU,CAAC;QAAC;UAAA3G,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC,EAELW,QAAQ,iBACPtC,OAAA;UAAKgB,SAAS,EAAC,sBAAsB;UAAAY,QAAA,gBACnC5B,OAAA;YAAA4B,QAAA,EACGI,SAAS,CAACwF,YAAY,CAACd,MAAM,KAAK,EAAE,GAAG,kBAAkB,GAAG;UAAa;YAAAlF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxE,CAAC,eACL3B,OAAA;YAAA4B,QAAA,EACGI,SAAS,CAACwF,YAAY,CAACd,MAAM,KAAK,EAAE,GACjC,8BAA8BhH,UAAU,CAACwC,QAAQ,CAAC,aAAa,GAC/D,aAAaF,SAAS,CAACwF,YAAY,CAACd,MAAM;UAAqB;YAAAlF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClE,CAAC,eACJ3B,OAAA;YACEsI,OAAO,EAAEA,CAAA,KAAM;cACbzC,SAAS,CAAC,QAAQ,CAAC;cACnB/B,QAAQ,CAAC,CAAC;YACZ,CAAE;YAAAlC,QAAA,EACH;UAED;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACI,EAAA,CA7aID,eAAe;AAAAsI,GAAA,GAAftI,eAAe;AA+arB,eAAeA,eAAe;AAAC,IAAAD,EAAA,EAAAuI,GAAA;AAAAC,YAAA,CAAAxI,EAAA;AAAAwI,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}