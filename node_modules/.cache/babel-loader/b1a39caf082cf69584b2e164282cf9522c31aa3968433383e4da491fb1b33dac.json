{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game copy 20- copy 2/src/components/GameCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AWS_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Add these constants from IconResolver.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst GameCanvas = () => {\n  _s();\n  // First, declare all state\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const savedRocket = localStorage.getItem('selectedRocket');\n    return savedRocket || 'rocket1.png';\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({\n    x: 375,\n    y: 550\n  });\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  // Get random categories for instructions only once at game start\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AWS_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 2);\n    };\n    return getRandomCategories().map(category => ({\n      text: `Shoot the ${category.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ')} icons!`,\n      category: AWS_ICON_CATEGORIES[category]\n    }));\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => path.includes(instruction.category)).map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name\n      }));\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs and other setup code\n  const canvasRef = useRef(null);\n\n  // We'll keep arrays for icons, bullets, and feedback in refs to avoid\n  // re-rendering the whole component every time they update.\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n\n  // Images for the gun and bullets\n  const rocketImage = useRef(new Image());\n\n  // Initialize rocket image\n  useEffect(() => {\n    rocketImage.current.src = `icons/${selectedRocket}`;\n  }, [selectedRocket]); // Update when selectedRocket changes\n\n  const fireballImage = new Image();\n  fireballImage.src = 'icons/fireball.png';\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25,\n    // center of an 800px width minus half the gun width\n    y: 800 - 100,\n    // Adjust this value to move the rocket closer to the bottom\n    width: 120,\n    height: 120\n  });\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    return Math.floor(Math.random() * (canvas.width - 50));\n  };\n\n  // Load icons for the current instruction\n  const loadIcons = () => {\n    iconsRef.current = [];\n    const positions = [];\n    const currentCategory = instructions[currentInstructionIndex].category;\n    console.log('Current Mission Category:', currentCategory); // Debug log\n\n    // Helper function to get the exact category for a service\n    const getServiceCategory = path => {\n      // Find the exact category by matching the full path pattern\n      const categoryEntry = Object.entries(AWS_ICON_CATEGORIES).find(([_, categoryPath]) => {\n        const pathPattern = new RegExp(`${categoryPath}/\\\\d+/`);\n        return pathPattern.test(path);\n      });\n      return categoryEntry ? categoryEntry[1] : null;\n    };\n\n    // Get all icons for current category - ensure exact category matching\n    const categoryIcons = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => {\n      const serviceCategory = getServiceCategory(path);\n      const isMatch = serviceCategory === currentCategory;\n      console.log(`Service Path: ${path}, Found Category: ${serviceCategory}, Current Category: ${currentCategory}, IsMatch: ${isMatch}`); // Debug log\n      return isMatch;\n    }).map(([name, path]) => ({\n      path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n      name: name,\n      category: currentCategory,\n      isTargetCategory: true\n    }));\n\n    // Get all icons from other categories - ensure strict category exclusion\n    const otherCategoryIcons = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => {\n      const serviceCategory = getServiceCategory(path);\n      return serviceCategory !== null && serviceCategory !== currentCategory;\n    }).map(([name, path]) => ({\n      path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n      name: name,\n      category: getServiceCategory(path),\n      isTargetCategory: false\n    }));\n    console.log('Found Category Icons:', categoryIcons.map(icon => icon.name)); // Debug log\n    console.log('Found Other Icons:', otherCategoryIcons.map(icon => icon.name)); // Debug log\n\n    // Clear any existing icons\n    iconsRef.current = [];\n\n    // For current category, get 4 unique icons (with possible repetition if less than 4 available)\n    let selectedCategoryIcons = [];\n    const numRequired = 4;\n    if (categoryIcons.length <= numRequired) {\n      // If we have fewer icons than needed, repeat them until we have exactly 4\n      while (selectedCategoryIcons.length < numRequired) {\n        selectedCategoryIcons = [...selectedCategoryIcons, ...categoryIcons].slice(0, numRequired);\n      }\n    } else {\n      // If we have enough icons, randomly select 4 unique ones\n      const shuffled = [...categoryIcons].sort(() => 0.5 - Math.random());\n      selectedCategoryIcons = shuffled.slice(0, numRequired);\n    }\n\n    // Randomly select 6 icons from other categories\n    const shuffledOtherIcons = [...otherCategoryIcons].sort(() => 0.5 - Math.random());\n    const selectedOtherIcons = shuffledOtherIcons.slice(0, 6);\n\n    // Add current category icons\n    selectedCategoryIcons.forEach(iconInfo => {\n      let x = getRandomX();\n      while (positions.some(pos => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: currentCategory,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false,\n        isTargetCategory: true\n      });\n    });\n\n    // Add other category icons\n    selectedOtherIcons.forEach(iconInfo => {\n      let x = getRandomX();\n      while (positions.some(pos => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: iconInfo.category,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false,\n        isTargetCategory: false\n      });\n    });\n    console.log('Final Icon Set:', {\n      currentCategory,\n      targetIcons: iconsRef.current.filter(icon => icon.isTargetCategory).map(icon => icon.name),\n      otherIcons: iconsRef.current.filter(icon => !icon.isTargetCategory).map(icon => icon.name)\n    });\n  };\n\n  // Helper function to shuffle array and get n unique items\n  const shuffleAndSlice = (array, n) => {\n    const shuffled = [...array].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, Math.min(n, shuffled.length));\n  };\n\n  // Show feedback (checkmark or X) and points after a shot\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now()\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    const currentCategory = instructions[currentInstructionIndex].category;\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter(bullet => {\n        if (bullet.x > icon.x && bullet.x < icon.x + 50 && bullet.y > icon.y && bullet.y < icon.y + 50) {\n          icon.hit = true;\n          if (icon.isTargetCategory) {\n            const heightPercentage = 1 - icon.y / canvas.height;\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            setScore(prev => {\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore(prev => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n    if (iconsRef.current.length === 0 && timeLeft > 0) {\n      playSound('levelup');\n      moveToNextInstruction();\n    }\n  };\n\n  // The main game loop, which draws everything on the canvas\n  const gameLoop = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw the rocket (gun)\n    const {\n      x: gunX,\n      y: gunY,\n      width,\n      height\n    } = gunRef.current;\n    ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n\n    // Draw icons\n    iconsRef.current.forEach(icon => {\n      if (!icon.hit) {\n        // Save the current context state\n        ctx.save();\n\n        // Create a rounded rectangle path\n        const radius = 10; // Adjust this value to control the roundness\n        const x = icon.x;\n        const y = icon.y;\n        const width = 50;\n        const height = 50;\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n\n        // Clip to the rounded rectangle\n        ctx.clip();\n\n        // Draw the icon\n        ctx.drawImage(icon.image, x, y, width, height);\n\n        // Restore the context state\n        ctx.restore();\n        icon.y += 0.3; // Keep consistent speed\n      }\n    });\n\n    // Remove icons that are off screen and check if we need new ones\n    iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n    if (iconsRef.current.length === 0 && timeLeft > 0) {\n      playSound('levelup');\n      moveToNextInstruction();\n    }\n\n    // Draw bullets\n    bulletsRef.current.forEach(bullet => {\n      ctx.drawImage(fireballImage, bullet.x, bullet.y, 20, 20);\n      bullet.y -= 5;\n    });\n\n    // Remove bullets that are off-screen\n    bulletsRef.current = bulletsRef.current.filter(b => b.y > 0);\n\n    // Draw feedback with consistent styling for both positive and negative points\n    const now = Date.now();\n    feedbacksRef.current = feedbacksRef.current.filter(feedback => {\n      const elapsed = now - feedback.time;\n      if (elapsed < 3000) {\n        // Draw points with consistent styling\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n        ctx.shadowBlur = 4;\n        ctx.fillStyle = feedback.isCorrect ? '#4CAF50' : '#F44336';\n        ctx.font = 'bold 28px Arial';\n\n        // Show points with + or - sign\n        const pointsText = feedback.points > 0 ? `+${feedback.points}` : `${feedback.points}`;\n        ctx.fillText(pointsText, feedback.x + 10, feedback.y - 20);\n\n        // Draw icon name\n        ctx.font = '16px Arial';\n        ctx.fillText(feedback.name, feedback.x + 60, feedback.y + 25);\n\n        // Draw feedback symbol\n        ctx.font = 'bold 55px Arial';\n        ctx.fillText(feedback.isCorrect ? '✔' : '✘', feedback.x + 10, feedback.y + 30);\n        ctx.shadowBlur = 0;\n        return true;\n      }\n      return false;\n    });\n    checkCollisions();\n\n    // Update and draw particles\n    particlesRef.current = particlesRef.current.filter(particle => {\n      if (particle.lifetime > 0 && particle.size > 0) {\n        particle.update();\n        particle.draw(ctx);\n        return true;\n      }\n      return false;\n    });\n    requestAnimationFrame(gameLoop);\n  };\n\n  // Add sound references with error handling\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Initialize sounds with error handling\n  useEffect(() => {\n    const soundFiles = {\n      shoot: '/sounds/pistol_sound.mp3',\n      correct: '/sounds/correct_sound.mp3',\n      incorrect: '/sounds/incorrect_sound.mp3',\n      levelup: '/sounds/levelup.mp3'\n    };\n\n    // Create a safe audio player that won't break if files are missing\n    const createSafeAudio = path => {\n      const audio = new Audio();\n      return new Promise(resolve => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n\n        // Set timeout in case the file takes too long to load\n        setTimeout(() => resolve(null), 2000);\n        audio.src = path;\n      });\n    };\n\n    // Load all sound files with error handling\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n    loadSounds();\n\n    // Set initial volume\n    return () => {\n      // Cleanup sounds on unmount\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  // Safe play function\n  const playSound = soundName => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Add a mute toggle button to the UI\n  const [isMuted, setIsMuted] = useState(false);\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !isMuted;\n      }\n    });\n  };\n\n  // Add new state and refs for particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n\n  // Add state to track if we've already handled game over\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  // Add state to track if game should start\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Particle class\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size; // Store initial size\n    }\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      // Calculate size based on lifetime instead of continuous subtraction\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n    draw(ctx) {\n      if (this.size <= 0) return; // Don't draw if size is 0 or negative\n\n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Function to create explosion effect\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled, gameStarted]);\n\n  // Handle game over\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    setGameOver(true);\n    setGameOverHandled(true);\n    const newScore = {\n      name: playerName,\n      score\n    };\n    const newHighScores = [...highScores, newScore].sort((a, b) => b.score - a.score).slice(0, 5);\n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  // First effect for canvas setup\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      canvas.width = 1200;\n      canvas.height = 800;\n      const ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n\n      // Only load icons if game has started and rocket is selected\n      if (selectedRocket && gameStarted) {\n        loadIcons();\n      }\n      requestAnimationFrame(gameLoop);\n    }\n  }, [selectedRocket, gameStarted]); // Change dependencies to use gameStarted instead\n\n  // Second effect for event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ROCKET_WIDTH = 50;\n    const FIXED_ROCKET_Y = 550;\n    const handleMouseMove = e => {\n      // Only allow movement if game is not over\n      if (timeLeft > 0) {\n        const rect = canvas.getBoundingClientRect();\n\n        // Calculate new X position\n        let newX = e.clientX - rect.left - gunRef.current.width / 2;\n\n        // Add boundary checks\n        newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n\n        // Update gun position\n        gunRef.current.x = newX;\n      }\n    };\n    const handleCanvasClick = () => {\n      // Only allow shooting if game is active (started and time remaining)\n      if (gameStarted && timeLeft > 0) {\n        playSound('shoot');\n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20\n        });\n      }\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted, timeLeft]); // Add timeLeft to dependencies\n\n  // Clear both name and rocket selection when component mounts\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  // Add rocket options\n  const rocketOptions = [{\n    id: 'rocket1.png',\n    name: 'Modern Rocket'\n  }, {\n    id: 'rocket2.png',\n    name: 'Power Rocket'\n  }, {\n    id: 'rocket3.png',\n    name: 'Stealth Rocket'\n  }, {\n    id: 'rocket4.png',\n    name: 'Classic Rocket'\n  }];\n\n  // Handle rocket selection\n  const handleRocketSelect = rocketId => {\n    setSelectedRocket(rocketId);\n    localStorage.setItem('selectedRocket', rocketId);\n\n    // Update the rocket image immediately\n    rocketImage.current.src = `icons/${rocketId}`;\n    setShowRocketModal(false);\n    // Start the game after rocket selection\n    setGameStarted(true);\n  };\n\n  // Add state for cheerleader messages\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  // Add cheerleader messages for different situations\n  const cheerleaderMessages = {\n    goodShot: [\"Great shot! You're an AWS Pro! 🌟\", \"Amazing cloud skills! Keep it up! 🎯\", \"You're on fire in the cloud! 🔥\", \"That's how AWS experts do it! 👏\"],\n    combo: [\"Cloud combo! 🎮\", \"You're scaling infinitely! ⚡\", \"What an AWS streak! 🌈\"],\n    timeWarning: [\"30 seconds left - you're highly available! ⏰\", \"Time for the final deployment! 💪\", \"Make every compute unit count! ⭐\"],\n    encouragement: [\"You've got this, cloud warrior! 🚀\", \"Keep going! You're AWS certified material! 🌟\", \"I believe in your cloud powers! 💫\", \"Show them your AWS expertise! 💪\"],\n    highScore: [\"New high score! You're going serverless! 🏆\", \"You're breaking cloud records! 🎖️\", \"Legendary AWS performance! 👑\"]\n  };\n\n  // Function to show a random message from a category\n  const showCheerleaderMessage = category => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n\n    // Hide message after 3 seconds\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  // Add periodic encouragement\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  // Add time warning messages\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  // Add this function near other handlers (around line 440)\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowNameModal(false);\n  };\n  const moveToNextInstruction = () => {\n    // Clear existing icons and bullets\n    iconsRef.current = [];\n    bulletsRef.current = [];\n\n    // Get current category before update\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    // Find next index that has a different category\n    let nextIndex = (currentInstructionIndex + 1) % instructions.length;\n    while (instructions[nextIndex].category === currentCategory && nextIndex !== currentInstructionIndex) {\n      nextIndex = (nextIndex + 1) % instructions.length;\n    }\n    setCurrentInstructionIndex(nextIndex);\n\n    // Load new icons after state update\n    setTimeout(() => loadIcons(), 0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameCanvas-game-title\",\n      children: \"AWS Cloud Shooter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 774,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-canvas-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"gameCanvas-game-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-instruction-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-player-name\",\n            children: [\"Player: \", playerName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 781,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-score-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"alien\",\n              children: \"\\uD83D\\uDC7E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 15\n            }, this), ' ', \"Score: \", score, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"joystick\",\n              children: \"\\uD83D\\uDD79\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 15\n            }, this), soundsLoaded && Object.values(sounds.current).some(sound => sound) && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gameCanvas-sound-toggle\",\n              onClick: toggleMute,\n              \"aria-label\": \"Toggle sound\",\n              children: isMuted ? '🔇' : '🔊'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 784,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 780,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-timer-display\",\n          children: [\"Time: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-score-explanation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"How to Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Hit correct icon: +5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Height bonus: up to +20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 809,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Wrong hit: -5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 810,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Tip: Shoot icons as high as possible!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-high-scores\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"High Scores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 816,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: highScores.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gameCanvas-high-score-name\",\n                children: [entry.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 820,\n                columnNumber: 17\n              }, this), \" \", entry.score]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 819,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 817,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 815,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-mission-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"gameCanvas-mission-title\",\n            children: \"Current Mission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-mission-text\",\n            children: instructions[currentInstructionIndex].text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 826,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 775,\n      columnNumber: 7\n    }, this), showRocketModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-rocket-selection-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Choose Your Rocket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 841,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-rocket-grid\",\n          children: rocketOptions.map(rocket => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `gameCanvas-rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`,\n            onClick: () => handleRocketSelect(rocket.id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `icons/${rocket.id}`,\n              alt: rocket.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: rocket.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 853,\n              columnNumber: 19\n            }, this)]\n          }, rocket.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 844,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 842,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 840,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 864,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 9\n    }, this), showCheerMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-cheerleader-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheerleader-character\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/cheerleader.png\",\n          alt: \"Cheerleader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 873,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheer-message\",\n        children: cheerMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 875,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 871,\n      columnNumber: 9\n    }, this), showNameModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to AWS Cloud Shooter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 884,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your name to start the game:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 885,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempPlayerName,\n            onChange: e => {\n              setTempPlayerName(e.target.value);\n              setNameError('');\n            },\n            placeholder: \"Your name\",\n            className: \"gameCanvas-name-input\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 887,\n            columnNumber: 15\n          }, this), nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-name-error\",\n            children: nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 898,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"gameCanvas-start-button\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 886,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 883,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 882,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 773,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"K98ivsmnlJvsjQRIny/XQQo/X9s=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","AWS_ICON_CATEGORIES","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","S3_BUCKET_URL","ICONS_BASE_PATH","GameCanvas","_s","timeLeft","setTimeLeft","score","setScore","currentInstructionIndex","setCurrentInstructionIndex","selectedRocket","setSelectedRocket","savedRocket","localStorage","getItem","showNameModal","setShowNameModal","tempPlayerName","setTempPlayerName","nameError","setNameError","playerName","setPlayerName","savedName","rocketPosition","setRocketPosition","x","y","showRocketModal","setShowRocketModal","instructions","getRandomCategories","categories","Object","keys","shuffled","sort","Math","random","slice","map","category","text","split","word","charAt","toUpperCase","toLowerCase","join","iconTypes","reduce","acc","instruction","categoryServices","entries","filter","_","path","includes","name","canvasRef","iconsRef","bulletsRef","feedbacksRef","rocketImage","Image","current","src","fireballImage","gunRef","width","height","getRandomX","canvas","floor","loadIcons","positions","currentCategory","console","log","getServiceCategory","categoryEntry","find","categoryPath","pathPattern","RegExp","test","categoryIcons","serviceCategory","isMatch","isTargetCategory","otherCategoryIcons","icon","selectedCategoryIcons","numRequired","length","shuffledOtherIcons","selectedOtherIcons","forEach","iconInfo","some","pos","abs","push","iconImage","type","image","hit","targetIcons","otherIcons","shuffleAndSlice","array","n","min","showFeedback","isCorrect","points","iconName","time","Date","now","checkCollisions","bullets","icons","iconIndex","bullet","heightPercentage","heightBonus","prev","max","highScores","s","showCheerleaderMessage","playSound","createExplosion","splice","moveToNextInstruction","gameLoop","ctx","getContext","clearRect","gunX","gunY","drawImage","save","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","b","feedback","elapsed","shadowColor","shadowBlur","fillStyle","font","pointsText","fillText","particlesRef","particle","lifetime","size","update","draw","requestAnimationFrame","sounds","soundsLoaded","setSoundsLoaded","soundFiles","shoot","correct","incorrect","levelup","createSafeAudio","audio","Audio","Promise","resolve","addEventListener","warn","setTimeout","loadSounds","loadedSounds","key","values","sound","pause","soundName","isMuted","currentTime","volume","play","catch","err","setIsMuted","toggleMute","muted","setHighScores","saved","JSON","parse","gameOver","setGameOver","gameOverHandled","setGameOverHandled","gameStarted","setGameStarted","Particle","constructor","color","speedX","speedY","initialSize","globalAlpha","arc","PI","fill","i","timer","setInterval","clearInterval","handleGameOver","newScore","newHighScores","a","setItem","stringify","imageSmoothingEnabled","ROCKET_WIDTH","FIXED_ROCKET_Y","handleMouseMove","e","rect","getBoundingClientRect","newX","clientX","left","handleCanvasClick","removeEventListener","removeItem","rocketOptions","id","handleRocketSelect","rocketId","cheerMessage","setCheerMessage","showCheerMessage","setShowCheerMessage","cheerleaderMessages","goodShot","combo","timeWarning","encouragement","highScore","messages","randomMessage","encouragementInterval","handleNameSubmit","preventDefault","trim","nextIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","role","onClick","entry","index","rocket","alt","window","location","reload","onSubmit","value","onChange","target","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game copy 20- copy 2/src/components/GameCanvas.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AWS_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Add these constants from IconResolver.js\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\n\nconst GameCanvas = () => {\n  // First, declare all state\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const savedRocket = localStorage.getItem('selectedRocket');\n    return savedRocket || 'rocket1.png';\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({ x: 375, y: 550 });\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  // Get random categories for instructions only once at game start\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AWS_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 2);\n    };\n\n    return getRandomCategories().map(category => ({\n      text: `Shoot the ${category.split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ')} icons!`,\n      category: AWS_ICON_CATEGORIES[category]\n    }));\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS)\n        .filter(([_, path]) => path.includes(instruction.category))\n        .map(([name, path]) => ({\n          path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n          name: name\n        }));\n\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs and other setup code\n  const canvasRef = useRef(null);\n\n  // We'll keep arrays for icons, bullets, and feedback in refs to avoid\n  // re-rendering the whole component every time they update.\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n\n  // Images for the gun and bullets\n  const rocketImage = useRef(new Image());\n  \n  // Initialize rocket image\n  useEffect(() => {\n    rocketImage.current.src = `icons/${selectedRocket}`;\n  }, [selectedRocket]); // Update when selectedRocket changes\n\n  const fireballImage = new Image();\n  fireballImage.src = 'icons/fireball.png';\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25, // center of an 800px width minus half the gun width\n    y: 800 - 100, // Adjust this value to move the rocket closer to the bottom\n    width: 120,\n    height: 120,\n  });\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    return Math.floor(Math.random() * (canvas.width - 50));\n  };\n\n  // Load icons for the current instruction\n  const loadIcons = () => {\n    iconsRef.current = [];\n    const positions = [];\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    console.log('Current Mission Category:', currentCategory); // Debug log\n\n    // Helper function to get the exact category for a service\n    const getServiceCategory = (path) => {\n      // Find the exact category by matching the full path pattern\n      const categoryEntry = Object.entries(AWS_ICON_CATEGORIES).find(([_, categoryPath]) => {\n        const pathPattern = new RegExp(`${categoryPath}/\\\\d+/`);\n        return pathPattern.test(path);\n      });\n      return categoryEntry ? categoryEntry[1] : null;\n    };\n\n    // Get all icons for current category - ensure exact category matching\n    const categoryIcons = Object.entries(SERVICE_MAPPINGS)\n      .filter(([_, path]) => {\n        const serviceCategory = getServiceCategory(path);\n        const isMatch = serviceCategory === currentCategory;\n        console.log(`Service Path: ${path}, Found Category: ${serviceCategory}, Current Category: ${currentCategory}, IsMatch: ${isMatch}`); // Debug log\n        return isMatch;\n      })\n      .map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name,\n        category: currentCategory,\n        isTargetCategory: true\n      }));\n\n    // Get all icons from other categories - ensure strict category exclusion\n    const otherCategoryIcons = Object.entries(SERVICE_MAPPINGS)\n      .filter(([_, path]) => {\n        const serviceCategory = getServiceCategory(path);\n        return serviceCategory !== null && serviceCategory !== currentCategory;\n      })\n      .map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name,\n        category: getServiceCategory(path),\n        isTargetCategory: false\n      }));\n\n    console.log('Found Category Icons:', categoryIcons.map(icon => icon.name)); // Debug log\n    console.log('Found Other Icons:', otherCategoryIcons.map(icon => icon.name)); // Debug log\n\n    // Clear any existing icons\n    iconsRef.current = [];\n\n    // For current category, get 4 unique icons (with possible repetition if less than 4 available)\n    let selectedCategoryIcons = [];\n    const numRequired = 4;\n    \n    if (categoryIcons.length <= numRequired) {\n      // If we have fewer icons than needed, repeat them until we have exactly 4\n      while (selectedCategoryIcons.length < numRequired) {\n        selectedCategoryIcons = [\n          ...selectedCategoryIcons,\n          ...categoryIcons\n        ].slice(0, numRequired);\n      }\n    } else {\n      // If we have enough icons, randomly select 4 unique ones\n      const shuffled = [...categoryIcons].sort(() => 0.5 - Math.random());\n      selectedCategoryIcons = shuffled.slice(0, numRequired);\n    }\n\n    // Randomly select 6 icons from other categories\n    const shuffledOtherIcons = [...otherCategoryIcons].sort(() => 0.5 - Math.random());\n    const selectedOtherIcons = shuffledOtherIcons.slice(0, 6);\n\n    // Add current category icons\n    selectedCategoryIcons.forEach((iconInfo) => {\n      let x = getRandomX();\n      while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: currentCategory,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false,\n        isTargetCategory: true\n      });\n    });\n\n    // Add other category icons\n    selectedOtherIcons.forEach((iconInfo) => {\n      let x = getRandomX();\n      while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: iconInfo.category,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false,\n        isTargetCategory: false\n      });\n    });\n\n    console.log('Final Icon Set:', {\n      currentCategory,\n      targetIcons: iconsRef.current.filter(icon => icon.isTargetCategory).map(icon => icon.name),\n      otherIcons: iconsRef.current.filter(icon => !icon.isTargetCategory).map(icon => icon.name)\n    });\n  };\n\n  // Helper function to shuffle array and get n unique items\n  const shuffleAndSlice = (array, n) => {\n    const shuffled = [...array].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, Math.min(n, shuffled.length));\n  };\n\n  // Show feedback (checkmark or X) and points after a shot\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now(),\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter((bullet) => {\n        if (\n          bullet.x > icon.x &&\n          bullet.x < icon.x + 50 &&\n          bullet.y > icon.y &&\n          bullet.y < icon.y + 50\n        ) {\n          icon.hit = true;\n\n          if (icon.isTargetCategory) {\n            const heightPercentage = 1 - (icon.y / canvas.height);\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            \n            setScore((prev) => {\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore((prev) => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n\n    if (iconsRef.current.length === 0 && timeLeft > 0) {\n      playSound('levelup');\n      moveToNextInstruction();\n    }\n  };\n\n  // The main game loop, which draws everything on the canvas\n  const gameLoop = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw the rocket (gun)\n    const { x: gunX, y: gunY, width, height } = gunRef.current;\n    ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n\n    // Draw icons\n    iconsRef.current.forEach((icon) => {\n      if (!icon.hit) {\n        // Save the current context state\n        ctx.save();\n        \n        // Create a rounded rectangle path\n        const radius = 10; // Adjust this value to control the roundness\n        const x = icon.x;\n        const y = icon.y;\n        const width = 50;\n        const height = 50;\n        \n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        \n        // Clip to the rounded rectangle\n        ctx.clip();\n        \n        // Draw the icon\n        ctx.drawImage(icon.image, x, y, width, height);\n        \n        // Restore the context state\n        ctx.restore();\n        \n        icon.y += 0.3; // Keep consistent speed\n      }\n    });\n\n    // Remove icons that are off screen and check if we need new ones\n    iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n    if (iconsRef.current.length === 0 && timeLeft > 0) {\n      playSound('levelup');\n      moveToNextInstruction();\n    }\n\n    // Draw bullets\n    bulletsRef.current.forEach((bullet) => {\n      ctx.drawImage(fireballImage, bullet.x, bullet.y, 20, 20);\n      bullet.y -= 5;\n    });\n\n    // Remove bullets that are off-screen\n    bulletsRef.current = bulletsRef.current.filter((b) => b.y > 0);\n\n    // Draw feedback with consistent styling for both positive and negative points\n    const now = Date.now();\n    feedbacksRef.current = feedbacksRef.current.filter((feedback) => {\n      const elapsed = now - feedback.time;\n      if (elapsed < 3000) {\n        // Draw points with consistent styling\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n        ctx.shadowBlur = 4;\n        ctx.fillStyle = feedback.isCorrect ? '#4CAF50' : '#F44336';\n        ctx.font = 'bold 28px Arial';\n        \n        // Show points with + or - sign\n        const pointsText = feedback.points > 0 ? `+${feedback.points}` : `${feedback.points}`;\n        ctx.fillText(\n          pointsText,\n          feedback.x + 10,\n          feedback.y - 20\n        );\n\n        // Draw icon name\n        ctx.font = '16px Arial';\n        ctx.fillText(\n          feedback.name,\n          feedback.x + 60,\n          feedback.y + 25\n        );\n        \n        // Draw feedback symbol\n        ctx.font = 'bold 55px Arial';\n        ctx.fillText(\n          feedback.isCorrect ? '✔' : '✘',\n          feedback.x + 10,\n          feedback.y + 30\n        );\n        \n        ctx.shadowBlur = 0;\n        return true;\n      }\n      return false;\n    });\n\n    checkCollisions();\n\n    // Update and draw particles\n    particlesRef.current = particlesRef.current.filter(particle => {\n      if (particle.lifetime > 0 && particle.size > 0) {\n        particle.update();\n        particle.draw(ctx);\n        return true;\n      }\n      return false;\n    });\n\n    requestAnimationFrame(gameLoop);\n  };\n\n  // Add sound references with error handling\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Initialize sounds with error handling\n  useEffect(() => {\n    const soundFiles = {\n      shoot: '/sounds/pistol_sound.mp3',\n      correct: '/sounds/correct_sound.mp3',\n      incorrect: '/sounds/incorrect_sound.mp3',\n      levelup: '/sounds/levelup.mp3'\n    };\n\n    // Create a safe audio player that won't break if files are missing\n    const createSafeAudio = (path) => {\n      const audio = new Audio();\n      \n      return new Promise((resolve) => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n\n        // Set timeout in case the file takes too long to load\n        setTimeout(() => resolve(null), 2000);\n\n        audio.src = path;\n      });\n    };\n\n    // Load all sound files with error handling\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      \n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n\n    loadSounds();\n\n    // Set initial volume\n    return () => {\n      // Cleanup sounds on unmount\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  // Safe play function\n  const playSound = (soundName) => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Add a mute toggle button to the UI\n  const [isMuted, setIsMuted] = useState(false);\n\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !isMuted;\n      }\n    });\n  };\n\n  // Add new state and refs for particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n\n  // Add state to track if we've already handled game over\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  // Add state to track if game should start\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Particle class\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size; // Store initial size\n    }\n\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      // Calculate size based on lifetime instead of continuous subtraction\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n\n    draw(ctx) {\n      if (this.size <= 0) return; // Don't draw if size is 0 or negative\n      \n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Function to create explosion effect\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled, gameStarted]);\n\n  // Handle game over\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    \n    setGameOver(true);\n    setGameOverHandled(true);\n    \n    const newScore = { name: playerName, score };\n    const newHighScores = [...highScores, newScore]\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 5);\n    \n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  // First effect for canvas setup\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      canvas.width = 1200;\n      canvas.height = 800;\n      \n      const ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n\n      // Only load icons if game has started and rocket is selected\n      if (selectedRocket && gameStarted) {\n        loadIcons();\n      }\n      requestAnimationFrame(gameLoop);\n    }\n  }, [selectedRocket, gameStarted]); // Change dependencies to use gameStarted instead\n\n  // Second effect for event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    \n    const ROCKET_WIDTH = 50;\n    const FIXED_ROCKET_Y = 550;\n\n    const handleMouseMove = (e) => {\n      // Only allow movement if game is not over\n      if (timeLeft > 0) {\n        const rect = canvas.getBoundingClientRect();\n        \n        // Calculate new X position\n        let newX = e.clientX - rect.left - (gunRef.current.width / 2);\n        \n        // Add boundary checks\n        newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n        \n        // Update gun position\n        gunRef.current.x = newX;\n      }\n    };\n\n    const handleCanvasClick = () => {\n      // Only allow shooting if game is active (started and time remaining)\n      if (gameStarted && timeLeft > 0) {\n        playSound('shoot');\n        \n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20,\n        });\n      }\n    };\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted, timeLeft]); // Add timeLeft to dependencies\n\n  // Clear both name and rocket selection when component mounts\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  // Add rocket options\n  const rocketOptions = [\n    { id: 'rocket1.png', name: 'Modern Rocket' },\n    { id: 'rocket2.png', name: 'Power Rocket' },\n    { id: 'rocket3.png', name: 'Stealth Rocket' },\n    { id: 'rocket4.png', name: 'Classic Rocket' },\n  ];\n\n  // Handle rocket selection\n  const handleRocketSelect = (rocketId) => {\n    setSelectedRocket(rocketId);\n    localStorage.setItem('selectedRocket', rocketId);\n    \n    // Update the rocket image immediately\n    rocketImage.current.src = `icons/${rocketId}`;\n    \n    setShowRocketModal(false);\n    // Start the game after rocket selection\n    setGameStarted(true);\n  };\n\n  // Add state for cheerleader messages\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  // Add cheerleader messages for different situations\n  const cheerleaderMessages = {\n    goodShot: [\n      \"Great shot! You're an AWS Pro! 🌟\",\n      \"Amazing cloud skills! Keep it up! 🎯\",\n      \"You're on fire in the cloud! 🔥\",\n      \"That's how AWS experts do it! 👏\",\n    ],\n    combo: [\n      \"Cloud combo! 🎮\",\n      \"You're scaling infinitely! ⚡\",\n      \"What an AWS streak! 🌈\",\n    ],\n    timeWarning: [\n      \"30 seconds left - you're highly available! ⏰\",\n      \"Time for the final deployment! 💪\",\n      \"Make every compute unit count! ⭐\",\n    ],\n    encouragement: [\n      \"You've got this, cloud warrior! 🚀\",\n      \"Keep going! You're AWS certified material! 🌟\",\n      \"I believe in your cloud powers! 💫\",\n      \"Show them your AWS expertise! 💪\",\n    ],\n    highScore: [\n      \"New high score! You're going serverless! 🏆\",\n      \"You're breaking cloud records! 🎖️\",\n      \"Legendary AWS performance! 👑\",\n    ]\n  };\n\n  // Function to show a random message from a category\n  const showCheerleaderMessage = (category) => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n    \n    // Hide message after 3 seconds\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  // Add periodic encouragement\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  // Add time warning messages\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  // Add this function near other handlers (around line 440)\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowNameModal(false);\n  };\n\n  const moveToNextInstruction = () => {\n    // Clear existing icons and bullets\n    iconsRef.current = [];\n    bulletsRef.current = [];\n    \n    // Get current category before update\n    const currentCategory = instructions[currentInstructionIndex].category;\n    \n    // Find next index that has a different category\n    let nextIndex = (currentInstructionIndex + 1) % instructions.length;\n    while (instructions[nextIndex].category === currentCategory && nextIndex !== currentInstructionIndex) {\n      nextIndex = (nextIndex + 1) % instructions.length;\n    }\n    \n    setCurrentInstructionIndex(nextIndex);\n    \n    // Load new icons after state update\n    setTimeout(() => loadIcons(), 0);\n  };\n\n  return (\n    <div className=\"gameCanvas-container\">\n      <h1 className=\"gameCanvas-game-title\">AWS Cloud Shooter</h1>\n      <div className=\"gameCanvas-game-content\">\n        <div className=\"gameCanvas-canvas-wrapper\">\n          <canvas ref={canvasRef} className=\"gameCanvas-game-canvas\" />\n        </div>\n        <div className=\"gameCanvas-instruction-panel\">\n          <div className=\"gameCanvas-player-info\">\n            <div className=\"gameCanvas-player-name\">\n              Player: {playerName}\n            </div>\n            <div className=\"gameCanvas-score-display\">\n              <span role=\"img\" aria-label=\"alien\">👾</span>{' '}\n              Score: {score}{' '}\n              <span role=\"img\" aria-label=\"joystick\">🕹️</span>\n              \n              {soundsLoaded && Object.values(sounds.current).some(sound => sound) && (\n                <button \n                  className=\"gameCanvas-sound-toggle\"\n                  onClick={toggleMute}\n                  aria-label=\"Toggle sound\"\n                >\n                  {isMuted ? '🔇' : '🔊'}\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"gameCanvas-timer-display\">\n            Time: {timeLeft}s\n          </div>\n\n          <div className=\"gameCanvas-score-explanation\">\n            <h4>How to Score:</h4>\n            <ul>\n            <li>• Hit correct icon: +5 points</li>\n            <li>• Height bonus: up to +20</li>\n            <li>• Wrong hit: -5 points</li>\n            <li>• Tip: Shoot icons as high as possible!</li>\n            </ul>\n          </div>\n\n          <div className=\"gameCanvas-high-scores\">\n          <h4>High Scores</h4>\n          <ul>\n            {highScores.map((entry, index) => (\n              <li key={index}>\n                <span className=\"gameCanvas-high-score-name\">{entry.name}:</span> {entry.score}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n          <div className=\"gameCanvas-mission-container\">\n            <h3 className=\"gameCanvas-mission-title\">\n              Current Mission\n            </h3>\n            \n            <div className=\"gameCanvas-mission-text\">\n              {instructions[currentInstructionIndex].text}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showRocketModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-rocket-selection-modal\">\n            <h2>Choose Your Rocket</h2>\n            <div className=\"gameCanvas-rocket-grid\">\n              {rocketOptions.map((rocket) => (\n                <div \n                  key={rocket.id} \n                  className={`gameCanvas-rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`}\n                  onClick={() => handleRocketSelect(rocket.id)}\n                >\n                  <img \n                    src={`icons/${rocket.id}`} \n                    alt={rocket.name}\n                  />\n                  <p>{rocket.name}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {gameOver && (\n        <div className=\"gameCanvas-game-over\">\n          <h3>Game Over!</h3>\n          <button onClick={() => window.location.reload()}>\n            Play Again\n          </button>\n        </div>\n      )}\n\n      {showCheerMessage && (\n        <div className=\"gameCanvas-cheerleader-container\">\n          <div className=\"gameCanvas-cheerleader-character\">\n            <img src=\"icons/cheerleader.png\" alt=\"Cheerleader\" />\n          </div>\n          <div className=\"gameCanvas-cheer-message\">\n            {cheerMessage}\n          </div>\n        </div>\n      )}\n\n      {showNameModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-modal\">\n            <h2>Welcome to AWS Cloud Shooter!</h2>\n            <p>Enter your name to start the game:</p>\n            <form onSubmit={handleNameSubmit}>\n              <input\n                type=\"text\"\n                value={tempPlayerName}\n                onChange={(e) => {\n                  setTempPlayerName(e.target.value);\n                  setNameError('');\n                }}\n                placeholder=\"Your name\"\n                className=\"gameCanvas-name-input\"\n                autoFocus\n              />\n              {nameError && <div className=\"gameCanvas-name-error\">{nameError}</div>}\n              <button type=\"submit\" className=\"gameCanvas-start-button\">\n                Start Game\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GameCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}