{"ast":null,"code":"const PROGRESSION_RULES = {\n  BEGINNER: {\n    minScore: 0,\n    maxScore: 500,\n    nextLevel: 'INTERMEDIATE',\n    requiredCorrectAnswers: 5\n  },\n  INTERMEDIATE: {\n    minScore: 501,\n    maxScore: 1500,\n    nextLevel: 'ADVANCED',\n    requiredCorrectAnswers: 10\n  },\n  ADVANCED: {\n    minScore: 1501,\n    maxScore: Infinity,\n    requiredCorrectAnswers: 15\n  }\n};\nclass DifficultySystem {\n  constructor() {\n    this.currentDifficulty = 'BEGINNER';\n    this.correctAnswers = 0;\n    this.totalAnswers = 0;\n  }\n  updateProgress(correct) {\n    this.totalAnswers++;\n    if (correct) this.correctAnswers++;\n    const currentRule = PROGRESSION_RULES[this.currentDifficulty];\n    if (this.correctAnswers >= currentRule.requiredCorrectAnswers) {\n      this.tryLevelUp();\n    }\n  }\n  tryLevelUp() {\n    const currentRule = PROGRESSION_RULES[this.currentDifficulty];\n    if (currentRule.nextLevel) {\n      this.currentDifficulty = currentRule.nextLevel;\n      this.correctAnswers = 0;\n      return true;\n    }\n    return false;\n  }\n  getCurrentDifficulty() {\n    return this.currentDifficulty;\n  }\n  getProgress() {\n    const currentRule = PROGRESSION_RULES[this.currentDifficulty];\n    return {\n      difficulty: this.currentDifficulty,\n      progress: this.correctAnswers / currentRule.requiredCorrectAnswers * 100,\n      nextLevel: currentRule.nextLevel\n    };\n  }\n}\nexport const difficultySystem = new DifficultySystem();","map":{"version":3,"names":["PROGRESSION_RULES","BEGINNER","minScore","maxScore","nextLevel","requiredCorrectAnswers","INTERMEDIATE","ADVANCED","Infinity","DifficultySystem","constructor","currentDifficulty","correctAnswers","totalAnswers","updateProgress","correct","currentRule","tryLevelUp","getCurrentDifficulty","getProgress","difficulty","progress","difficultySystem"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/services/DifficultySystem.js"],"sourcesContent":["const PROGRESSION_RULES = {\n  BEGINNER: {\n    minScore: 0,\n    maxScore: 500,\n    nextLevel: 'INTERMEDIATE',\n    requiredCorrectAnswers: 5\n  },\n  INTERMEDIATE: {\n    minScore: 501,\n    maxScore: 1500,\n    nextLevel: 'ADVANCED',\n    requiredCorrectAnswers: 10\n  },\n  ADVANCED: {\n    minScore: 1501,\n    maxScore: Infinity,\n    requiredCorrectAnswers: 15\n  }\n};\n\nclass DifficultySystem {\n  constructor() {\n    this.currentDifficulty = 'BEGINNER';\n    this.correctAnswers = 0;\n    this.totalAnswers = 0;\n  }\n\n  updateProgress(correct) {\n    this.totalAnswers++;\n    if (correct) this.correctAnswers++;\n    \n    const currentRule = PROGRESSION_RULES[this.currentDifficulty];\n    if (this.correctAnswers >= currentRule.requiredCorrectAnswers) {\n      this.tryLevelUp();\n    }\n  }\n\n  tryLevelUp() {\n    const currentRule = PROGRESSION_RULES[this.currentDifficulty];\n    if (currentRule.nextLevel) {\n      this.currentDifficulty = currentRule.nextLevel;\n      this.correctAnswers = 0;\n      return true;\n    }\n    return false;\n  }\n\n  getCurrentDifficulty() {\n    return this.currentDifficulty;\n  }\n\n  getProgress() {\n    const currentRule = PROGRESSION_RULES[this.currentDifficulty];\n    return {\n      difficulty: this.currentDifficulty,\n      progress: (this.correctAnswers / currentRule.requiredCorrectAnswers) * 100,\n      nextLevel: currentRule.nextLevel\n    };\n  }\n}\n\nexport const difficultySystem = new DifficultySystem(); "],"mappings":"AAAA,MAAMA,iBAAiB,GAAG;EACxBC,QAAQ,EAAE;IACRC,QAAQ,EAAE,CAAC;IACXC,QAAQ,EAAE,GAAG;IACbC,SAAS,EAAE,cAAc;IACzBC,sBAAsB,EAAE;EAC1B,CAAC;EACDC,YAAY,EAAE;IACZJ,QAAQ,EAAE,GAAG;IACbC,QAAQ,EAAE,IAAI;IACdC,SAAS,EAAE,UAAU;IACrBC,sBAAsB,EAAE;EAC1B,CAAC;EACDE,QAAQ,EAAE;IACRL,QAAQ,EAAE,IAAI;IACdC,QAAQ,EAAEK,QAAQ;IAClBH,sBAAsB,EAAE;EAC1B;AACF,CAAC;AAED,MAAMI,gBAAgB,CAAC;EACrBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,iBAAiB,GAAG,UAAU;IACnC,IAAI,CAACC,cAAc,GAAG,CAAC;IACvB,IAAI,CAACC,YAAY,GAAG,CAAC;EACvB;EAEAC,cAAcA,CAACC,OAAO,EAAE;IACtB,IAAI,CAACF,YAAY,EAAE;IACnB,IAAIE,OAAO,EAAE,IAAI,CAACH,cAAc,EAAE;IAElC,MAAMI,WAAW,GAAGhB,iBAAiB,CAAC,IAAI,CAACW,iBAAiB,CAAC;IAC7D,IAAI,IAAI,CAACC,cAAc,IAAII,WAAW,CAACX,sBAAsB,EAAE;MAC7D,IAAI,CAACY,UAAU,CAAC,CAAC;IACnB;EACF;EAEAA,UAAUA,CAAA,EAAG;IACX,MAAMD,WAAW,GAAGhB,iBAAiB,CAAC,IAAI,CAACW,iBAAiB,CAAC;IAC7D,IAAIK,WAAW,CAACZ,SAAS,EAAE;MACzB,IAAI,CAACO,iBAAiB,GAAGK,WAAW,CAACZ,SAAS;MAC9C,IAAI,CAACQ,cAAc,GAAG,CAAC;MACvB,OAAO,IAAI;IACb;IACA,OAAO,KAAK;EACd;EAEAM,oBAAoBA,CAAA,EAAG;IACrB,OAAO,IAAI,CAACP,iBAAiB;EAC/B;EAEAQ,WAAWA,CAAA,EAAG;IACZ,MAAMH,WAAW,GAAGhB,iBAAiB,CAAC,IAAI,CAACW,iBAAiB,CAAC;IAC7D,OAAO;MACLS,UAAU,EAAE,IAAI,CAACT,iBAAiB;MAClCU,QAAQ,EAAG,IAAI,CAACT,cAAc,GAAGI,WAAW,CAACX,sBAAsB,GAAI,GAAG;MAC1ED,SAAS,EAAEY,WAAW,CAACZ;IACzB,CAAC;EACH;AACF;AAEA,OAAO,MAAMkB,gBAAgB,GAAG,IAAIb,gBAAgB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}