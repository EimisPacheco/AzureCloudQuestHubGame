{"ast":null,"code":"\"use strict\";\n\nvar _objectSpread = require(\"/Users/eimis/test-server/react_projects/legendary-lines-game/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ChatCompletionRunner = void 0;\nconst AbstractChatCompletionRunner_1 = require(\"./AbstractChatCompletionRunner.js\");\nconst chatCompletionUtils_1 = require(\"./chatCompletionUtils.js\");\nclass ChatCompletionRunner extends AbstractChatCompletionRunner_1.AbstractChatCompletionRunner {\n  /** @deprecated - please use `runTools` instead. */\n  static runFunctions(client, params, options) {\n    const runner = new ChatCompletionRunner();\n    const opts = _objectSpread(_objectSpread({}, options), {}, {\n      headers: _objectSpread(_objectSpread({}, options === null || options === void 0 ? void 0 : options.headers), {}, {\n        'X-Stainless-Helper-Method': 'runFunctions'\n      })\n    });\n    runner._run(() => runner._runFunctions(client, params, opts));\n    return runner;\n  }\n  static runTools(client, params, options) {\n    const runner = new ChatCompletionRunner();\n    const opts = _objectSpread(_objectSpread({}, options), {}, {\n      headers: _objectSpread(_objectSpread({}, options === null || options === void 0 ? void 0 : options.headers), {}, {\n        'X-Stainless-Helper-Method': 'runTools'\n      })\n    });\n    runner._run(() => runner._runTools(client, params, opts));\n    return runner;\n  }\n  _addMessage(message) {\n    let emit = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    super._addMessage(message, emit);\n    if ((0, chatCompletionUtils_1.isAssistantMessage)(message) && message.content) {\n      this._emit('content', message.content);\n    }\n  }\n}\nexports.ChatCompletionRunner = ChatCompletionRunner;","map":{"version":3,"names":["AbstractChatCompletionRunner_1","require","chatCompletionUtils_1","ChatCompletionRunner","AbstractChatCompletionRunner","runFunctions","client","params","options","runner","opts","_objectSpread","headers","_run","_runFunctions","runTools","_runTools","_addMessage","message","emit","arguments","length","undefined","isAssistantMessage","content","_emit","exports"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/node_modules/openai/src/lib/ChatCompletionRunner.ts"],"sourcesContent":["import {\n  type ChatCompletionMessageParam,\n  type ChatCompletionCreateParamsNonStreaming,\n} from '../resources/chat/completions';\nimport { type RunnableFunctions, type BaseFunctionsArgs, RunnableTools } from './RunnableFunction';\nimport {\n  AbstractChatCompletionRunner,\n  AbstractChatCompletionRunnerEvents,\n  RunnerOptions,\n} from './AbstractChatCompletionRunner';\nimport { isAssistantMessage } from './chatCompletionUtils';\nimport OpenAI from '../index';\nimport { AutoParseableTool } from '../lib/parser';\n\nexport interface ChatCompletionRunnerEvents extends AbstractChatCompletionRunnerEvents {\n  content: (content: string) => void;\n}\n\nexport type ChatCompletionFunctionRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsNonStreaming,\n  'functions'\n> & {\n  functions: RunnableFunctions<FunctionsArgs>;\n};\n\nexport type ChatCompletionToolRunnerParams<FunctionsArgs extends BaseFunctionsArgs> = Omit<\n  ChatCompletionCreateParamsNonStreaming,\n  'tools'\n> & {\n  tools: RunnableTools<FunctionsArgs> | AutoParseableTool<any, true>[];\n};\n\nexport class ChatCompletionRunner<ParsedT = null> extends AbstractChatCompletionRunner<\n  ChatCompletionRunnerEvents,\n  ParsedT\n> {\n  /** @deprecated - please use `runTools` instead. */\n  static runFunctions(\n    client: OpenAI,\n    params: ChatCompletionFunctionRunnerParams<any[]>,\n    options?: RunnerOptions,\n  ): ChatCompletionRunner<null> {\n    const runner = new ChatCompletionRunner();\n    const opts = {\n      ...options,\n      headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n    };\n    runner._run(() => runner._runFunctions(client, params, opts));\n    return runner;\n  }\n\n  static runTools<ParsedT>(\n    client: OpenAI,\n    params: ChatCompletionToolRunnerParams<any[]>,\n    options?: RunnerOptions,\n  ): ChatCompletionRunner<ParsedT> {\n    const runner = new ChatCompletionRunner<ParsedT>();\n    const opts = {\n      ...options,\n      headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n    };\n    runner._run(() => runner._runTools(client, params, opts));\n    return runner;\n  }\n\n  override _addMessage(\n    this: ChatCompletionRunner<ParsedT>,\n    message: ChatCompletionMessageParam,\n    emit: boolean = true,\n  ) {\n    super._addMessage(message, emit);\n    if (isAssistantMessage(message) && message.content) {\n      this._emit('content', message.content as string);\n    }\n  }\n}\n"],"mappings":";;;;;;;AAKA,MAAAA,8BAAA,GAAAC,OAAA;AAKA,MAAAC,qBAAA,GAAAD,OAAA;AAsBA,MAAaE,oBAAqC,SAAQH,8BAAA,CAAAI,4BAGzD;EACC;EACA,OAAOC,YAAYA,CACjBC,MAAc,EACdC,MAAiD,EACjDC,OAAuB;IAEvB,MAAMC,MAAM,GAAG,IAAIN,oBAAoB,EAAE;IACzC,MAAMO,IAAI,GAAAC,aAAA,CAAAA,aAAA,KACLH,OAAO;MACVI,OAAO,EAAAD,aAAA,CAAAA,aAAA,KAAOH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,OAAO;QAAE,2BAA2B,EAAE;MAAc;IAAE,EAC9E;IACDH,MAAM,CAACI,IAAI,CAAC,MAAMJ,MAAM,CAACK,aAAa,CAACR,MAAM,EAAEC,MAAM,EAAEG,IAAI,CAAC,CAAC;IAC7D,OAAOD,MAAM;EACf;EAEA,OAAOM,QAAQA,CACbT,MAAc,EACdC,MAA6C,EAC7CC,OAAuB;IAEvB,MAAMC,MAAM,GAAG,IAAIN,oBAAoB,EAAW;IAClD,MAAMO,IAAI,GAAAC,aAAA,CAAAA,aAAA,KACLH,OAAO;MACVI,OAAO,EAAAD,aAAA,CAAAA,aAAA,KAAOH,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,OAAO;QAAE,2BAA2B,EAAE;MAAU;IAAE,EAC1E;IACDH,MAAM,CAACI,IAAI,CAAC,MAAMJ,MAAM,CAACO,SAAS,CAACV,MAAM,EAAEC,MAAM,EAAEG,IAAI,CAAC,CAAC;IACzD,OAAOD,MAAM;EACf;EAESQ,WAAWA,CAElBC,OAAmC,EACf;IAAA,IAApBC,IAAA,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAgB,IAAI;IAEpB,KAAK,CAACH,WAAW,CAACC,OAAO,EAAEC,IAAI,CAAC;IAChC,IAAI,IAAAjB,qBAAA,CAAAqB,kBAAkB,EAACL,OAAO,CAAC,IAAIA,OAAO,CAACM,OAAO,EAAE;MAClD,IAAI,CAACC,KAAK,CAAC,SAAS,EAAEP,OAAO,CAACM,OAAiB,CAAC;;EAEpD;;AA1CFE,OAAA,CAAAvB,oBAAA,GAAAA,oBAAA","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}