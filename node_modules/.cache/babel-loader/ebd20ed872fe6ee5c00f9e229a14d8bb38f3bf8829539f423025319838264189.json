{"ast":null,"code":"/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n/** Known values of {@link ApiVersion75} that the service accepts. */\nexport var KnownApiVersion75;\n(function (KnownApiVersion75) {\n  /** Api Version '7.5' */\n  KnownApiVersion75[\"Seven5\"] = \"7.5\";\n})(KnownApiVersion75 || (KnownApiVersion75 = {}));\n/** Known values of {@link JsonWebKeyType} that the service accepts. */\nexport var KnownJsonWebKeyType;\n(function (KnownJsonWebKeyType) {\n  /** Elliptic Curve. */\n  KnownJsonWebKeyType[\"EC\"] = \"EC\";\n  /** Elliptic Curve with a private key which is stored in the HSM. */\n  KnownJsonWebKeyType[\"ECHSM\"] = \"EC-HSM\";\n  /** RSA (https://tools.ietf.org/html/rfc3447) */\n  KnownJsonWebKeyType[\"RSA\"] = \"RSA\";\n  /** RSA with a private key which is stored in the HSM. */\n  KnownJsonWebKeyType[\"RSAHSM\"] = \"RSA-HSM\";\n  /** Octet sequence (used to represent symmetric keys) */\n  KnownJsonWebKeyType[\"Oct\"] = \"oct\";\n  /** Octet sequence (used to represent symmetric keys) which is stored the HSM. */\n  KnownJsonWebKeyType[\"OctHSM\"] = \"oct-HSM\";\n})(KnownJsonWebKeyType || (KnownJsonWebKeyType = {}));\n/** Known values of {@link JsonWebKeyOperation} that the service accepts. */\nexport var KnownJsonWebKeyOperation;\n(function (KnownJsonWebKeyOperation) {\n  KnownJsonWebKeyOperation[\"Encrypt\"] = \"encrypt\";\n  KnownJsonWebKeyOperation[\"Decrypt\"] = \"decrypt\";\n  KnownJsonWebKeyOperation[\"Sign\"] = \"sign\";\n  KnownJsonWebKeyOperation[\"Verify\"] = \"verify\";\n  KnownJsonWebKeyOperation[\"WrapKey\"] = \"wrapKey\";\n  KnownJsonWebKeyOperation[\"UnwrapKey\"] = \"unwrapKey\";\n  KnownJsonWebKeyOperation[\"Import\"] = \"import\";\n  KnownJsonWebKeyOperation[\"Export\"] = \"export\";\n})(KnownJsonWebKeyOperation || (KnownJsonWebKeyOperation = {}));\n/** Known values of {@link DeletionRecoveryLevel} that the service accepts. */\nexport var KnownDeletionRecoveryLevel;\n(function (KnownDeletionRecoveryLevel) {\n  /** Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.) */\n  KnownDeletionRecoveryLevel[\"Purgeable\"] = \"Purgeable\";\n  /** Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered */\n  KnownDeletionRecoveryLevel[\"RecoverablePurgeable\"] = \"Recoverable+Purgeable\";\n  /** Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered */\n  KnownDeletionRecoveryLevel[\"Recoverable\"] = \"Recoverable\";\n  /** Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered */\n  KnownDeletionRecoveryLevel[\"RecoverableProtectedSubscription\"] = \"Recoverable+ProtectedSubscription\";\n  /** Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled. */\n  KnownDeletionRecoveryLevel[\"CustomizedRecoverablePurgeable\"] = \"CustomizedRecoverable+Purgeable\";\n  /** Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available. */\n  KnownDeletionRecoveryLevel[\"CustomizedRecoverable\"] = \"CustomizedRecoverable\";\n  /** Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled. */\n  KnownDeletionRecoveryLevel[\"CustomizedRecoverableProtectedSubscription\"] = \"CustomizedRecoverable+ProtectedSubscription\";\n})(KnownDeletionRecoveryLevel || (KnownDeletionRecoveryLevel = {}));\n/** Known values of {@link JsonWebKeyCurveName} that the service accepts. */\nexport var KnownJsonWebKeyCurveName;\n(function (KnownJsonWebKeyCurveName) {\n  /** The NIST P-256 elliptic curve, AKA SECG curve SECP256R1. */\n  KnownJsonWebKeyCurveName[\"P256\"] = \"P-256\";\n  /** The NIST P-384 elliptic curve, AKA SECG curve SECP384R1. */\n  KnownJsonWebKeyCurveName[\"P384\"] = \"P-384\";\n  /** The NIST P-521 elliptic curve, AKA SECG curve SECP521R1. */\n  KnownJsonWebKeyCurveName[\"P521\"] = \"P-521\";\n  /** The SECG SECP256K1 elliptic curve. */\n  KnownJsonWebKeyCurveName[\"P256K\"] = \"P-256K\";\n})(KnownJsonWebKeyCurveName || (KnownJsonWebKeyCurveName = {}));\n/** Known values of {@link JsonWebKeyEncryptionAlgorithm} that the service accepts. */\nexport var KnownJsonWebKeyEncryptionAlgorithm;\n(function (KnownJsonWebKeyEncryptionAlgorithm) {\n  KnownJsonWebKeyEncryptionAlgorithm[\"RSAOaep\"] = \"RSA-OAEP\";\n  KnownJsonWebKeyEncryptionAlgorithm[\"RSAOaep256\"] = \"RSA-OAEP-256\";\n  KnownJsonWebKeyEncryptionAlgorithm[\"RSA15\"] = \"RSA1_5\";\n  KnownJsonWebKeyEncryptionAlgorithm[\"A128GCM\"] = \"A128GCM\";\n  KnownJsonWebKeyEncryptionAlgorithm[\"A192GCM\"] = \"A192GCM\";\n  KnownJsonWebKeyEncryptionAlgorithm[\"A256GCM\"] = \"A256GCM\";\n  KnownJsonWebKeyEncryptionAlgorithm[\"A128KW\"] = \"A128KW\";\n  KnownJsonWebKeyEncryptionAlgorithm[\"A192KW\"] = \"A192KW\";\n  KnownJsonWebKeyEncryptionAlgorithm[\"A256KW\"] = \"A256KW\";\n  KnownJsonWebKeyEncryptionAlgorithm[\"A128CBC\"] = \"A128CBC\";\n  KnownJsonWebKeyEncryptionAlgorithm[\"A192CBC\"] = \"A192CBC\";\n  KnownJsonWebKeyEncryptionAlgorithm[\"A256CBC\"] = \"A256CBC\";\n  KnownJsonWebKeyEncryptionAlgorithm[\"A128Cbcpad\"] = \"A128CBCPAD\";\n  KnownJsonWebKeyEncryptionAlgorithm[\"A192Cbcpad\"] = \"A192CBCPAD\";\n  KnownJsonWebKeyEncryptionAlgorithm[\"A256Cbcpad\"] = \"A256CBCPAD\";\n})(KnownJsonWebKeyEncryptionAlgorithm || (KnownJsonWebKeyEncryptionAlgorithm = {}));\n/** Known values of {@link JsonWebKeySignatureAlgorithm} that the service accepts. */\nexport var KnownJsonWebKeySignatureAlgorithm;\n(function (KnownJsonWebKeySignatureAlgorithm) {\n  /** RSASSA-PSS using SHA-256 and MGF1 with SHA-256, as described in https://tools.ietf.org/html/rfc7518 */\n  KnownJsonWebKeySignatureAlgorithm[\"PS256\"] = \"PS256\";\n  /** RSASSA-PSS using SHA-384 and MGF1 with SHA-384, as described in https://tools.ietf.org/html/rfc7518 */\n  KnownJsonWebKeySignatureAlgorithm[\"PS384\"] = \"PS384\";\n  /** RSASSA-PSS using SHA-512 and MGF1 with SHA-512, as described in https://tools.ietf.org/html/rfc7518 */\n  KnownJsonWebKeySignatureAlgorithm[\"PS512\"] = \"PS512\";\n  /** RSASSA-PKCS1-v1_5 using SHA-256, as described in https://tools.ietf.org/html/rfc7518 */\n  KnownJsonWebKeySignatureAlgorithm[\"RS256\"] = \"RS256\";\n  /** RSASSA-PKCS1-v1_5 using SHA-384, as described in https://tools.ietf.org/html/rfc7518 */\n  KnownJsonWebKeySignatureAlgorithm[\"RS384\"] = \"RS384\";\n  /** RSASSA-PKCS1-v1_5 using SHA-512, as described in https://tools.ietf.org/html/rfc7518 */\n  KnownJsonWebKeySignatureAlgorithm[\"RS512\"] = \"RS512\";\n  /** Reserved */\n  KnownJsonWebKeySignatureAlgorithm[\"Rsnull\"] = \"RSNULL\";\n  /** ECDSA using P-256 and SHA-256, as described in https://tools.ietf.org/html/rfc7518. */\n  KnownJsonWebKeySignatureAlgorithm[\"ES256\"] = \"ES256\";\n  /** ECDSA using P-384 and SHA-384, as described in https://tools.ietf.org/html/rfc7518 */\n  KnownJsonWebKeySignatureAlgorithm[\"ES384\"] = \"ES384\";\n  /** ECDSA using P-521 and SHA-512, as described in https://tools.ietf.org/html/rfc7518 */\n  KnownJsonWebKeySignatureAlgorithm[\"ES512\"] = \"ES512\";\n  /** ECDSA using P-256K and SHA-256, as described in https://tools.ietf.org/html/rfc7518 */\n  KnownJsonWebKeySignatureAlgorithm[\"ES256K\"] = \"ES256K\";\n})(KnownJsonWebKeySignatureAlgorithm || (KnownJsonWebKeySignatureAlgorithm = {}));\n/** Known values of {@link KeyEncryptionAlgorithm} that the service accepts. */\nexport var KnownKeyEncryptionAlgorithm;\n(function (KnownKeyEncryptionAlgorithm) {\n  KnownKeyEncryptionAlgorithm[\"CKMRSAAESKEYWrap\"] = \"CKM_RSA_AES_KEY_WRAP\";\n  KnownKeyEncryptionAlgorithm[\"RSAAESKEYWrap256\"] = \"RSA_AES_KEY_WRAP_256\";\n  KnownKeyEncryptionAlgorithm[\"RSAAESKEYWrap384\"] = \"RSA_AES_KEY_WRAP_384\";\n})(KnownKeyEncryptionAlgorithm || (KnownKeyEncryptionAlgorithm = {}));","map":{"version":3,"names":["KnownApiVersion75","KnownJsonWebKeyType","KnownJsonWebKeyOperation","KnownDeletionRecoveryLevel","KnownJsonWebKeyCurveName","KnownJsonWebKeyEncryptionAlgorithm","KnownJsonWebKeySignatureAlgorithm","KnownKeyEncryptionAlgorithm"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /node_modules/@azure/keyvault-keys/src/generated/models/index.ts"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation.\n * Licensed under the MIT License.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as coreClient from \"@azure/core-client\";\nimport * as coreHttpCompat from \"@azure/core-http-compat\";\n\n/** The key create parameters. */\nexport interface KeyCreateParameters {\n  /** The type of key to create. For valid values, see JsonWebKeyType. */\n  kty: JsonWebKeyType;\n  /** The key size in bits. For example: 2048, 3072, or 4096 for RSA. */\n  keySize?: number;\n  /** The public exponent for a RSA key. */\n  publicExponent?: number;\n  keyOps?: JsonWebKeyOperation[];\n  /** The attributes of a key managed by the key vault service. */\n  keyAttributes?: KeyAttributes;\n  /** Application specific metadata in the form of key-value pairs. */\n  tags?: { [propertyName: string]: string };\n  /** Elliptic curve name. For valid values, see JsonWebKeyCurveName. */\n  curve?: JsonWebKeyCurveName;\n  /** The policy rules under which the key can be exported. */\n  releasePolicy?: KeyReleasePolicy;\n}\n\n/** The object attributes managed by the KeyVault service. */\nexport interface Attributes {\n  /** Determines whether the object is enabled. */\n  enabled?: boolean;\n  /** Not before date in UTC. */\n  notBefore?: Date;\n  /** Expiry date in UTC. */\n  expires?: Date;\n  /**\n   * Creation time in UTC.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly created?: Date;\n  /**\n   * Last updated time in UTC.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updated?: Date;\n}\n\n/** The policy rules under which the key can be exported. */\nexport interface KeyReleasePolicy {\n  /** Content type and version of key release policy */\n  contentType?: string;\n  /** Defines the mutability state of the policy. Once marked immutable, this flag cannot be reset and the policy cannot be changed under any circumstances. */\n  immutable?: boolean;\n  /** Blob encoding the policy rules under which the key can be released. Blob must be base64 URL encoded. */\n  encodedPolicy?: Uint8Array;\n}\n\n/** A KeyBundle consisting of a WebKey plus its attributes. */\nexport interface KeyBundle {\n  /** The Json web key. */\n  key?: JsonWebKey;\n  /** The key management attributes. */\n  attributes?: KeyAttributes;\n  /** Application specific metadata in the form of key-value pairs. */\n  tags?: { [propertyName: string]: string };\n  /**\n   * True if the key's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly managed?: boolean;\n  /** The policy rules under which the key can be exported. */\n  releasePolicy?: KeyReleasePolicy;\n}\n\n/** As of http://tools.ietf.org/html/draft-ietf-jose-json-web-key-18 */\nexport interface JsonWebKey {\n  /** Key identifier. */\n  kid?: string;\n  /** JsonWebKey Key Type (kty), as defined in https://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-40. */\n  kty?: JsonWebKeyType;\n  keyOps?: string[];\n  /** RSA modulus. */\n  n?: Uint8Array;\n  /** RSA public exponent. */\n  e?: Uint8Array;\n  /** RSA private exponent, or the D component of an EC private key. */\n  d?: Uint8Array;\n  /** RSA private key parameter. */\n  dp?: Uint8Array;\n  /** RSA private key parameter. */\n  dq?: Uint8Array;\n  /** RSA private key parameter. */\n  qi?: Uint8Array;\n  /** RSA secret prime. */\n  p?: Uint8Array;\n  /** RSA secret prime, with p < q. */\n  q?: Uint8Array;\n  /** Symmetric key. */\n  k?: Uint8Array;\n  /** Protected Key, used with 'Bring Your Own Key'. */\n  t?: Uint8Array;\n  /** Elliptic curve name. For valid values, see JsonWebKeyCurveName. */\n  crv?: JsonWebKeyCurveName;\n  /** X component of an EC public key. */\n  x?: Uint8Array;\n  /** Y component of an EC public key. */\n  y?: Uint8Array;\n}\n\n/** The key vault error exception. */\nexport interface KeyVaultError {\n  /**\n   * The key vault server error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly error?: ErrorModel;\n}\n\n/** The key vault server error. */\nexport interface ErrorModel {\n  /**\n   * The error code.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly code?: string;\n  /**\n   * The error message.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly message?: string;\n  /**\n   * The key vault server error.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly innerError?: ErrorModel;\n}\n\n/** The key import parameters. */\nexport interface KeyImportParameters {\n  /** Whether to import as a hardware key (HSM) or software key. */\n  hsm?: boolean;\n  /** The Json web key */\n  key: JsonWebKey;\n  /** The key management attributes. */\n  keyAttributes?: KeyAttributes;\n  /** Application specific metadata in the form of key-value pairs. */\n  tags?: { [propertyName: string]: string };\n  /** The policy rules under which the key can be exported. */\n  releasePolicy?: KeyReleasePolicy;\n}\n\n/** The key update parameters. */\nexport interface KeyUpdateParameters {\n  /** Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. */\n  keyOps?: JsonWebKeyOperation[];\n  /** The attributes of a key managed by the key vault service. */\n  keyAttributes?: KeyAttributes;\n  /** Application specific metadata in the form of key-value pairs. */\n  tags?: { [propertyName: string]: string };\n  /** The policy rules under which the key can be exported. */\n  releasePolicy?: KeyReleasePolicy;\n}\n\n/** The key list result. */\nexport interface KeyListResult {\n  /**\n   * A response message containing a list of keys in the key vault along with a link to the next page of keys.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: KeyItem[];\n  /**\n   * The URL to get the next set of keys.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** The key item containing key metadata. */\nexport interface KeyItem {\n  /** Key identifier. */\n  kid?: string;\n  /** The key management attributes. */\n  attributes?: KeyAttributes;\n  /** Application specific metadata in the form of key-value pairs. */\n  tags?: { [propertyName: string]: string };\n  /**\n   * True if the key's lifetime is managed by key vault. If this is a key backing a certificate, then managed will be true.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly managed?: boolean;\n}\n\n/** The backup key result, containing the backup blob. */\nexport interface BackupKeyResult {\n  /**\n   * The backup blob containing the backed up key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: Uint8Array;\n}\n\n/** The key restore parameters. */\nexport interface KeyRestoreParameters {\n  /** The backup blob associated with a key bundle. */\n  keyBundleBackup: Uint8Array;\n}\n\n/** The key operations parameters. */\nexport interface KeyOperationsParameters {\n  /** algorithm identifier */\n  algorithm: JsonWebKeyEncryptionAlgorithm;\n  value: Uint8Array;\n  /** Cryptographically random, non-repeating initialization vector for symmetric algorithms. */\n  iv?: Uint8Array;\n  /** Additional data to authenticate but not encrypt/decrypt when using authenticated crypto algorithms. */\n  additionalAuthenticatedData?: Uint8Array;\n  /** The tag to authenticate when performing decryption with an authenticated algorithm. */\n  authenticationTag?: Uint8Array;\n}\n\n/** The key operation result. */\nexport interface KeyOperationResult {\n  /**\n   * Key identifier\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly kid?: string;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly result?: Uint8Array;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly iv?: Uint8Array;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly authenticationTag?: Uint8Array;\n  /** NOTE: This property will not be serialized. It can only be populated by the server. */\n  readonly additionalAuthenticatedData?: Uint8Array;\n}\n\n/** The key operations parameters. */\nexport interface KeySignParameters {\n  /** The signing/verification algorithm identifier. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. */\n  algorithm: JsonWebKeySignatureAlgorithm;\n  value: Uint8Array;\n}\n\n/** The key verify parameters. */\nexport interface KeyVerifyParameters {\n  /** The signing/verification algorithm. For more information on possible algorithm types, see JsonWebKeySignatureAlgorithm. */\n  algorithm: JsonWebKeySignatureAlgorithm;\n  /** The digest used for signing. */\n  digest: Uint8Array;\n  /** The signature to be verified. */\n  signature: Uint8Array;\n}\n\n/** The key verify result. */\nexport interface KeyVerifyResult {\n  /**\n   * True if the signature is verified, otherwise false.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: boolean;\n}\n\n/** The release key parameters. */\nexport interface KeyReleaseParameters {\n  /** The attestation assertion for the target of the key release. */\n  targetAttestationToken: string;\n  /** A client provided nonce for freshness. */\n  nonce?: string;\n  /** The encryption algorithm to use to protected the exported key material */\n  enc?: KeyEncryptionAlgorithm;\n}\n\n/** The release result, containing the released key. */\nexport interface KeyReleaseResult {\n  /**\n   * A signed object containing the released key.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: string;\n}\n\n/** A list of keys that have been deleted in this vault. */\nexport interface DeletedKeyListResult {\n  /**\n   * A response message containing a list of deleted keys in the vault along with a link to the next page of deleted keys\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly value?: DeletedKeyItem[];\n  /**\n   * The URL to get the next set of deleted keys.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly nextLink?: string;\n}\n\n/** Management policy for a key. */\nexport interface KeyRotationPolicy {\n  /**\n   * The key policy id.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly id?: string;\n  /** Actions that will be performed by Key Vault over the lifetime of a key. For preview, lifetimeActions can only have two items at maximum: one for rotate, one for notify. Notification time would be default to 30 days before expiry and it is not configurable. */\n  lifetimeActions?: LifetimeActions[];\n  /** The key rotation policy attributes. */\n  attributes?: KeyRotationPolicyAttributes;\n}\n\n/** Action and its trigger that will be performed by Key Vault over the lifetime of a key. */\nexport interface LifetimeActions {\n  /** The condition that will execute the action. */\n  trigger?: LifetimeActionsTrigger;\n  /** The action that will be executed. */\n  action?: LifetimeActionsType;\n}\n\n/** A condition to be satisfied for an action to be executed. */\nexport interface LifetimeActionsTrigger {\n  /** Time after creation to attempt to rotate. It only applies to rotate. It will be in ISO 8601 duration format. Example: 90 days : \"P90D\"  */\n  timeAfterCreate?: string;\n  /** Time before expiry to attempt to rotate or notify. It will be in ISO 8601 duration format. Example: 90 days : \"P90D\" */\n  timeBeforeExpiry?: string;\n}\n\n/** The action that will be executed. */\nexport interface LifetimeActionsType {\n  /** The type of the action. The value should be compared case-insensitively. */\n  type?: ActionType;\n}\n\n/** The key rotation policy attributes. */\nexport interface KeyRotationPolicyAttributes {\n  /** The expiryTime will be applied on the new key version. It should be at least 28 days. It will be in ISO 8601 Format. Examples: 90 days: P90D, 3 months: P3M, 48 hours: PT48H, 1 year and 10 days: P1Y10D */\n  expiryTime?: string;\n  /**\n   * The key rotation policy created time in UTC.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly created?: Date;\n  /**\n   * The key rotation policy's last updated time in UTC.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly updated?: Date;\n}\n\n/** The get random bytes request object. */\nexport interface GetRandomBytesRequest {\n  /** The requested number of random bytes. */\n  count: number;\n}\n\n/** The get random bytes response object containing the bytes. */\nexport interface RandomBytes {\n  /** The bytes encoded as a base64url string. */\n  value: Uint8Array;\n}\n\n/** Properties of the key pair backing a certificate. */\nexport interface KeyProperties {\n  /** Indicates if the private key can be exported. Release policy must be provided when creating the first version of an exportable key. */\n  exportable?: boolean;\n  /** The type of key pair to be used for the certificate. */\n  keyType?: JsonWebKeyType;\n  /** The key size in bits. For example: 2048, 3072, or 4096 for RSA. */\n  keySize?: number;\n  /** Indicates if the same key pair will be used on certificate renewal. */\n  reuseKey?: boolean;\n  /** Elliptic curve name. For valid values, see JsonWebKeyCurveName. */\n  curve?: JsonWebKeyCurveName;\n}\n\n/** The export key parameters. */\nexport interface KeyExportParameters {\n  /** The export key encryption Json web key. This key MUST be a RSA key that supports encryption. */\n  wrappingKey?: JsonWebKey;\n  /** The export key encryption key identifier. This key MUST be a RSA key that supports encryption. */\n  wrappingKid?: string;\n  /** The encryption algorithm to use to protected the exported key material */\n  enc?: KeyEncryptionAlgorithm;\n}\n\n/** The attributes of a key managed by the key vault service. */\nexport type KeyAttributes = Attributes & {\n  /**\n   * softDelete data retention days. Value should be >=7 and <=90 when softDelete enabled, otherwise 0.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recoverableDays?: number;\n  /**\n   * Reflects the deletion recovery level currently in effect for keys in the current vault. If it contains 'Purgeable' the key can be permanently deleted by a privileged user; otherwise, only the system can purge the key, at the end of the retention interval.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly recoveryLevel?: DeletionRecoveryLevel;\n  /** Indicates if the private key can be exported. Release policy must be provided when creating the first version of an exportable key. */\n  exportable?: boolean;\n  /**\n   * The underlying HSM Platform.\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly hsmPlatform?: string;\n};\n\n/** A DeletedKeyBundle consisting of a WebKey plus its Attributes and deletion info */\nexport type DeletedKeyBundle = KeyBundle & {\n  /** The url of the recovery object, used to identify and recover the deleted key. */\n  recoveryId?: string;\n  /**\n   * The time when the key is scheduled to be purged, in UTC\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scheduledPurgeDate?: Date;\n  /**\n   * The time when the key was deleted, in UTC\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletedDate?: Date;\n};\n\n/** The deleted key item containing the deleted key metadata and information about deletion. */\nexport type DeletedKeyItem = KeyItem & {\n  /** The url of the recovery object, used to identify and recover the deleted key. */\n  recoveryId?: string;\n  /**\n   * The time when the key is scheduled to be purged, in UTC\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly scheduledPurgeDate?: Date;\n  /**\n   * The time when the key was deleted, in UTC\n   * NOTE: This property will not be serialized. It can only be populated by the server.\n   */\n  readonly deletedDate?: Date;\n};\n\n/** Known values of {@link ApiVersion75} that the service accepts. */\nexport enum KnownApiVersion75 {\n  /** Api Version '7.5' */\n  Seven5 = \"7.5\"\n}\n\n/**\n * Defines values for ApiVersion75. \\\n * {@link KnownApiVersion75} can be used interchangeably with ApiVersion75,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **7.5**: Api Version '7.5'\n */\nexport type ApiVersion75 = string;\n\n/** Known values of {@link JsonWebKeyType} that the service accepts. */\nexport enum KnownJsonWebKeyType {\n  /** Elliptic Curve. */\n  EC = \"EC\",\n  /** Elliptic Curve with a private key which is stored in the HSM. */\n  ECHSM = \"EC-HSM\",\n  /** RSA (https://tools.ietf.org/html/rfc3447) */\n  RSA = \"RSA\",\n  /** RSA with a private key which is stored in the HSM. */\n  RSAHSM = \"RSA-HSM\",\n  /** Octet sequence (used to represent symmetric keys) */\n  Oct = \"oct\",\n  /** Octet sequence (used to represent symmetric keys) which is stored the HSM. */\n  OctHSM = \"oct-HSM\"\n}\n\n/**\n * Defines values for JsonWebKeyType. \\\n * {@link KnownJsonWebKeyType} can be used interchangeably with JsonWebKeyType,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **EC**: Elliptic Curve. \\\n * **EC-HSM**: Elliptic Curve with a private key which is stored in the HSM. \\\n * **RSA**: RSA (https:\\/\\/tools.ietf.org\\/html\\/rfc3447) \\\n * **RSA-HSM**: RSA with a private key which is stored in the HSM. \\\n * **oct**: Octet sequence (used to represent symmetric keys) \\\n * **oct-HSM**: Octet sequence (used to represent symmetric keys) which is stored the HSM.\n */\nexport type JsonWebKeyType = string;\n\n/** Known values of {@link JsonWebKeyOperation} that the service accepts. */\nexport enum KnownJsonWebKeyOperation {\n  Encrypt = \"encrypt\",\n  Decrypt = \"decrypt\",\n  Sign = \"sign\",\n  Verify = \"verify\",\n  WrapKey = \"wrapKey\",\n  UnwrapKey = \"unwrapKey\",\n  Import = \"import\",\n  Export = \"export\"\n}\n\n/**\n * Defines values for JsonWebKeyOperation. \\\n * {@link KnownJsonWebKeyOperation} can be used interchangeably with JsonWebKeyOperation,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **encrypt** \\\n * **decrypt** \\\n * **sign** \\\n * **verify** \\\n * **wrapKey** \\\n * **unwrapKey** \\\n * **import** \\\n * **export**\n */\nexport type JsonWebKeyOperation = string;\n\n/** Known values of {@link DeletionRecoveryLevel} that the service accepts. */\nexport enum KnownDeletionRecoveryLevel {\n  /** Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.) */\n  Purgeable = \"Purgeable\",\n  /** Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered */\n  RecoverablePurgeable = \"Recoverable+Purgeable\",\n  /** Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered */\n  Recoverable = \"Recoverable\",\n  /** Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered */\n  RecoverableProtectedSubscription = \"Recoverable+ProtectedSubscription\",\n  /** Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled. */\n  CustomizedRecoverablePurgeable = \"CustomizedRecoverable+Purgeable\",\n  /** Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available. */\n  CustomizedRecoverable = \"CustomizedRecoverable\",\n  /** Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled. */\n  CustomizedRecoverableProtectedSubscription = \"CustomizedRecoverable+ProtectedSubscription\"\n}\n\n/**\n * Defines values for DeletionRecoveryLevel. \\\n * {@link KnownDeletionRecoveryLevel} can be used interchangeably with DeletionRecoveryLevel,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **Purgeable**: Denotes a vault state in which deletion is an irreversible operation, without the possibility for recovery. This level corresponds to no protection being available against a Delete operation; the data is irretrievably lost upon accepting a Delete operation at the entity level or higher (vault, resource group, subscription etc.) \\\n * **Recoverable+Purgeable**: Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval (90 days), unless a Purge operation is requested, or the subscription is cancelled. System wil permanently delete it after 90 days, if not recovered \\\n * **Recoverable**: Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge). This level guarantees the recoverability of the deleted entity during the retention interval(90 days) and while the subscription is still available. System wil permanently delete it after 90 days, if not recovered \\\n * **Recoverable+ProtectedSubscription**: Denotes a vault and subscription state in which deletion is recoverable within retention interval (90 days), immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself  cannot be permanently canceled. System wil permanently delete it after 90 days, if not recovered \\\n * **CustomizedRecoverable+Purgeable**: Denotes a vault state in which deletion is recoverable, and which also permits immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90). This level guarantees the recoverability of the deleted entity during the retention interval, unless a Purge operation is requested, or the subscription is cancelled. \\\n * **CustomizedRecoverable**: Denotes a vault state in which deletion is recoverable without the possibility for immediate and permanent deletion (i.e. purge when 7<= SoftDeleteRetentionInDays < 90).This level guarantees the recoverability of the deleted entity during the retention interval and while the subscription is still available. \\\n * **CustomizedRecoverable+ProtectedSubscription**: Denotes a vault and subscription state in which deletion is recoverable, immediate and permanent deletion (i.e. purge) is not permitted, and in which the subscription itself cannot be permanently canceled when 7<= SoftDeleteRetentionInDays < 90. This level guarantees the recoverability of the deleted entity during the retention interval, and also reflects the fact that the subscription itself cannot be cancelled.\n */\nexport type DeletionRecoveryLevel = string;\n\n/** Known values of {@link JsonWebKeyCurveName} that the service accepts. */\nexport enum KnownJsonWebKeyCurveName {\n  /** The NIST P-256 elliptic curve, AKA SECG curve SECP256R1. */\n  P256 = \"P-256\",\n  /** The NIST P-384 elliptic curve, AKA SECG curve SECP384R1. */\n  P384 = \"P-384\",\n  /** The NIST P-521 elliptic curve, AKA SECG curve SECP521R1. */\n  P521 = \"P-521\",\n  /** The SECG SECP256K1 elliptic curve. */\n  P256K = \"P-256K\"\n}\n\n/**\n * Defines values for JsonWebKeyCurveName. \\\n * {@link KnownJsonWebKeyCurveName} can be used interchangeably with JsonWebKeyCurveName,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **P-256**: The NIST P-256 elliptic curve, AKA SECG curve SECP256R1. \\\n * **P-384**: The NIST P-384 elliptic curve, AKA SECG curve SECP384R1. \\\n * **P-521**: The NIST P-521 elliptic curve, AKA SECG curve SECP521R1. \\\n * **P-256K**: The SECG SECP256K1 elliptic curve.\n */\nexport type JsonWebKeyCurveName = string;\n\n/** Known values of {@link JsonWebKeyEncryptionAlgorithm} that the service accepts. */\nexport enum KnownJsonWebKeyEncryptionAlgorithm {\n  RSAOaep = \"RSA-OAEP\",\n  RSAOaep256 = \"RSA-OAEP-256\",\n  RSA15 = \"RSA1_5\",\n  A128GCM = \"A128GCM\",\n  A192GCM = \"A192GCM\",\n  A256GCM = \"A256GCM\",\n  A128KW = \"A128KW\",\n  A192KW = \"A192KW\",\n  A256KW = \"A256KW\",\n  A128CBC = \"A128CBC\",\n  A192CBC = \"A192CBC\",\n  A256CBC = \"A256CBC\",\n  A128Cbcpad = \"A128CBCPAD\",\n  A192Cbcpad = \"A192CBCPAD\",\n  A256Cbcpad = \"A256CBCPAD\"\n}\n\n/**\n * Defines values for JsonWebKeyEncryptionAlgorithm. \\\n * {@link KnownJsonWebKeyEncryptionAlgorithm} can be used interchangeably with JsonWebKeyEncryptionAlgorithm,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **RSA-OAEP** \\\n * **RSA-OAEP-256** \\\n * **RSA1_5** \\\n * **A128GCM** \\\n * **A192GCM** \\\n * **A256GCM** \\\n * **A128KW** \\\n * **A192KW** \\\n * **A256KW** \\\n * **A128CBC** \\\n * **A192CBC** \\\n * **A256CBC** \\\n * **A128CBCPAD** \\\n * **A192CBCPAD** \\\n * **A256CBCPAD**\n */\nexport type JsonWebKeyEncryptionAlgorithm = string;\n\n/** Known values of {@link JsonWebKeySignatureAlgorithm} that the service accepts. */\nexport enum KnownJsonWebKeySignatureAlgorithm {\n  /** RSASSA-PSS using SHA-256 and MGF1 with SHA-256, as described in https://tools.ietf.org/html/rfc7518 */\n  PS256 = \"PS256\",\n  /** RSASSA-PSS using SHA-384 and MGF1 with SHA-384, as described in https://tools.ietf.org/html/rfc7518 */\n  PS384 = \"PS384\",\n  /** RSASSA-PSS using SHA-512 and MGF1 with SHA-512, as described in https://tools.ietf.org/html/rfc7518 */\n  PS512 = \"PS512\",\n  /** RSASSA-PKCS1-v1_5 using SHA-256, as described in https://tools.ietf.org/html/rfc7518 */\n  RS256 = \"RS256\",\n  /** RSASSA-PKCS1-v1_5 using SHA-384, as described in https://tools.ietf.org/html/rfc7518 */\n  RS384 = \"RS384\",\n  /** RSASSA-PKCS1-v1_5 using SHA-512, as described in https://tools.ietf.org/html/rfc7518 */\n  RS512 = \"RS512\",\n  /** Reserved */\n  Rsnull = \"RSNULL\",\n  /** ECDSA using P-256 and SHA-256, as described in https://tools.ietf.org/html/rfc7518. */\n  ES256 = \"ES256\",\n  /** ECDSA using P-384 and SHA-384, as described in https://tools.ietf.org/html/rfc7518 */\n  ES384 = \"ES384\",\n  /** ECDSA using P-521 and SHA-512, as described in https://tools.ietf.org/html/rfc7518 */\n  ES512 = \"ES512\",\n  /** ECDSA using P-256K and SHA-256, as described in https://tools.ietf.org/html/rfc7518 */\n  ES256K = \"ES256K\"\n}\n\n/**\n * Defines values for JsonWebKeySignatureAlgorithm. \\\n * {@link KnownJsonWebKeySignatureAlgorithm} can be used interchangeably with JsonWebKeySignatureAlgorithm,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **PS256**: RSASSA-PSS using SHA-256 and MGF1 with SHA-256, as described in https:\\/\\/tools.ietf.org\\/html\\/rfc7518 \\\n * **PS384**: RSASSA-PSS using SHA-384 and MGF1 with SHA-384, as described in https:\\/\\/tools.ietf.org\\/html\\/rfc7518 \\\n * **PS512**: RSASSA-PSS using SHA-512 and MGF1 with SHA-512, as described in https:\\/\\/tools.ietf.org\\/html\\/rfc7518 \\\n * **RS256**: RSASSA-PKCS1-v1_5 using SHA-256, as described in https:\\/\\/tools.ietf.org\\/html\\/rfc7518 \\\n * **RS384**: RSASSA-PKCS1-v1_5 using SHA-384, as described in https:\\/\\/tools.ietf.org\\/html\\/rfc7518 \\\n * **RS512**: RSASSA-PKCS1-v1_5 using SHA-512, as described in https:\\/\\/tools.ietf.org\\/html\\/rfc7518 \\\n * **RSNULL**: Reserved \\\n * **ES256**: ECDSA using P-256 and SHA-256, as described in https:\\/\\/tools.ietf.org\\/html\\/rfc7518. \\\n * **ES384**: ECDSA using P-384 and SHA-384, as described in https:\\/\\/tools.ietf.org\\/html\\/rfc7518 \\\n * **ES512**: ECDSA using P-521 and SHA-512, as described in https:\\/\\/tools.ietf.org\\/html\\/rfc7518 \\\n * **ES256K**: ECDSA using P-256K and SHA-256, as described in https:\\/\\/tools.ietf.org\\/html\\/rfc7518\n */\nexport type JsonWebKeySignatureAlgorithm = string;\n\n/** Known values of {@link KeyEncryptionAlgorithm} that the service accepts. */\nexport enum KnownKeyEncryptionAlgorithm {\n  CKMRSAAESKEYWrap = \"CKM_RSA_AES_KEY_WRAP\",\n  RSAAESKEYWrap256 = \"RSA_AES_KEY_WRAP_256\",\n  RSAAESKEYWrap384 = \"RSA_AES_KEY_WRAP_384\"\n}\n\n/**\n * Defines values for KeyEncryptionAlgorithm. \\\n * {@link KnownKeyEncryptionAlgorithm} can be used interchangeably with KeyEncryptionAlgorithm,\n *  this enum contains the known values that the service supports.\n * ### Known values supported by the service\n * **CKM_RSA_AES_KEY_WRAP** \\\n * **RSA_AES_KEY_WRAP_256** \\\n * **RSA_AES_KEY_WRAP_384**\n */\nexport type KeyEncryptionAlgorithm = string;\n/** Defines values for ActionType. */\nexport type ActionType = \"Rotate\" | \"Notify\";\n\n/** Optional parameters. */\nexport interface CreateKeyOptionalParams extends coreClient.OperationOptions {\n  /** The key size in bits. For example: 2048, 3072, or 4096 for RSA. */\n  keySize?: number;\n  /** The public exponent for a RSA key. */\n  publicExponent?: number;\n  /** Array of JsonWebKeyOperation */\n  keyOps?: JsonWebKeyOperation[];\n  /** The attributes of a key managed by the key vault service. */\n  keyAttributes?: KeyAttributes;\n  /** Application specific metadata in the form of key-value pairs. */\n  tags?: { [propertyName: string]: string };\n  /** Elliptic curve name. For valid values, see JsonWebKeyCurveName. */\n  curve?: JsonWebKeyCurveName;\n  /** The policy rules under which the key can be exported. */\n  releasePolicy?: KeyReleasePolicy;\n}\n\n/** Contains response data for the createKey operation. */\nexport type CreateKeyResponse = KeyBundle;\n\n/** Optional parameters. */\nexport interface RotateKeyOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the rotateKey operation. */\nexport type RotateKeyResponse = KeyBundle;\n\n/** Optional parameters. */\nexport interface ImportKeyOptionalParams extends coreClient.OperationOptions {\n  /** Whether to import as a hardware key (HSM) or software key. */\n  hsm?: boolean;\n  /** The key management attributes. */\n  keyAttributes?: KeyAttributes;\n  /** Application specific metadata in the form of key-value pairs. */\n  tags?: { [propertyName: string]: string };\n  /** The policy rules under which the key can be exported. */\n  releasePolicy?: KeyReleasePolicy;\n}\n\n/** Contains response data for the importKey operation. */\nexport type ImportKeyResponse = KeyBundle;\n\n/** Optional parameters. */\nexport interface DeleteKeyOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the deleteKey operation. */\nexport type DeleteKeyResponse = DeletedKeyBundle;\n\n/** Optional parameters. */\nexport interface UpdateKeyOptionalParams extends coreClient.OperationOptions {\n  /** Json web key operations. For more information on possible key operations, see JsonWebKeyOperation. */\n  keyOps?: JsonWebKeyOperation[];\n  /** The attributes of a key managed by the key vault service. */\n  keyAttributes?: KeyAttributes;\n  /** Application specific metadata in the form of key-value pairs. */\n  tags?: { [propertyName: string]: string };\n  /** The policy rules under which the key can be exported. */\n  releasePolicy?: KeyReleasePolicy;\n}\n\n/** Contains response data for the updateKey operation. */\nexport type UpdateKeyResponse = KeyBundle;\n\n/** Optional parameters. */\nexport interface GetKeyOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the getKey operation. */\nexport type GetKeyResponse = KeyBundle;\n\n/** Optional parameters. */\nexport interface GetKeyVersionsOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum number of results to return in a page. If not specified the service will return up to 25 results. */\n  maxresults?: number;\n}\n\n/** Contains response data for the getKeyVersions operation. */\nexport type GetKeyVersionsResponse = KeyListResult;\n\n/** Optional parameters. */\nexport interface GetKeysOptionalParams extends coreClient.OperationOptions {\n  /** Maximum number of results to return in a page. If not specified the service will return up to 25 results. */\n  maxresults?: number;\n}\n\n/** Contains response data for the getKeys operation. */\nexport type GetKeysResponse = KeyListResult;\n\n/** Optional parameters. */\nexport interface BackupKeyOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the backupKey operation. */\nexport type BackupKeyResponse = BackupKeyResult;\n\n/** Optional parameters. */\nexport interface RestoreKeyOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the restoreKey operation. */\nexport type RestoreKeyResponse = KeyBundle;\n\n/** Optional parameters. */\nexport interface EncryptOptionalParams extends coreClient.OperationOptions {\n  /** Cryptographically random, non-repeating initialization vector for symmetric algorithms. */\n  iv?: Uint8Array;\n  /** Additional data to authenticate but not encrypt/decrypt when using authenticated crypto algorithms. */\n  additionalAuthenticatedData?: Uint8Array;\n  /** The tag to authenticate when performing decryption with an authenticated algorithm. */\n  authenticationTag?: Uint8Array;\n}\n\n/** Contains response data for the encrypt operation. */\nexport type EncryptResponse = KeyOperationResult;\n\n/** Optional parameters. */\nexport interface DecryptOptionalParams extends coreClient.OperationOptions {\n  /** Cryptographically random, non-repeating initialization vector for symmetric algorithms. */\n  iv?: Uint8Array;\n  /** Additional data to authenticate but not encrypt/decrypt when using authenticated crypto algorithms. */\n  additionalAuthenticatedData?: Uint8Array;\n  /** The tag to authenticate when performing decryption with an authenticated algorithm. */\n  authenticationTag?: Uint8Array;\n}\n\n/** Contains response data for the decrypt operation. */\nexport type DecryptResponse = KeyOperationResult;\n\n/** Optional parameters. */\nexport interface SignOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the sign operation. */\nexport type SignResponse = KeyOperationResult;\n\n/** Optional parameters. */\nexport interface VerifyOptionalParams extends coreClient.OperationOptions {}\n\n/** Contains response data for the verify operation. */\nexport type VerifyResponse = KeyVerifyResult;\n\n/** Optional parameters. */\nexport interface WrapKeyOptionalParams extends coreClient.OperationOptions {\n  /** Cryptographically random, non-repeating initialization vector for symmetric algorithms. */\n  iv?: Uint8Array;\n  /** Additional data to authenticate but not encrypt/decrypt when using authenticated crypto algorithms. */\n  additionalAuthenticatedData?: Uint8Array;\n  /** The tag to authenticate when performing decryption with an authenticated algorithm. */\n  authenticationTag?: Uint8Array;\n}\n\n/** Contains response data for the wrapKey operation. */\nexport type WrapKeyResponse = KeyOperationResult;\n\n/** Optional parameters. */\nexport interface UnwrapKeyOptionalParams extends coreClient.OperationOptions {\n  /** Cryptographically random, non-repeating initialization vector for symmetric algorithms. */\n  iv?: Uint8Array;\n  /** Additional data to authenticate but not encrypt/decrypt when using authenticated crypto algorithms. */\n  additionalAuthenticatedData?: Uint8Array;\n  /** The tag to authenticate when performing decryption with an authenticated algorithm. */\n  authenticationTag?: Uint8Array;\n}\n\n/** Contains response data for the unwrapKey operation. */\nexport type UnwrapKeyResponse = KeyOperationResult;\n\n/** Optional parameters. */\nexport interface ReleaseOptionalParams extends coreClient.OperationOptions {\n  /** A client provided nonce for freshness. */\n  nonce?: string;\n  /** The encryption algorithm to use to protected the exported key material */\n  enc?: KeyEncryptionAlgorithm;\n}\n\n/** Contains response data for the release operation. */\nexport type ReleaseResponse = KeyReleaseResult;\n\n/** Optional parameters. */\nexport interface GetDeletedKeysOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum number of results to return in a page. If not specified the service will return up to 25 results. */\n  maxresults?: number;\n}\n\n/** Contains response data for the getDeletedKeys operation. */\nexport type GetDeletedKeysResponse = DeletedKeyListResult;\n\n/** Optional parameters. */\nexport interface GetDeletedKeyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getDeletedKey operation. */\nexport type GetDeletedKeyResponse = DeletedKeyBundle;\n\n/** Optional parameters. */\nexport interface PurgeDeletedKeyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Optional parameters. */\nexport interface RecoverDeletedKeyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the recoverDeletedKey operation. */\nexport type RecoverDeletedKeyResponse = KeyBundle;\n\n/** Optional parameters. */\nexport interface GetKeyRotationPolicyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getKeyRotationPolicy operation. */\nexport type GetKeyRotationPolicyResponse = KeyRotationPolicy;\n\n/** Optional parameters. */\nexport interface UpdateKeyRotationPolicyOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the updateKeyRotationPolicy operation. */\nexport type UpdateKeyRotationPolicyResponse = KeyRotationPolicy;\n\n/** Optional parameters. */\nexport interface GetRandomBytesOptionalParams\n  extends coreClient.OperationOptions {}\n\n/** Contains response data for the getRandomBytes operation. */\nexport type GetRandomBytesResponse = RandomBytes;\n\n/** Optional parameters. */\nexport interface GetKeyVersionsNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum number of results to return in a page. If not specified the service will return up to 25 results. */\n  maxresults?: number;\n}\n\n/** Contains response data for the getKeyVersionsNext operation. */\nexport type GetKeyVersionsNextResponse = KeyListResult;\n\n/** Optional parameters. */\nexport interface GetKeysNextOptionalParams extends coreClient.OperationOptions {\n  /** Maximum number of results to return in a page. If not specified the service will return up to 25 results. */\n  maxresults?: number;\n}\n\n/** Contains response data for the getKeysNext operation. */\nexport type GetKeysNextResponse = KeyListResult;\n\n/** Optional parameters. */\nexport interface GetDeletedKeysNextOptionalParams\n  extends coreClient.OperationOptions {\n  /** Maximum number of results to return in a page. If not specified the service will return up to 25 results. */\n  maxresults?: number;\n}\n\n/** Contains response data for the getDeletedKeysNext operation. */\nexport type GetDeletedKeysNextResponse = DeletedKeyListResult;\n\n/** Optional parameters. */\nexport interface KeyVaultClientOptionalParams\n  extends coreHttpCompat.ExtendedServiceClientOptions {\n  /** Overrides client endpoint. */\n  endpoint?: string;\n}\n"],"mappings":"AAAA;;;;;;;AAubA;AACA,WAAYA,iBAGX;AAHD,WAAYA,iBAAiB;EAC3B;EACAA,iBAAA,kBAAc;AAChB,CAAC,EAHWA,iBAAiB,KAAjBA,iBAAiB;AAc7B;AACA,WAAYC,mBAaX;AAbD,WAAYA,mBAAmB;EAC7B;EACAA,mBAAA,aAAS;EACT;EACAA,mBAAA,oBAAgB;EAChB;EACAA,mBAAA,eAAW;EACX;EACAA,mBAAA,sBAAkB;EAClB;EACAA,mBAAA,eAAW;EACX;EACAA,mBAAA,sBAAkB;AACpB,CAAC,EAbWA,mBAAmB,KAAnBA,mBAAmB;AA6B/B;AACA,WAAYC,wBASX;AATD,WAAYA,wBAAwB;EAClCA,wBAAA,uBAAmB;EACnBA,wBAAA,uBAAmB;EACnBA,wBAAA,iBAAa;EACbA,wBAAA,qBAAiB;EACjBA,wBAAA,uBAAmB;EACnBA,wBAAA,2BAAuB;EACvBA,wBAAA,qBAAiB;EACjBA,wBAAA,qBAAiB;AACnB,CAAC,EATWA,wBAAwB,KAAxBA,wBAAwB;AA2BpC;AACA,WAAYC,0BAeX;AAfD,WAAYA,0BAA0B;EACpC;EACAA,0BAAA,2BAAuB;EACvB;EACAA,0BAAA,kDAA8C;EAC9C;EACAA,0BAAA,+BAA2B;EAC3B;EACAA,0BAAA,0EAAsE;EACtE;EACAA,0BAAA,sEAAkE;EAClE;EACAA,0BAAA,mDAA+C;EAC/C;EACAA,0BAAA,8FAA0F;AAC5F,CAAC,EAfWA,0BAA0B,KAA1BA,0BAA0B;AAgCtC;AACA,WAAYC,wBASX;AATD,WAAYA,wBAAwB;EAClC;EACAA,wBAAA,kBAAc;EACd;EACAA,wBAAA,kBAAc;EACd;EACAA,wBAAA,kBAAc;EACd;EACAA,wBAAA,oBAAgB;AAClB,CAAC,EATWA,wBAAwB,KAAxBA,wBAAwB;AAuBpC;AACA,WAAYC,kCAgBX;AAhBD,WAAYA,kCAAkC;EAC5CA,kCAAA,wBAAoB;EACpBA,kCAAA,+BAA2B;EAC3BA,kCAAA,oBAAgB;EAChBA,kCAAA,uBAAmB;EACnBA,kCAAA,uBAAmB;EACnBA,kCAAA,uBAAmB;EACnBA,kCAAA,qBAAiB;EACjBA,kCAAA,qBAAiB;EACjBA,kCAAA,qBAAiB;EACjBA,kCAAA,uBAAmB;EACnBA,kCAAA,uBAAmB;EACnBA,kCAAA,uBAAmB;EACnBA,kCAAA,6BAAyB;EACzBA,kCAAA,6BAAyB;EACzBA,kCAAA,6BAAyB;AAC3B,CAAC,EAhBWA,kCAAkC,KAAlCA,kCAAkC;AAyC9C;AACA,WAAYC,iCAuBX;AAvBD,WAAYA,iCAAiC;EAC3C;EACAA,iCAAA,mBAAe;EACf;EACAA,iCAAA,mBAAe;EACf;EACAA,iCAAA,mBAAe;EACf;EACAA,iCAAA,mBAAe;EACf;EACAA,iCAAA,mBAAe;EACf;EACAA,iCAAA,mBAAe;EACf;EACAA,iCAAA,qBAAiB;EACjB;EACAA,iCAAA,mBAAe;EACf;EACAA,iCAAA,mBAAe;EACf;EACAA,iCAAA,mBAAe;EACf;EACAA,iCAAA,qBAAiB;AACnB,CAAC,EAvBWA,iCAAiC,KAAjCA,iCAAiC;AA4C7C;AACA,WAAYC,2BAIX;AAJD,WAAYA,2BAA2B;EACrCA,2BAAA,6CAAyC;EACzCA,2BAAA,6CAAyC;EACzCA,2BAAA,6CAAyC;AAC3C,CAAC,EAJWA,2BAA2B,KAA3BA,2BAA2B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}