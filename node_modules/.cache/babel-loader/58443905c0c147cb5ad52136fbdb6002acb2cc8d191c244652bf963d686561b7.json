{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, useNodesState, useEdgesState, MarkerType } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSServiceNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(motion.div, {\n  className: `aws-service-node ${data.isMissing ? 'missing' : ''}`,\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  animate: {\n    scale: 1,\n    opacity: 1\n  },\n  exit: {\n    scale: 0,\n    opacity: 0\n  },\n  whileHover: {\n    scale: 1.1\n  },\n  transition: {\n    type: \"spring\",\n    stiffness: 300\n  },\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node-content\",\n    children: [data.isMissing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"missing-service-placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.icon,\n      alt: data.label,\n      className: \"service-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"service-label\",\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n_c = AWSServiceNode;\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\nconst AWSArchitectureDisplay = ({\n  architecture,\n  missingServices\n}) => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  React.useEffect(() => {\n    if (!(architecture !== null && architecture !== void 0 && architecture.services)) return;\n\n    // Create all nodes including missing services\n    const allServices = [...architecture.services];\n    const newNodes = [];\n    const newEdges = [];\n\n    // Process connections and insert missing services\n    architecture.connections.forEach(conn => {\n      const fromIndex = allServices.indexOf(conn.from);\n      const toIndex = allServices.indexOf(conn.to);\n\n      // Check if there's a missing service between these nodes\n      const missingService = missingServices === null || missingServices === void 0 ? void 0 : missingServices.find(ms => ms.position.includes(conn.from) && ms.position.includes(conn.to));\n      if (missingService) {\n        // Add placeholder node for missing service\n        const placeholderId = `missing-${conn.from}-${conn.to}`;\n        newNodes.push({\n          id: placeholderId,\n          type: 'awsService',\n          position: {\n            x: (fromIndex + toIndex) * 200 / 2,\n            y: 200\n          },\n          data: {\n            label: 'Missing Service',\n            isMissing: true\n          }\n        });\n\n        // Add edges to and from the placeholder\n        newEdges.push({\n          id: `${conn.from}-${placeholderId}`,\n          source: conn.from.toLowerCase(),\n          target: placeholderId,\n          type: 'smoothstep',\n          animated: true,\n          style: {\n            stroke: '#4FD1C5',\n            strokeWidth: 2\n          },\n          markerEnd: {\n            type: MarkerType.ArrowClosed\n          }\n        });\n        newEdges.push({\n          id: `${placeholderId}-${conn.to}`,\n          source: placeholderId,\n          target: conn.to.toLowerCase(),\n          type: 'smoothstep',\n          animated: true,\n          style: {\n            stroke: '#4FD1C5',\n            strokeWidth: 2\n          },\n          markerEnd: {\n            type: MarkerType.ArrowClosed\n          }\n        });\n      } else {\n        // Add direct edge\n        newEdges.push({\n          id: `${conn.from}-${conn.to}`,\n          source: conn.from.toLowerCase(),\n          target: conn.to.toLowerCase(),\n          type: 'smoothstep',\n          animated: true,\n          style: {\n            stroke: '#4FD1C5',\n            strokeWidth: 2\n          },\n          markerEnd: {\n            type: MarkerType.ArrowClosed\n          }\n        });\n      }\n    });\n\n    // Add regular service nodes\n    architecture.services.forEach((service, index) => {\n      newNodes.push({\n        id: service.toLowerCase(),\n        type: 'awsService',\n        position: {\n          x: index * 200,\n          y: 200\n        },\n        data: {\n          label: service,\n          icon: service.icon,\n          isMissing: false\n        }\n      });\n    });\n    setNodes(newNodes);\n    setEdges(newEdges);\n  }, [architecture, missingServices, setNodes, setEdges]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px'\n    },\n    className: \"architecture-visualizer\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      minZoom: 0.5,\n      maxZoom: 1.5,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#4FD1C5\",\n        gap: 16,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: node => node.data.isMissing ? '#FF5656' : '#4FD1C5',\n        maskColor: \"rgba(13, 25, 35, 0.7)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureDisplay, \"rzIEgmHf9ZP2zq7JmENY3vIBekY=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = AWSArchitectureDisplay;\nexport default AWSArchitectureDisplay;\nvar _c, _c2;\n$RefreshReg$(_c, \"AWSServiceNode\");\n$RefreshReg$(_c2, \"AWSArchitectureDisplay\");","map":{"version":3,"names":["React","ReactFlow","Background","Controls","MiniMap","useNodesState","useEdgesState","MarkerType","motion","jsxDEV","_jsxDEV","AWSServiceNode","data","div","className","isMissing","initial","scale","opacity","animate","exit","whileHover","transition","type","stiffness","children","fileName","_jsxFileName","lineNumber","columnNumber","src","icon","alt","label","_c","nodeTypes","awsService","AWSArchitectureDisplay","architecture","missingServices","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","useEffect","services","allServices","newNodes","newEdges","connections","forEach","conn","fromIndex","indexOf","from","toIndex","to","missingService","find","ms","position","includes","placeholderId","push","id","x","y","source","toLowerCase","target","animated","style","stroke","strokeWidth","markerEnd","ArrowClosed","service","index","height","fitView","minZoom","maxZoom","color","gap","size","nodeColor","node","maskColor","_c2","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx"],"sourcesContent":["import React from 'react';\nimport ReactFlow, { \n  Background, \n  Controls, \n  MiniMap,\n  useNodesState,\n  useEdgesState,\n  MarkerType\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\n\nconst AWSServiceNode = ({ data }) => (\n  <motion.div\n    className={`aws-service-node ${data.isMissing ? 'missing' : ''}`}\n    initial={{ scale: 0, opacity: 0 }}\n    animate={{ scale: 1, opacity: 1 }}\n    exit={{ scale: 0, opacity: 0 }}\n    whileHover={{ scale: 1.1 }}\n    transition={{ type: \"spring\", stiffness: 300 }}\n  >\n    <div className=\"node-content\">\n      {data.isMissing ? (\n        <div className=\"missing-service-placeholder\">\n          <span>?</span>\n        </div>\n      ) : (\n        <img src={data.icon} alt={data.label} className=\"service-icon\" />\n      )}\n      <span className=\"service-label\">{data.label}</span>\n    </div>\n  </motion.div>\n);\n\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\n\nconst AWSArchitectureDisplay = ({ architecture, missingServices }) => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  React.useEffect(() => {\n    if (!architecture?.services) return;\n\n    // Create all nodes including missing services\n    const allServices = [...architecture.services];\n    const newNodes = [];\n    const newEdges = [];\n    \n    // Process connections and insert missing services\n    architecture.connections.forEach((conn) => {\n      const fromIndex = allServices.indexOf(conn.from);\n      const toIndex = allServices.indexOf(conn.to);\n      \n      // Check if there's a missing service between these nodes\n      const missingService = missingServices?.find(ms => \n        ms.position.includes(conn.from) && ms.position.includes(conn.to)\n      );\n\n      if (missingService) {\n        // Add placeholder node for missing service\n        const placeholderId = `missing-${conn.from}-${conn.to}`;\n        newNodes.push({\n          id: placeholderId,\n          type: 'awsService',\n          position: { \n            x: (fromIndex + toIndex) * 200 / 2,\n            y: 200 \n          },\n          data: {\n            label: 'Missing Service',\n            isMissing: true\n          }\n        });\n\n        // Add edges to and from the placeholder\n        newEdges.push({\n          id: `${conn.from}-${placeholderId}`,\n          source: conn.from.toLowerCase(),\n          target: placeholderId,\n          type: 'smoothstep',\n          animated: true,\n          style: { stroke: '#4FD1C5', strokeWidth: 2 },\n          markerEnd: { type: MarkerType.ArrowClosed }\n        });\n        newEdges.push({\n          id: `${placeholderId}-${conn.to}`,\n          source: placeholderId,\n          target: conn.to.toLowerCase(),\n          type: 'smoothstep',\n          animated: true,\n          style: { stroke: '#4FD1C5', strokeWidth: 2 },\n          markerEnd: { type: MarkerType.ArrowClosed }\n        });\n      } else {\n        // Add direct edge\n        newEdges.push({\n          id: `${conn.from}-${conn.to}`,\n          source: conn.from.toLowerCase(),\n          target: conn.to.toLowerCase(),\n          type: 'smoothstep',\n          animated: true,\n          style: { stroke: '#4FD1C5', strokeWidth: 2 },\n          markerEnd: { type: MarkerType.ArrowClosed }\n        });\n      }\n    });\n\n    // Add regular service nodes\n    architecture.services.forEach((service, index) => {\n      newNodes.push({\n        id: service.toLowerCase(),\n        type: 'awsService',\n        position: { x: index * 200, y: 200 },\n        data: {\n          label: service,\n          icon: service.icon,\n          isMissing: false\n        }\n      });\n    });\n\n    setNodes(newNodes);\n    setEdges(newEdges);\n  }, [architecture, missingServices, setNodes, setEdges]);\n\n  return (\n    <div style={{ height: '500px' }} className=\"architecture-visualizer\">\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        nodeTypes={nodeTypes}\n        fitView\n        minZoom={0.5}\n        maxZoom={1.5}\n      >\n        <Background color=\"#4FD1C5\" gap={16} size={1} />\n        <Controls />\n        <MiniMap \n          nodeColor={(node) => node.data.isMissing ? '#FF5656' : '#4FD1C5'}\n          maskColor=\"rgba(13, 25, 35, 0.7)\"\n        />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default AWSArchitectureDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}