{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game copy 20- copy 2/src/components/GameCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AWS_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Constants at the top of the file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.us-east-1.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst S3_ROCKET_PATH = `${S3_BUCKET_URL}/games/rocket`;\nconst DEFAULT_ROCKET = `${S3_ROCKET_PATH}/rocket1.png`;\nconst FIREBALL_PATH = `${S3_BUCKET_URL}/games/bullet/fireball.png`;\nconst GameCanvas = () => {\n  _s();\n  // First, declare all state\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const saved = localStorage.getItem('selectedRocket');\n    return saved || DEFAULT_ROCKET;\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({\n    x: 375,\n    y: 550\n  });\n\n  // Get random categories for instructions only once at game start\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AWS_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 2);\n    };\n    return getRandomCategories().map(category => ({\n      text: `Shoot the ${category.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ')} icons!`,\n      category: AWS_ICON_CATEGORIES[category]\n    }));\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => path.includes(instruction.category)).map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name\n      }));\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs and other setup code\n  const canvasRef = useRef(null);\n\n  // We'll keep arrays for icons, bullets, and feedback in refs to avoid\n  // re-rendering the whole component every time they update.\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n\n  // Add state to track image loading status\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const rocketImage = useRef(new Image());\n  const fireballImage = useRef(new Image());\n\n  // Update the image loading effect\n  useEffect(() => {\n    let loadedImages = 0;\n    const totalImages = 2;\n    let mounted = true;\n    const handleImageLoad = () => {\n      if (!mounted) return;\n      loadedImages++;\n      console.log('Image loaded successfully:', loadedImages);\n      if (loadedImages === totalImages) {\n        setImagesLoaded(true);\n      }\n    };\n    const handleImageError = (e, imageType) => {\n      if (!mounted) return;\n      console.error(`Error loading ${imageType} image:`, e.target.src);\n\n      // Handle specific image type errors\n      if (imageType === 'rocket') {\n        console.log('Attempting to load default rocket');\n        if (rocketImage.current) {\n          rocketImage.current.src = DEFAULT_ROCKET;\n        }\n      } else if (imageType === 'fireball') {\n        console.log('Attempting to load backup fireball');\n        if (fireballImage.current) {\n          fireballImage.current.src = FIREBALL_PATH;\n        }\n      }\n    };\n    const loadImage = (imageRef, src, imageType) => {\n      return new Promise(resolve => {\n        if (!imageRef.current) {\n          imageRef.current = new Image();\n        }\n        imageRef.current.crossOrigin = \"anonymous\";\n        imageRef.current.onload = () => {\n          if (mounted) {\n            console.log(`${imageType} loaded successfully`);\n            handleImageLoad();\n          }\n          resolve();\n        };\n        imageRef.current.onerror = error => {\n          if (mounted) {\n            handleImageError(error, imageType);\n          }\n          resolve(); // Resolve even on error to prevent Promise.all from failing\n        };\n\n        // Set src after setting up event handlers\n        imageRef.current.src = src;\n      });\n    };\n    const loadAllImages = async () => {\n      try {\n        // Initialize refs if they don't exist\n        if (!rocketImage.current) rocketImage.current = new Image();\n        if (!fireballImage.current) fireballImage.current = new Image();\n\n        // Load both images\n        await Promise.all([loadImage(rocketImage, selectedRocket, 'rocket'), loadImage(fireballImage, FIREBALL_PATH, 'fireball')]);\n        if (mounted) {\n          console.log('All images loaded successfully');\n        }\n      } catch (error) {\n        console.error('Error in loadAllImages:', error);\n      }\n    };\n\n    // Start loading images\n    loadAllImages();\n\n    // Cleanup function\n    return () => {\n      mounted = false;\n      if (rocketImage.current) {\n        rocketImage.current.onload = null;\n        rocketImage.current.onerror = null;\n      }\n      if (fireballImage.current) {\n        fireballImage.current.onload = null;\n        fireballImage.current.onerror = null;\n      }\n    };\n  }, [selectedRocket]); // Add selectedRocket as dependency\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25,\n    // center of an 800px width minus half the gun width\n    y: 800 - 100,\n    // Adjust this value to move the rocket closer to the bottom\n    width: 120,\n    height: 120\n  });\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    return Math.floor(Math.random() * (canvas.width - 50));\n  };\n\n  // Modify loadIcons to handle image loading properly\n  const loadIcons = () => {\n    iconsRef.current = [];\n    const positions = [];\n    const currentCategory = instructions[currentInstructionIndex].category;\n    const createIcon = (iconInfo, x, type) => {\n      return new Promise(resolve => {\n        const iconImage = new Image();\n        iconImage.crossOrigin = \"anonymous\";\n        iconImage.onload = () => {\n          iconsRef.current.push({\n            x,\n            y: -50,\n            type,\n            name: iconInfo.name,\n            image: iconImage,\n            hit: false\n          });\n          resolve();\n        };\n        iconImage.onerror = () => {\n          console.error('Failed to load icon:', iconInfo.path);\n          resolve();\n        };\n\n        // Set src after setting up event handlers\n        iconImage.src = iconInfo.path;\n      });\n    };\n\n    // Get all icons for current category\n    const categoryIcons = iconTypes[currentCategory];\n    const otherCategoryIcons = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => !path.includes(currentCategory)).map(([name, path]) => ({\n      path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n      name: name\n    }));\n    const selectedCategoryIcons = categoryIcons.length <= 4 ? [...categoryIcons] : shuffleAndSlice(categoryIcons, 4);\n    const selectedOtherIcons = shuffleAndSlice(otherCategoryIcons, 6);\n    const loadAllIcons = async () => {\n      const promises = [];\n\n      // Load category icons\n      selectedCategoryIcons.forEach(iconInfo => {\n        let x = getRandomX();\n        while (positions.some(pos => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n        promises.push(createIcon(iconInfo, x, currentCategory));\n      });\n\n      // Load other icons\n      selectedOtherIcons.forEach(iconInfo => {\n        let x = getRandomX();\n        while (positions.some(pos => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n        promises.push(createIcon(iconInfo, x, 'other'));\n      });\n      await Promise.all(promises);\n    };\n    loadAllIcons();\n  };\n\n  // Helper function to shuffle array and get n unique items\n  const shuffleAndSlice = (array, n) => {\n    const shuffled = [...array].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, Math.min(n, shuffled.length));\n  };\n\n  // Show feedback (checkmark or X) and points after a shot\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now()\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    const currentCategory = instructions[currentInstructionIndex].category;\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter(bullet => {\n        if (bullet.x > icon.x && bullet.x < icon.x + 50 && bullet.y > icon.y && bullet.y < icon.y + 50) {\n          icon.hit = true;\n          if (icon.type === currentCategory) {\n            const heightPercentage = 1 - icon.y / canvas.height;\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            setScore(prev => {\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore(prev => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n    if (iconsRef.current.length === 0 && timeLeft > 0) {\n      playSound('levelup');\n      setCurrentInstructionIndex(prev => (prev + 1) % instructions.length);\n      loadIcons();\n    }\n  };\n\n  // The main game loop, which draws everything on the canvas\n  const gameLoop = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Only draw if images are loaded\n    if (imagesLoaded) {\n      // Draw rocket\n      if (rocketImage.current && rocketImage.current.complete && rocketImage.current.naturalWidth !== 0) {\n        const {\n          x: gunX,\n          y: gunY,\n          width,\n          height\n        } = gunRef.current;\n        try {\n          ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n        } catch (error) {\n          console.error('Error drawing rocket:', error);\n        }\n      }\n\n      // Draw icons\n      iconsRef.current.forEach(icon => {\n        if (!icon.hit && icon.image && icon.image.complete && icon.image.naturalWidth !== 0) {\n          try {\n            ctx.drawImage(icon.image, icon.x, icon.y, 50, 50);\n            icon.y += 0.3;\n          } catch (error) {\n            console.error('Error drawing icon:', error);\n          }\n        }\n      });\n\n      // Draw bullets\n      if (fireballImage.current && fireballImage.current.complete && fireballImage.current.naturalWidth !== 0) {\n        bulletsRef.current.forEach(bullet => {\n          try {\n            ctx.drawImage(fireballImage.current, bullet.x, bullet.y, 20, 20);\n            bullet.y -= 5;\n          } catch (error) {\n            console.error('Error drawing bullet:', error);\n          }\n        });\n      }\n\n      // Update game state\n      checkCollisions();\n\n      // Remove off-screen bullets\n      bulletsRef.current = bulletsRef.current.filter(b => b.y > 0);\n\n      // Remove off-screen icons\n      iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n      if (iconsRef.current.length === 0 && timeLeft > 0) {\n        setCurrentInstructionIndex(prev => (prev + 1) % instructions.length);\n        loadIcons();\n      }\n    }\n    requestAnimationFrame(gameLoop);\n  };\n\n  // Add sound references with error handling\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Initialize sounds with error handling\n  useEffect(() => {\n    const soundFiles = {\n      shoot: `${S3_BUCKET_URL}/games/sounds/pistol_sound.mp3`,\n      correct: `${S3_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n      incorrect: `${S3_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n      levelup: `${S3_BUCKET_URL}/games/sounds/levelup.mp3`\n    };\n\n    // Create a safe audio player that won't break if files are missing\n    const createSafeAudio = path => {\n      const audio = new Audio();\n      return new Promise(resolve => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n\n        // Set timeout in case the file takes too long to load\n        setTimeout(() => resolve(null), 2000);\n        audio.src = path;\n      });\n    };\n\n    // Load all sound files with error handling\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n    loadSounds();\n\n    // Set initial volume\n    return () => {\n      // Cleanup sounds on unmount\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  // Safe play function\n  const playSound = soundName => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Add a mute toggle button to the UI\n  const [isMuted, setIsMuted] = useState(false);\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !isMuted;\n      }\n    });\n  };\n\n  // Add new state and refs for particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n\n  // Add state to track if we've already handled game over\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  // Add state to track if game should start\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Particle class\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size; // Store initial size\n    }\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      // Calculate size based on lifetime instead of continuous subtraction\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n    draw(ctx) {\n      if (this.size <= 0) return; // Don't draw if size is 0 or negative\n\n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Function to create explosion effect\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled, gameStarted]);\n\n  // Handle game over\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    setGameOver(true);\n    setGameOverHandled(true);\n    const newScore = {\n      name: playerName,\n      score\n    };\n    const newHighScores = [...highScores, newScore].sort((a, b) => b.score - a.score).slice(0, 5);\n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  // Modify the canvas setup effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return; // Guard clause for when canvas isn't ready\n\n    canvas.width = 1200;\n    canvas.height = 800;\n    const ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n\n    // Only start the game loop and load icons when both canvas and images are ready\n    if (imagesLoaded) {\n      loadIcons();\n      const animationId = requestAnimationFrame(gameLoop);\n      return () => cancelAnimationFrame(animationId);\n    }\n  }, [imagesLoaded]); // Add imagesLoaded as a dependency\n\n  // Second effect for event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ROCKET_WIDTH = 50;\n    const FIXED_ROCKET_Y = 550;\n    const handleMouseMove = e => {\n      const rect = canvas.getBoundingClientRect();\n\n      // Calculate new X position\n      let newX = e.clientX - rect.left - gunRef.current.width / 2;\n\n      // Add boundary checks\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n\n      // Update gun position\n      gunRef.current.x = newX;\n    };\n    const handleCanvasClick = () => {\n      if (gameStarted && timeLeft > 0) {\n        playSound('shoot');\n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20\n        });\n      }\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted]);\n\n  // Clear both name and rocket selection when component mounts\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  // Add state for modal visibility\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  // Update the rocket options with proper S3 paths\n  const rocketOptions = [{\n    id: `${S3_ROCKET_PATH}/rocket1.png`,\n    name: 'Modern Rocket'\n  }, {\n    id: `${S3_ROCKET_PATH}/rocket2.png`,\n    name: 'Power Rocket'\n  }, {\n    id: `${S3_ROCKET_PATH}/rocket3.png`,\n    name: 'Stealth Rocket'\n  }, {\n    id: `${S3_ROCKET_PATH}/rocket4.png`,\n    name: 'Classic Rocket'\n  }];\n\n  // Update the handleRocketSelect function\n  const handleRocketSelect = rocketId => {\n    console.log('Selecting rocket:', rocketId);\n\n    // Create a new image to test loading\n    const testImage = new Image();\n    testImage.crossOrigin = \"anonymous\";\n    testImage.onload = () => {\n      console.log('Rocket image pre-load successful');\n      setSelectedRocket(rocketId);\n      localStorage.setItem('selectedRocket', rocketId);\n      setShowRocketModal(false);\n      setGameStarted(true);\n    };\n    testImage.onerror = error => {\n      console.error('Error pre-loading rocket image:', error);\n      // Fallback to default rocket\n      setSelectedRocket(DEFAULT_ROCKET);\n      localStorage.setItem('selectedRocket', DEFAULT_ROCKET);\n    };\n    testImage.src = rocketId;\n  };\n\n  // Add state for cheerleader messages\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  // Add cheerleader messages for different situations\n  const cheerleaderMessages = {\n    goodShot: [\"Great shot! You're an AWS Pro! 🌟\", \"Amazing cloud skills! Keep it up! 🎯\", \"You're on fire in the cloud! 🔥\", \"That's how AWS experts do it! 👏\"],\n    combo: [\"Cloud combo! 🎮\", \"You're scaling infinitely! ⚡\", \"What an AWS streak! 🌈\"],\n    timeWarning: [\"30 seconds left - you're highly available! ⏰\", \"Time for the final deployment! 💪\", \"Make every compute unit count! ⭐\"],\n    encouragement: [\"You've got this, cloud warrior! 🚀\", \"Keep going! You're AWS certified material! 🌟\", \"I believe in your cloud powers! 💫\", \"Show them your AWS expertise! 💪\"],\n    highScore: [\"New high score! You're going serverless! 🏆\", \"You're breaking cloud records! 🎖️\", \"Legendary AWS performance! 👑\"]\n  };\n\n  // Function to show a random message from a category\n  const showCheerleaderMessage = category => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n\n    // Hide message after 3 seconds\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  // Add periodic encouragement\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  // Add time warning messages\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  // Add this function near other handlers (around line 440)\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowNameModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameCanvas-game-title\",\n      children: \"AWS Cloud Shooter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 756,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-canvas-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"gameCanvas-game-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 758,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-instruction-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-player-name\",\n            children: [\"Player: \", playerName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 763,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-score-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"alien\",\n              children: \"\\uD83D\\uDC7E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 15\n            }, this), ' ', \"Score: \", score, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"joystick\",\n              children: \"\\uD83D\\uDD79\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 769,\n              columnNumber: 15\n            }, this), soundsLoaded && Object.values(sounds.current).some(sound => sound) && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gameCanvas-sound-toggle\",\n              onClick: toggleMute,\n              \"aria-label\": \"Toggle sound\",\n              children: isMuted ? '🔇' : '🔊'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 766,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 762,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-timer-display\",\n          children: [\"Time: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-score-explanation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"How to Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 788,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Hit correct icon: +5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 790,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Height bonus: up to +20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 791,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Wrong hit: -5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Tip: Shoot icons as high as possible!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 793,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 787,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-high-scores\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"High Scores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: highScores.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gameCanvas-high-score-name\",\n                children: [entry.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 802,\n                columnNumber: 17\n              }, this), \" \", entry.score]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 801,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 797,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-mission-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"gameCanvas-mission-title\",\n            children: \"Current Mission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 809,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-mission-text\",\n            children: instructions[currentInstructionIndex].text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 813,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 757,\n      columnNumber: 7\n    }, this), showRocketModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rocket-selection-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Your Rocket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rocket-options\",\n        children: rocketOptions.map(rocket => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`,\n          onClick: () => handleRocketSelect(rocket.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: rocket.id // rocket.id now contains the full S3 URL\n            ,\n            alt: rocket.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 830,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: rocket.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 17\n          }, this)]\n        }, rocket.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 823,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 843,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 844,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 842,\n      columnNumber: 9\n    }, this), showCheerMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-cheerleader-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheerleader-character\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/cheerleader.png\",\n          alt: \"Cheerleader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 853,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 852,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheer-message\",\n        children: cheerMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 855,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 851,\n      columnNumber: 9\n    }, this), showNameModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to AWS Cloud Shooter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 864,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your name to start the game:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 865,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempPlayerName,\n            onChange: e => {\n              setTempPlayerName(e.target.value);\n              setNameError('');\n            },\n            placeholder: \"Your name\",\n            className: \"gameCanvas-name-input\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 867,\n            columnNumber: 15\n          }, this), nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-name-error\",\n            children: nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 878,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"gameCanvas-start-button\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 879,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 866,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 863,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 862,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 755,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"7kNZ0AIn+9KB3DhffFWjsDXf8l0=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","AWS_ICON_CATEGORIES","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","S3_BUCKET_URL","ICONS_BASE_PATH","S3_ROCKET_PATH","DEFAULT_ROCKET","FIREBALL_PATH","GameCanvas","_s","timeLeft","setTimeLeft","score","setScore","currentInstructionIndex","setCurrentInstructionIndex","selectedRocket","setSelectedRocket","saved","localStorage","getItem","showNameModal","setShowNameModal","tempPlayerName","setTempPlayerName","nameError","setNameError","playerName","setPlayerName","savedName","rocketPosition","setRocketPosition","x","y","instructions","getRandomCategories","categories","Object","keys","shuffled","sort","Math","random","slice","map","category","text","split","word","charAt","toUpperCase","toLowerCase","join","iconTypes","reduce","acc","instruction","categoryServices","entries","filter","_","path","includes","name","canvasRef","iconsRef","bulletsRef","feedbacksRef","imagesLoaded","setImagesLoaded","rocketImage","Image","fireballImage","loadedImages","totalImages","mounted","handleImageLoad","console","log","handleImageError","e","imageType","error","target","src","current","loadImage","imageRef","Promise","resolve","crossOrigin","onload","onerror","loadAllImages","all","gunRef","width","height","getRandomX","canvas","floor","loadIcons","positions","currentCategory","createIcon","iconInfo","type","iconImage","push","image","hit","categoryIcons","otherCategoryIcons","selectedCategoryIcons","length","shuffleAndSlice","selectedOtherIcons","loadAllIcons","promises","forEach","some","pos","abs","array","n","min","showFeedback","isCorrect","points","iconName","time","Date","now","checkCollisions","bullets","icons","icon","iconIndex","bullet","heightPercentage","heightBonus","prev","max","highScores","s","showCheerleaderMessage","playSound","createExplosion","splice","gameLoop","ctx","getContext","clearRect","complete","naturalWidth","gunX","gunY","drawImage","b","requestAnimationFrame","sounds","soundsLoaded","setSoundsLoaded","soundFiles","shoot","correct","incorrect","levelup","createSafeAudio","audio","Audio","addEventListener","warn","setTimeout","loadSounds","loadedSounds","key","values","sound","pause","soundName","isMuted","currentTime","volume","play","catch","err","setIsMuted","toggleMute","muted","setHighScores","JSON","parse","gameOver","setGameOver","particlesRef","gameOverHandled","setGameOverHandled","gameStarted","setGameStarted","Particle","constructor","color","size","speedX","speedY","lifetime","initialSize","update","draw","fillStyle","globalAlpha","beginPath","arc","PI","fill","i","timer","setInterval","clearInterval","handleGameOver","newScore","newHighScores","a","setItem","stringify","imageSmoothingEnabled","animationId","cancelAnimationFrame","ROCKET_WIDTH","FIXED_ROCKET_Y","handleMouseMove","rect","getBoundingClientRect","newX","clientX","left","handleCanvasClick","removeEventListener","removeItem","showRocketModal","setShowRocketModal","rocketOptions","id","handleRocketSelect","rocketId","testImage","cheerMessage","setCheerMessage","showCheerMessage","setShowCheerMessage","cheerleaderMessages","goodShot","combo","timeWarning","encouragement","highScore","messages","randomMessage","encouragementInterval","handleNameSubmit","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","role","onClick","entry","index","rocket","alt","window","location","reload","onSubmit","value","onChange","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game copy 20- copy 2/src/components/GameCanvas.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AWS_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Constants at the top of the file\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.us-east-1.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst S3_ROCKET_PATH = `${S3_BUCKET_URL}/games/rocket`;\nconst DEFAULT_ROCKET = `${S3_ROCKET_PATH}/rocket1.png`;\nconst FIREBALL_PATH = `${S3_BUCKET_URL}/games/bullet/fireball.png`;\n\nconst GameCanvas = () => {\n  // First, declare all state\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const saved = localStorage.getItem('selectedRocket');\n    return saved || DEFAULT_ROCKET;\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({ x: 375, y: 550 });\n\n  // Get random categories for instructions only once at game start\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AWS_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 2);\n    };\n\n    return getRandomCategories().map(category => ({\n      text: `Shoot the ${category.split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ')} icons!`,\n      category: AWS_ICON_CATEGORIES[category]\n    }));\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS)\n        .filter(([_, path]) => path.includes(instruction.category))\n        .map(([name, path]) => ({\n          path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n          name: name\n        }));\n\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs and other setup code\n  const canvasRef = useRef(null);\n\n  // We'll keep arrays for icons, bullets, and feedback in refs to avoid\n  // re-rendering the whole component every time they update.\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n\n  // Add state to track image loading status\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const rocketImage = useRef(new Image());\n  const fireballImage = useRef(new Image());\n\n  // Update the image loading effect\n  useEffect(() => {\n    let loadedImages = 0;\n    const totalImages = 2;\n    let mounted = true;\n\n    const handleImageLoad = () => {\n      if (!mounted) return;\n      loadedImages++;\n      console.log('Image loaded successfully:', loadedImages);\n      if (loadedImages === totalImages) {\n        setImagesLoaded(true);\n      }\n    };\n\n    const handleImageError = (e, imageType) => {\n      if (!mounted) return;\n      console.error(`Error loading ${imageType} image:`, e.target.src);\n      \n      // Handle specific image type errors\n      if (imageType === 'rocket') {\n        console.log('Attempting to load default rocket');\n        if (rocketImage.current) {\n          rocketImage.current.src = DEFAULT_ROCKET;\n        }\n      } else if (imageType === 'fireball') {\n        console.log('Attempting to load backup fireball');\n        if (fireballImage.current) {\n          fireballImage.current.src = FIREBALL_PATH;\n        }\n      }\n    };\n\n    const loadImage = (imageRef, src, imageType) => {\n      return new Promise((resolve) => {\n        if (!imageRef.current) {\n          imageRef.current = new Image();\n        }\n\n        imageRef.current.crossOrigin = \"anonymous\";\n        \n        imageRef.current.onload = () => {\n          if (mounted) {\n            console.log(`${imageType} loaded successfully`);\n            handleImageLoad();\n          }\n          resolve();\n        };\n        \n        imageRef.current.onerror = (error) => {\n          if (mounted) {\n            handleImageError(error, imageType);\n          }\n          resolve(); // Resolve even on error to prevent Promise.all from failing\n        };\n        \n        // Set src after setting up event handlers\n        imageRef.current.src = src;\n      });\n    };\n\n    const loadAllImages = async () => {\n      try {\n        // Initialize refs if they don't exist\n        if (!rocketImage.current) rocketImage.current = new Image();\n        if (!fireballImage.current) fireballImage.current = new Image();\n\n        // Load both images\n        await Promise.all([\n          loadImage(rocketImage, selectedRocket, 'rocket'),\n          loadImage(fireballImage, FIREBALL_PATH, 'fireball')\n        ]);\n\n        if (mounted) {\n          console.log('All images loaded successfully');\n        }\n      } catch (error) {\n        console.error('Error in loadAllImages:', error);\n      }\n    };\n\n    // Start loading images\n    loadAllImages();\n\n    // Cleanup function\n    return () => {\n      mounted = false;\n      if (rocketImage.current) {\n        rocketImage.current.onload = null;\n        rocketImage.current.onerror = null;\n      }\n      if (fireballImage.current) {\n        fireballImage.current.onload = null;\n        fireballImage.current.onerror = null;\n      }\n    };\n  }, [selectedRocket]); // Add selectedRocket as dependency\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25, // center of an 800px width minus half the gun width\n    y: 800 - 100, // Adjust this value to move the rocket closer to the bottom\n    width: 120,\n    height: 120,\n  });\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    return Math.floor(Math.random() * (canvas.width - 50));\n  };\n\n  // Modify loadIcons to handle image loading properly\n  const loadIcons = () => {\n    iconsRef.current = [];\n    const positions = [];\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    const createIcon = (iconInfo, x, type) => {\n      return new Promise((resolve) => {\n        const iconImage = new Image();\n        iconImage.crossOrigin = \"anonymous\";\n        \n        iconImage.onload = () => {\n          iconsRef.current.push({\n            x,\n            y: -50,\n            type,\n            name: iconInfo.name,\n            image: iconImage,\n            hit: false,\n          });\n          resolve();\n        };\n        \n        iconImage.onerror = () => {\n          console.error('Failed to load icon:', iconInfo.path);\n          resolve();\n        };\n        \n        // Set src after setting up event handlers\n        iconImage.src = iconInfo.path;\n      });\n    };\n\n    // Get all icons for current category\n    const categoryIcons = iconTypes[currentCategory];\n    const otherCategoryIcons = Object.entries(SERVICE_MAPPINGS)\n      .filter(([_, path]) => !path.includes(currentCategory))\n      .map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name\n      }));\n\n    const selectedCategoryIcons = categoryIcons.length <= 4 \n      ? [...categoryIcons]\n      : shuffleAndSlice(categoryIcons, 4);\n\n    const selectedOtherIcons = shuffleAndSlice(otherCategoryIcons, 6);\n\n    const loadAllIcons = async () => {\n      const promises = [];\n\n      // Load category icons\n      selectedCategoryIcons.forEach((iconInfo) => {\n        let x = getRandomX();\n        while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n        promises.push(createIcon(iconInfo, x, currentCategory));\n      });\n\n      // Load other icons\n      selectedOtherIcons.forEach((iconInfo) => {\n        let x = getRandomX();\n        while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n        promises.push(createIcon(iconInfo, x, 'other'));\n      });\n\n      await Promise.all(promises);\n    };\n\n    loadAllIcons();\n  };\n\n  // Helper function to shuffle array and get n unique items\n  const shuffleAndSlice = (array, n) => {\n    const shuffled = [...array].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, Math.min(n, shuffled.length));\n  };\n\n  // Show feedback (checkmark or X) and points after a shot\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now(),\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter((bullet) => {\n        if (\n          bullet.x > icon.x &&\n          bullet.x < icon.x + 50 &&\n          bullet.y > icon.y &&\n          bullet.y < icon.y + 50\n        ) {\n          icon.hit = true;\n\n          if (icon.type === currentCategory) {\n            const heightPercentage = 1 - (icon.y / canvas.height);\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            \n            setScore((prev) => {\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore((prev) => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n\n    if (iconsRef.current.length === 0 && timeLeft > 0) {\n      playSound('levelup');\n      setCurrentInstructionIndex((prev) => (prev + 1) % instructions.length);\n      loadIcons();\n    }\n  };\n\n  // The main game loop, which draws everything on the canvas\n  const gameLoop = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Only draw if images are loaded\n    if (imagesLoaded) {\n      // Draw rocket\n      if (rocketImage.current && rocketImage.current.complete && rocketImage.current.naturalWidth !== 0) {\n        const { x: gunX, y: gunY, width, height } = gunRef.current;\n        try {\n          ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n        } catch (error) {\n          console.error('Error drawing rocket:', error);\n        }\n      }\n\n      // Draw icons\n      iconsRef.current.forEach((icon) => {\n        if (!icon.hit && icon.image && icon.image.complete && icon.image.naturalWidth !== 0) {\n          try {\n            ctx.drawImage(icon.image, icon.x, icon.y, 50, 50);\n            icon.y += 0.3;\n          } catch (error) {\n            console.error('Error drawing icon:', error);\n          }\n        }\n      });\n\n      // Draw bullets\n      if (fireballImage.current && fireballImage.current.complete && fireballImage.current.naturalWidth !== 0) {\n        bulletsRef.current.forEach((bullet) => {\n          try {\n            ctx.drawImage(fireballImage.current, bullet.x, bullet.y, 20, 20);\n            bullet.y -= 5;\n          } catch (error) {\n            console.error('Error drawing bullet:', error);\n          }\n        });\n      }\n\n      // Update game state\n      checkCollisions();\n      \n      // Remove off-screen bullets\n      bulletsRef.current = bulletsRef.current.filter((b) => b.y > 0);\n      \n      // Remove off-screen icons\n      iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n      \n      if (iconsRef.current.length === 0 && timeLeft > 0) {\n        setCurrentInstructionIndex((prev) => (prev + 1) % instructions.length);\n        loadIcons();\n      }\n    }\n\n    requestAnimationFrame(gameLoop);\n  };\n\n  // Add sound references with error handling\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Initialize sounds with error handling\n  useEffect(() => {\n    const soundFiles = {\n      shoot:  `${S3_BUCKET_URL}/games/sounds/pistol_sound.mp3`,\n      correct: `${S3_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n      incorrect:`${S3_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n      levelup: `${S3_BUCKET_URL}/games/sounds/levelup.mp3`\n    };\n\n    // Create a safe audio player that won't break if files are missing\n    const createSafeAudio = (path) => {\n      const audio = new Audio();\n      \n      return new Promise((resolve) => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n\n        // Set timeout in case the file takes too long to load\n        setTimeout(() => resolve(null), 2000);\n\n        audio.src = path;\n      });\n    };\n\n    // Load all sound files with error handling\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      \n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n\n    loadSounds();\n\n    // Set initial volume\n    return () => {\n      // Cleanup sounds on unmount\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  // Safe play function\n  const playSound = (soundName) => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Add a mute toggle button to the UI\n  const [isMuted, setIsMuted] = useState(false);\n\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !isMuted;\n      }\n    });\n  };\n\n  // Add new state and refs for particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n\n  // Add state to track if we've already handled game over\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  // Add state to track if game should start\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Particle class\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size; // Store initial size\n    }\n\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      // Calculate size based on lifetime instead of continuous subtraction\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n\n    draw(ctx) {\n      if (this.size <= 0) return; // Don't draw if size is 0 or negative\n      \n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Function to create explosion effect\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled, gameStarted]);\n\n  // Handle game over\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    \n    setGameOver(true);\n    setGameOverHandled(true);\n    \n    const newScore = { name: playerName, score };\n    const newHighScores = [...highScores, newScore]\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 5);\n    \n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  // Modify the canvas setup effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return; // Guard clause for when canvas isn't ready\n    \n    canvas.width = 1200;\n    canvas.height = 800;\n    \n    const ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n\n    // Only start the game loop and load icons when both canvas and images are ready\n    if (imagesLoaded) {\n      loadIcons();\n      const animationId = requestAnimationFrame(gameLoop);\n      return () => cancelAnimationFrame(animationId);\n    }\n  }, [imagesLoaded]); // Add imagesLoaded as a dependency\n\n  // Second effect for event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    \n    const ROCKET_WIDTH = 50;\n    const FIXED_ROCKET_Y = 550;\n\n    const handleMouseMove = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      \n      // Calculate new X position\n      let newX = e.clientX - rect.left - (gunRef.current.width / 2);\n      \n      // Add boundary checks\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n      \n      // Update gun position\n      gunRef.current.x = newX;\n    };\n\n    const handleCanvasClick = () => {\n      if (gameStarted && timeLeft > 0) {\n        playSound('shoot');\n        \n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20,\n        });\n      }\n    };\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted]);\n\n  // Clear both name and rocket selection when component mounts\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  // Add state for modal visibility\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  // Update the rocket options with proper S3 paths\n  const rocketOptions = [\n    { id: `${S3_ROCKET_PATH}/rocket1.png`, name: 'Modern Rocket' },\n    { id: `${S3_ROCKET_PATH}/rocket2.png`, name: 'Power Rocket' },\n    { id: `${S3_ROCKET_PATH}/rocket3.png`, name: 'Stealth Rocket' },\n    { id: `${S3_ROCKET_PATH}/rocket4.png`, name: 'Classic Rocket' },\n  ];\n\n  // Update the handleRocketSelect function\n  const handleRocketSelect = (rocketId) => {\n    console.log('Selecting rocket:', rocketId);\n    \n    // Create a new image to test loading\n    const testImage = new Image();\n    testImage.crossOrigin = \"anonymous\";\n    \n    testImage.onload = () => {\n      console.log('Rocket image pre-load successful');\n      setSelectedRocket(rocketId);\n      localStorage.setItem('selectedRocket', rocketId);\n      setShowRocketModal(false);\n      setGameStarted(true);\n    };\n    \n    testImage.onerror = (error) => {\n      console.error('Error pre-loading rocket image:', error);\n      // Fallback to default rocket\n      setSelectedRocket(DEFAULT_ROCKET);\n      localStorage.setItem('selectedRocket', DEFAULT_ROCKET);\n    };\n    \n    testImage.src = rocketId;\n  };\n\n  // Add state for cheerleader messages\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  // Add cheerleader messages for different situations\n  const cheerleaderMessages = {\n    goodShot: [\n      \"Great shot! You're an AWS Pro! 🌟\",\n      \"Amazing cloud skills! Keep it up! 🎯\",\n      \"You're on fire in the cloud! 🔥\",\n      \"That's how AWS experts do it! 👏\",\n    ],\n    combo: [\n      \"Cloud combo! 🎮\",\n      \"You're scaling infinitely! ⚡\",\n      \"What an AWS streak! 🌈\",\n    ],\n    timeWarning: [\n      \"30 seconds left - you're highly available! ⏰\",\n      \"Time for the final deployment! 💪\",\n      \"Make every compute unit count! ⭐\",\n    ],\n    encouragement: [\n      \"You've got this, cloud warrior! 🚀\",\n      \"Keep going! You're AWS certified material! 🌟\",\n      \"I believe in your cloud powers! 💫\",\n      \"Show them your AWS expertise! 💪\",\n    ],\n    highScore: [\n      \"New high score! You're going serverless! 🏆\",\n      \"You're breaking cloud records! 🎖️\",\n      \"Legendary AWS performance! 👑\",\n    ]\n  };\n\n  // Function to show a random message from a category\n  const showCheerleaderMessage = (category) => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n    \n    // Hide message after 3 seconds\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  // Add periodic encouragement\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  // Add time warning messages\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  // Add this function near other handlers (around line 440)\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowNameModal(false);\n  };\n\n  return (\n    <div className=\"gameCanvas-container\">\n      <h1 className=\"gameCanvas-game-title\">AWS Cloud Shooter</h1>\n      <div className=\"gameCanvas-game-content\">\n        <div className=\"gameCanvas-canvas-wrapper\">\n          <canvas ref={canvasRef} className=\"gameCanvas-game-canvas\" />\n        </div>\n        <div className=\"gameCanvas-instruction-panel\">\n          <div className=\"gameCanvas-player-info\">\n            <div className=\"gameCanvas-player-name\">\n              Player: {playerName}\n            </div>\n            <div className=\"gameCanvas-score-display\">\n              <span role=\"img\" aria-label=\"alien\">👾</span>{' '}\n              Score: {score}{' '}\n              <span role=\"img\" aria-label=\"joystick\">🕹️</span>\n              \n              {soundsLoaded && Object.values(sounds.current).some(sound => sound) && (\n                <button \n                  className=\"gameCanvas-sound-toggle\"\n                  onClick={toggleMute}\n                  aria-label=\"Toggle sound\"\n                >\n                  {isMuted ? '🔇' : '🔊'}\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"gameCanvas-timer-display\">\n            Time: {timeLeft}s\n          </div>\n\n          <div className=\"gameCanvas-score-explanation\">\n            <h4>How to Score:</h4>\n            <ul>\n            <li>• Hit correct icon: +5 points</li>\n            <li>• Height bonus: up to +20</li>\n            <li>• Wrong hit: -5 points</li>\n            <li>• Tip: Shoot icons as high as possible!</li>\n            </ul>\n          </div>\n\n          <div className=\"gameCanvas-high-scores\">\n          <h4>High Scores</h4>\n          <ul>\n            {highScores.map((entry, index) => (\n              <li key={index}>\n                <span className=\"gameCanvas-high-score-name\">{entry.name}:</span> {entry.score}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n          <div className=\"gameCanvas-mission-container\">\n            <h3 className=\"gameCanvas-mission-title\">\n              Current Mission\n            </h3>\n            \n            <div className=\"gameCanvas-mission-text\">\n              {instructions[currentInstructionIndex].text}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showRocketModal && (\n        <div className=\"rocket-selection-modal\">\n          <h2>Select Your Rocket</h2>\n          <div className=\"rocket-options\">\n            {rocketOptions.map((rocket) => (\n              <div\n                key={rocket.id}\n                className={`rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`}\n                onClick={() => handleRocketSelect(rocket.id)}\n              >\n                <img \n                  src={rocket.id}  // rocket.id now contains the full S3 URL\n                  alt={rocket.name}\n                />\n                <span>{rocket.name}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {gameOver && (\n        <div className=\"gameCanvas-game-over\">\n          <h3>Game Over!</h3>\n          <button onClick={() => window.location.reload()}>\n            Play Again\n          </button>\n        </div>\n      )}\n\n      {showCheerMessage && (\n        <div className=\"gameCanvas-cheerleader-container\">\n          <div className=\"gameCanvas-cheerleader-character\">\n            <img src=\"icons/cheerleader.png\" alt=\"Cheerleader\" />\n          </div>\n          <div className=\"gameCanvas-cheer-message\">\n            {cheerMessage}\n          </div>\n        </div>\n      )}\n\n      {showNameModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-modal\">\n            <h2>Welcome to AWS Cloud Shooter!</h2>\n            <p>Enter your name to start the game:</p>\n            <form onSubmit={handleNameSubmit}>\n              <input\n                type=\"text\"\n                value={tempPlayerName}\n                onChange={(e) => {\n                  setTempPlayerName(e.target.value);\n                  setNameError('');\n                }}\n                placeholder=\"Your name\"\n                className=\"gameCanvas-name-input\"\n                autoFocus\n              />\n              {nameError && <div className=\"gameCanvas-name-error\">{nameError}</div>}\n              <button type=\"submit\" className=\"gameCanvas-start-button\">\n                Start Game\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GameCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}