{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, useNodesState, useEdgesState, MarkerType, Handle } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { getCachedServiceIcon } from '../services/IconResolver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSServiceNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(motion.div, {\n  className: `aws-service-node ${data.isMissing ? 'missing' : ''}`,\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  animate: {\n    scale: 1,\n    opacity: 1\n  },\n  exit: {\n    scale: 0,\n    opacity: 0\n  },\n  whileHover: {\n    scale: 1.1\n  },\n  transition: {\n    type: \"spring\",\n    stiffness: 300\n  },\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\",\n    id: `${data.id}-target`,\n    className: \"handle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node-content\",\n    children: [data.isMissing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"missing-service-placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.icon,\n      alt: data.label,\n      className: \"service-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"service-label\",\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\",\n    id: `${data.id}-source`,\n    className: \"handle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c = AWSServiceNode;\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\nconst createNodeId = serviceName => {\n  if (typeof serviceName !== 'string') {\n    console.error('Invalid service name:', serviceName);\n    return 'invalid-service';\n  }\n  return serviceName.toLowerCase().replace(/\\s+/g, '-');\n};\nconst AWSArchitectureDisplay = ({\n  architecture,\n  currentQuestion\n}) => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  useEffect(() => {\n    if (architecture) {\n      // Create nodes for all services\n      const newNodes = architecture.services.map((service, index) => ({\n        id: service.id,\n        type: 'default',\n        data: {\n          label: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: service.icon,\n              alt: service.name,\n              style: {\n                width: 30,\n                height: 30\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: service.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        },\n        position: {\n          x: index * 200,\n          y: Math.floor(index / 3) * 200\n        },\n        style: service.name.includes('missing') ? {\n          background: '#ffcccc'\n        } : {}\n      }));\n\n      // Create edges for all connections, inserting a missing-service placeholder if needed\n      const newEdges = [];\n      (architecture.connections || []).forEach((connection, index) => {\n        var _currentQuestion$miss;\n        const fromId = connection.from.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n        const toId = connection.to.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n\n        // Check if there's a missing service between these nodes\n        const missingService = currentQuestion === null || currentQuestion === void 0 ? void 0 : (_currentQuestion$miss = currentQuestion.missingServices) === null || _currentQuestion$miss === void 0 ? void 0 : _currentQuestion$miss.find(ms => ms.position.includes(fromId) && ms.position.includes(toId));\n        if (missingService) {\n          // Create a placeholder node\n          const placeholderId = `missing-${fromId}-${toId}`;\n          newNodes.push({\n            id: placeholderId,\n            type: 'default',\n            data: {\n              label: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/aws-icons/missing.svg\",\n                  alt: \"Missing Service\",\n                  style: {\n                    width: 30,\n                    height: 30\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  children: \"Missing Service\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            },\n            position: {\n              x: newNodes.length * 200,\n              y: 200\n            },\n            style: {\n              background: '#ffcccc'\n            }\n          });\n\n          // Add two edges: fromId -> placeholder, placeholder -> toId\n          newEdges.push({\n            id: `${fromId}-${placeholderId}`,\n            source: fromId,\n            target: placeholderId,\n            type: 'smoothstep'\n          });\n          newEdges.push({\n            id: `${placeholderId}-${toId}`,\n            source: placeholderId,\n            target: toId,\n            type: 'smoothstep'\n          });\n        } else {\n          // Normal edge\n          newEdges.push({\n            id: `e${index}`,\n            source: fromId,\n            target: toId,\n            type: 'smoothstep'\n          });\n        }\n      });\n      setNodes(newNodes);\n      setEdges(newEdges);\n    }\n  }, [architecture, currentQuestion]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '500px'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureDisplay, \"qOdGaiImnCja3mNU5uxxCrNYw9I=\");\n_c2 = AWSArchitectureDisplay;\nexport default AWSArchitectureDisplay;\nvar _c, _c2;\n$RefreshReg$(_c, \"AWSServiceNode\");\n$RefreshReg$(_c2, \"AWSArchitectureDisplay\");","map":{"version":3,"names":["React","useEffect","useState","ReactFlow","Background","Controls","MiniMap","useNodesState","useEdgesState","MarkerType","Handle","motion","getCachedServiceIcon","jsxDEV","_jsxDEV","AWSServiceNode","data","div","className","isMissing","initial","scale","opacity","animate","exit","whileHover","transition","type","stiffness","children","position","id","fileName","_jsxFileName","lineNumber","columnNumber","src","icon","alt","label","_c","nodeTypes","awsService","createNodeId","serviceName","console","error","toLowerCase","replace","AWSArchitectureDisplay","architecture","currentQuestion","_s","nodes","setNodes","edges","setEdges","newNodes","services","map","service","index","name","style","width","height","x","y","Math","floor","includes","background","newEdges","connections","forEach","connection","_currentQuestion$miss","fromId","from","toId","to","missingService","missingServices","find","ms","placeholderId","push","length","source","target","fitView","_c2","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactFlow, { \n  Background, \n  Controls, \n  MiniMap,\n  useNodesState,\n  useEdgesState,\n  MarkerType,\n  Handle\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { getCachedServiceIcon } from '../services/IconResolver';\n\nconst AWSServiceNode = ({ data }) => (\n  <motion.div\n    className={`aws-service-node ${data.isMissing ? 'missing' : ''}`}\n    initial={{ scale: 0, opacity: 0 }}\n    animate={{ scale: 1, opacity: 1 }}\n    exit={{ scale: 0, opacity: 0 }}\n    whileHover={{ scale: 1.1 }}\n    transition={{ type: \"spring\", stiffness: 300 }}\n  >\n    <Handle \n      type=\"target\" \n      position=\"top\" \n      id={`${data.id}-target`}\n      className=\"handle\"\n    />\n    <div className=\"node-content\">\n      {data.isMissing ? (\n        <div className=\"missing-service-placeholder\">\n          <span>?</span>\n        </div>\n      ) : (\n        <img src={data.icon} alt={data.label} className=\"service-icon\" />\n      )}\n      <span className=\"service-label\">{data.label}</span>\n    </div>\n    <Handle \n      type=\"source\" \n      position=\"bottom\" \n      id={`${data.id}-source`}\n      className=\"handle\"\n    />\n  </motion.div>\n);\n\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\n\nconst createNodeId = (serviceName) => {\n  if (typeof serviceName !== 'string') {\n    console.error('Invalid service name:', serviceName);\n    return 'invalid-service';\n  }\n  return serviceName.toLowerCase().replace(/\\s+/g, '-');\n};\n\nconst AWSArchitectureDisplay = ({ architecture, currentQuestion }) => {\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n\n  useEffect(() => {\n    if (architecture) {\n      // Create nodes for all services\n      const newNodes = architecture.services.map((service, index) => ({\n        id: service.id,\n        type: 'default',\n        data: { \n          label: (\n            <div>\n              <img src={service.icon} alt={service.name} style={{ width: 30, height: 30 }} />\n              <div>{service.name}</div>\n            </div>\n          )\n        },\n        position: { x: index * 200, y: Math.floor(index / 3) * 200 },\n        style: service.name.includes('missing') ? { background: '#ffcccc' } : {}\n      }));\n\n      // Create edges for all connections, inserting a missing-service placeholder if needed\n      const newEdges = [];\n      (architecture.connections || []).forEach((connection, index) => {\n        const fromId = connection.from.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n        const toId = connection.to.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n\n        // Check if there's a missing service between these nodes\n        const missingService = currentQuestion?.missingServices?.find(ms =>\n          ms.position.includes(fromId) && ms.position.includes(toId)\n        );\n\n        if (missingService) {\n          // Create a placeholder node\n          const placeholderId = `missing-${fromId}-${toId}`;\n          newNodes.push({\n            id: placeholderId,\n            type: 'default',\n            data: { \n              label: (\n                <div>\n                  <img src=\"/aws-icons/missing.svg\" alt=\"Missing Service\" style={{ width: 30, height: 30 }} />\n                  <div>Missing Service</div>\n                </div>\n              )\n            },\n            position: { x: newNodes.length * 200, y: 200 },\n            style: { background: '#ffcccc' }\n          });\n\n          // Add two edges: fromId -> placeholder, placeholder -> toId\n          newEdges.push({\n            id: `${fromId}-${placeholderId}`,\n            source: fromId,\n            target: placeholderId,\n            type: 'smoothstep'\n          });\n          newEdges.push({\n            id: `${placeholderId}-${toId}`,\n            source: placeholderId,\n            target: toId,\n            type: 'smoothstep'\n          });\n        } else {\n          // Normal edge\n          newEdges.push({\n            id: `e${index}`,\n            source: fromId,\n            target: toId,\n            type: 'smoothstep'\n          });\n        }\n      });\n\n      setNodes(newNodes);\n      setEdges(newEdges);\n    }\n  }, [architecture, currentQuestion]);\n\n  return (\n    <div style={{ width: '100%', height: '500px' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        fitView\n      >\n        <Background />\n        <Controls />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default AWSArchitectureDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}