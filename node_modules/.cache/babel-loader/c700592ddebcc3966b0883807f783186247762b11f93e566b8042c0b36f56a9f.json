{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game copy 20- copy 2/src/components/GameCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AWS_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Add these constants from IconResolver.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\n\n// First, declare the getMissionText function\nconst getMissionText = category => {\n  if (!category) return '';\n  const categoryName = category.replace('Arch_', '').replace(/-/g, ' ');\n  return `Shoot the ${categoryName} icons!`;\n};\nconst GameCanvas = () => {\n  _s();\n  // First, declare all state\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const savedRocket = localStorage.getItem('selectedRocket');\n    return savedRocket || 'rocket1.png';\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({\n    x: 375,\n    y: 550\n  });\n\n  // First, modify the instructions state to include more categories\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AWS_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 6);\n    };\n    const selectedCategories = getRandomCategories();\n    console.log('Selected categories:', selectedCategories);\n    return selectedCategories.map(category => {\n      const categoryValue = AWS_ICON_CATEGORIES[category];\n      console.log('Category:', category, 'Value:', categoryValue);\n      return {\n        text: `Shoot the ${category.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ')} icons!`,\n        category: categoryValue\n      };\n    });\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => path.includes(instruction.category)).map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name\n      }));\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs and other setup code\n  const canvasRef = useRef(null);\n\n  // We'll keep arrays for icons, bullets, and feedback in refs to avoid\n  // re-rendering the whole component every time they update.\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n\n  // Images for the gun and bullets\n  const rocketImage = useRef(new Image());\n\n  // Initialize rocket image\n  useEffect(() => {\n    rocketImage.current.src = `icons/${selectedRocket}`;\n  }, [selectedRocket]); // Update when selectedRocket changes\n\n  const fireballImage = new Image();\n  fireballImage.src = 'icons/fireball.png';\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25,\n    // center of an 800px width minus half the gun width\n    y: 800 - 100,\n    // Adjust this value to move the rocket closer to the bottom\n    width: 120,\n    height: 120\n  });\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    const padding = 100; // Increase padding between icons\n    return Math.floor(Math.random() * (canvas.width - padding * 2) + padding);\n  };\n\n  // First, add a ref to track initialization\n  const isInitialized = useRef(false);\n\n  // Modify the loadIcons function to ensure category rotation\n  const loadIcons = () => {\n    // Rotate to next instruction/category\n    setCurrentInstructionIndex(prevIndex => (prevIndex + 1) % instructions.length);\n    iconsRef.current = [];\n    const positions = [];\n    const currentCategory = instructions[currentInstructionIndex].category;\n    console.log('\\n--- New Set of Icons ---');\n    console.log(`Current Mission Category: ${currentCategory}`);\n\n    // Get all icons for current category\n    const categoryIcons = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => path.includes(currentCategory)).map(([name, path]) => ({\n      path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n      name: name,\n      category: currentCategory\n    }));\n\n    // Get all icons from other categories (excluding current category)\n    const otherCategoryIcons = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => !path.includes(currentCategory)).map(([name, path]) => ({\n      path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n      name: name,\n      category: path.split('/')[2] // Change from [1] to [2] to get the proper category name\n    }));\n\n    // For current category: Get 4 icons (with possible repeats if less than 4 available)\n    let selectedCategoryIcons = [];\n    if (categoryIcons.length <= 4) {\n      // If we have less than 4 icons, repeat icons until we have 4\n      while (selectedCategoryIcons.length < 4) {\n        selectedCategoryIcons.push(...categoryIcons.slice(0, 4 - selectedCategoryIcons.length));\n      }\n    } else {\n      // If we have more than 4 icons, randomly select 4 unique ones\n      const shuffled = [...categoryIcons].sort(() => 0.5 - Math.random());\n      selectedCategoryIcons = shuffled.slice(0, 4);\n    }\n\n    // After selectedCategoryIcons is created, log the 4 selected icons\n    console.log('\\nSelected Icons for Current Mission:');\n    console.log(`${currentCategory} = ${selectedCategoryIcons.map(icon => icon.name).join(', ')}`);\n\n    // For other categories: Get 6 random unique icons from different categories\n    const selectedOtherIcons = [];\n    const usedCategories = new Set();\n\n    // Build a mapping of categories to their icons\n    const categoryIconMap = otherCategoryIcons.reduce((acc, icon) => {\n      if (!acc[icon.category]) {\n        acc[icon.category] = [];\n      }\n      acc[icon.category].push(icon);\n      return acc;\n    }, {});\n    const availableCategories = Object.keys(categoryIconMap).filter(cat => cat !== currentCategory);\n\n    // Shuffle the categories\n    const shuffledCategories = availableCategories.sort(() => 0.5 - Math.random());\n    for (let i = 0; i < shuffledCategories.length && selectedOtherIcons.length < 6; i++) {\n      const category = shuffledCategories[i];\n      if (usedCategories.has(category)) {\n        continue;\n      }\n      const iconsInCategory = categoryIconMap[category];\n      if (iconsInCategory.length > 0) {\n        // Randomly select an icon from this category\n        const randomIconIndex = Math.floor(Math.random() * iconsInCategory.length);\n        const icon = iconsInCategory[randomIconIndex];\n        selectedOtherIcons.push(icon);\n        usedCategories.add(category);\n      }\n    }\n\n    // After selectedOtherIcons is created, log the 6 distraction icons\n    console.log('\\nDistraction Icons from Other Categories:');\n    selectedOtherIcons.forEach(icon => {\n      console.log(`${icon.name} (${icon.category})`);\n    });\n    console.log('------------------------\\n');\n\n    // If we still need more icons, fill from remaining icons irrespective of category\n    if (selectedOtherIcons.length < 6) {\n      const remainingIcons = otherCategoryIcons.filter(icon => icon.category !== currentCategory && !selectedOtherIcons.includes(icon));\n      const shuffledRemainingIcons = remainingIcons.sort(() => 0.5 - Math.random());\n      selectedOtherIcons.push(...shuffledRemainingIcons.slice(0, 6 - selectedOtherIcons.length));\n    }\n\n    // Add current category icons with random X positions\n    selectedCategoryIcons.forEach(iconInfo => {\n      let x = getRandomX();\n      while (positions.some(pos => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: iconInfo.category,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false\n      });\n    });\n\n    // Add other category icons with random X positions\n    selectedOtherIcons.forEach(iconInfo => {\n      let x = getRandomX();\n      while (positions.some(pos => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: iconInfo.category,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false\n      });\n    });\n  };\n\n  // Show feedback (checkmark or X) and points after a shot\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now()\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    const currentCategory = instructions[currentInstructionIndex].category;\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter(bullet => {\n        if (bullet.x > icon.x && bullet.x < icon.x + 50 && bullet.y > icon.y && bullet.y < icon.y + 50) {\n          icon.hit = true;\n          if (icon.type === currentCategory) {\n            const heightPercentage = 1 - icon.y / canvas.height;\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            setScore(prev => {\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore(prev => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n\n    // Only load new icons if we have none and the game is still running\n    if (iconsRef.current.length === 0 && timeLeft > 0 && isInitialized.current) {\n      playSound('levelup');\n      loadIcons();\n    }\n  };\n\n  // The main game loop, which draws everything on the canvas\n  const gameLoop = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw the rocket (gun)\n    const {\n      x: gunX,\n      y: gunY,\n      width,\n      height\n    } = gunRef.current;\n    ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n\n    // Draw icons\n    iconsRef.current.forEach(icon => {\n      if (!icon.hit) {\n        // Save the current context state\n        ctx.save();\n\n        // Create a rounded rectangle path\n        const radius = 10; // Adjust this value to control the roundness\n        const x = icon.x;\n        const y = icon.y;\n        const width = 50;\n        const height = 50;\n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n\n        // Clip to the rounded rectangle\n        ctx.clip();\n\n        // Draw the icon\n        ctx.drawImage(icon.image, x, y, width, height);\n\n        // Restore the context state\n        ctx.restore();\n        icon.y += 0.2; // Even slower movement\n      }\n    });\n\n    // Remove icons that are off screen and check if we need new ones\n    iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n\n    // Only load new icons if we have none and the game is still running\n    if (iconsRef.current.length === 0 && timeLeft > 0 && isInitialized.current) {\n      playSound('levelup');\n      loadIcons();\n    }\n\n    // Draw bullets\n    bulletsRef.current.forEach(bullet => {\n      ctx.drawImage(fireballImage, bullet.x, bullet.y, 20, 20);\n      bullet.y -= 5;\n    });\n\n    // Remove bullets that are off-screen\n    bulletsRef.current = bulletsRef.current.filter(b => b.y > 0);\n\n    // Draw feedback with consistent styling for both positive and negative points\n    const now = Date.now();\n    feedbacksRef.current = feedbacksRef.current.filter(feedback => {\n      const elapsed = now - feedback.time;\n      if (elapsed < 3000) {\n        // Draw points with consistent styling\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n        ctx.shadowBlur = 4;\n        ctx.fillStyle = feedback.isCorrect ? '#4CAF50' : '#F44336';\n        ctx.font = 'bold 28px Arial';\n\n        // Show points with + or - sign\n        const pointsText = feedback.points > 0 ? `+${feedback.points}` : `${feedback.points}`;\n        ctx.fillText(pointsText, feedback.x + 10, feedback.y - 20);\n\n        // Draw icon name\n        ctx.font = '16px Arial';\n        ctx.fillText(feedback.name, feedback.x + 60, feedback.y + 25);\n\n        // Draw feedback symbol\n        ctx.font = 'bold 55px Arial';\n        ctx.fillText(feedback.isCorrect ? '✔' : '✘', feedback.x + 10, feedback.y + 30);\n        ctx.shadowBlur = 0;\n        return true;\n      }\n      return false;\n    });\n    checkCollisions();\n\n    // Update and draw particles\n    particlesRef.current = particlesRef.current.filter(particle => {\n      if (particle.lifetime > 0 && particle.size > 0) {\n        particle.update();\n        particle.draw(ctx);\n        return true;\n      }\n      return false;\n    });\n    requestAnimationFrame(gameLoop);\n  };\n\n  // Add sound references with error handling\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Initialize sounds with error handling\n  useEffect(() => {\n    const soundFiles = {\n      shoot: '/sounds/pistol_sound.mp3',\n      correct: '/sounds/correct_sound.mp3',\n      incorrect: '/sounds/incorrect_sound.mp3',\n      levelup: '/sounds/levelup.mp3'\n    };\n\n    // Create a safe audio player that won't break if files are missing\n    const createSafeAudio = path => {\n      const audio = new Audio();\n      return new Promise(resolve => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n\n        // Set timeout in case the file takes too long to load\n        setTimeout(() => resolve(null), 2000);\n        audio.src = path;\n      });\n    };\n\n    // Load all sound files with error handling\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n    loadSounds();\n\n    // Set initial volume\n    return () => {\n      // Cleanup sounds on unmount\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  // Safe play function\n  const playSound = soundName => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Add a mute toggle button to the UI\n  const [isMuted, setIsMuted] = useState(false);\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !isMuted;\n      }\n    });\n  };\n\n  // Add new state and refs for particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n\n  // Add state to track if we've already handled game over\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  // Add state to track if game should start\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Particle class\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size; // Store initial size\n    }\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      // Calculate size based on lifetime instead of continuous subtraction\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n    draw(ctx) {\n      if (this.size <= 0) return; // Don't draw if size is 0 or negative\n\n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Function to create explosion effect\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled, gameStarted]);\n\n  // Handle game over\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    setGameOver(true);\n    setGameOverHandled(true);\n    const newScore = {\n      name: playerName,\n      score\n    };\n    const newHighScores = [...highScores, newScore].sort((a, b) => b.score - a.score).slice(0, 5);\n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  // Modify the initialization useEffect\n  useEffect(() => {\n    if (canvasRef.current && !isInitialized.current) {\n      const canvas = canvasRef.current;\n      canvas.width = 1200;\n      canvas.height = 800;\n      const ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n\n      // Only load icons once during initialization\n      loadIcons();\n      isInitialized.current = true;\n      requestAnimationFrame(gameLoop);\n    }\n  }, []);\n\n  // Second effect for event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ROCKET_WIDTH = 50;\n    const FIXED_ROCKET_Y = 550;\n    const handleMouseMove = e => {\n      const rect = canvas.getBoundingClientRect();\n\n      // Calculate new X position\n      let newX = e.clientX - rect.left - gunRef.current.width / 2;\n\n      // Add boundary checks\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n\n      // Update gun position\n      gunRef.current.x = newX;\n    };\n    const handleCanvasClick = () => {\n      if (gameStarted && timeLeft > 0) {\n        playSound('shoot');\n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20\n        });\n      }\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted]);\n\n  // Clear both name and rocket selection when component mounts\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  // Add state for modal visibility\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  // Add rocket options\n  const rocketOptions = [{\n    id: 'rocket1.png',\n    name: 'Modern Rocket'\n  }, {\n    id: 'rocket2.png',\n    name: 'Power Rocket'\n  }, {\n    id: 'rocket3.png',\n    name: 'Stealth Rocket'\n  }, {\n    id: 'rocket4.png',\n    name: 'Classic Rocket'\n  }];\n\n  // Handle rocket selection\n  const handleRocketSelect = rocketId => {\n    setSelectedRocket(rocketId);\n    localStorage.setItem('selectedRocket', rocketId);\n\n    // Update the rocket image immediately\n    rocketImage.current.src = `icons/${rocketId}`;\n    setShowRocketModal(false);\n    // Start the game after rocket selection\n    setGameStarted(true);\n  };\n\n  // Add state for cheerleader messages\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  // Add cheerleader messages for different situations\n  const cheerleaderMessages = {\n    goodShot: [\"Great shot! You're an AWS Pro! 🌟\", \"Amazing cloud skills! Keep it up! 🎯\", \"You're on fire in the cloud! 🔥\", \"That's how AWS experts do it! 👏\"],\n    combo: [\"Cloud combo! 🎮\", \"You're scaling infinitely! ⚡\", \"What an AWS streak! 🌈\"],\n    timeWarning: [\"30 seconds left - you're highly available! ⏰\", \"Time for the final deployment! 💪\", \"Make every compute unit count! ⭐\"],\n    encouragement: [\"You've got this, cloud warrior! 🚀\", \"Keep going! You're AWS certified material! 🌟\", \"I believe in your cloud powers! 💫\", \"Show them your AWS expertise! 💪\"],\n    highScore: [\"New high score! You're going serverless! 🏆\", \"You're breaking cloud records! 🎖️\", \"Legendary AWS performance! 👑\"]\n  };\n\n  // Function to show a random message from a category\n  const showCheerleaderMessage = category => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n\n    // Hide message after 3 seconds\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  // Add periodic encouragement\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  // Add time warning messages\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  // Add this function near other handlers (around line 440)\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowNameModal(false);\n  };\n\n  // Ensure proper mission text display\n  const getMissionText = category => {\n    const categoryName = category.replace('Arch_', '').replace(/-/g, ' ');\n    return `Shoot the ${categoryName} icons!`;\n  };\n\n  // Ensure icons are loaded properly\n  useEffect(() => {\n    // Preload all AWS service icons\n    Object.values(SERVICE_MAPPINGS).forEach(path => {\n      const img = new Image();\n      img.src = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`;\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameCanvas-game-title\",\n      children: \"AWS Cloud Shooter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 804,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-canvas-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"gameCanvas-game-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-instruction-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-player-name\",\n            children: [\"Player: \", playerName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 811,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-score-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"alien\",\n              children: \"\\uD83D\\uDC7E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 15\n            }, this), ' ', \"Score: \", score, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"joystick\",\n              children: \"\\uD83D\\uDD79\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 817,\n              columnNumber: 15\n            }, this), soundsLoaded && Object.values(sounds.current).some(sound => sound) && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gameCanvas-sound-toggle\",\n              onClick: toggleMute,\n              \"aria-label\": \"Toggle sound\",\n              children: isMuted ? '🔇' : '🔊'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 820,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 810,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-timer-display\",\n          children: [\"Time: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 831,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-score-explanation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"How to Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 836,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Hit correct icon: +5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 838,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Height bonus: up to +20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 839,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Wrong hit: -5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 840,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Tip: Shoot icons as high as possible!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 841,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-high-scores\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"High Scores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 846,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: highScores.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gameCanvas-high-score-name\",\n                children: [entry.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 850,\n                columnNumber: 17\n              }, this), \" \", entry.score]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 849,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 845,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-mission-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"gameCanvas-mission-title\",\n            children: \"Current Mission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 857,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-mission-text\",\n            children: instructions[currentInstructionIndex].text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 856,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 809,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 805,\n      columnNumber: 7\n    }, this), showRocketModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-rocket-selection-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Choose Your Rocket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 871,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-rocket-grid\",\n          children: rocketOptions.map(rocket => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `gameCanvas-rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`,\n            onClick: () => handleRocketSelect(rocket.id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `icons/${rocket.id}`,\n              alt: rocket.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 879,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: rocket.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 19\n            }, this)]\n          }, rocket.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 874,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 872,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 870,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 869,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 893,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 894,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 892,\n      columnNumber: 9\n    }, this), showCheerMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-cheerleader-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheerleader-character\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/cheerleader.png\",\n          alt: \"Cheerleader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 902,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheer-message\",\n        children: cheerMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 905,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 901,\n      columnNumber: 9\n    }, this), showNameModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to AWS Cloud Shooter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 914,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your name to start the game:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 915,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempPlayerName,\n            onChange: e => {\n              setTempPlayerName(e.target.value);\n              setNameError('');\n            },\n            placeholder: \"Your name\",\n            className: \"gameCanvas-name-input\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 15\n          }, this), nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-name-error\",\n            children: nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 928,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"gameCanvas-start-button\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 929,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 913,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 912,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 803,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"eP8j4NCtVdeBebBqVswRkB/XWRU=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","AWS_ICON_CATEGORIES","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","S3_BUCKET_URL","ICONS_BASE_PATH","getMissionText","category","categoryName","replace","GameCanvas","_s","timeLeft","setTimeLeft","score","setScore","currentInstructionIndex","setCurrentInstructionIndex","selectedRocket","setSelectedRocket","savedRocket","localStorage","getItem","showNameModal","setShowNameModal","tempPlayerName","setTempPlayerName","nameError","setNameError","playerName","setPlayerName","savedName","rocketPosition","setRocketPosition","x","y","instructions","getRandomCategories","categories","Object","keys","shuffled","sort","Math","random","slice","selectedCategories","console","log","map","categoryValue","text","split","word","charAt","toUpperCase","toLowerCase","join","iconTypes","reduce","acc","instruction","categoryServices","entries","filter","_","path","includes","name","canvasRef","iconsRef","bulletsRef","feedbacksRef","rocketImage","Image","current","src","fireballImage","gunRef","width","height","getRandomX","canvas","padding","floor","isInitialized","loadIcons","prevIndex","length","positions","currentCategory","categoryIcons","otherCategoryIcons","selectedCategoryIcons","push","icon","selectedOtherIcons","usedCategories","Set","categoryIconMap","availableCategories","cat","shuffledCategories","i","has","iconsInCategory","randomIconIndex","add","forEach","remainingIcons","shuffledRemainingIcons","iconInfo","some","pos","abs","iconImage","type","image","hit","showFeedback","isCorrect","points","iconName","time","Date","now","checkCollisions","bullets","icons","iconIndex","bullet","heightPercentage","heightBonus","prev","max","highScores","s","showCheerleaderMessage","playSound","createExplosion","splice","gameLoop","ctx","getContext","clearRect","gunX","gunY","drawImage","save","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","b","feedback","elapsed","shadowColor","shadowBlur","fillStyle","font","pointsText","fillText","particlesRef","particle","lifetime","size","update","draw","requestAnimationFrame","sounds","soundsLoaded","setSoundsLoaded","soundFiles","shoot","correct","incorrect","levelup","createSafeAudio","audio","Audio","Promise","resolve","addEventListener","warn","setTimeout","loadSounds","loadedSounds","key","values","sound","pause","soundName","isMuted","currentTime","volume","play","catch","err","setIsMuted","toggleMute","muted","setHighScores","saved","JSON","parse","gameOver","setGameOver","gameOverHandled","setGameOverHandled","gameStarted","setGameStarted","Particle","constructor","color","speedX","speedY","initialSize","globalAlpha","arc","PI","fill","timer","setInterval","clearInterval","handleGameOver","newScore","newHighScores","a","setItem","stringify","imageSmoothingEnabled","ROCKET_WIDTH","FIXED_ROCKET_Y","handleMouseMove","e","rect","getBoundingClientRect","newX","clientX","left","min","handleCanvasClick","removeEventListener","removeItem","showRocketModal","setShowRocketModal","rocketOptions","id","handleRocketSelect","rocketId","cheerMessage","setCheerMessage","showCheerMessage","setShowCheerMessage","cheerleaderMessages","goodShot","combo","timeWarning","encouragement","highScore","messages","randomMessage","encouragementInterval","handleNameSubmit","preventDefault","trim","img","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","role","onClick","entry","index","rocket","alt","window","location","reload","onSubmit","value","onChange","target","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game copy 20- copy 2/src/components/GameCanvas.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AWS_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Add these constants from IconResolver.js\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\n\n// First, declare the getMissionText function\nconst getMissionText = (category) => {\n  if (!category) return '';\n  const categoryName = category.replace('Arch_', '').replace(/-/g, ' ');\n  return `Shoot the ${categoryName} icons!`;\n};\n\nconst GameCanvas = () => {\n  // First, declare all state\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const savedRocket = localStorage.getItem('selectedRocket');\n    return savedRocket || 'rocket1.png';\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({ x: 375, y: 550 });\n\n  // First, modify the instructions state to include more categories\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AWS_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 6);\n    };\n\n    const selectedCategories = getRandomCategories();\n    console.log('Selected categories:', selectedCategories);\n\n    return selectedCategories.map(category => {\n      const categoryValue = AWS_ICON_CATEGORIES[category];\n      console.log('Category:', category, 'Value:', categoryValue);\n      return {\n        text: `Shoot the ${category.split('_')\n          .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n          .join(' ')} icons!`,\n        category: categoryValue\n      };\n    });\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS)\n        .filter(([_, path]) => path.includes(instruction.category))\n        .map(([name, path]) => ({\n          path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n          name: name\n        }));\n\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs and other setup code\n  const canvasRef = useRef(null);\n\n  // We'll keep arrays for icons, bullets, and feedback in refs to avoid\n  // re-rendering the whole component every time they update.\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n\n  // Images for the gun and bullets\n  const rocketImage = useRef(new Image());\n  \n  // Initialize rocket image\n  useEffect(() => {\n    rocketImage.current.src = `icons/${selectedRocket}`;\n  }, [selectedRocket]); // Update when selectedRocket changes\n\n  const fireballImage = new Image();\n  fireballImage.src = 'icons/fireball.png';\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25, // center of an 800px width minus half the gun width\n    y: 800 - 100, // Adjust this value to move the rocket closer to the bottom\n    width: 120,\n    height: 120,\n  });\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    const padding = 100; // Increase padding between icons\n    return Math.floor(Math.random() * (canvas.width - padding * 2) + padding);\n  };\n\n  // First, add a ref to track initialization\n  const isInitialized = useRef(false);\n\n  // Modify the loadIcons function to ensure category rotation\n  const loadIcons = () => {\n    // Rotate to next instruction/category\n    setCurrentInstructionIndex(prevIndex => (prevIndex + 1) % instructions.length);\n    \n    iconsRef.current = [];\n    const positions = [];\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    console.log('\\n--- New Set of Icons ---');\n    console.log(`Current Mission Category: ${currentCategory}`);\n\n    // Get all icons for current category\n    const categoryIcons = Object.entries(SERVICE_MAPPINGS)\n      .filter(([_, path]) => path.includes(currentCategory))\n      .map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name,\n        category: currentCategory\n      }));\n\n    // Get all icons from other categories (excluding current category)\n    const otherCategoryIcons = Object.entries(SERVICE_MAPPINGS)\n      .filter(([_, path]) => !path.includes(currentCategory))\n      .map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name,\n        category: path.split('/')[2] // Change from [1] to [2] to get the proper category name\n      }));\n\n    // For current category: Get 4 icons (with possible repeats if less than 4 available)\n    let selectedCategoryIcons = [];\n    if (categoryIcons.length <= 4) {\n      // If we have less than 4 icons, repeat icons until we have 4\n      while (selectedCategoryIcons.length < 4) {\n        selectedCategoryIcons.push(\n          ...categoryIcons.slice(0, 4 - selectedCategoryIcons.length)\n        );\n      }\n    } else {\n      // If we have more than 4 icons, randomly select 4 unique ones\n      const shuffled = [...categoryIcons].sort(() => 0.5 - Math.random());\n      selectedCategoryIcons = shuffled.slice(0, 4);\n    }\n\n    // After selectedCategoryIcons is created, log the 4 selected icons\n    console.log('\\nSelected Icons for Current Mission:');\n    console.log(`${currentCategory} = ${selectedCategoryIcons.map(icon => icon.name).join(', ')}`);\n\n    // For other categories: Get 6 random unique icons from different categories\n    const selectedOtherIcons = [];\n    const usedCategories = new Set();\n\n    // Build a mapping of categories to their icons\n    const categoryIconMap = otherCategoryIcons.reduce((acc, icon) => {\n      if (!acc[icon.category]) {\n        acc[icon.category] = [];\n      }\n      acc[icon.category].push(icon);\n      return acc;\n    }, {});\n\n    const availableCategories = Object.keys(categoryIconMap).filter(\n      (cat) => cat !== currentCategory\n    );\n\n    // Shuffle the categories\n    const shuffledCategories = availableCategories.sort(() => 0.5 - Math.random());\n\n    for (let i = 0; i < shuffledCategories.length && selectedOtherIcons.length < 6; i++) {\n      const category = shuffledCategories[i];\n\n      if (usedCategories.has(category)) {\n        continue;\n      }\n\n      const iconsInCategory = categoryIconMap[category];\n\n      if (iconsInCategory.length > 0) {\n        // Randomly select an icon from this category\n        const randomIconIndex = Math.floor(Math.random() * iconsInCategory.length);\n        const icon = iconsInCategory[randomIconIndex];\n\n        selectedOtherIcons.push(icon);\n        usedCategories.add(category);\n      }\n    }\n\n    // After selectedOtherIcons is created, log the 6 distraction icons\n    console.log('\\nDistraction Icons from Other Categories:');\n    selectedOtherIcons.forEach(icon => {\n      console.log(`${icon.name} (${icon.category})`);\n    });\n    console.log('------------------------\\n');\n\n    // If we still need more icons, fill from remaining icons irrespective of category\n    if (selectedOtherIcons.length < 6) {\n      const remainingIcons = otherCategoryIcons.filter(\n        (icon) => icon.category !== currentCategory && !selectedOtherIcons.includes(icon)\n      );\n      const shuffledRemainingIcons = remainingIcons.sort(() => 0.5 - Math.random());\n      selectedOtherIcons.push(...shuffledRemainingIcons.slice(0, 6 - selectedOtherIcons.length));\n    }\n\n    // Add current category icons with random X positions\n    selectedCategoryIcons.forEach((iconInfo) => {\n      let x = getRandomX();\n      while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: iconInfo.category,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false,\n      });\n    });\n\n    // Add other category icons with random X positions\n    selectedOtherIcons.forEach((iconInfo) => {\n      let x = getRandomX();\n      while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: iconInfo.category,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false,\n      });\n    });\n  };\n\n  // Show feedback (checkmark or X) and points after a shot\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now(),\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter((bullet) => {\n        if (\n          bullet.x > icon.x &&\n          bullet.x < icon.x + 50 &&\n          bullet.y > icon.y &&\n          bullet.y < icon.y + 50\n        ) {\n          icon.hit = true;\n\n          if (icon.type === currentCategory) {\n            const heightPercentage = 1 - (icon.y / canvas.height);\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            \n            setScore((prev) => {\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore((prev) => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n\n    // Only load new icons if we have none and the game is still running\n    if (iconsRef.current.length === 0 && timeLeft > 0 && isInitialized.current) {\n      playSound('levelup');\n      loadIcons();\n    }\n  };\n\n  // The main game loop, which draws everything on the canvas\n  const gameLoop = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw the rocket (gun)\n    const { x: gunX, y: gunY, width, height } = gunRef.current;\n    ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n\n    // Draw icons\n    iconsRef.current.forEach((icon) => {\n      if (!icon.hit) {\n        // Save the current context state\n        ctx.save();\n        \n        // Create a rounded rectangle path\n        const radius = 10; // Adjust this value to control the roundness\n        const x = icon.x;\n        const y = icon.y;\n        const width = 50;\n        const height = 50;\n        \n        ctx.beginPath();\n        ctx.moveTo(x + radius, y);\n        ctx.lineTo(x + width - radius, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n        ctx.lineTo(x + width, y + height - radius);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n        ctx.lineTo(x + radius, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n        ctx.lineTo(x, y + radius);\n        ctx.quadraticCurveTo(x, y, x + radius, y);\n        ctx.closePath();\n        \n        // Clip to the rounded rectangle\n        ctx.clip();\n        \n        // Draw the icon\n        ctx.drawImage(icon.image, x, y, width, height);\n        \n        // Restore the context state\n        ctx.restore();\n        \n        icon.y += 0.2; // Even slower movement\n      }\n    });\n\n    // Remove icons that are off screen and check if we need new ones\n    iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n    \n    // Only load new icons if we have none and the game is still running\n    if (iconsRef.current.length === 0 && timeLeft > 0 && isInitialized.current) {\n      playSound('levelup');\n      loadIcons();\n    }\n\n    // Draw bullets\n    bulletsRef.current.forEach((bullet) => {\n      ctx.drawImage(fireballImage, bullet.x, bullet.y, 20, 20);\n      bullet.y -= 5;\n    });\n\n    // Remove bullets that are off-screen\n    bulletsRef.current = bulletsRef.current.filter((b) => b.y > 0);\n\n    // Draw feedback with consistent styling for both positive and negative points\n    const now = Date.now();\n    feedbacksRef.current = feedbacksRef.current.filter((feedback) => {\n      const elapsed = now - feedback.time;\n      if (elapsed < 3000) {\n        // Draw points with consistent styling\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n        ctx.shadowBlur = 4;\n        ctx.fillStyle = feedback.isCorrect ? '#4CAF50' : '#F44336';\n        ctx.font = 'bold 28px Arial';\n        \n        // Show points with + or - sign\n        const pointsText = feedback.points > 0 ? `+${feedback.points}` : `${feedback.points}`;\n        ctx.fillText(\n          pointsText,\n          feedback.x + 10,\n          feedback.y - 20\n        );\n\n        // Draw icon name\n        ctx.font = '16px Arial';\n        ctx.fillText(\n          feedback.name,\n          feedback.x + 60,\n          feedback.y + 25\n        );\n        \n        // Draw feedback symbol\n        ctx.font = 'bold 55px Arial';\n        ctx.fillText(\n          feedback.isCorrect ? '✔' : '✘',\n          feedback.x + 10,\n          feedback.y + 30\n        );\n        \n        ctx.shadowBlur = 0;\n        return true;\n      }\n      return false;\n    });\n\n    checkCollisions();\n\n    // Update and draw particles\n    particlesRef.current = particlesRef.current.filter(particle => {\n      if (particle.lifetime > 0 && particle.size > 0) {\n        particle.update();\n        particle.draw(ctx);\n        return true;\n      }\n      return false;\n    });\n\n    requestAnimationFrame(gameLoop);\n  };\n\n  // Add sound references with error handling\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Initialize sounds with error handling\n  useEffect(() => {\n    const soundFiles = {\n      shoot: '/sounds/pistol_sound.mp3',\n      correct: '/sounds/correct_sound.mp3',\n      incorrect: '/sounds/incorrect_sound.mp3',\n      levelup: '/sounds/levelup.mp3'\n    };\n\n    // Create a safe audio player that won't break if files are missing\n    const createSafeAudio = (path) => {\n      const audio = new Audio();\n      \n      return new Promise((resolve) => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n\n        // Set timeout in case the file takes too long to load\n        setTimeout(() => resolve(null), 2000);\n\n        audio.src = path;\n      });\n    };\n\n    // Load all sound files with error handling\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      \n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n\n    loadSounds();\n\n    // Set initial volume\n    return () => {\n      // Cleanup sounds on unmount\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  // Safe play function\n  const playSound = (soundName) => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Add a mute toggle button to the UI\n  const [isMuted, setIsMuted] = useState(false);\n\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !isMuted;\n      }\n    });\n  };\n\n  // Add new state and refs for particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n\n  // Add state to track if we've already handled game over\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  // Add state to track if game should start\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Particle class\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size; // Store initial size\n    }\n\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      // Calculate size based on lifetime instead of continuous subtraction\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n\n    draw(ctx) {\n      if (this.size <= 0) return; // Don't draw if size is 0 or negative\n      \n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Function to create explosion effect\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled, gameStarted]);\n\n  // Handle game over\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    \n    setGameOver(true);\n    setGameOverHandled(true);\n    \n    const newScore = { name: playerName, score };\n    const newHighScores = [...highScores, newScore]\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 5);\n    \n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  // Modify the initialization useEffect\n  useEffect(() => {\n    if (canvasRef.current && !isInitialized.current) {\n      const canvas = canvasRef.current;\n      canvas.width = 1200;\n      canvas.height = 800;\n      \n      const ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n\n      // Only load icons once during initialization\n      loadIcons();\n      isInitialized.current = true;\n      \n      requestAnimationFrame(gameLoop);\n    }\n  }, []);\n\n  // Second effect for event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    \n    const ROCKET_WIDTH = 50;\n    const FIXED_ROCKET_Y = 550;\n\n    const handleMouseMove = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      \n      // Calculate new X position\n      let newX = e.clientX - rect.left - (gunRef.current.width / 2);\n      \n      // Add boundary checks\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n      \n      // Update gun position\n      gunRef.current.x = newX;\n    };\n\n    const handleCanvasClick = () => {\n      if (gameStarted && timeLeft > 0) {\n        playSound('shoot');\n        \n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20,\n        });\n      }\n    };\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted]);\n\n  // Clear both name and rocket selection when component mounts\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  // Add state for modal visibility\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  // Add rocket options\n  const rocketOptions = [\n    { id: 'rocket1.png', name: 'Modern Rocket' },\n    { id: 'rocket2.png', name: 'Power Rocket' },\n    { id: 'rocket3.png', name: 'Stealth Rocket' },\n    { id: 'rocket4.png', name: 'Classic Rocket' },\n  ];\n\n  // Handle rocket selection\n  const handleRocketSelect = (rocketId) => {\n    setSelectedRocket(rocketId);\n    localStorage.setItem('selectedRocket', rocketId);\n    \n    // Update the rocket image immediately\n    rocketImage.current.src = `icons/${rocketId}`;\n    \n    setShowRocketModal(false);\n    // Start the game after rocket selection\n    setGameStarted(true);\n  };\n\n  // Add state for cheerleader messages\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  // Add cheerleader messages for different situations\n  const cheerleaderMessages = {\n    goodShot: [\n      \"Great shot! You're an AWS Pro! 🌟\",\n      \"Amazing cloud skills! Keep it up! 🎯\",\n      \"You're on fire in the cloud! 🔥\",\n      \"That's how AWS experts do it! 👏\",\n    ],\n    combo: [\n      \"Cloud combo! 🎮\",\n      \"You're scaling infinitely! ⚡\",\n      \"What an AWS streak! 🌈\",\n    ],\n    timeWarning: [\n      \"30 seconds left - you're highly available! ⏰\",\n      \"Time for the final deployment! 💪\",\n      \"Make every compute unit count! ⭐\",\n    ],\n    encouragement: [\n      \"You've got this, cloud warrior! 🚀\",\n      \"Keep going! You're AWS certified material! 🌟\",\n      \"I believe in your cloud powers! 💫\",\n      \"Show them your AWS expertise! 💪\",\n    ],\n    highScore: [\n      \"New high score! You're going serverless! 🏆\",\n      \"You're breaking cloud records! 🎖️\",\n      \"Legendary AWS performance! 👑\",\n    ]\n  };\n\n  // Function to show a random message from a category\n  const showCheerleaderMessage = (category) => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n    \n    // Hide message after 3 seconds\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  // Add periodic encouragement\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  // Add time warning messages\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  // Add this function near other handlers (around line 440)\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowNameModal(false);\n  };\n\n  // Ensure proper mission text display\n  const getMissionText = (category) => {\n    const categoryName = category.replace('Arch_', '').replace(/-/g, ' ');\n    return `Shoot the ${categoryName} icons!`;\n  };\n\n  // Ensure icons are loaded properly\n  useEffect(() => {\n    // Preload all AWS service icons\n    Object.values(SERVICE_MAPPINGS).forEach(path => {\n      const img = new Image();\n      img.src = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`;\n    });\n  }, []);\n\n  return (\n    <div className=\"gameCanvas-container\">\n      <h1 className=\"gameCanvas-game-title\">AWS Cloud Shooter</h1>\n      <div className=\"gameCanvas-game-content\">\n        <div className=\"gameCanvas-canvas-wrapper\">\n          <canvas ref={canvasRef} className=\"gameCanvas-game-canvas\" />\n        </div>\n        <div className=\"gameCanvas-instruction-panel\">\n          <div className=\"gameCanvas-player-info\">\n            <div className=\"gameCanvas-player-name\">\n              Player: {playerName}\n            </div>\n            <div className=\"gameCanvas-score-display\">\n              <span role=\"img\" aria-label=\"alien\">👾</span>{' '}\n              Score: {score}{' '}\n              <span role=\"img\" aria-label=\"joystick\">🕹️</span>\n              \n              {soundsLoaded && Object.values(sounds.current).some(sound => sound) && (\n                <button \n                  className=\"gameCanvas-sound-toggle\"\n                  onClick={toggleMute}\n                  aria-label=\"Toggle sound\"\n                >\n                  {isMuted ? '🔇' : '🔊'}\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"gameCanvas-timer-display\">\n            Time: {timeLeft}s\n          </div>\n\n          <div className=\"gameCanvas-score-explanation\">\n            <h4>How to Score:</h4>\n            <ul>\n            <li>• Hit correct icon: +5 points</li>\n            <li>• Height bonus: up to +20</li>\n            <li>• Wrong hit: -5 points</li>\n            <li>• Tip: Shoot icons as high as possible!</li>\n            </ul>\n          </div>\n\n          <div className=\"gameCanvas-high-scores\">\n          <h4>High Scores</h4>\n          <ul>\n            {highScores.map((entry, index) => (\n              <li key={index}>\n                <span className=\"gameCanvas-high-score-name\">{entry.name}:</span> {entry.score}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n          <div className=\"gameCanvas-mission-container\">\n            <h3 className=\"gameCanvas-mission-title\">\n              Current Mission\n            </h3>\n            \n            <div className=\"gameCanvas-mission-text\">\n              {instructions[currentInstructionIndex].text}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showRocketModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-rocket-selection-modal\">\n            <h2>Choose Your Rocket</h2>\n            <div className=\"gameCanvas-rocket-grid\">\n              {rocketOptions.map((rocket) => (\n                <div \n                  key={rocket.id} \n                  className={`gameCanvas-rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`}\n                  onClick={() => handleRocketSelect(rocket.id)}\n                >\n                  <img \n                    src={`icons/${rocket.id}`} \n                    alt={rocket.name}\n                  />\n                  <p>{rocket.name}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {gameOver && (\n        <div className=\"gameCanvas-game-over\">\n          <h3>Game Over!</h3>\n          <button onClick={() => window.location.reload()}>\n            Play Again\n          </button>\n        </div>\n      )}\n\n      {showCheerMessage && (\n        <div className=\"gameCanvas-cheerleader-container\">\n          <div className=\"gameCanvas-cheerleader-character\">\n            <img src=\"icons/cheerleader.png\" alt=\"Cheerleader\" />\n          </div>\n          <div className=\"gameCanvas-cheer-message\">\n            {cheerMessage}\n          </div>\n        </div>\n      )}\n\n      {showNameModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-modal\">\n            <h2>Welcome to AWS Cloud Shooter!</h2>\n            <p>Enter your name to start the game:</p>\n            <form onSubmit={handleNameSubmit}>\n              <input\n                type=\"text\"\n                value={tempPlayerName}\n                onChange={(e) => {\n                  setTempPlayerName(e.target.value);\n                  setNameError('');\n                }}\n                placeholder=\"Your name\"\n                className=\"gameCanvas-name-input\"\n                autoFocus\n              />\n              {nameError && <div className=\"gameCanvas-name-error\">{nameError}</div>}\n              <button type=\"submit\" className=\"gameCanvas-start-button\">\n                Start Game\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GameCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}