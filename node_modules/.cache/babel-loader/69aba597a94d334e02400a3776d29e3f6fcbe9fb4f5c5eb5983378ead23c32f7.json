{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, useNodesState, useEdgesState, MarkerType, Handle } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { getCachedServiceIcon } from '../services/IconResolver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSServiceNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(motion.div, {\n  className: `aws-service-node ${data.isMissing ? 'missing' : ''}`,\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  animate: {\n    scale: 1,\n    opacity: 1\n  },\n  exit: {\n    scale: 0,\n    opacity: 0\n  },\n  whileHover: {\n    scale: 1.1\n  },\n  transition: {\n    type: \"spring\",\n    stiffness: 300\n  },\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\",\n    id: `${data.id}-target`,\n    className: \"handle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.icon,\n      alt: data.label,\n      className: \"service-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"service-label\",\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\",\n    id: `${data.id}-source`,\n    className: \"handle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c = AWSServiceNode;\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\nconst createNodeId = service => {\n  const serviceName = typeof service === 'string' ? service : service === null || service === void 0 ? void 0 : service.name;\n  if (!serviceName) {\n    console.warn('⚠️ Invalid service detected:', service);\n    return 'invalid-service';\n  }\n  return serviceName.toLowerCase().replace(/\\s+/g, '-');\n};\nconst AWSArchitectureDisplay = ({\n  architecture\n}) => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const hasLoggedWarning = useRef(false);\n  useEffect(() => {\n    if (!(architecture !== null && architecture !== void 0 && architecture.services) && !hasLoggedWarning.current) {\n      hasLoggedWarning.current = true;\n      console.log('⚠️ Waiting for architecture data...');\n      return;\n    }\n    if (architecture !== null && architecture !== void 0 && architecture.services) {\n      var _architecture$connect;\n      console.log('📊 Rendering architecture:', {\n        servicesCount: architecture.services.length,\n        connectionsCount: (_architecture$connect = architecture.connections) === null || _architecture$connect === void 0 ? void 0 : _architecture$connect.length\n      });\n      const newNodes = [];\n      const newEdges = [];\n      const nodePositions = {};\n      const parentChildrenMap = {};\n      let missingServiceCounter = 1; // Track numbering for missing services\n\n      // Build Parent-Child Relationship Map\n      architecture.connections.forEach(({\n        from,\n        to\n      }) => {\n        const fromId = createNodeId(from);\n        const toId = createNodeId(to);\n        if (!parentChildrenMap[fromId]) {\n          parentChildrenMap[fromId] = [];\n        }\n        parentChildrenMap[fromId].push(toId);\n      });\n      const assignedYPositions = {};\n      const baseY = 200;\n      architecture.services.forEach((service, index) => {\n        const serviceName = typeof service === 'string' ? service : service === null || service === void 0 ? void 0 : service.name;\n        if (!serviceName) {\n          console.warn(`⚠️ Skipping invalid service:`, service);\n          return;\n        }\n        const serviceId = createNodeId(serviceName);\n        let isMissing = serviceName.startsWith('missing_');\n        let serviceIcon = getCachedServiceIcon(serviceName);\n        if (isMissing) {\n          serviceIcon = serviceIcon || '/aws-icons/missing.svg';\n          serviceName = `Missing Service ${missingServiceCounter++}`; // Assign a unique number\n        }\n        const parent = Object.keys(parentChildrenMap).find(parentId => parentChildrenMap[parentId].includes(serviceId));\n        let posX = index * 200;\n        let posY = baseY;\n        if (parent) {\n          const siblings = parentChildrenMap[parent];\n          const siblingIndex = siblings.indexOf(serviceId);\n          posY = baseY + siblingIndex * 120; // Space siblings vertically\n          assignedYPositions[serviceId] = posY;\n        }\n        nodePositions[serviceId] = {\n          x: posX,\n          y: posY\n        };\n        newNodes.push({\n          id: serviceId,\n          type: 'awsService',\n          position: {\n            x: posX,\n            y: posY\n          },\n          data: {\n            label: serviceName,\n            icon: serviceIcon,\n            isMissing\n          }\n        });\n      });\n\n      // Add edges with new positioning\n      architecture.connections.forEach(({\n        from,\n        to\n      }) => {\n        const fromId = createNodeId(from);\n        const toId = createNodeId(to);\n        if (!newNodes.find(node => node.id === fromId)) {\n          console.warn(`⚠️ Missing node for ${from}, skipping edge.`);\n          return;\n        }\n        if (!newNodes.find(node => node.id === toId)) {\n          console.warn(`⚠️ Missing node for ${to}, skipping edge.`);\n          return;\n        }\n        newEdges.push({\n          id: `${fromId}-${toId}`,\n          source: fromId,\n          target: toId,\n          sourceHandle: `${fromId}-source`,\n          targetHandle: `${toId}-target`,\n          type: 'smoothstep',\n          animated: true,\n          style: {\n            stroke: '#4FD1C5',\n            strokeWidth: 2\n          },\n          markerEnd: {\n            type: MarkerType.ArrowClosed\n          }\n        });\n      });\n      setNodes(newNodes);\n      setEdges(newEdges);\n    }\n    return () => {\n      hasLoggedWarning.current = false;\n    };\n  }, [architecture, setNodes, setEdges]);\n  if (!(architecture !== null && architecture !== void 0 && architecture.services)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"architecture-visualizer-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading architecture...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '600px'\n    },\n    className: \"architecture-visualizer\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      minZoom: 0.5,\n      maxZoom: 1.5,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#4FD1C5\",\n        gap: 16,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: node => node.data.isMissing ? '#FF5656' : '#4FD1C5',\n        maskColor: \"rgba(13, 25, 35, 0.7)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureDisplay, \"ymklbP+YFGCeuuTrnQcK0pTKhKc=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = AWSArchitectureDisplay;\nexport default AWSArchitectureDisplay;\nvar _c, _c2;\n$RefreshReg$(_c, \"AWSServiceNode\");\n$RefreshReg$(_c2, \"AWSArchitectureDisplay\");","map":{"version":3,"names":["React","useEffect","useRef","ReactFlow","Background","Controls","MiniMap","useNodesState","useEdgesState","MarkerType","Handle","motion","getCachedServiceIcon","jsxDEV","_jsxDEV","AWSServiceNode","data","div","className","isMissing","initial","scale","opacity","animate","exit","whileHover","transition","type","stiffness","children","position","id","fileName","_jsxFileName","lineNumber","columnNumber","src","icon","alt","label","_c","nodeTypes","awsService","createNodeId","service","serviceName","name","console","warn","toLowerCase","replace","AWSArchitectureDisplay","architecture","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","hasLoggedWarning","services","current","log","_architecture$connect","servicesCount","length","connectionsCount","connections","newNodes","newEdges","nodePositions","parentChildrenMap","missingServiceCounter","forEach","from","to","fromId","toId","push","assignedYPositions","baseY","index","serviceId","startsWith","serviceIcon","parent","Object","keys","find","parentId","includes","posX","posY","siblings","siblingIndex","indexOf","x","y","node","source","target","sourceHandle","targetHandle","animated","style","stroke","strokeWidth","markerEnd","ArrowClosed","height","fitView","minZoom","maxZoom","color","gap","size","nodeColor","maskColor","_c2","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport ReactFlow, { \n  Background, \n  Controls, \n  MiniMap,\n  useNodesState,\n  useEdgesState,\n  MarkerType,\n  Handle\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { getCachedServiceIcon } from '../services/IconResolver';\n\nconst AWSServiceNode = ({ data }) => (\n  <motion.div\n    className={`aws-service-node ${data.isMissing ? 'missing' : ''}`}\n    initial={{ scale: 0, opacity: 0 }}\n    animate={{ scale: 1, opacity: 1 }}\n    exit={{ scale: 0, opacity: 0 }}\n    whileHover={{ scale: 1.1 }}\n    transition={{ type: \"spring\", stiffness: 300 }}\n  >\n    <Handle \n      type=\"target\" \n      position=\"top\" \n      id={`${data.id}-target`}\n      className=\"handle\"\n    />\n    <div className=\"node-content\">\n      <img src={data.icon} alt={data.label} className=\"service-icon\" />\n      <span className=\"service-label\">{data.label}</span>\n    </div>\n    <Handle \n      type=\"source\" \n      position=\"bottom\" \n      id={`${data.id}-source`}\n      className=\"handle\"\n    />\n  </motion.div>\n);\n\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\n\nconst createNodeId = (service) => {\n  const serviceName = typeof service === 'string' ? service : service?.name;\n  if (!serviceName) {\n    console.warn('⚠️ Invalid service detected:', service);\n    return 'invalid-service';\n  }\n  return serviceName.toLowerCase().replace(/\\s+/g, '-');\n};\n\nconst AWSArchitectureDisplay = ({ architecture }) => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  \n  const hasLoggedWarning = useRef(false);\n\n  useEffect(() => {\n    if (!architecture?.services && !hasLoggedWarning.current) {\n      hasLoggedWarning.current = true;\n      console.log('⚠️ Waiting for architecture data...');\n      return;\n    }\n\n    if (architecture?.services) {\n      console.log('📊 Rendering architecture:', {\n        servicesCount: architecture.services.length,\n        connectionsCount: architecture.connections?.length\n      });\n\n      const newNodes = [];\n      const newEdges = [];\n      const nodePositions = {}; \n      const parentChildrenMap = {};\n      let missingServiceCounter = 1; // Track numbering for missing services\n\n      // Build Parent-Child Relationship Map\n      architecture.connections.forEach(({ from, to }) => {\n        const fromId = createNodeId(from);\n        const toId = createNodeId(to);\n\n        if (!parentChildrenMap[fromId]) {\n          parentChildrenMap[fromId] = [];\n        }\n        parentChildrenMap[fromId].push(toId);\n      });\n\n      const assignedYPositions = {};\n      const baseY = 200;\n\n      architecture.services.forEach((service, index) => {\n        const serviceName = typeof service === 'string' ? service : service?.name;\n        if (!serviceName) {\n          console.warn(`⚠️ Skipping invalid service:`, service);\n          return;\n        }\n\n        const serviceId = createNodeId(serviceName);\n        let isMissing = serviceName.startsWith('missing_');\n\n        let serviceIcon = getCachedServiceIcon(serviceName);\n        if (isMissing) {\n          serviceIcon = serviceIcon || '/aws-icons/missing.svg';\n          serviceName = `Missing Service ${missingServiceCounter++}`; // Assign a unique number\n        }\n\n        const parent = Object.keys(parentChildrenMap).find(parentId =>\n          parentChildrenMap[parentId].includes(serviceId)\n        );\n\n        let posX = index * 200;\n        let posY = baseY;\n\n        if (parent) {\n          const siblings = parentChildrenMap[parent];\n          const siblingIndex = siblings.indexOf(serviceId);\n          posY = baseY + siblingIndex * 120; // Space siblings vertically\n          assignedYPositions[serviceId] = posY;\n        }\n\n        nodePositions[serviceId] = { x: posX, y: posY };\n\n        newNodes.push({\n          id: serviceId,\n          type: 'awsService',\n          position: { x: posX, y: posY },\n          data: {\n            label: serviceName,\n            icon: serviceIcon,\n            isMissing,\n          },\n        });\n      });\n\n      // Add edges with new positioning\n      architecture.connections.forEach(({ from, to }) => {\n        const fromId = createNodeId(from);\n        const toId = createNodeId(to);\n\n        if (!newNodes.find((node) => node.id === fromId)) {\n          console.warn(`⚠️ Missing node for ${from}, skipping edge.`);\n          return;\n        }\n\n        if (!newNodes.find((node) => node.id === toId)) {\n          console.warn(`⚠️ Missing node for ${to}, skipping edge.`);\n          return;\n        }\n\n        newEdges.push({\n          id: `${fromId}-${toId}`,\n          source: fromId,\n          target: toId,\n          sourceHandle: `${fromId}-source`,\n          targetHandle: `${toId}-target`,\n          type: 'smoothstep',\n          animated: true,\n          style: { stroke: '#4FD1C5', strokeWidth: 2 },\n          markerEnd: { type: MarkerType.ArrowClosed },\n        });\n      });\n\n      setNodes(newNodes);\n      setEdges(newEdges);\n    }\n\n    return () => {\n      hasLoggedWarning.current = false;\n    };\n  }, [architecture, setNodes, setEdges]);\n\n  if (!architecture?.services) {\n    return (\n      <div className=\"architecture-visualizer-loading\">\n        <span>Loading architecture...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ height: '600px' }} className=\"architecture-visualizer\">\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        nodeTypes={nodeTypes}\n        fitView\n        minZoom={0.5}\n        maxZoom={1.5}\n      >\n        <Background color=\"#4FD1C5\" gap={16} size={1} />\n        <Controls />\n        <MiniMap \n          nodeColor={(node) => node.data.isMissing ? '#FF5656' : '#4FD1C5'}\n          maskColor=\"rgba(13, 25, 35, 0.7)\"\n        />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default AWSArchitectureDisplay;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,SAAS,IACdC,UAAU,EACVC,QAAQ,EACRC,OAAO,EACPC,aAAa,EACbC,aAAa,EACbC,UAAU,EACVC,MAAM,QACD,WAAW;AAClB,OAAO,0BAA0B;AACjC,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,oBAAoB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAK,CAAC,kBAC9BF,OAAA,CAACH,MAAM,CAACM,GAAG;EACTC,SAAS,EAAE,oBAAoBF,IAAI,CAACG,SAAS,GAAG,SAAS,GAAG,EAAE,EAAG;EACjEC,OAAO,EAAE;IAAEC,KAAK,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAE,CAAE;EAClCC,OAAO,EAAE;IAAEF,KAAK,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAE,CAAE;EAClCE,IAAI,EAAE;IAAEH,KAAK,EAAE,CAAC;IAAEC,OAAO,EAAE;EAAE,CAAE;EAC/BG,UAAU,EAAE;IAAEJ,KAAK,EAAE;EAAI,CAAE;EAC3BK,UAAU,EAAE;IAAEC,IAAI,EAAE,QAAQ;IAAEC,SAAS,EAAE;EAAI,CAAE;EAAAC,QAAA,gBAE/Cf,OAAA,CAACJ,MAAM;IACLiB,IAAI,EAAC,QAAQ;IACbG,QAAQ,EAAC,KAAK;IACdC,EAAE,EAAE,GAAGf,IAAI,CAACe,EAAE,SAAU;IACxBb,SAAS,EAAC;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC,eACFrB,OAAA;IAAKI,SAAS,EAAC,cAAc;IAAAW,QAAA,gBAC3Bf,OAAA;MAAKsB,GAAG,EAAEpB,IAAI,CAACqB,IAAK;MAACC,GAAG,EAAEtB,IAAI,CAACuB,KAAM;MAACrB,SAAS,EAAC;IAAc;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjErB,OAAA;MAAMI,SAAS,EAAC,eAAe;MAAAW,QAAA,EAAEb,IAAI,CAACuB;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChD,CAAC,eACNrB,OAAA,CAACJ,MAAM;IACLiB,IAAI,EAAC,QAAQ;IACbG,QAAQ,EAAC,QAAQ;IACjBC,EAAE,EAAE,GAAGf,IAAI,CAACe,EAAE,SAAU;IACxBb,SAAS,EAAC;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAAA;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACQ,CACb;AAACK,EAAA,GA1BIzB,cAAc;AA4BpB,MAAM0B,SAAS,GAAG;EAChBC,UAAU,EAAE3B;AACd,CAAC;AAED,MAAM4B,YAAY,GAAIC,OAAO,IAAK;EAChC,MAAMC,WAAW,GAAG,OAAOD,OAAO,KAAK,QAAQ,GAAGA,OAAO,GAAGA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,IAAI;EACzE,IAAI,CAACD,WAAW,EAAE;IAChBE,OAAO,CAACC,IAAI,CAAC,8BAA8B,EAAEJ,OAAO,CAAC;IACrD,OAAO,iBAAiB;EAC1B;EACA,OAAOC,WAAW,CAACI,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;AACvD,CAAC;AAED,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGjD,aAAa,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACkD,KAAK,EAAEC,QAAQ,EAAEC,aAAa,CAAC,GAAGnD,aAAa,CAAC,EAAE,CAAC;EAE1D,MAAMoD,gBAAgB,GAAG1D,MAAM,CAAC,KAAK,CAAC;EAEtCD,SAAS,CAAC,MAAM;IACd,IAAI,EAACmD,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAES,QAAQ,KAAI,CAACD,gBAAgB,CAACE,OAAO,EAAE;MACxDF,gBAAgB,CAACE,OAAO,GAAG,IAAI;MAC/Bf,OAAO,CAACgB,GAAG,CAAC,qCAAqC,CAAC;MAClD;IACF;IAEA,IAAIX,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAES,QAAQ,EAAE;MAAA,IAAAG,qBAAA;MAC1BjB,OAAO,CAACgB,GAAG,CAAC,4BAA4B,EAAE;QACxCE,aAAa,EAAEb,YAAY,CAACS,QAAQ,CAACK,MAAM;QAC3CC,gBAAgB,GAAAH,qBAAA,GAAEZ,YAAY,CAACgB,WAAW,cAAAJ,qBAAA,uBAAxBA,qBAAA,CAA0BE;MAC9C,CAAC,CAAC;MAEF,MAAMG,QAAQ,GAAG,EAAE;MACnB,MAAMC,QAAQ,GAAG,EAAE;MACnB,MAAMC,aAAa,GAAG,CAAC,CAAC;MACxB,MAAMC,iBAAiB,GAAG,CAAC,CAAC;MAC5B,IAAIC,qBAAqB,GAAG,CAAC,CAAC,CAAC;;MAE/B;MACArB,YAAY,CAACgB,WAAW,CAACM,OAAO,CAAC,CAAC;QAAEC,IAAI;QAAEC;MAAG,CAAC,KAAK;QACjD,MAAMC,MAAM,GAAGlC,YAAY,CAACgC,IAAI,CAAC;QACjC,MAAMG,IAAI,GAAGnC,YAAY,CAACiC,EAAE,CAAC;QAE7B,IAAI,CAACJ,iBAAiB,CAACK,MAAM,CAAC,EAAE;UAC9BL,iBAAiB,CAACK,MAAM,CAAC,GAAG,EAAE;QAChC;QACAL,iBAAiB,CAACK,MAAM,CAAC,CAACE,IAAI,CAACD,IAAI,CAAC;MACtC,CAAC,CAAC;MAEF,MAAME,kBAAkB,GAAG,CAAC,CAAC;MAC7B,MAAMC,KAAK,GAAG,GAAG;MAEjB7B,YAAY,CAACS,QAAQ,CAACa,OAAO,CAAC,CAAC9B,OAAO,EAAEsC,KAAK,KAAK;QAChD,MAAMrC,WAAW,GAAG,OAAOD,OAAO,KAAK,QAAQ,GAAGA,OAAO,GAAGA,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEE,IAAI;QACzE,IAAI,CAACD,WAAW,EAAE;UAChBE,OAAO,CAACC,IAAI,CAAC,8BAA8B,EAAEJ,OAAO,CAAC;UACrD;QACF;QAEA,MAAMuC,SAAS,GAAGxC,YAAY,CAACE,WAAW,CAAC;QAC3C,IAAI1B,SAAS,GAAG0B,WAAW,CAACuC,UAAU,CAAC,UAAU,CAAC;QAElD,IAAIC,WAAW,GAAGzE,oBAAoB,CAACiC,WAAW,CAAC;QACnD,IAAI1B,SAAS,EAAE;UACbkE,WAAW,GAAGA,WAAW,IAAI,wBAAwB;UACrDxC,WAAW,GAAG,mBAAmB4B,qBAAqB,EAAE,EAAE,CAAC,CAAC;QAC9D;QAEA,MAAMa,MAAM,GAAGC,MAAM,CAACC,IAAI,CAAChB,iBAAiB,CAAC,CAACiB,IAAI,CAACC,QAAQ,IACzDlB,iBAAiB,CAACkB,QAAQ,CAAC,CAACC,QAAQ,CAACR,SAAS,CAChD,CAAC;QAED,IAAIS,IAAI,GAAGV,KAAK,GAAG,GAAG;QACtB,IAAIW,IAAI,GAAGZ,KAAK;QAEhB,IAAIK,MAAM,EAAE;UACV,MAAMQ,QAAQ,GAAGtB,iBAAiB,CAACc,MAAM,CAAC;UAC1C,MAAMS,YAAY,GAAGD,QAAQ,CAACE,OAAO,CAACb,SAAS,CAAC;UAChDU,IAAI,GAAGZ,KAAK,GAAGc,YAAY,GAAG,GAAG,CAAC,CAAC;UACnCf,kBAAkB,CAACG,SAAS,CAAC,GAAGU,IAAI;QACtC;QAEAtB,aAAa,CAACY,SAAS,CAAC,GAAG;UAAEc,CAAC,EAAEL,IAAI;UAAEM,CAAC,EAAEL;QAAK,CAAC;QAE/CxB,QAAQ,CAACU,IAAI,CAAC;UACZhD,EAAE,EAAEoD,SAAS;UACbxD,IAAI,EAAE,YAAY;UAClBG,QAAQ,EAAE;YAAEmE,CAAC,EAAEL,IAAI;YAAEM,CAAC,EAAEL;UAAK,CAAC;UAC9B7E,IAAI,EAAE;YACJuB,KAAK,EAAEM,WAAW;YAClBR,IAAI,EAAEgD,WAAW;YACjBlE;UACF;QACF,CAAC,CAAC;MACJ,CAAC,CAAC;;MAEF;MACAiC,YAAY,CAACgB,WAAW,CAACM,OAAO,CAAC,CAAC;QAAEC,IAAI;QAAEC;MAAG,CAAC,KAAK;QACjD,MAAMC,MAAM,GAAGlC,YAAY,CAACgC,IAAI,CAAC;QACjC,MAAMG,IAAI,GAAGnC,YAAY,CAACiC,EAAE,CAAC;QAE7B,IAAI,CAACP,QAAQ,CAACoB,IAAI,CAAEU,IAAI,IAAKA,IAAI,CAACpE,EAAE,KAAK8C,MAAM,CAAC,EAAE;UAChD9B,OAAO,CAACC,IAAI,CAAC,uBAAuB2B,IAAI,kBAAkB,CAAC;UAC3D;QACF;QAEA,IAAI,CAACN,QAAQ,CAACoB,IAAI,CAAEU,IAAI,IAAKA,IAAI,CAACpE,EAAE,KAAK+C,IAAI,CAAC,EAAE;UAC9C/B,OAAO,CAACC,IAAI,CAAC,uBAAuB4B,EAAE,kBAAkB,CAAC;UACzD;QACF;QAEAN,QAAQ,CAACS,IAAI,CAAC;UACZhD,EAAE,EAAE,GAAG8C,MAAM,IAAIC,IAAI,EAAE;UACvBsB,MAAM,EAAEvB,MAAM;UACdwB,MAAM,EAAEvB,IAAI;UACZwB,YAAY,EAAE,GAAGzB,MAAM,SAAS;UAChC0B,YAAY,EAAE,GAAGzB,IAAI,SAAS;UAC9BnD,IAAI,EAAE,YAAY;UAClB6E,QAAQ,EAAE,IAAI;UACdC,KAAK,EAAE;YAAEC,MAAM,EAAE,SAAS;YAAEC,WAAW,EAAE;UAAE,CAAC;UAC5CC,SAAS,EAAE;YAAEjF,IAAI,EAAElB,UAAU,CAACoG;UAAY;QAC5C,CAAC,CAAC;MACJ,CAAC,CAAC;MAEFtD,QAAQ,CAACc,QAAQ,CAAC;MAClBX,QAAQ,CAACY,QAAQ,CAAC;IACpB;IAEA,OAAO,MAAM;MACXV,gBAAgB,CAACE,OAAO,GAAG,KAAK;IAClC,CAAC;EACH,CAAC,EAAE,CAACV,YAAY,EAAEG,QAAQ,EAAEG,QAAQ,CAAC,CAAC;EAEtC,IAAI,EAACN,YAAY,aAAZA,YAAY,eAAZA,YAAY,CAAES,QAAQ,GAAE;IAC3B,oBACE/C,OAAA;MAAKI,SAAS,EAAC,iCAAiC;MAAAW,QAAA,eAC9Cf,OAAA;QAAAe,QAAA,EAAM;MAAuB;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAEV;EAEA,oBACErB,OAAA;IAAK2F,KAAK,EAAE;MAAEK,MAAM,EAAE;IAAQ,CAAE;IAAC5F,SAAS,EAAC,yBAAyB;IAAAW,QAAA,eAClEf,OAAA,CAACX,SAAS;MACRmD,KAAK,EAAEA,KAAM;MACbG,KAAK,EAAEA,KAAM;MACbD,aAAa,EAAEA,aAAc;MAC7BG,aAAa,EAAEA,aAAc;MAC7BlB,SAAS,EAAEA,SAAU;MACrBsE,OAAO;MACPC,OAAO,EAAE,GAAI;MACbC,OAAO,EAAE,GAAI;MAAApF,QAAA,gBAEbf,OAAA,CAACV,UAAU;QAAC8G,KAAK,EAAC,SAAS;QAACC,GAAG,EAAE,EAAG;QAACC,IAAI,EAAE;MAAE;QAAApF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAChDrB,OAAA,CAACT,QAAQ;QAAA2B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACZrB,OAAA,CAACR,OAAO;QACN+G,SAAS,EAAGlB,IAAI,IAAKA,IAAI,CAACnF,IAAI,CAACG,SAAS,GAAG,SAAS,GAAG,SAAU;QACjEmG,SAAS,EAAC;MAAuB;QAAAtF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACO;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV,CAAC;AAACkB,EAAA,CArJIF,sBAAsB;EAAA,QACe5C,aAAa,EACbC,aAAa;AAAA;AAAA+G,GAAA,GAFlDpE,sBAAsB;AAuJ5B,eAAeA,sBAAsB;AAAC,IAAAX,EAAA,EAAA+E,GAAA;AAAAC,YAAA,CAAAhF,EAAA;AAAAgF,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}