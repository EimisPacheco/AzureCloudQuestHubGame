{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx\";\nimport React from 'react';\nimport { getCachedServiceIcon, getIconResolutionStats } from '../services/IconResolver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSArchitectureDisplay = ({\n  architecture\n}) => {\n  if (!architecture || !architecture.services) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"architecture-container\",\n      children: \"No architecture to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 12\n    }, this);\n  }\n  const calculateServicePositions = () => {\n    const positions = {};\n    const totalWidth = 1000;\n    const totalHeight = 400;\n    const serviceWidth = 120;\n    const serviceHeight = 100;\n    const serviceCount = architecture.services.length;\n    const horizontalGap = (totalWidth - serviceCount * serviceWidth) / (serviceCount + 1);\n    architecture.services.forEach((service, index) => {\n      positions[service.name] = {\n        x: horizontalGap + index * (serviceWidth + horizontalGap),\n        y: totalHeight / 2 - serviceHeight / 2\n      };\n    });\n    return positions;\n  };\n  const positions = calculateServicePositions();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"architecture-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"architecture-diagram\",\n      children: [/*#__PURE__*/_jsxDEV(ConnectionsLayer, {\n        services: architecture.services,\n        connections: architecture.connections,\n        positions: positions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ServicesLayer, {\n        services: architecture.services,\n        positions: positions,\n        getCachedServiceIcon: getCachedServiceIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_c = AWSArchitectureDisplay;\nexport default AWSArchitectureDisplay;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureDisplay\");","map":{"version":3,"names":["React","getCachedServiceIcon","getIconResolutionStats","jsxDEV","_jsxDEV","AWSArchitectureDisplay","architecture","services","className","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateServicePositions","positions","totalWidth","totalHeight","serviceWidth","serviceHeight","serviceCount","length","horizontalGap","forEach","service","index","name","x","y","ConnectionsLayer","connections","ServicesLayer","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx"],"sourcesContent":["import React from 'react';\nimport { getCachedServiceIcon, getIconResolutionStats } from '../services/IconResolver';\n\nconst AWSArchitectureDisplay = ({ architecture }) => {\n  if (!architecture || !architecture.services) {\n    return <div className=\"architecture-container\">No architecture to display</div>;\n  }\n\n  const calculateServicePositions = () => {\n    const positions = {};\n    const totalWidth = 1000;\n    const totalHeight = 400;\n    const serviceWidth = 120;\n    const serviceHeight = 100;\n    \n    const serviceCount = architecture.services.length;\n    const horizontalGap = (totalWidth - (serviceCount * serviceWidth)) / (serviceCount + 1);\n    \n    architecture.services.forEach((service, index) => {\n      positions[service.name] = {\n        x: horizontalGap + (index * (serviceWidth + horizontalGap)),\n        y: totalHeight / 2 - serviceHeight / 2\n      };\n    });\n\n    return positions;\n  };\n\n  const positions = calculateServicePositions();\n\n  return (\n    <div className=\"architecture-container\">\n      <div className=\"architecture-diagram\">\n        <ConnectionsLayer \n          services={architecture.services}\n          connections={architecture.connections}\n          positions={positions}\n        />\n        <ServicesLayer \n          services={architecture.services}\n          positions={positions}\n          getCachedServiceIcon={getCachedServiceIcon}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default AWSArchitectureDisplay;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,oBAAoB,EAAEC,sBAAsB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExF,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EACnD,IAAI,CAACA,YAAY,IAAI,CAACA,YAAY,CAACC,QAAQ,EAAE;IAC3C,oBAAOH,OAAA;MAAKI,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjF;EAEA,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;IACtC,MAAMC,SAAS,GAAG,CAAC,CAAC;IACpB,MAAMC,UAAU,GAAG,IAAI;IACvB,MAAMC,WAAW,GAAG,GAAG;IACvB,MAAMC,YAAY,GAAG,GAAG;IACxB,MAAMC,aAAa,GAAG,GAAG;IAEzB,MAAMC,YAAY,GAAGd,YAAY,CAACC,QAAQ,CAACc,MAAM;IACjD,MAAMC,aAAa,GAAG,CAACN,UAAU,GAAII,YAAY,GAAGF,YAAa,KAAKE,YAAY,GAAG,CAAC,CAAC;IAEvFd,YAAY,CAACC,QAAQ,CAACgB,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;MAChDV,SAAS,CAACS,OAAO,CAACE,IAAI,CAAC,GAAG;QACxBC,CAAC,EAAEL,aAAa,GAAIG,KAAK,IAAIP,YAAY,GAAGI,aAAa,CAAE;QAC3DM,CAAC,EAAEX,WAAW,GAAG,CAAC,GAAGE,aAAa,GAAG;MACvC,CAAC;IACH,CAAC,CAAC;IAEF,OAAOJ,SAAS;EAClB,CAAC;EAED,MAAMA,SAAS,GAAGD,yBAAyB,CAAC,CAAC;EAE7C,oBACEV,OAAA;IAAKI,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACrCL,OAAA;MAAKI,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCL,OAAA,CAACyB,gBAAgB;QACftB,QAAQ,EAAED,YAAY,CAACC,QAAS;QAChCuB,WAAW,EAAExB,YAAY,CAACwB,WAAY;QACtCf,SAAS,EAAEA;MAAU;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACFT,OAAA,CAAC2B,aAAa;QACZxB,QAAQ,EAAED,YAAY,CAACC,QAAS;QAChCQ,SAAS,EAAEA,SAAU;QACrBd,oBAAoB,EAAEA;MAAqB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACmB,EAAA,GA3CI3B,sBAAsB;AA6C5B,eAAeA,sBAAsB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}