{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game copy 20- copy 2/src/components/GameCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AWS_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Add these constants from IconResolver.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst GameCanvas = () => {\n  _s();\n  // First, declare all state\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const savedRocket = localStorage.getItem('selectedRocket');\n    return savedRocket || 'rocket1.png';\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({\n    x: 375,\n    y: 550\n  });\n\n  // Get random categories for instructions only once at game start\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AWS_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 2);\n    };\n    return getRandomCategories().map(category => ({\n      text: `Shoot the ${category.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ')} icons!`,\n      category: AWS_ICON_CATEGORIES[category]\n    }));\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => path.includes(instruction.category)).map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name\n      }));\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs and other setup code\n  const canvasRef = useRef(null);\n\n  // We'll keep arrays for icons, bullets, and feedback in refs to avoid\n  // re-rendering the whole component every time they update.\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n\n  // Add state to track image loading status\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const rocketImage = useRef(new Image());\n  const fireballImage = useRef(new Image());\n\n  // Initialize images with proper loading handlers\n  useEffect(() => {\n    let loadedImages = 0;\n    const totalImages = 2; // rocket and fireball\n\n    const handleImageLoad = () => {\n      loadedImages++;\n      if (loadedImages === totalImages) {\n        setImagesLoaded(true);\n      }\n    };\n    const handleImageError = e => {\n      console.error('Error loading image:', e.target.src);\n    };\n\n    // Load rocket image\n    rocketImage.current = new Image();\n    rocketImage.current.onload = handleImageLoad;\n    rocketImage.current.onerror = handleImageError;\n    rocketImage.current.src = `${S3_BUCKET_URL}/games/rocket/${selectedRocket}`;\n\n    // Load fireball image\n    fireballImage.current = new Image();\n    fireballImage.current.onload = handleImageLoad;\n    fireballImage.current.onerror = handleImageError;\n    fireballImage.current.src = `${S3_BUCKET_URL}/games/bullet/fireball.png`;\n    return () => {\n      // Cleanup\n      rocketImage.current.onload = null;\n      rocketImage.current.onerror = null;\n      fireballImage.current.onload = null;\n      fireballImage.current.onerror = null;\n    };\n  }, [selectedRocket]);\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25,\n    // center of an 800px width minus half the gun width\n    y: 800 - 100,\n    // Adjust this value to move the rocket closer to the bottom\n    width: 120,\n    height: 120\n  });\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    return Math.floor(Math.random() * (canvas.width - 50));\n  };\n\n  // Modify loadIcons to handle image loading properly\n  const loadIcons = () => {\n    iconsRef.current = [];\n    const positions = [];\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    // Get all icons for current category\n    const categoryIcons = iconTypes[currentCategory];\n    const otherCategoryIcons = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => !path.includes(currentCategory)).map(([name, path]) => ({\n      path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n      name: name\n    }));\n    const selectedCategoryIcons = categoryIcons.length <= 4 ? [...categoryIcons] : shuffleAndSlice(categoryIcons, 4);\n    const selectedOtherIcons = shuffleAndSlice(otherCategoryIcons, 6);\n    const createIcon = (iconInfo, x, type) => {\n      return new Promise(resolve => {\n        const iconImage = new Image();\n        iconImage.onload = () => {\n          iconsRef.current.push({\n            x,\n            y: -50,\n            type,\n            name: iconInfo.name,\n            image: iconImage,\n            hit: false\n          });\n          resolve();\n        };\n        iconImage.onerror = () => {\n          console.error('Failed to load icon:', iconInfo.path);\n          resolve();\n        };\n        iconImage.src = iconInfo.path;\n      });\n    };\n    const loadAllIcons = async () => {\n      const promises = [];\n\n      // Load category icons\n      selectedCategoryIcons.forEach(iconInfo => {\n        let x = getRandomX();\n        while (positions.some(pos => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n        promises.push(createIcon(iconInfo, x, currentCategory));\n      });\n\n      // Load other icons\n      selectedOtherIcons.forEach(iconInfo => {\n        let x = getRandomX();\n        while (positions.some(pos => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n        promises.push(createIcon(iconInfo, x, 'other'));\n      });\n      await Promise.all(promises);\n    };\n    loadAllIcons();\n  };\n\n  // Helper function to shuffle array and get n unique items\n  const shuffleAndSlice = (array, n) => {\n    const shuffled = [...array].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, Math.min(n, shuffled.length));\n  };\n\n  // Show feedback (checkmark or X) and points after a shot\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now()\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    const currentCategory = instructions[currentInstructionIndex].category;\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter(bullet => {\n        if (bullet.x > icon.x && bullet.x < icon.x + 50 && bullet.y > icon.y && bullet.y < icon.y + 50) {\n          icon.hit = true;\n          if (icon.type === currentCategory) {\n            const heightPercentage = 1 - icon.y / canvas.height;\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            setScore(prev => {\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore(prev => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n    if (iconsRef.current.length === 0 && timeLeft > 0) {\n      playSound('levelup');\n      setCurrentInstructionIndex(prev => (prev + 1) % instructions.length);\n      loadIcons();\n    }\n  };\n\n  // The main game loop, which draws everything on the canvas\n  const gameLoop = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    if (imagesLoaded) {\n      // Draw rocket only if image is loaded and complete\n      if (rocketImage.current.complete && !rocketImage.current.naturalWidth === 0) {\n        const {\n          x: gunX,\n          y: gunY,\n          width,\n          height\n        } = gunRef.current;\n        ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n      }\n\n      // Draw icons\n      iconsRef.current.forEach(icon => {\n        if (!icon.hit && icon.image.complete && icon.image.naturalWidth !== 0) {\n          ctx.save();\n          const radius = 10;\n          const x = icon.x;\n          const y = icon.y;\n          const width = 50;\n          const height = 50;\n          ctx.beginPath();\n          ctx.moveTo(x + radius, y);\n          ctx.lineTo(x + width - radius, y);\n          ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n          ctx.lineTo(x + width, y + height - radius);\n          ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n          ctx.lineTo(x + radius, y + height);\n          ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n          ctx.lineTo(x, y + radius);\n          ctx.quadraticCurveTo(x, y, x + radius, y);\n          ctx.closePath();\n          ctx.clip();\n          ctx.drawImage(icon.image, x, y, width, height);\n          ctx.restore();\n          icon.y += 0.3;\n        }\n      });\n\n      // Remove icons that are off screen and check if we need new ones\n      iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n      if (iconsRef.current.length === 0 && timeLeft > 0) {\n        playSound('levelup');\n        setCurrentInstructionIndex(prev => (prev + 1) % instructions.length);\n        loadIcons();\n      }\n\n      // Draw bullets only if fireball image is loaded\n      if (fireballImage.current.complete && !fireballImage.current.naturalWidth === 0) {\n        bulletsRef.current.forEach(bullet => {\n          ctx.drawImage(fireballImage.current, bullet.x, bullet.y, 20, 20);\n          bullet.y -= 5;\n        });\n      }\n\n      // Remove bullets that are off-screen\n      bulletsRef.current = bulletsRef.current.filter(b => b.y > 0);\n\n      // Draw feedback with consistent styling for both positive and negative points\n      const now = Date.now();\n      feedbacksRef.current = feedbacksRef.current.filter(feedback => {\n        const elapsed = now - feedback.time;\n        if (elapsed < 3000) {\n          // Draw points with consistent styling\n          ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n          ctx.shadowBlur = 4;\n          ctx.fillStyle = feedback.isCorrect ? '#4CAF50' : '#F44336';\n          ctx.font = 'bold 28px Arial';\n\n          // Show points with + or - sign\n          const pointsText = feedback.points > 0 ? `+${feedback.points}` : `${feedback.points}`;\n          ctx.fillText(pointsText, feedback.x + 10, feedback.y - 20);\n\n          // Draw icon name\n          ctx.font = '16px Arial';\n          ctx.fillText(feedback.name, feedback.x + 60, feedback.y + 25);\n\n          // Draw feedback symbol\n          ctx.font = 'bold 55px Arial';\n          ctx.fillText(feedback.isCorrect ? '✔' : '✘', feedback.x + 10, feedback.y + 30);\n          ctx.shadowBlur = 0;\n          return true;\n        }\n        return false;\n      });\n      checkCollisions();\n\n      // Update and draw particles\n      particlesRef.current = particlesRef.current.filter(particle => {\n        if (particle.lifetime > 0 && particle.size > 0) {\n          particle.update();\n          particle.draw(ctx);\n          return true;\n        }\n        return false;\n      });\n    }\n    requestAnimationFrame(gameLoop);\n  };\n\n  // Add sound references with error handling\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Initialize sounds with error handling\n  useEffect(() => {\n    const soundFiles = {\n      shoot: `${S3_BUCKET_URL}/games/sounds/pistol_sound.mp3`,\n      correct: `${S3_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n      incorrect: `${S3_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n      levelup: `${S3_BUCKET_URL}/games/sounds/levelup.mp3`\n    };\n\n    // Create a safe audio player that won't break if files are missing\n    const createSafeAudio = path => {\n      const audio = new Audio();\n      return new Promise(resolve => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n\n        // Set timeout in case the file takes too long to load\n        setTimeout(() => resolve(null), 2000);\n        audio.src = path;\n      });\n    };\n\n    // Load all sound files with error handling\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n    loadSounds();\n\n    // Set initial volume\n    return () => {\n      // Cleanup sounds on unmount\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  // Safe play function\n  const playSound = soundName => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Add a mute toggle button to the UI\n  const [isMuted, setIsMuted] = useState(false);\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !isMuted;\n      }\n    });\n  };\n\n  // Add new state and refs for particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n\n  // Add state to track if we've already handled game over\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  // Add state to track if game should start\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Particle class\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size; // Store initial size\n    }\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      // Calculate size based on lifetime instead of continuous subtraction\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n    draw(ctx) {\n      if (this.size <= 0) return; // Don't draw if size is 0 or negative\n\n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Function to create explosion effect\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled, gameStarted]);\n\n  // Handle game over\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    setGameOver(true);\n    setGameOverHandled(true);\n    const newScore = {\n      name: playerName,\n      score\n    };\n    const newHighScores = [...highScores, newScore].sort((a, b) => b.score - a.score).slice(0, 5);\n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  // Modify the canvas setup effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return; // Guard clause for when canvas isn't ready\n\n    canvas.width = 1200;\n    canvas.height = 800;\n    const ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n\n    // Only start the game loop and load icons when both canvas and images are ready\n    if (imagesLoaded) {\n      loadIcons();\n      const animationId = requestAnimationFrame(gameLoop);\n      return () => cancelAnimationFrame(animationId);\n    }\n  }, [imagesLoaded]); // Add imagesLoaded as a dependency\n\n  // Second effect for event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ROCKET_WIDTH = 50;\n    const FIXED_ROCKET_Y = 550;\n    const handleMouseMove = e => {\n      const rect = canvas.getBoundingClientRect();\n\n      // Calculate new X position\n      let newX = e.clientX - rect.left - gunRef.current.width / 2;\n\n      // Add boundary checks\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n\n      // Update gun position\n      gunRef.current.x = newX;\n    };\n    const handleCanvasClick = () => {\n      if (gameStarted && timeLeft > 0) {\n        playSound('shoot');\n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20\n        });\n      }\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted]);\n\n  // Clear both name and rocket selection when component mounts\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  // Add state for modal visibility\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  // Add rocket options\n  const rocketOptions = [{\n    id: 'rocket1.png',\n    name: 'Modern Rocket'\n  }, {\n    id: 'rocket2.png',\n    name: 'Power Rocket'\n  }, {\n    id: 'rocket3.png',\n    name: 'Stealth Rocket'\n  }, {\n    id: 'rocket4.png',\n    name: 'Classic Rocket'\n  }];\n\n  // Handle rocket selection\n  const handleRocketSelect = rocketId => {\n    setSelectedRocket(rocketId);\n    localStorage.setItem('selectedRocket', rocketId);\n\n    // Construct the full URL here\n    rocketImage.current.src = `${S3_BUCKET_URL}/games/rocket/${rocketId}`;\n    setShowRocketModal(false);\n    setGameStarted(true);\n  };\n\n  // Add state for cheerleader messages\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  // Add cheerleader messages for different situations\n  const cheerleaderMessages = {\n    goodShot: [\"Great shot! You're an AWS Pro! 🌟\", \"Amazing cloud skills! Keep it up! 🎯\", \"You're on fire in the cloud! 🔥\", \"That's how AWS experts do it! 👏\"],\n    combo: [\"Cloud combo! 🎮\", \"You're scaling infinitely! ⚡\", \"What an AWS streak! 🌈\"],\n    timeWarning: [\"30 seconds left - you're highly available! ⏰\", \"Time for the final deployment! 💪\", \"Make every compute unit count! ⭐\"],\n    encouragement: [\"You've got this, cloud warrior! 🚀\", \"Keep going! You're AWS certified material! 🌟\", \"I believe in your cloud powers! 💫\", \"Show them your AWS expertise! 💪\"],\n    highScore: [\"New high score! You're going serverless! 🏆\", \"You're breaking cloud records! 🎖️\", \"Legendary AWS performance! 👑\"]\n  };\n\n  // Function to show a random message from a category\n  const showCheerleaderMessage = category => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n\n    // Hide message after 3 seconds\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  // Add periodic encouragement\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  // Add time warning messages\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  // Add this function near other handlers (around line 440)\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowNameModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameCanvas-game-title\",\n      children: \"AWS Cloud Shooter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 736,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-canvas-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"gameCanvas-game-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 739,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 738,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-instruction-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-player-name\",\n            children: [\"Player: \", playerName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 743,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-score-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"alien\",\n              children: \"\\uD83D\\uDC7E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 15\n            }, this), ' ', \"Score: \", score, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"joystick\",\n              children: \"\\uD83D\\uDD79\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 15\n            }, this), soundsLoaded && Object.values(sounds.current).some(sound => sound) && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gameCanvas-sound-toggle\",\n              onClick: toggleMute,\n              \"aria-label\": \"Toggle sound\",\n              children: isMuted ? '🔇' : '🔊'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 746,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-timer-display\",\n          children: [\"Time: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 763,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-score-explanation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"How to Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Hit correct icon: +5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 770,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Height bonus: up to +20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 771,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Wrong hit: -5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 772,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Tip: Shoot icons as high as possible!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 773,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-high-scores\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"High Scores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 778,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: highScores.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gameCanvas-high-score-name\",\n                children: [entry.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 782,\n                columnNumber: 17\n              }, this), \" \", entry.score]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 777,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-mission-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"gameCanvas-mission-title\",\n            children: \"Current Mission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-mission-text\",\n            children: instructions[currentInstructionIndex].text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 788,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 741,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 737,\n      columnNumber: 7\n    }, this), showRocketModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-rocket-selection-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Choose Your Rocket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 803,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-rocket-grid\",\n          children: rocketOptions.map(rocket => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `gameCanvas-rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`,\n            onClick: () => handleRocketSelect(rocket.id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `icons/${rocket.id}`,\n              alt: rocket.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 811,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: rocket.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 19\n            }, this)]\n          }, rocket.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 806,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 825,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 826,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 824,\n      columnNumber: 9\n    }, this), showCheerMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-cheerleader-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheerleader-character\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/cheerleader.png\",\n          alt: \"Cheerleader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 834,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheer-message\",\n        children: cheerMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 837,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 833,\n      columnNumber: 9\n    }, this), showNameModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to AWS Cloud Shooter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your name to start the game:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 847,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempPlayerName,\n            onChange: e => {\n              setTempPlayerName(e.target.value);\n              setNameError('');\n            },\n            placeholder: \"Your name\",\n            className: \"gameCanvas-name-input\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 849,\n            columnNumber: 15\n          }, this), nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-name-error\",\n            children: nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 860,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"gameCanvas-start-button\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 861,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 848,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 845,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 844,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 735,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"wFhHvI7ZYVB+GY77hhfvMZvsVy8=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","AWS_ICON_CATEGORIES","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","S3_BUCKET_URL","ICONS_BASE_PATH","GameCanvas","_s","timeLeft","setTimeLeft","score","setScore","currentInstructionIndex","setCurrentInstructionIndex","selectedRocket","setSelectedRocket","savedRocket","localStorage","getItem","showNameModal","setShowNameModal","tempPlayerName","setTempPlayerName","nameError","setNameError","playerName","setPlayerName","savedName","rocketPosition","setRocketPosition","x","y","instructions","getRandomCategories","categories","Object","keys","shuffled","sort","Math","random","slice","map","category","text","split","word","charAt","toUpperCase","toLowerCase","join","iconTypes","reduce","acc","instruction","categoryServices","entries","filter","_","path","includes","name","canvasRef","iconsRef","bulletsRef","feedbacksRef","imagesLoaded","setImagesLoaded","rocketImage","Image","fireballImage","loadedImages","totalImages","handleImageLoad","handleImageError","e","console","error","target","src","current","onload","onerror","gunRef","width","height","getRandomX","canvas","floor","loadIcons","positions","currentCategory","categoryIcons","otherCategoryIcons","selectedCategoryIcons","length","shuffleAndSlice","selectedOtherIcons","createIcon","iconInfo","type","Promise","resolve","iconImage","push","image","hit","loadAllIcons","promises","forEach","some","pos","abs","all","array","n","min","showFeedback","isCorrect","points","iconName","time","Date","now","checkCollisions","bullets","icons","icon","iconIndex","bullet","heightPercentage","heightBonus","prev","max","highScores","s","showCheerleaderMessage","playSound","createExplosion","splice","gameLoop","ctx","getContext","clearRect","complete","naturalWidth","gunX","gunY","drawImage","save","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","restore","b","feedback","elapsed","shadowColor","shadowBlur","fillStyle","font","pointsText","fillText","particlesRef","particle","lifetime","size","update","draw","requestAnimationFrame","sounds","soundsLoaded","setSoundsLoaded","soundFiles","shoot","correct","incorrect","levelup","createSafeAudio","audio","Audio","addEventListener","warn","setTimeout","loadSounds","loadedSounds","key","values","sound","pause","soundName","isMuted","currentTime","volume","play","catch","err","setIsMuted","toggleMute","muted","setHighScores","saved","JSON","parse","gameOver","setGameOver","gameOverHandled","setGameOverHandled","gameStarted","setGameStarted","Particle","constructor","color","speedX","speedY","initialSize","globalAlpha","arc","PI","fill","i","timer","setInterval","clearInterval","handleGameOver","newScore","newHighScores","a","setItem","stringify","imageSmoothingEnabled","animationId","cancelAnimationFrame","ROCKET_WIDTH","FIXED_ROCKET_Y","handleMouseMove","rect","getBoundingClientRect","newX","clientX","left","handleCanvasClick","removeEventListener","removeItem","showRocketModal","setShowRocketModal","rocketOptions","id","handleRocketSelect","rocketId","cheerMessage","setCheerMessage","showCheerMessage","setShowCheerMessage","cheerleaderMessages","goodShot","combo","timeWarning","encouragement","highScore","messages","randomMessage","encouragementInterval","handleNameSubmit","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","role","onClick","entry","index","rocket","alt","window","location","reload","onSubmit","value","onChange","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game copy 20- copy 2/src/components/GameCanvas.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AWS_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Add these constants from IconResolver.js\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\n\nconst GameCanvas = () => {\n  // First, declare all state\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const savedRocket = localStorage.getItem('selectedRocket');\n    return savedRocket || 'rocket1.png';\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({ x: 375, y: 550 });\n\n  // Get random categories for instructions only once at game start\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AWS_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 2);\n    };\n\n    return getRandomCategories().map(category => ({\n      text: `Shoot the ${category.split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ')} icons!`,\n      category: AWS_ICON_CATEGORIES[category]\n    }));\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS)\n        .filter(([_, path]) => path.includes(instruction.category))\n        .map(([name, path]) => ({\n          path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n          name: name\n        }));\n\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs and other setup code\n  const canvasRef = useRef(null);\n\n  // We'll keep arrays for icons, bullets, and feedback in refs to avoid\n  // re-rendering the whole component every time they update.\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n\n  // Add state to track image loading status\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const rocketImage = useRef(new Image());\n  const fireballImage = useRef(new Image());\n\n  // Initialize images with proper loading handlers\n  useEffect(() => {\n    let loadedImages = 0;\n    const totalImages = 2; // rocket and fireball\n\n    const handleImageLoad = () => {\n      loadedImages++;\n      if (loadedImages === totalImages) {\n        setImagesLoaded(true);\n      }\n    };\n\n    const handleImageError = (e) => {\n      console.error('Error loading image:', e.target.src);\n    };\n\n    // Load rocket image\n    rocketImage.current = new Image();\n    rocketImage.current.onload = handleImageLoad;\n    rocketImage.current.onerror = handleImageError;\n    rocketImage.current.src = `${S3_BUCKET_URL}/games/rocket/${selectedRocket}`;\n\n    // Load fireball image\n    fireballImage.current = new Image();\n    fireballImage.current.onload = handleImageLoad;\n    fireballImage.current.onerror = handleImageError;\n    fireballImage.current.src =  `${S3_BUCKET_URL}/games/bullet/fireball.png`;\n\n    return () => {\n      // Cleanup\n      rocketImage.current.onload = null;\n      rocketImage.current.onerror = null;\n      fireballImage.current.onload = null;\n      fireballImage.current.onerror = null;\n    };\n  }, [selectedRocket]);\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25, // center of an 800px width minus half the gun width\n    y: 800 - 100, // Adjust this value to move the rocket closer to the bottom\n    width: 120,\n    height: 120,\n  });\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    return Math.floor(Math.random() * (canvas.width - 50));\n  };\n\n  // Modify loadIcons to handle image loading properly\n  const loadIcons = () => {\n    iconsRef.current = [];\n    const positions = [];\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    // Get all icons for current category\n    const categoryIcons = iconTypes[currentCategory];\n    const otherCategoryIcons = Object.entries(SERVICE_MAPPINGS)\n      .filter(([_, path]) => !path.includes(currentCategory))\n      .map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name\n      }));\n\n    const selectedCategoryIcons = categoryIcons.length <= 4 \n      ? [...categoryIcons]\n      : shuffleAndSlice(categoryIcons, 4);\n\n    const selectedOtherIcons = shuffleAndSlice(otherCategoryIcons, 6);\n\n    const createIcon = (iconInfo, x, type) => {\n      return new Promise((resolve) => {\n        const iconImage = new Image();\n        iconImage.onload = () => {\n          iconsRef.current.push({\n            x,\n            y: -50,\n            type,\n            name: iconInfo.name,\n            image: iconImage,\n            hit: false,\n          });\n          resolve();\n        };\n        iconImage.onerror = () => {\n          console.error('Failed to load icon:', iconInfo.path);\n          resolve();\n        };\n        iconImage.src = iconInfo.path;\n      });\n    };\n\n    const loadAllIcons = async () => {\n      const promises = [];\n\n      // Load category icons\n      selectedCategoryIcons.forEach((iconInfo) => {\n        let x = getRandomX();\n        while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n        promises.push(createIcon(iconInfo, x, currentCategory));\n      });\n\n      // Load other icons\n      selectedOtherIcons.forEach((iconInfo) => {\n        let x = getRandomX();\n        while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n        promises.push(createIcon(iconInfo, x, 'other'));\n      });\n\n      await Promise.all(promises);\n    };\n\n    loadAllIcons();\n  };\n\n  // Helper function to shuffle array and get n unique items\n  const shuffleAndSlice = (array, n) => {\n    const shuffled = [...array].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, Math.min(n, shuffled.length));\n  };\n\n  // Show feedback (checkmark or X) and points after a shot\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now(),\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter((bullet) => {\n        if (\n          bullet.x > icon.x &&\n          bullet.x < icon.x + 50 &&\n          bullet.y > icon.y &&\n          bullet.y < icon.y + 50\n        ) {\n          icon.hit = true;\n\n          if (icon.type === currentCategory) {\n            const heightPercentage = 1 - (icon.y / canvas.height);\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            \n            setScore((prev) => {\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore((prev) => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n\n    if (iconsRef.current.length === 0 && timeLeft > 0) {\n      playSound('levelup');\n      setCurrentInstructionIndex((prev) => (prev + 1) % instructions.length);\n      loadIcons();\n    }\n  };\n\n  // The main game loop, which draws everything on the canvas\n  const gameLoop = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    if (imagesLoaded) {\n      // Draw rocket only if image is loaded and complete\n      if (rocketImage.current.complete && !rocketImage.current.naturalWidth === 0) {\n        const { x: gunX, y: gunY, width, height } = gunRef.current;\n        ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n      }\n\n      // Draw icons\n      iconsRef.current.forEach((icon) => {\n        if (!icon.hit && icon.image.complete && icon.image.naturalWidth !== 0) {\n          ctx.save();\n          \n          const radius = 10;\n          const x = icon.x;\n          const y = icon.y;\n          const width = 50;\n          const height = 50;\n          \n          ctx.beginPath();\n          ctx.moveTo(x + radius, y);\n          ctx.lineTo(x + width - radius, y);\n          ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n          ctx.lineTo(x + width, y + height - radius);\n          ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n          ctx.lineTo(x + radius, y + height);\n          ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n          ctx.lineTo(x, y + radius);\n          ctx.quadraticCurveTo(x, y, x + radius, y);\n          ctx.closePath();\n          \n          ctx.clip();\n          \n          ctx.drawImage(icon.image, x, y, width, height);\n          \n          ctx.restore();\n          \n          icon.y += 0.3;\n        }\n      });\n      \n\n      // Remove icons that are off screen and check if we need new ones\n      iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n      if (iconsRef.current.length === 0 && timeLeft > 0) {\n        playSound('levelup');\n        setCurrentInstructionIndex((prev) => (prev + 1) % instructions.length);\n        loadIcons();\n      }\n\n      // Draw bullets only if fireball image is loaded\n      if (fireballImage.current.complete && !fireballImage.current.naturalWidth === 0) {\n        bulletsRef.current.forEach((bullet) => {\n          ctx.drawImage(fireballImage.current, bullet.x, bullet.y, 20, 20);\n          bullet.y -= 5;\n        });\n      }\n\n      // Remove bullets that are off-screen\n      bulletsRef.current = bulletsRef.current.filter((b) => b.y > 0);\n\n      // Draw feedback with consistent styling for both positive and negative points\n      const now = Date.now();\n      feedbacksRef.current = feedbacksRef.current.filter((feedback) => {\n        const elapsed = now - feedback.time;\n        if (elapsed < 3000) {\n          // Draw points with consistent styling\n          ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n          ctx.shadowBlur = 4;\n          ctx.fillStyle = feedback.isCorrect ? '#4CAF50' : '#F44336';\n          ctx.font = 'bold 28px Arial';\n          \n          // Show points with + or - sign\n          const pointsText = feedback.points > 0 ? `+${feedback.points}` : `${feedback.points}`;\n          ctx.fillText(\n            pointsText,\n            feedback.x + 10,\n            feedback.y - 20\n          );\n\n          // Draw icon name\n          ctx.font = '16px Arial';\n          ctx.fillText(\n            feedback.name,\n            feedback.x + 60,\n            feedback.y + 25\n          );\n          \n          // Draw feedback symbol\n          ctx.font = 'bold 55px Arial';\n          ctx.fillText(\n            feedback.isCorrect ? '✔' : '✘',\n            feedback.x + 10,\n            feedback.y + 30\n          );\n          \n          ctx.shadowBlur = 0;\n          return true;\n        }\n        return false;\n      });\n\n      checkCollisions();\n\n      // Update and draw particles\n      particlesRef.current = particlesRef.current.filter(particle => {\n        if (particle.lifetime > 0 && particle.size > 0) {\n          particle.update();\n          particle.draw(ctx);\n          return true;\n        }\n        return false;\n      });\n    }\n\n    requestAnimationFrame(gameLoop);\n  };\n\n  // Add sound references with error handling\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Initialize sounds with error handling\n  useEffect(() => {\n    const soundFiles = {\n      shoot:  `${S3_BUCKET_URL}/games/sounds/pistol_sound.mp3`,\n      correct: `${S3_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n      incorrect:`${S3_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n      levelup: `${S3_BUCKET_URL}/games/sounds/levelup.mp3`\n    };\n\n    // Create a safe audio player that won't break if files are missing\n    const createSafeAudio = (path) => {\n      const audio = new Audio();\n      \n      return new Promise((resolve) => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n\n        // Set timeout in case the file takes too long to load\n        setTimeout(() => resolve(null), 2000);\n\n        audio.src = path;\n      });\n    };\n\n    // Load all sound files with error handling\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      \n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n\n    loadSounds();\n\n    // Set initial volume\n    return () => {\n      // Cleanup sounds on unmount\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  // Safe play function\n  const playSound = (soundName) => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Add a mute toggle button to the UI\n  const [isMuted, setIsMuted] = useState(false);\n\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !isMuted;\n      }\n    });\n  };\n\n  // Add new state and refs for particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n\n  // Add state to track if we've already handled game over\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  // Add state to track if game should start\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Particle class\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size; // Store initial size\n    }\n\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      // Calculate size based on lifetime instead of continuous subtraction\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n\n    draw(ctx) {\n      if (this.size <= 0) return; // Don't draw if size is 0 or negative\n      \n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Function to create explosion effect\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled, gameStarted]);\n\n  // Handle game over\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    \n    setGameOver(true);\n    setGameOverHandled(true);\n    \n    const newScore = { name: playerName, score };\n    const newHighScores = [...highScores, newScore]\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 5);\n    \n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  // Modify the canvas setup effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return; // Guard clause for when canvas isn't ready\n    \n    canvas.width = 1200;\n    canvas.height = 800;\n    \n    const ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n\n    // Only start the game loop and load icons when both canvas and images are ready\n    if (imagesLoaded) {\n      loadIcons();\n      const animationId = requestAnimationFrame(gameLoop);\n      return () => cancelAnimationFrame(animationId);\n    }\n  }, [imagesLoaded]); // Add imagesLoaded as a dependency\n\n  // Second effect for event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    \n    const ROCKET_WIDTH = 50;\n    const FIXED_ROCKET_Y = 550;\n\n    const handleMouseMove = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      \n      // Calculate new X position\n      let newX = e.clientX - rect.left - (gunRef.current.width / 2);\n      \n      // Add boundary checks\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n      \n      // Update gun position\n      gunRef.current.x = newX;\n    };\n\n    const handleCanvasClick = () => {\n      if (gameStarted && timeLeft > 0) {\n        playSound('shoot');\n        \n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20,\n        });\n      }\n    };\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted]);\n\n  // Clear both name and rocket selection when component mounts\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  // Add state for modal visibility\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  // Add rocket options\n  const rocketOptions = [\n    { id: 'rocket1.png', name: 'Modern Rocket' },\n    { id: 'rocket2.png', name: 'Power Rocket' },\n    { id: 'rocket3.png', name: 'Stealth Rocket' },\n    { id: 'rocket4.png', name: 'Classic Rocket' },\n  ];\n\n  // Handle rocket selection\n  const handleRocketSelect = (rocketId) => {\n    setSelectedRocket(rocketId);\n    localStorage.setItem('selectedRocket', rocketId);\n    \n    // Construct the full URL here\n    rocketImage.current.src = `${S3_BUCKET_URL}/games/rocket/${rocketId}`;\n    \n    setShowRocketModal(false);\n    setGameStarted(true);\n  };\n\n  // Add state for cheerleader messages\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  // Add cheerleader messages for different situations\n  const cheerleaderMessages = {\n    goodShot: [\n      \"Great shot! You're an AWS Pro! 🌟\",\n      \"Amazing cloud skills! Keep it up! 🎯\",\n      \"You're on fire in the cloud! 🔥\",\n      \"That's how AWS experts do it! 👏\",\n    ],\n    combo: [\n      \"Cloud combo! 🎮\",\n      \"You're scaling infinitely! ⚡\",\n      \"What an AWS streak! 🌈\",\n    ],\n    timeWarning: [\n      \"30 seconds left - you're highly available! ⏰\",\n      \"Time for the final deployment! 💪\",\n      \"Make every compute unit count! ⭐\",\n    ],\n    encouragement: [\n      \"You've got this, cloud warrior! 🚀\",\n      \"Keep going! You're AWS certified material! 🌟\",\n      \"I believe in your cloud powers! 💫\",\n      \"Show them your AWS expertise! 💪\",\n    ],\n    highScore: [\n      \"New high score! You're going serverless! 🏆\",\n      \"You're breaking cloud records! 🎖️\",\n      \"Legendary AWS performance! 👑\",\n    ]\n  };\n\n  // Function to show a random message from a category\n  const showCheerleaderMessage = (category) => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n    \n    // Hide message after 3 seconds\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  // Add periodic encouragement\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  // Add time warning messages\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  // Add this function near other handlers (around line 440)\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowNameModal(false);\n  };\n\n  return (\n    <div className=\"gameCanvas-container\">\n      <h1 className=\"gameCanvas-game-title\">AWS Cloud Shooter</h1>\n      <div className=\"gameCanvas-game-content\">\n        <div className=\"gameCanvas-canvas-wrapper\">\n          <canvas ref={canvasRef} className=\"gameCanvas-game-canvas\" />\n        </div>\n        <div className=\"gameCanvas-instruction-panel\">\n          <div className=\"gameCanvas-player-info\">\n            <div className=\"gameCanvas-player-name\">\n              Player: {playerName}\n            </div>\n            <div className=\"gameCanvas-score-display\">\n              <span role=\"img\" aria-label=\"alien\">👾</span>{' '}\n              Score: {score}{' '}\n              <span role=\"img\" aria-label=\"joystick\">🕹️</span>\n              \n              {soundsLoaded && Object.values(sounds.current).some(sound => sound) && (\n                <button \n                  className=\"gameCanvas-sound-toggle\"\n                  onClick={toggleMute}\n                  aria-label=\"Toggle sound\"\n                >\n                  {isMuted ? '🔇' : '🔊'}\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"gameCanvas-timer-display\">\n            Time: {timeLeft}s\n          </div>\n\n          <div className=\"gameCanvas-score-explanation\">\n            <h4>How to Score:</h4>\n            <ul>\n            <li>• Hit correct icon: +5 points</li>\n            <li>• Height bonus: up to +20</li>\n            <li>• Wrong hit: -5 points</li>\n            <li>• Tip: Shoot icons as high as possible!</li>\n            </ul>\n          </div>\n\n          <div className=\"gameCanvas-high-scores\">\n          <h4>High Scores</h4>\n          <ul>\n            {highScores.map((entry, index) => (\n              <li key={index}>\n                <span className=\"gameCanvas-high-score-name\">{entry.name}:</span> {entry.score}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n          <div className=\"gameCanvas-mission-container\">\n            <h3 className=\"gameCanvas-mission-title\">\n              Current Mission\n            </h3>\n            \n            <div className=\"gameCanvas-mission-text\">\n              {instructions[currentInstructionIndex].text}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showRocketModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-rocket-selection-modal\">\n            <h2>Choose Your Rocket</h2>\n            <div className=\"gameCanvas-rocket-grid\">\n              {rocketOptions.map((rocket) => (\n                <div \n                  key={rocket.id} \n                  className={`gameCanvas-rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`}\n                  onClick={() => handleRocketSelect(rocket.id)}\n                >\n                  <img \n                    src={`icons/${rocket.id}`} \n                    alt={rocket.name}\n                  />\n                  <p>{rocket.name}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {gameOver && (\n        <div className=\"gameCanvas-game-over\">\n          <h3>Game Over!</h3>\n          <button onClick={() => window.location.reload()}>\n            Play Again\n          </button>\n        </div>\n      )}\n\n      {showCheerMessage && (\n        <div className=\"gameCanvas-cheerleader-container\">\n          <div className=\"gameCanvas-cheerleader-character\">\n            <img src=\"icons/cheerleader.png\" alt=\"Cheerleader\" />\n          </div>\n          <div className=\"gameCanvas-cheer-message\">\n            {cheerMessage}\n          </div>\n        </div>\n      )}\n\n      {showNameModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-modal\">\n            <h2>Welcome to AWS Cloud Shooter!</h2>\n            <p>Enter your name to start the game:</p>\n            <form onSubmit={handleNameSubmit}>\n              <input\n                type=\"text\"\n                value={tempPlayerName}\n                onChange={(e) => {\n                  setTempPlayerName(e.target.value);\n                  setNameError('');\n                }}\n                placeholder=\"Your name\"\n                className=\"gameCanvas-name-input\"\n                autoFocus\n              />\n              {nameError && <div className=\"gameCanvas-name-error\">{nameError}</div>}\n              <button type=\"submit\" className=\"gameCanvas-start-button\">\n                Start Game\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GameCanvas;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAO,0BAA0B;AACjC,SAASC,mBAAmB,EAAEC,gBAAgB,QAAQ,0BAA0B;;AAEhF;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,aAAa,GAAG,yDAAyD;AAC/E,MAAMC,eAAe,GAAG,uDAAuD;AAE/E,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACa,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACzE,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,MAAM;IACzD,MAAMiB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAC1D,OAAOF,WAAW,IAAI,aAAa;EACrC,CAAC,CAAC;EACF,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACsB,cAAc,EAAEC,iBAAiB,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,MAAM;IACjD,MAAM4B,SAAS,GAAGV,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACpD,OAAOS,SAAS,IAAI,EAAE;EACxB,CAAC,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAG9B,QAAQ,CAAC;IAAE+B,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC,CAAC;;EAExE;EACA,MAAM,CAACC,YAAY,CAAC,GAAGjC,QAAQ,CAAC,MAAM;IACpC,MAAMkC,mBAAmB,GAAGA,CAAA,KAAM;MAChC,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACpC,mBAAmB,CAAC;MACnD,MAAMqC,QAAQ,GAAG,CAAC,GAAGH,UAAU,CAAC,CAACI,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;MAChE,OAAOH,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAC7B,CAAC;IAED,OAAOR,mBAAmB,CAAC,CAAC,CAACS,GAAG,CAACC,QAAQ,KAAK;MAC5CC,IAAI,EAAE,aAAaD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC,CACnCH,GAAG,CAACI,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACL,KAAK,CAAC,CAAC,CAAC,CAACQ,WAAW,CAAC,CAAC,CAAC,CACvEC,IAAI,CAAC,GAAG,CAAC,SAAS;MACrBP,QAAQ,EAAE3C,mBAAmB,CAAC2C,QAAQ;IACxC,CAAC,CAAC,CAAC;EACL,CAAC,CAAC;;EAEF;EACA,MAAM,CAACQ,SAAS,CAAC,GAAGpD,QAAQ,CAAC,MAAM;IACjC,OAAOiC,YAAY,CAACoB,MAAM,CAAC,CAACC,GAAG,EAAEC,WAAW,KAAK;MAC/C,MAAMC,gBAAgB,GAAGpB,MAAM,CAACqB,OAAO,CAACvD,gBAAgB,CAAC,CACtDwD,MAAM,CAAC,CAAC,CAACC,CAAC,EAAEC,IAAI,CAAC,KAAKA,IAAI,CAACC,QAAQ,CAACN,WAAW,CAACX,QAAQ,CAAC,CAAC,CAC1DD,GAAG,CAAC,CAAC,CAACmB,IAAI,EAAEF,IAAI,CAAC,MAAM;QACtBA,IAAI,EAAE,GAAGvD,aAAa,GAAGC,eAAe,IAAIsD,IAAI,EAAE;QAClDE,IAAI,EAAEA;MACR,CAAC,CAAC,CAAC;MAELR,GAAG,CAACC,WAAW,CAACX,QAAQ,CAAC,GAAGY,gBAAgB;MAC5C,OAAOF,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACR,CAAC,CAAC;;EAEF;EACA,MAAMS,SAAS,GAAGhE,MAAM,CAAC,IAAI,CAAC;;EAE9B;EACA;EACA,MAAMiE,QAAQ,GAAGjE,MAAM,CAAC,EAAE,CAAC;EAC3B,MAAMkE,UAAU,GAAGlE,MAAM,CAAC,EAAE,CAAC;EAC7B,MAAMmE,YAAY,GAAGnE,MAAM,CAAC,EAAE,CAAC;;EAE/B;EACA,MAAM,CAACoE,YAAY,EAAEC,eAAe,CAAC,GAAGpE,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAMqE,WAAW,GAAGtE,MAAM,CAAC,IAAIuE,KAAK,CAAC,CAAC,CAAC;EACvC,MAAMC,aAAa,GAAGxE,MAAM,CAAC,IAAIuE,KAAK,CAAC,CAAC,CAAC;;EAEzC;EACAxE,SAAS,CAAC,MAAM;IACd,IAAI0E,YAAY,GAAG,CAAC;IACpB,MAAMC,WAAW,GAAG,CAAC,CAAC,CAAC;;IAEvB,MAAMC,eAAe,GAAGA,CAAA,KAAM;MAC5BF,YAAY,EAAE;MACd,IAAIA,YAAY,KAAKC,WAAW,EAAE;QAChCL,eAAe,CAAC,IAAI,CAAC;MACvB;IACF,CAAC;IAED,MAAMO,gBAAgB,GAAIC,CAAC,IAAK;MAC9BC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEF,CAAC,CAACG,MAAM,CAACC,GAAG,CAAC;IACrD,CAAC;;IAED;IACAX,WAAW,CAACY,OAAO,GAAG,IAAIX,KAAK,CAAC,CAAC;IACjCD,WAAW,CAACY,OAAO,CAACC,MAAM,GAAGR,eAAe;IAC5CL,WAAW,CAACY,OAAO,CAACE,OAAO,GAAGR,gBAAgB;IAC9CN,WAAW,CAACY,OAAO,CAACD,GAAG,GAAG,GAAG3E,aAAa,iBAAiBU,cAAc,EAAE;;IAE3E;IACAwD,aAAa,CAACU,OAAO,GAAG,IAAIX,KAAK,CAAC,CAAC;IACnCC,aAAa,CAACU,OAAO,CAACC,MAAM,GAAGR,eAAe;IAC9CH,aAAa,CAACU,OAAO,CAACE,OAAO,GAAGR,gBAAgB;IAChDJ,aAAa,CAACU,OAAO,CAACD,GAAG,GAAI,GAAG3E,aAAa,4BAA4B;IAEzE,OAAO,MAAM;MACX;MACAgE,WAAW,CAACY,OAAO,CAACC,MAAM,GAAG,IAAI;MACjCb,WAAW,CAACY,OAAO,CAACE,OAAO,GAAG,IAAI;MAClCZ,aAAa,CAACU,OAAO,CAACC,MAAM,GAAG,IAAI;MACnCX,aAAa,CAACU,OAAO,CAACE,OAAO,GAAG,IAAI;IACtC,CAAC;EACH,CAAC,EAAE,CAACpE,cAAc,CAAC,CAAC;;EAEpB;EACA,MAAMqE,MAAM,GAAGrF,MAAM,CAAC;IACpBgC,CAAC,EAAE,GAAG,GAAG,EAAE;IAAE;IACbC,CAAC,EAAE,GAAG,GAAG,GAAG;IAAE;IACdqD,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV,CAAC,CAAC;;EAEF;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,MAAM,GAAGzB,SAAS,CAACkB,OAAO;IAChC,OAAOzC,IAAI,CAACiD,KAAK,CAACjD,IAAI,CAACC,MAAM,CAAC,CAAC,IAAI+C,MAAM,CAACH,KAAK,GAAG,EAAE,CAAC,CAAC;EACxD,CAAC;;EAED;EACA,MAAMK,SAAS,GAAGA,CAAA,KAAM;IACtB1B,QAAQ,CAACiB,OAAO,GAAG,EAAE;IACrB,MAAMU,SAAS,GAAG,EAAE;IACpB,MAAMC,eAAe,GAAG3D,YAAY,CAACpB,uBAAuB,CAAC,CAAC+B,QAAQ;;IAEtE;IACA,MAAMiD,aAAa,GAAGzC,SAAS,CAACwC,eAAe,CAAC;IAChD,MAAME,kBAAkB,GAAG1D,MAAM,CAACqB,OAAO,CAACvD,gBAAgB,CAAC,CACxDwD,MAAM,CAAC,CAAC,CAACC,CAAC,EAAEC,IAAI,CAAC,KAAK,CAACA,IAAI,CAACC,QAAQ,CAAC+B,eAAe,CAAC,CAAC,CACtDjD,GAAG,CAAC,CAAC,CAACmB,IAAI,EAAEF,IAAI,CAAC,MAAM;MACtBA,IAAI,EAAE,GAAGvD,aAAa,GAAGC,eAAe,IAAIsD,IAAI,EAAE;MAClDE,IAAI,EAAEA;IACR,CAAC,CAAC,CAAC;IAEL,MAAMiC,qBAAqB,GAAGF,aAAa,CAACG,MAAM,IAAI,CAAC,GACnD,CAAC,GAAGH,aAAa,CAAC,GAClBI,eAAe,CAACJ,aAAa,EAAE,CAAC,CAAC;IAErC,MAAMK,kBAAkB,GAAGD,eAAe,CAACH,kBAAkB,EAAE,CAAC,CAAC;IAEjE,MAAMK,UAAU,GAAGA,CAACC,QAAQ,EAAErE,CAAC,EAAEsE,IAAI,KAAK;MACxC,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;QAC9B,MAAMC,SAAS,GAAG,IAAIlC,KAAK,CAAC,CAAC;QAC7BkC,SAAS,CAACtB,MAAM,GAAG,MAAM;UACvBlB,QAAQ,CAACiB,OAAO,CAACwB,IAAI,CAAC;YACpB1E,CAAC;YACDC,CAAC,EAAE,CAAC,EAAE;YACNqE,IAAI;YACJvC,IAAI,EAAEsC,QAAQ,CAACtC,IAAI;YACnB4C,KAAK,EAAEF,SAAS;YAChBG,GAAG,EAAE;UACP,CAAC,CAAC;UACFJ,OAAO,CAAC,CAAC;QACX,CAAC;QACDC,SAAS,CAACrB,OAAO,GAAG,MAAM;UACxBN,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEsB,QAAQ,CAACxC,IAAI,CAAC;UACpD2C,OAAO,CAAC,CAAC;QACX,CAAC;QACDC,SAAS,CAACxB,GAAG,GAAGoB,QAAQ,CAACxC,IAAI;MAC/B,CAAC,CAAC;IACJ,CAAC;IAED,MAAMgD,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC/B,MAAMC,QAAQ,GAAG,EAAE;;MAEnB;MACAd,qBAAqB,CAACe,OAAO,CAAEV,QAAQ,IAAK;QAC1C,IAAIrE,CAAC,GAAGwD,UAAU,CAAC,CAAC;QACpB,OAAOI,SAAS,CAACoB,IAAI,CAAEC,GAAG,IAAKxE,IAAI,CAACyE,GAAG,CAACD,GAAG,GAAGjF,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE;UACtDA,CAAC,GAAGwD,UAAU,CAAC,CAAC;QAClB;QACAI,SAAS,CAACc,IAAI,CAAC1E,CAAC,CAAC;QACjB8E,QAAQ,CAACJ,IAAI,CAACN,UAAU,CAACC,QAAQ,EAAErE,CAAC,EAAE6D,eAAe,CAAC,CAAC;MACzD,CAAC,CAAC;;MAEF;MACAM,kBAAkB,CAACY,OAAO,CAAEV,QAAQ,IAAK;QACvC,IAAIrE,CAAC,GAAGwD,UAAU,CAAC,CAAC;QACpB,OAAOI,SAAS,CAACoB,IAAI,CAAEC,GAAG,IAAKxE,IAAI,CAACyE,GAAG,CAACD,GAAG,GAAGjF,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE;UACtDA,CAAC,GAAGwD,UAAU,CAAC,CAAC;QAClB;QACAI,SAAS,CAACc,IAAI,CAAC1E,CAAC,CAAC;QACjB8E,QAAQ,CAACJ,IAAI,CAACN,UAAU,CAACC,QAAQ,EAAErE,CAAC,EAAE,OAAO,CAAC,CAAC;MACjD,CAAC,CAAC;MAEF,MAAMuE,OAAO,CAACY,GAAG,CAACL,QAAQ,CAAC;IAC7B,CAAC;IAEDD,YAAY,CAAC,CAAC;EAChB,CAAC;;EAED;EACA,MAAMX,eAAe,GAAGA,CAACkB,KAAK,EAAEC,CAAC,KAAK;IACpC,MAAM9E,QAAQ,GAAG,CAAC,GAAG6E,KAAK,CAAC,CAAC5E,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;IAC3D,OAAOH,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAEF,IAAI,CAAC6E,GAAG,CAACD,CAAC,EAAE9E,QAAQ,CAAC0D,MAAM,CAAC,CAAC;EACxD,CAAC;;EAED;EACA,MAAMsB,YAAY,GAAGA,CAACvF,CAAC,EAAEC,CAAC,EAAEuF,SAAS,EAAEC,MAAM,EAAEC,QAAQ,KAAK;IAC1DvD,YAAY,CAACe,OAAO,CAACwB,IAAI,CAAC;MACxB1E,CAAC;MACDC,CAAC;MACDuF,SAAS;MACTC,MAAM;MACN1D,IAAI,EAAE2D,QAAQ;MACdC,IAAI,EAAEC,IAAI,CAACC,GAAG,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,OAAO,GAAG7D,UAAU,CAACgB,OAAO;IAClC,MAAM8C,KAAK,GAAG/D,QAAQ,CAACiB,OAAO;IAC9B,MAAMO,MAAM,GAAGzB,SAAS,CAACkB,OAAO;IAChC,MAAMW,eAAe,GAAG3D,YAAY,CAACpB,uBAAuB,CAAC,CAAC+B,QAAQ;IAEtEmF,KAAK,CAACjB,OAAO,CAAC,CAACkB,IAAI,EAAEC,SAAS,KAAK;MACjChE,UAAU,CAACgB,OAAO,GAAGhB,UAAU,CAACgB,OAAO,CAACvB,MAAM,CAAEwE,MAAM,IAAK;QACzD,IACEA,MAAM,CAACnG,CAAC,GAAGiG,IAAI,CAACjG,CAAC,IACjBmG,MAAM,CAACnG,CAAC,GAAGiG,IAAI,CAACjG,CAAC,GAAG,EAAE,IACtBmG,MAAM,CAAClG,CAAC,GAAGgG,IAAI,CAAChG,CAAC,IACjBkG,MAAM,CAAClG,CAAC,GAAGgG,IAAI,CAAChG,CAAC,GAAG,EAAE,EACtB;UACAgG,IAAI,CAACrB,GAAG,GAAG,IAAI;UAEf,IAAIqB,IAAI,CAAC3B,IAAI,KAAKT,eAAe,EAAE;YACjC,MAAMuC,gBAAgB,GAAG,CAAC,GAAIH,IAAI,CAAChG,CAAC,GAAGwD,MAAM,CAACF,MAAO;YACrD,MAAM8C,WAAW,GAAG5F,IAAI,CAACiD,KAAK,CAAC0C,gBAAgB,GAAG,EAAE,CAAC;YACrD,MAAMX,MAAM,GAAG,CAAC,GAAGY,WAAW;YAE9BxH,QAAQ,CAAEyH,IAAI,IAAK;cACjB,IAAIA,IAAI,GAAGb,MAAM,GAAGhF,IAAI,CAAC8F,GAAG,CAAC,GAAGC,UAAU,CAAC5F,GAAG,CAAC6F,CAAC,IAAIA,CAAC,CAAC7H,KAAK,CAAC,CAAC,EAAE;gBAC7D8H,sBAAsB,CAAC,WAAW,CAAC;cACrC,CAAC,MAAM,IAAIL,WAAW,GAAG,EAAE,EAAE;gBAC3BK,sBAAsB,CAAC,UAAU,CAAC;cACpC;cACA,OAAOJ,IAAI,GAAGb,MAAM;YACtB,CAAC,CAAC;YACFF,YAAY,CAACU,IAAI,CAACjG,CAAC,EAAEiG,IAAI,CAAChG,CAAC,EAAE,IAAI,EAAEwF,MAAM,EAAEQ,IAAI,CAAClE,IAAI,CAAC;YACrD4E,SAAS,CAAC,SAAS,CAAC;YACpBC,eAAe,CAACX,IAAI,CAACjG,CAAC,GAAG,EAAE,EAAEiG,IAAI,CAAChG,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC;UACtD,CAAC,MAAM;YACLpB,QAAQ,CAAEyH,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;YAC5Bf,YAAY,CAACU,IAAI,CAACjG,CAAC,EAAEiG,IAAI,CAAChG,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAEgG,IAAI,CAAClE,IAAI,CAAC;YAClD4E,SAAS,CAAC,WAAW,CAAC;UACxB;UAEAX,KAAK,CAACa,MAAM,CAACX,SAAS,EAAE,CAAC,CAAC;UAC1B,OAAO,KAAK;QACd;QACA,OAAO,IAAI;MACb,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,IAAIjE,QAAQ,CAACiB,OAAO,CAACe,MAAM,KAAK,CAAC,IAAIvF,QAAQ,GAAG,CAAC,EAAE;MACjDiI,SAAS,CAAC,SAAS,CAAC;MACpB5H,0BAA0B,CAAEuH,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIpG,YAAY,CAAC+D,MAAM,CAAC;MACtEN,SAAS,CAAC,CAAC;IACb;EACF,CAAC;;EAED;EACA,MAAMmD,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMrD,MAAM,GAAGzB,SAAS,CAACkB,OAAO;IAChC,IAAI,CAACO,MAAM,EAAE;IAEb,MAAMsD,GAAG,GAAGtD,MAAM,CAACuD,UAAU,CAAC,IAAI,CAAC;IACnC,IAAI,CAACD,GAAG,EAAE;IAEVA,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAExD,MAAM,CAACH,KAAK,EAAEG,MAAM,CAACF,MAAM,CAAC;IAEhD,IAAInB,YAAY,EAAE;MAChB;MACA,IAAIE,WAAW,CAACY,OAAO,CAACgE,QAAQ,IAAI,CAAC5E,WAAW,CAACY,OAAO,CAACiE,YAAY,KAAK,CAAC,EAAE;QAC3E,MAAM;UAAEnH,CAAC,EAAEoH,IAAI;UAAEnH,CAAC,EAAEoH,IAAI;UAAE/D,KAAK;UAAEC;QAAO,CAAC,GAAGF,MAAM,CAACH,OAAO;QAC1D6D,GAAG,CAACO,SAAS,CAAChF,WAAW,CAACY,OAAO,EAAEkE,IAAI,EAAEC,IAAI,EAAE/D,KAAK,EAAEC,MAAM,CAAC;MAC/D;;MAEA;MACAtB,QAAQ,CAACiB,OAAO,CAAC6B,OAAO,CAAEkB,IAAI,IAAK;QACjC,IAAI,CAACA,IAAI,CAACrB,GAAG,IAAIqB,IAAI,CAACtB,KAAK,CAACuC,QAAQ,IAAIjB,IAAI,CAACtB,KAAK,CAACwC,YAAY,KAAK,CAAC,EAAE;UACrEJ,GAAG,CAACQ,IAAI,CAAC,CAAC;UAEV,MAAMC,MAAM,GAAG,EAAE;UACjB,MAAMxH,CAAC,GAAGiG,IAAI,CAACjG,CAAC;UAChB,MAAMC,CAAC,GAAGgG,IAAI,CAAChG,CAAC;UAChB,MAAMqD,KAAK,GAAG,EAAE;UAChB,MAAMC,MAAM,GAAG,EAAE;UAEjBwD,GAAG,CAACU,SAAS,CAAC,CAAC;UACfV,GAAG,CAACW,MAAM,CAAC1H,CAAC,GAAGwH,MAAM,EAAEvH,CAAC,CAAC;UACzB8G,GAAG,CAACY,MAAM,CAAC3H,CAAC,GAAGsD,KAAK,GAAGkE,MAAM,EAAEvH,CAAC,CAAC;UACjC8G,GAAG,CAACa,gBAAgB,CAAC5H,CAAC,GAAGsD,KAAK,EAAErD,CAAC,EAAED,CAAC,GAAGsD,KAAK,EAAErD,CAAC,GAAGuH,MAAM,CAAC;UACzDT,GAAG,CAACY,MAAM,CAAC3H,CAAC,GAAGsD,KAAK,EAAErD,CAAC,GAAGsD,MAAM,GAAGiE,MAAM,CAAC;UAC1CT,GAAG,CAACa,gBAAgB,CAAC5H,CAAC,GAAGsD,KAAK,EAAErD,CAAC,GAAGsD,MAAM,EAAEvD,CAAC,GAAGsD,KAAK,GAAGkE,MAAM,EAAEvH,CAAC,GAAGsD,MAAM,CAAC;UAC3EwD,GAAG,CAACY,MAAM,CAAC3H,CAAC,GAAGwH,MAAM,EAAEvH,CAAC,GAAGsD,MAAM,CAAC;UAClCwD,GAAG,CAACa,gBAAgB,CAAC5H,CAAC,EAAEC,CAAC,GAAGsD,MAAM,EAAEvD,CAAC,EAAEC,CAAC,GAAGsD,MAAM,GAAGiE,MAAM,CAAC;UAC3DT,GAAG,CAACY,MAAM,CAAC3H,CAAC,EAAEC,CAAC,GAAGuH,MAAM,CAAC;UACzBT,GAAG,CAACa,gBAAgB,CAAC5H,CAAC,EAAEC,CAAC,EAAED,CAAC,GAAGwH,MAAM,EAAEvH,CAAC,CAAC;UACzC8G,GAAG,CAACc,SAAS,CAAC,CAAC;UAEfd,GAAG,CAACe,IAAI,CAAC,CAAC;UAEVf,GAAG,CAACO,SAAS,CAACrB,IAAI,CAACtB,KAAK,EAAE3E,CAAC,EAAEC,CAAC,EAAEqD,KAAK,EAAEC,MAAM,CAAC;UAE9CwD,GAAG,CAACgB,OAAO,CAAC,CAAC;UAEb9B,IAAI,CAAChG,CAAC,IAAI,GAAG;QACf;MACF,CAAC,CAAC;;MAGF;MACAgC,QAAQ,CAACiB,OAAO,GAAGjB,QAAQ,CAACiB,OAAO,CAACvB,MAAM,CAACsE,IAAI,IAAIA,IAAI,CAAChG,CAAC,GAAGwD,MAAM,CAACF,MAAM,CAAC;MAC1E,IAAItB,QAAQ,CAACiB,OAAO,CAACe,MAAM,KAAK,CAAC,IAAIvF,QAAQ,GAAG,CAAC,EAAE;QACjDiI,SAAS,CAAC,SAAS,CAAC;QACpB5H,0BAA0B,CAAEuH,IAAI,IAAK,CAACA,IAAI,GAAG,CAAC,IAAIpG,YAAY,CAAC+D,MAAM,CAAC;QACtEN,SAAS,CAAC,CAAC;MACb;;MAEA;MACA,IAAInB,aAAa,CAACU,OAAO,CAACgE,QAAQ,IAAI,CAAC1E,aAAa,CAACU,OAAO,CAACiE,YAAY,KAAK,CAAC,EAAE;QAC/EjF,UAAU,CAACgB,OAAO,CAAC6B,OAAO,CAAEoB,MAAM,IAAK;UACrCY,GAAG,CAACO,SAAS,CAAC9E,aAAa,CAACU,OAAO,EAAEiD,MAAM,CAACnG,CAAC,EAAEmG,MAAM,CAAClG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;UAChEkG,MAAM,CAAClG,CAAC,IAAI,CAAC;QACf,CAAC,CAAC;MACJ;;MAEA;MACAiC,UAAU,CAACgB,OAAO,GAAGhB,UAAU,CAACgB,OAAO,CAACvB,MAAM,CAAEqG,CAAC,IAAKA,CAAC,CAAC/H,CAAC,GAAG,CAAC,CAAC;;MAE9D;MACA,MAAM4F,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MACtB1D,YAAY,CAACe,OAAO,GAAGf,YAAY,CAACe,OAAO,CAACvB,MAAM,CAAEsG,QAAQ,IAAK;QAC/D,MAAMC,OAAO,GAAGrC,GAAG,GAAGoC,QAAQ,CAACtC,IAAI;QACnC,IAAIuC,OAAO,GAAG,IAAI,EAAE;UAClB;UACAnB,GAAG,CAACoB,WAAW,GAAG,oBAAoB;UACtCpB,GAAG,CAACqB,UAAU,GAAG,CAAC;UAClBrB,GAAG,CAACsB,SAAS,GAAGJ,QAAQ,CAACzC,SAAS,GAAG,SAAS,GAAG,SAAS;UAC1DuB,GAAG,CAACuB,IAAI,GAAG,iBAAiB;;UAE5B;UACA,MAAMC,UAAU,GAAGN,QAAQ,CAACxC,MAAM,GAAG,CAAC,GAAG,IAAIwC,QAAQ,CAACxC,MAAM,EAAE,GAAG,GAAGwC,QAAQ,CAACxC,MAAM,EAAE;UACrFsB,GAAG,CAACyB,QAAQ,CACVD,UAAU,EACVN,QAAQ,CAACjI,CAAC,GAAG,EAAE,EACfiI,QAAQ,CAAChI,CAAC,GAAG,EACf,CAAC;;UAED;UACA8G,GAAG,CAACuB,IAAI,GAAG,YAAY;UACvBvB,GAAG,CAACyB,QAAQ,CACVP,QAAQ,CAAClG,IAAI,EACbkG,QAAQ,CAACjI,CAAC,GAAG,EAAE,EACfiI,QAAQ,CAAChI,CAAC,GAAG,EACf,CAAC;;UAED;UACA8G,GAAG,CAACuB,IAAI,GAAG,iBAAiB;UAC5BvB,GAAG,CAACyB,QAAQ,CACVP,QAAQ,CAACzC,SAAS,GAAG,GAAG,GAAG,GAAG,EAC9ByC,QAAQ,CAACjI,CAAC,GAAG,EAAE,EACfiI,QAAQ,CAAChI,CAAC,GAAG,EACf,CAAC;UAED8G,GAAG,CAACqB,UAAU,GAAG,CAAC;UAClB,OAAO,IAAI;QACb;QACA,OAAO,KAAK;MACd,CAAC,CAAC;MAEFtC,eAAe,CAAC,CAAC;;MAEjB;MACA2C,YAAY,CAACvF,OAAO,GAAGuF,YAAY,CAACvF,OAAO,CAACvB,MAAM,CAAC+G,QAAQ,IAAI;QAC7D,IAAIA,QAAQ,CAACC,QAAQ,GAAG,CAAC,IAAID,QAAQ,CAACE,IAAI,GAAG,CAAC,EAAE;UAC9CF,QAAQ,CAACG,MAAM,CAAC,CAAC;UACjBH,QAAQ,CAACI,IAAI,CAAC/B,GAAG,CAAC;UAClB,OAAO,IAAI;QACb;QACA,OAAO,KAAK;MACd,CAAC,CAAC;IACJ;IAEAgC,qBAAqB,CAACjC,QAAQ,CAAC;EACjC,CAAC;;EAED;EACA,MAAMkC,MAAM,GAAGhL,MAAM,CAAC,CAAC,CAAC,CAAC;EACzB,MAAM,CAACiL,YAAY,EAAEC,eAAe,CAAC,GAAGjL,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACAF,SAAS,CAAC,MAAM;IACd,MAAMoL,UAAU,GAAG;MACjBC,KAAK,EAAG,GAAG9K,aAAa,gCAAgC;MACxD+K,OAAO,EAAE,GAAG/K,aAAa,iCAAiC;MAC1DgL,SAAS,EAAC,GAAGhL,aAAa,mCAAmC;MAC7DiL,OAAO,EAAE,GAAGjL,aAAa;IAC3B,CAAC;;IAED;IACA,MAAMkL,eAAe,GAAI3H,IAAI,IAAK;MAChC,MAAM4H,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;MAEzB,OAAO,IAAInF,OAAO,CAAEC,OAAO,IAAK;QAC9BiF,KAAK,CAACE,gBAAgB,CAAC,OAAO,EAAE,MAAM;UACpC7G,OAAO,CAAC8G,IAAI,CAAC,yBAAyB/H,IAAI,EAAE,CAAC;UAC7C2C,OAAO,CAAC,IAAI,CAAC;QACf,CAAC,CAAC;QAEFiF,KAAK,CAACE,gBAAgB,CAAC,gBAAgB,EAAE,MAAM;UAC7CnF,OAAO,CAACiF,KAAK,CAAC;QAChB,CAAC,CAAC;;QAEF;QACAI,UAAU,CAAC,MAAMrF,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;QAErCiF,KAAK,CAACxG,GAAG,GAAGpB,IAAI;MAClB,CAAC,CAAC;IACJ,CAAC;;IAED;IACA,MAAMiI,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,YAAY,GAAG,CAAC,CAAC;MAEvB,KAAK,MAAM,CAACC,GAAG,EAAEnI,IAAI,CAAC,IAAIxB,MAAM,CAACqB,OAAO,CAACyH,UAAU,CAAC,EAAE;QACpDY,YAAY,CAACC,GAAG,CAAC,GAAG,MAAMR,eAAe,CAAC3H,IAAI,CAAC;MACjD;MAEAmH,MAAM,CAAC9F,OAAO,GAAG6G,YAAY;MAC7Bb,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC;IAEDY,UAAU,CAAC,CAAC;;IAEZ;IACA,OAAO,MAAM;MACX;MACAzJ,MAAM,CAAC4J,MAAM,CAACjB,MAAM,CAAC9F,OAAO,CAAC,CAAC6B,OAAO,CAACmF,KAAK,IAAI;QAC7C,IAAIA,KAAK,EAAE;UACTA,KAAK,CAACC,KAAK,CAAC,CAAC;UACbD,KAAK,CAACjH,GAAG,GAAG,EAAE;QAChB;MACF,CAAC,CAAC;IACJ,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM0D,SAAS,GAAIyD,SAAS,IAAK;IAC/B,MAAMF,KAAK,GAAGlB,MAAM,CAAC9F,OAAO,CAACkH,SAAS,CAAC;IACvC,IAAIF,KAAK,IAAI,CAACG,OAAO,EAAE;MACrB,IAAI;QACFH,KAAK,CAACI,WAAW,GAAG,CAAC;QACrBJ,KAAK,CAACK,MAAM,GAAG,GAAG;QAClBL,KAAK,CAACM,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;UACxB5H,OAAO,CAAC8G,IAAI,CAAC,uBAAuBQ,SAAS,GAAG,EAAEM,GAAG,CAAC;QACxD,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOA,GAAG,EAAE;QACZ5H,OAAO,CAAC8G,IAAI,CAAC,oBAAoBQ,SAAS,GAAG,EAAEM,GAAG,CAAC;MACrD;IACF;EACF,CAAC;;EAED;EACA,MAAM,CAACL,OAAO,EAAEM,UAAU,CAAC,GAAG1M,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAM2M,UAAU,GAAGA,CAAA,KAAM;IACvBD,UAAU,CAAC,CAACN,OAAO,CAAC;IACpBhK,MAAM,CAAC4J,MAAM,CAACjB,MAAM,CAAC9F,OAAO,CAAC,CAAC6B,OAAO,CAACmF,KAAK,IAAI;MAC7C,IAAIA,KAAK,EAAE;QACTA,KAAK,CAACW,KAAK,GAAG,CAACR,OAAO;MACxB;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAM,CAAC7D,UAAU,EAAEsE,aAAa,CAAC,GAAG7M,QAAQ,CAAC,MAAM;IACjD,MAAM8M,KAAK,GAAG5L,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,OAAO2L,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACF,KAAK,CAAC,GAAG,EAAE;EACvC,CAAC,CAAC;EACF,MAAM,CAACG,QAAQ,EAAEC,WAAW,CAAC,GAAGlN,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMwK,YAAY,GAAGzK,MAAM,CAAC,EAAE,CAAC;;EAE/B;EACA,MAAM,CAACoN,eAAe,EAAEC,kBAAkB,CAAC,GAAGpN,QAAQ,CAAC,KAAK,CAAC;;EAE7D;EACA,MAAM,CAACqN,WAAW,EAAEC,cAAc,CAAC,GAAGtN,QAAQ,CAAC,KAAK,CAAC;;EAErD;EACA,MAAMuN,QAAQ,CAAC;IACbC,WAAWA,CAACzL,CAAC,EAAEC,CAAC,EAAEyL,KAAK,EAAE;MACvB,IAAI,CAAC1L,CAAC,GAAGA,CAAC;MACV,IAAI,CAACC,CAAC,GAAGA,CAAC;MACV,IAAI,CAACyL,KAAK,GAAGA,KAAK;MAClB,IAAI,CAAC9C,IAAI,GAAGnI,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;MACjC,IAAI,CAACiL,MAAM,GAAGlL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;MACnC,IAAI,CAACkL,MAAM,GAAGnL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;MACnC,IAAI,CAACiI,QAAQ,GAAG,CAAC;MACjB,IAAI,CAACkD,WAAW,GAAG,IAAI,CAACjD,IAAI,CAAC,CAAC;IAChC;IAEAC,MAAMA,CAAA,EAAG;MACP,IAAI,CAAC7I,CAAC,IAAI,IAAI,CAAC2L,MAAM;MACrB,IAAI,CAAC1L,CAAC,IAAI,IAAI,CAAC2L,MAAM;MACrB,IAAI,CAACjD,QAAQ,IAAI,IAAI;MACrB;MACA,IAAI,CAACC,IAAI,GAAGnI,IAAI,CAAC8F,GAAG,CAAC,CAAC,EAAE,IAAI,CAACsF,WAAW,GAAG,IAAI,CAAClD,QAAQ,CAAC;IAC3D;IAEAG,IAAIA,CAAC/B,GAAG,EAAE;MACR,IAAI,IAAI,CAAC6B,IAAI,IAAI,CAAC,EAAE,OAAO,CAAC;;MAE5B7B,GAAG,CAACsB,SAAS,GAAG,IAAI,CAACqD,KAAK;MAC1B3E,GAAG,CAAC+E,WAAW,GAAG,IAAI,CAACnD,QAAQ;MAC/B5B,GAAG,CAACU,SAAS,CAAC,CAAC;MACfV,GAAG,CAACgF,GAAG,CAAC,IAAI,CAAC/L,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAAC2I,IAAI,EAAE,CAAC,EAAEnI,IAAI,CAACuL,EAAE,GAAG,CAAC,CAAC;MAClDjF,GAAG,CAACkF,IAAI,CAAC,CAAC;MACVlF,GAAG,CAAC+E,WAAW,GAAG,CAAC;IACrB;EACF;;EAEA;EACA,MAAMlF,eAAe,GAAGA,CAAC5G,CAAC,EAAEC,CAAC,EAAEyL,KAAK,KAAK;IACvC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3BzD,YAAY,CAACvF,OAAO,CAACwB,IAAI,CAAC,IAAI8G,QAAQ,CAACxL,CAAC,EAAEC,CAAC,EAAEyL,KAAK,CAAC,CAAC;IACtD;EACF,CAAC;;EAED;EACA3N,SAAS,CAAC,MAAM;IACd,IAAIuN,WAAW,IAAI,CAACJ,QAAQ,IAAIxM,QAAQ,GAAG,CAAC,EAAE;MAC5C,MAAMyN,KAAK,GAAGC,WAAW,CAAC,MAAM;QAC9BzN,WAAW,CAAC2H,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MAC/B,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAM+F,aAAa,CAACF,KAAK,CAAC;IACnC,CAAC,MAAM,IAAIzN,QAAQ,KAAK,CAAC,IAAI,CAAC0M,eAAe,EAAE;MAC7CkB,cAAc,CAAC,CAAC;IAClB;EACF,CAAC,EAAE,CAAC5N,QAAQ,EAAEwM,QAAQ,EAAEE,eAAe,EAAEE,WAAW,CAAC,CAAC;;EAEtD;EACA,MAAMgB,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAIlB,eAAe,EAAE;IAErBD,WAAW,CAAC,IAAI,CAAC;IACjBE,kBAAkB,CAAC,IAAI,CAAC;IAExB,MAAMkB,QAAQ,GAAG;MAAExK,IAAI,EAAEpC,UAAU;MAAEf;IAAM,CAAC;IAC5C,MAAM4N,aAAa,GAAG,CAAC,GAAGhG,UAAU,EAAE+F,QAAQ,CAAC,CAC5C/L,IAAI,CAAC,CAACiM,CAAC,EAAEzE,CAAC,KAAKA,CAAC,CAACpJ,KAAK,GAAG6N,CAAC,CAAC7N,KAAK,CAAC,CACjC+B,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAEdmK,aAAa,CAAC0B,aAAa,CAAC;IAC5BrN,YAAY,CAACuN,OAAO,CAAC,YAAY,EAAE1B,IAAI,CAAC2B,SAAS,CAACH,aAAa,CAAC,CAAC;EACnE,CAAC;;EAED;EACAzO,SAAS,CAAC,MAAM;IACd,MAAM0F,MAAM,GAAGzB,SAAS,CAACkB,OAAO;IAChC,IAAI,CAACO,MAAM,EAAE,OAAO,CAAC;;IAErBA,MAAM,CAACH,KAAK,GAAG,IAAI;IACnBG,MAAM,CAACF,MAAM,GAAG,GAAG;IAEnB,MAAMwD,GAAG,GAAGtD,MAAM,CAACuD,UAAU,CAAC,IAAI,CAAC;IACnCD,GAAG,CAAC6F,qBAAqB,GAAG,IAAI;;IAEhC;IACA,IAAIxK,YAAY,EAAE;MAChBuB,SAAS,CAAC,CAAC;MACX,MAAMkJ,WAAW,GAAG9D,qBAAqB,CAACjC,QAAQ,CAAC;MACnD,OAAO,MAAMgG,oBAAoB,CAACD,WAAW,CAAC;IAChD;EACF,CAAC,EAAE,CAACzK,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEpB;EACArE,SAAS,CAAC,MAAM;IACd,MAAM0F,MAAM,GAAGzB,SAAS,CAACkB,OAAO;IAEhC,MAAM6J,YAAY,GAAG,EAAE;IACvB,MAAMC,cAAc,GAAG,GAAG;IAE1B,MAAMC,eAAe,GAAIpK,CAAC,IAAK;MAC7B,MAAMqK,IAAI,GAAGzJ,MAAM,CAAC0J,qBAAqB,CAAC,CAAC;;MAE3C;MACA,IAAIC,IAAI,GAAGvK,CAAC,CAACwK,OAAO,GAAGH,IAAI,CAACI,IAAI,GAAIjK,MAAM,CAACH,OAAO,CAACI,KAAK,GAAG,CAAE;;MAE7D;MACA8J,IAAI,GAAG3M,IAAI,CAAC8F,GAAG,CAAC,CAAC,EAAE,EAAE9F,IAAI,CAAC6E,GAAG,CAAC8H,IAAI,EAAE3J,MAAM,CAACH,KAAK,GAAGD,MAAM,CAACH,OAAO,CAACI,KAAK,GAAG,EAAE,CAAC,CAAC;;MAE9E;MACAD,MAAM,CAACH,OAAO,CAAClD,CAAC,GAAGoN,IAAI;IACzB,CAAC;IAED,MAAMG,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,IAAIjC,WAAW,IAAI5M,QAAQ,GAAG,CAAC,EAAE;QAC/BiI,SAAS,CAAC,OAAO,CAAC;QAElBzE,UAAU,CAACgB,OAAO,CAACwB,IAAI,CAAC;UACtB1E,CAAC,EAAEqD,MAAM,CAACH,OAAO,CAAClD,CAAC,GAAGqD,MAAM,CAACH,OAAO,CAACI,KAAK,GAAG,CAAC,GAAG,EAAE;UACnDrD,CAAC,EAAEoD,MAAM,CAACH,OAAO,CAACjD,CAAC,GAAG;QACxB,CAAC,CAAC;MACJ;IACF,CAAC;IAEDwD,MAAM,CAACkG,gBAAgB,CAAC,WAAW,EAAEsD,eAAe,CAAC;IACrDxJ,MAAM,CAACkG,gBAAgB,CAAC,OAAO,EAAE4D,iBAAiB,CAAC;IAEnD,OAAO,MAAM;MACX9J,MAAM,CAAC+J,mBAAmB,CAAC,WAAW,EAAEP,eAAe,CAAC;MACxDxJ,MAAM,CAAC+J,mBAAmB,CAAC,OAAO,EAAED,iBAAiB,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,CAACjC,WAAW,CAAC,CAAC;;EAEjB;EACAvN,SAAS,CAAC,MAAM;IACdoB,YAAY,CAACsO,UAAU,CAAC,YAAY,CAAC;IACrCtO,YAAY,CAACsO,UAAU,CAAC,gBAAgB,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAG1P,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACA,MAAM2P,aAAa,GAAG,CACpB;IAAEC,EAAE,EAAE,aAAa;IAAE9L,IAAI,EAAE;EAAgB,CAAC,EAC5C;IAAE8L,EAAE,EAAE,aAAa;IAAE9L,IAAI,EAAE;EAAe,CAAC,EAC3C;IAAE8L,EAAE,EAAE,aAAa;IAAE9L,IAAI,EAAE;EAAiB,CAAC,EAC7C;IAAE8L,EAAE,EAAE,aAAa;IAAE9L,IAAI,EAAE;EAAiB,CAAC,CAC9C;;EAED;EACA,MAAM+L,kBAAkB,GAAIC,QAAQ,IAAK;IACvC9O,iBAAiB,CAAC8O,QAAQ,CAAC;IAC3B5O,YAAY,CAACuN,OAAO,CAAC,gBAAgB,EAAEqB,QAAQ,CAAC;;IAEhD;IACAzL,WAAW,CAACY,OAAO,CAACD,GAAG,GAAG,GAAG3E,aAAa,iBAAiByP,QAAQ,EAAE;IAErEJ,kBAAkB,CAAC,KAAK,CAAC;IACzBpC,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;;EAED;EACA,MAAM,CAACyC,YAAY,EAAEC,eAAe,CAAC,GAAGhQ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACiQ,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGlQ,QAAQ,CAAC,KAAK,CAAC;;EAE/D;EACA,MAAMmQ,mBAAmB,GAAG;IAC1BC,QAAQ,EAAE,CACR,mCAAmC,EACnC,sCAAsC,EACtC,iCAAiC,EACjC,kCAAkC,CACnC;IACDC,KAAK,EAAE,CACL,iBAAiB,EACjB,8BAA8B,EAC9B,wBAAwB,CACzB;IACDC,WAAW,EAAE,CACX,8CAA8C,EAC9C,mCAAmC,EACnC,kCAAkC,CACnC;IACDC,aAAa,EAAE,CACb,oCAAoC,EACpC,+CAA+C,EAC/C,oCAAoC,EACpC,kCAAkC,CACnC;IACDC,SAAS,EAAE,CACT,6CAA6C,EAC7C,oCAAoC,EACpC,+BAA+B;EAEnC,CAAC;;EAED;EACA,MAAM/H,sBAAsB,GAAI7F,QAAQ,IAAK;IAC3C,MAAM6N,QAAQ,GAAGN,mBAAmB,CAACvN,QAAQ,CAAC;IAC9C,MAAM8N,aAAa,GAAGD,QAAQ,CAACjO,IAAI,CAACiD,KAAK,CAACjD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGgO,QAAQ,CAACzK,MAAM,CAAC,CAAC;IAC3EgK,eAAe,CAACU,aAAa,CAAC;IAC9BR,mBAAmB,CAAC,IAAI,CAAC;;IAEzB;IACAtE,UAAU,CAAC,MAAM;MACfsE,mBAAmB,CAAC,KAAK,CAAC;IAC5B,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;;EAED;EACApQ,SAAS,CAAC,MAAM;IACd,MAAM6Q,qBAAqB,GAAGxC,WAAW,CAAC,MAAM;MAC9C,IAAI1N,QAAQ,GAAG,CAAC,IAAI+B,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;QACvCgG,sBAAsB,CAAC,eAAe,CAAC;MACzC;IACF,CAAC,EAAE,KAAK,CAAC;IAET,OAAO,MAAM2F,aAAa,CAACuC,qBAAqB,CAAC;EACnD,CAAC,EAAE,CAAClQ,QAAQ,CAAC,CAAC;;EAEd;EACAX,SAAS,CAAC,MAAM;IACd,IAAIW,QAAQ,KAAK,EAAE,EAAE;MACnBgI,sBAAsB,CAAC,aAAa,CAAC;IACvC;EACF,CAAC,EAAE,CAAChI,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMmQ,gBAAgB,GAAIhM,CAAC,IAAK;IAC9BA,CAAC,CAACiM,cAAc,CAAC,CAAC;IAClB,IAAIvP,cAAc,CAACwP,IAAI,CAAC,CAAC,CAAC9K,MAAM,GAAG,CAAC,EAAE;MACpCvE,YAAY,CAAC,yCAAyC,CAAC;MACvD;IACF;IACA,IAAIH,cAAc,CAACwP,IAAI,CAAC,CAAC,CAAC9K,MAAM,GAAG,EAAE,EAAE;MACrCvE,YAAY,CAAC,sCAAsC,CAAC;MACpD;IACF;IACAE,aAAa,CAACL,cAAc,CAACwP,IAAI,CAAC,CAAC,CAAC;IACpC5P,YAAY,CAACuN,OAAO,CAAC,YAAY,EAAEnN,cAAc,CAACwP,IAAI,CAAC,CAAC,CAAC;IACzDzP,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAED,oBACEjB,OAAA;IAAK2Q,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnC5Q,OAAA;MAAI2Q,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5DhR,OAAA;MAAK2Q,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtC5Q,OAAA;QAAK2Q,SAAS,EAAC,2BAA2B;QAAAC,QAAA,eACxC5Q,OAAA;UAAQiR,GAAG,EAAEtN,SAAU;UAACgN,SAAS,EAAC;QAAwB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eACNhR,OAAA;QAAK2Q,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBAC3C5Q,OAAA;UAAK2Q,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACrC5Q,OAAA;YAAK2Q,SAAS,EAAC,wBAAwB;YAAAC,QAAA,GAAC,UAC9B,EAACtP,UAAU;UAAA;YAAAuP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB,CAAC,eACNhR,OAAA;YAAK2Q,SAAS,EAAC,0BAA0B;YAAAC,QAAA,gBACvC5Q,OAAA;cAAMkR,IAAI,EAAC,KAAK;cAAC,cAAW,OAAO;cAAAN,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAAC,GAAG,EAAC,SAC3C,EAACzQ,KAAK,EAAE,GAAG,eAClBP,OAAA;cAAMkR,IAAI,EAAC,KAAK;cAAC,cAAW,UAAU;cAAAN,QAAA,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAEhDpG,YAAY,IAAI5I,MAAM,CAAC4J,MAAM,CAACjB,MAAM,CAAC9F,OAAO,CAAC,CAAC8B,IAAI,CAACkF,KAAK,IAAIA,KAAK,CAAC,iBACjE7L,OAAA;cACE2Q,SAAS,EAAC,yBAAyB;cACnCQ,OAAO,EAAE5E,UAAW;cACpB,cAAW,cAAc;cAAAqE,QAAA,EAExB5E,OAAO,GAAG,IAAI,GAAG;YAAI;cAAA6E,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CACT;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENhR,OAAA;UAAK2Q,SAAS,EAAC,0BAA0B;UAAAC,QAAA,GAAC,QAClC,EAACvQ,QAAQ,EAAC,GAClB;QAAA;UAAAwQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAENhR,OAAA;UAAK2Q,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBAC3C5Q,OAAA;YAAA4Q,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBhR,OAAA;YAAA4Q,QAAA,gBACA5Q,OAAA;cAAA4Q,QAAA,EAAI;YAA6B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtChR,OAAA;cAAA4Q,QAAA,EAAI;YAAyB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClChR,OAAA;cAAA4Q,QAAA,EAAI;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC/BhR,OAAA;cAAA4Q,QAAA,EAAI;YAAuC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eAENhR,OAAA;UAAK2Q,SAAS,EAAC,wBAAwB;UAAAC,QAAA,gBACvC5Q,OAAA;YAAA4Q,QAAA,EAAI;UAAW;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACpBhR,OAAA;YAAA4Q,QAAA,EACGzI,UAAU,CAAC5F,GAAG,CAAC,CAAC6O,KAAK,EAAEC,KAAK,kBAC3BrR,OAAA;cAAA4Q,QAAA,gBACE5Q,OAAA;gBAAM2Q,SAAS,EAAC,4BAA4B;gBAAAC,QAAA,GAAEQ,KAAK,CAAC1N,IAAI,EAAC,GAAC;cAAA;gBAAAmN,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,KAAC,EAACI,KAAK,CAAC7Q,KAAK;YAAA,GADvE8Q,KAAK;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAEV,CACL;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACA,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eAEJhR,OAAA;UAAK2Q,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBAC3C5Q,OAAA;YAAI2Q,SAAS,EAAC,0BAA0B;YAAAC,QAAA,EAAC;UAEzC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAELhR,OAAA;YAAK2Q,SAAS,EAAC,yBAAyB;YAAAC,QAAA,EACrC/O,YAAY,CAACpB,uBAAuB,CAAC,CAACgC;UAAI;YAAAoO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEL3B,eAAe,iBACdrP,OAAA;MAAK2Q,SAAS,EAAC,0BAA0B;MAAAC,QAAA,eACvC5Q,OAAA;QAAK2Q,SAAS,EAAC,mCAAmC;QAAAC,QAAA,gBAChD5Q,OAAA;UAAA4Q,QAAA,EAAI;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3BhR,OAAA;UAAK2Q,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EACpCrB,aAAa,CAAChN,GAAG,CAAE+O,MAAM,iBACxBtR,OAAA;YAEE2Q,SAAS,EAAE,4BAA4BhQ,cAAc,KAAK2Q,MAAM,CAAC9B,EAAE,GAAG,UAAU,GAAG,EAAE,EAAG;YACxF2B,OAAO,EAAEA,CAAA,KAAM1B,kBAAkB,CAAC6B,MAAM,CAAC9B,EAAE,CAAE;YAAAoB,QAAA,gBAE7C5Q,OAAA;cACE4E,GAAG,EAAE,SAAS0M,MAAM,CAAC9B,EAAE,EAAG;cAC1B+B,GAAG,EAAED,MAAM,CAAC5N;YAAK;cAAAmN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eACFhR,OAAA;cAAA4Q,QAAA,EAAIU,MAAM,CAAC5N;YAAI;cAAAmN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GARfM,MAAM,CAAC9B,EAAE;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASX,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEAnE,QAAQ,iBACP7M,OAAA;MAAK2Q,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnC5Q,OAAA;QAAA4Q,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBhR,OAAA;QAAQmR,OAAO,EAAEA,CAAA,KAAMK,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAE;QAAAd,QAAA,EAAC;MAEjD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAEAnB,gBAAgB,iBACf7P,OAAA;MAAK2Q,SAAS,EAAC,kCAAkC;MAAAC,QAAA,gBAC/C5Q,OAAA;QAAK2Q,SAAS,EAAC,kCAAkC;QAAAC,QAAA,eAC/C5Q,OAAA;UAAK4E,GAAG,EAAC,uBAAuB;UAAC2M,GAAG,EAAC;QAAa;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC,eACNhR,OAAA;QAAK2Q,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EACtCjB;MAAY;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEAhQ,aAAa,iBACZhB,OAAA;MAAK2Q,SAAS,EAAC,0BAA0B;MAAAC,QAAA,eACvC5Q,OAAA;QAAK2Q,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/B5Q,OAAA;UAAA4Q,QAAA,EAAI;QAA6B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtChR,OAAA;UAAA4Q,QAAA,EAAG;QAAkC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACzChR,OAAA;UAAM2R,QAAQ,EAAEnB,gBAAiB;UAAAI,QAAA,gBAC/B5Q,OAAA;YACEiG,IAAI,EAAC,MAAM;YACX2L,KAAK,EAAE1Q,cAAe;YACtB2Q,QAAQ,EAAGrN,CAAC,IAAK;cACfrD,iBAAiB,CAACqD,CAAC,CAACG,MAAM,CAACiN,KAAK,CAAC;cACjCvQ,YAAY,CAAC,EAAE,CAAC;YAClB,CAAE;YACFyQ,WAAW,EAAC,WAAW;YACvBnB,SAAS,EAAC,uBAAuB;YACjCoB,SAAS;UAAA;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,EACD5P,SAAS,iBAAIpB,OAAA;YAAK2Q,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAExP;UAAS;YAAAyP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtEhR,OAAA;YAAQiG,IAAI,EAAC,QAAQ;YAAC0K,SAAS,EAAC,yBAAyB;YAAAC,QAAA,EAAC;UAE1D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5Q,EAAA,CA71BID,UAAU;AAAA6R,EAAA,GAAV7R,UAAU;AA+1BhB,eAAeA,UAAU;AAAC,IAAA6R,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}