{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/GameCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AZURE_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Add these constants from IconResolver.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AZURE_BUCKET_URL = process.env.REACT_APP_AZURE_BUCKET_URL;\nconst ICONS_BASE_PATH = process.env.REACT_APP_ICONS_BASE_PATH;\nconst AZURE_ROCKET_PATH = `${AZURE_BUCKET_URL}/games/rocket`;\nconst DEFAULT_ROCKET = `${AZURE_ROCKET_PATH}/rocket1.png`;\nconst FIREBALL_PATH = `${AZURE_BUCKET_URL}/games/bullet/fireball.png`;\n\n// Add this at the top to log environment variables\nconsole.log(\"Environment Variables:\", {\n  AZURE_BUCKET_URL,\n  ICONS_BASE_PATH\n});\nconst GameCanvas = () => {\n  _s();\n  // First, declare all state\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameInitialized, setGameInitialized] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const savedRocket = localStorage.getItem('selectedRocket');\n    return savedRocket || null;\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({\n    x: 375,\n    y: 550\n  });\n\n  // Modify the instructions state initialization\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AZURE_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      // Get all categories instead of just one\n      return shuffled.map(category => {\n        const displayName = category.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');\n        return {\n          text: `Shoot the ${displayName} icons!`,\n          category: AZURE_ICON_CATEGORIES[category],\n          displayName: displayName\n        };\n      });\n    };\n    return getRandomCategories();\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => path.includes(instruction.category)).map(([name, path]) => ({\n        path: `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${path}`,\n        name: name\n      }));\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs\n  const canvasRef = useRef(null);\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n  const rocketImage = useRef(new Image());\n  const gameStateRef = useRef({\n    iconsCount: 0,\n    bulletsCount: 0,\n    timeLeft: 60,\n    score: 0,\n    changingCategory: false\n  });\n  const fireballImage = new Image();\n  fireballImage.src = FIREBALL_PATH;\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25,\n    y: 800 - 100,\n    width: 120,\n    height: 120\n  });\n\n  // Load rocket image\n  useEffect(() => {\n    if (selectedRocket) {\n      rocketImage.current = new Image();\n      rocketImage.current.onload = () => {\n        console.log(\"Rocket image loaded successfully\");\n      };\n      rocketImage.current.onerror = e => {\n        console.error(\"Error loading rocket image:\", e);\n      };\n      rocketImage.current.src = selectedRocket;\n    }\n  }, [selectedRocket]);\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    return Math.floor(Math.random() * (canvas.width - 50));\n  };\n\n  // Add this state at the top with other states\n  const [currentMission, setCurrentMission] = useState({\n    category: '',\n    displayName: '',\n    targetIcons: [],\n    text: ''\n  });\n\n  // Add a state for empty icons\n  const [iconsEmpty, setIconsEmpty] = useState(false);\n\n  // Single function to handle mission updates\n  const updateGameMission = (isInitial = false) => {\n    const categories = Object.keys(AZURE_ICON_CATEGORIES);\n    const shuffled = [...categories].sort(() => 0.5 - Math.random());\n    const selectedCategory = shuffled[0];\n    const displayName = selectedCategory.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');\n    console.log(\"Selected category:\", selectedCategory);\n    console.log(\"Category value:\", AZURE_ICON_CATEGORIES[selectedCategory]);\n    const newMission = {\n      category: AZURE_ICON_CATEGORIES[selectedCategory],\n      displayName: displayName,\n      targetIcons: [],\n      text: `Shoot the ${displayName} icons!`\n    };\n\n    // Log all available mappings for debugging\n    console.log(\"Available categories in SERVICE_MAPPINGS:\");\n    const availableCats = new Set();\n    Object.entries(SERVICE_MAPPINGS).forEach(([name, path]) => {\n      const category = path.split('/')[1];\n      availableCats.add(category);\n    });\n    console.log([...availableCats]);\n\n    // Find all icons that match this category\n    const categoryIcons = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => {\n      const matches = path.includes(newMission.category);\n      return matches;\n    }).map(([name, path]) => {\n      console.log(`Found icon: ${name}, path: ${path}`);\n      return name;\n    });\n    if (categoryIcons.length === 0) {\n      console.error('❌ No icons found for category:', newMission.category);\n      console.error('Example expected path format:', `/some-path/${newMission.category}/icon.svg`);\n\n      // Try a different category as a fallback\n      const fallbackCategory = [...availableCats][0];\n      console.log(`Trying fallback category: ${fallbackCategory}`);\n      const fallbackIcons = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => path.includes(fallbackCategory)).map(([name]) => name);\n      if (fallbackIcons.length > 0) {\n        newMission.category = fallbackCategory;\n        newMission.displayName = fallbackCategory.charAt(0).toUpperCase() + fallbackCategory.slice(1);\n        newMission.text = `Shoot the ${newMission.displayName} icons!`;\n        console.log(`Fallback to category: ${fallbackCategory} with ${fallbackIcons.length} icons`);\n      } else {\n        console.error(\"Cannot find any valid icons in any category!\");\n        return; // Exit the function if no icons can be found\n      }\n    }\n\n    // Continue with the rest of the function...\n  };\n\n  // Add to rocket options to log rocket paths\n  const rocketOptions = [{\n    id: `${AZURE_ROCKET_PATH}/rocket1.png`,\n    name: 'Modern Rocket'\n  }, {\n    id: `${AZURE_ROCKET_PATH}/rocket2.png`,\n    name: 'Power Rocket'\n  }, {\n    id: `${AZURE_ROCKET_PATH}/rocket3.png`,\n    name: 'Stealth Rocket'\n  }, {\n    id: `${AZURE_ROCKET_PATH}/rocket4.png`,\n    name: 'Classic Rocket'\n  }];\n\n  // Log rocket paths when component loads\n  useEffect(() => {\n    console.log(\"Rocket paths:\", rocketOptions.map(rocket => rocket.id));\n    console.log(\"AZURE_ROCKET_PATH:\", AZURE_ROCKET_PATH);\n  }, []);\n\n  // Modify handleRocketSelect to add better logging\n  const handleRocketSelect = rocketId => {\n    console.log(\"🚀 Rocket selected:\", rocketId);\n\n    // Set up rocket image first\n    const rocketImg = new Image();\n    rocketImg.onload = () => {\n      console.log(\"Rocket image loaded successfully:\", rocketId);\n\n      // Only after the image loads, proceed with game initialization\n      setSelectedRocket(rocketId);\n      localStorage.setItem('selectedRocket', rocketId);\n      rocketImage.current = rocketImg;\n\n      // Now close modal and start game\n      setShowRocketModal(false);\n      setGameStarted(true);\n      setGameInitialized(true); // This will trigger the useEffect above\n\n      // Start the mission after a small delay to ensure UI updates first\n      setTimeout(() => {\n        try {\n          updateGameMission(true);\n        } catch (error) {\n          console.error(\"❌ ERROR STARTING MISSION:\", error);\n        }\n      }, 100);\n    };\n    rocketImg.onerror = e => {\n      console.error(\"❌ ERROR LOADING ROCKET IMAGE:\", e);\n      console.error(\"Failed URL:\", rocketId);\n    };\n    console.log(\"Setting rocket image source to:\", rocketId);\n    rocketImg.src = rocketId;\n  };\n\n  // Use effect for when icons reach bottom\n  useEffect(() => {\n    if (!iconsEmpty || !gameStarted || !timeLeft) return;\n    updateGameMission(false);\n  }, [iconsEmpty, gameStarted, timeLeft]);\n\n  // Separate useEffect for game loop\n  useEffect(() => {\n    if (!gameInitialized || !canvasRef.current) return;\n    console.log(\"Starting game loop\");\n    const gameLoopId = requestAnimationFrame(gameLoop);\n    return () => {\n      console.log(\"Cleaning up game loop\");\n      cancelAnimationFrame(gameLoopId);\n    };\n  }, [gameInitialized]);\n\n  // Separate useEffect for initial mission\n  useEffect(() => {\n    if (!gameInitialized || !currentMission.category) return;\n    console.log(\"Setting up initial mission\");\n    generateNewIcons(currentMission.category, currentMission.targetIcons);\n  }, [gameInitialized, currentMission.category]);\n\n  // Show feedback\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now()\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter(bullet => {\n        if (bullet.x > icon.x && bullet.x < icon.x + 50 && bullet.y > icon.y && bullet.y < icon.y + 50) {\n          icon.hit = true;\n\n          // Check if this is a target icon\n          const isCorrectIcon = icon.isTarget;\n          if (isCorrectIcon) {\n            const heightPercentage = 1 - icon.y / canvas.height;\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            setScore(prev => {\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore(prev => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n  };\n\n  // The main game loop\n  const gameLoop = () => {\n    if (!gameStarted || !canvasRef.current) {\n      console.log(\"Game not started or canvas not ready\");\n      return;\n    }\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Update game state ref silently\n    gameStateRef.current = {\n      iconsCount: iconsRef.current.length,\n      bulletsCount: bulletsRef.current.length,\n      timeLeft: timeLeft,\n      score: score\n    };\n    if (gameStarted) {\n      // Draw the rocket (gun)\n      const {\n        x: gunX,\n        y: gunY,\n        width,\n        height\n      } = gunRef.current;\n      ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n\n      // Draw icons\n      iconsRef.current.forEach(icon => {\n        if (!icon.hit) {\n          ctx.save();\n          const radius = 10;\n          const x = icon.x;\n          const y = icon.y;\n          const width = 50;\n          const height = 50;\n          ctx.beginPath();\n          ctx.moveTo(x + radius, y);\n          ctx.lineTo(x + width - radius, y);\n          ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n          ctx.lineTo(x + width, y + height - radius);\n          ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n          ctx.lineTo(x + radius, y + height);\n          ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n          ctx.lineTo(x, y + radius);\n          ctx.quadraticCurveTo(x, y, x + radius, y);\n          ctx.closePath();\n          ctx.clip();\n          ctx.drawImage(icon.image, x, y, width, height);\n          ctx.restore();\n          icon.y += 0.7;\n        }\n      });\n\n      // Filter icons off-screen\n      iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n\n      // Check for empty icons and generate new category\n      if (iconsRef.current.length === 0 && !iconsEmpty) {\n        setIconsEmpty(true);\n      }\n\n      // Draw bullets\n      bulletsRef.current.forEach(bullet => {\n        ctx.drawImage(fireballImage, bullet.x, bullet.y, 20, 20);\n        bullet.y -= 5;\n      });\n      bulletsRef.current = bulletsRef.current.filter(b => b.y > 0);\n\n      // Draw feedback\n      const now = Date.now();\n      feedbacksRef.current = feedbacksRef.current.filter(feedback => {\n        const elapsed = now - feedback.time;\n        if (elapsed < 3000) {\n          ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n          ctx.shadowBlur = 4;\n          ctx.fillStyle = feedback.isCorrect ? '#4CAF50' : '#F44336';\n          ctx.font = 'bold 28px Arial';\n\n          // Points text\n          const pointsText = feedback.points > 0 ? `+${feedback.points}` : `${feedback.points}`;\n          ctx.fillText(pointsText, feedback.x + 10, feedback.y - 20);\n\n          // Icon name\n          ctx.font = '16px Arial';\n          ctx.fillText(feedback.name, feedback.x + 60, feedback.y + 25);\n\n          // Checkmark or X\n          ctx.font = 'bold 55px Arial';\n          ctx.fillText(feedback.isCorrect ? '✔' : '✘', feedback.x + 10, feedback.y + 30);\n          ctx.shadowBlur = 0;\n          return true;\n        }\n        return false;\n      });\n      checkCollisions();\n\n      // Update and draw particles\n      particlesRef.current = particlesRef.current.filter(particle => {\n        if (particle.lifetime > 0 && particle.size > 0) {\n          particle.update();\n          particle.draw(ctx);\n          return true;\n        }\n        return false;\n      });\n    }\n\n    // Only request next frame if game is still running\n    if (gameStarted && !gameOver) {\n      requestAnimationFrame(gameLoop);\n    }\n  };\n\n  // Sounds\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n  useEffect(() => {\n    const soundFiles = {\n      shoot: `${AZURE_BUCKET_URL}/games/sounds/pistol_sound.mp3`,\n      correct: `${AZURE_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n      incorrect: `${AZURE_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n      levelup: `${AZURE_BUCKET_URL}/games/sounds/levelup.mp3`\n    };\n    const createSafeAudio = path => {\n      const audio = new Audio();\n      return new Promise(resolve => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n        setTimeout(() => resolve(null), 2000);\n        audio.src = path;\n      });\n    };\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n    loadSounds();\n    return () => {\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n  const [isMuted, setIsMuted] = useState(false);\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !sound.muted;\n      }\n    });\n  };\n  const playSound = soundName => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n  useEffect(() => {\n    return () => {\n      setGameStarted(false);\n      setShowRocketModal(true);\n    };\n  }, []);\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size;\n    }\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n    draw(ctx) {\n      if (this.size <= 0) return;\n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled, gameStarted]);\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    setGameOver(true);\n    setGameOverHandled(true);\n    const newScore = {\n      name: playerName,\n      score\n    };\n    const newHighScores = [...highScores, newScore].sort((a, b) => b.score - a.score).slice(0, 5);\n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const handleMouseMove = e => {\n      const rect = canvas.getBoundingClientRect();\n      let newX = e.clientX - rect.left - gunRef.current.width / 2;\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n      gunRef.current.x = newX;\n    };\n    const handleCanvasClick = () => {\n      if (gameStarted && timeLeft > 0) {\n        playSound('shoot');\n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20\n        });\n      }\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted]);\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n  const [showRocketModal, setShowRocketModal] = useState(true);\n  const cheerleaderMessages = {\n    goodShot: [\"Great shot! You're an Azure Pro! 🌟\", \"Amazing cloud skills! Keep it up! 🎯\", \"You're on fire in the cloud! 🔥\", \"That's how Azure experts do it! 👏\"],\n    combo: [\"Cloud combo! 🎮\", \"You're scaling infinitely! ⚡\", \"What an Azure streak! 🌈\"],\n    timeWarning: [\"30 seconds left - you're highly available! ⏰\", \"Time for the final deployment! 💪\", \"Make every compute unit count! ⭐\"],\n    encouragement: [\"You've got this, cloud warrior! 🚀\", \"Keep going! You're Azure certified material! \", \"I believe in your cloud powers! 💫\", \"Show them your Azure expertise! 💪\"],\n    highScore: [\"New high score! You're going serverless! 🏆\", \"You're breaking cloud records! 🎖️\", \"Legendary Azure performance! 👑\"]\n  };\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n  const showCheerleaderMessage = category => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowNameModal(false);\n  };\n\n  // Ensure generateNewIcons handles missing icons gracefully\n  const generateNewIcons = (category, targetIcons) => {\n    console.log('\\n==== GENERATING NEW ICONS ====');\n    console.log('Current Category:', category);\n    console.log('Target Icons:', targetIcons);\n\n    // Log actual path construction for debugging\n    console.log('Path construction example:');\n    console.log(`AZURE_BUCKET_URL: ${AZURE_BUCKET_URL}`);\n    console.log(`ICONS_BASE_PATH: ${ICONS_BASE_PATH}`);\n\n    // Check if a sample icon exists\n    if (targetIcons && targetIcons.length > 0) {\n      const sampleIconName = targetIcons[0];\n      const sampleIconPath = SERVICE_MAPPINGS[sampleIconName];\n      console.log(`Sample icon \"${sampleIconName}\" path:`, sampleIconPath);\n      console.log(`Full URL would be: ${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${sampleIconPath}`);\n    }\n    if (!targetIcons || targetIcons.length !== 4) {\n      console.error('❌ Invalid target icons count:', targetIcons === null || targetIcons === void 0 ? void 0 : targetIcons.length);\n      return;\n    }\n    iconsRef.current = [];\n    const positions = [];\n\n    // Get ALL possible distractor icons\n    const otherIcons = Object.entries(SERVICE_MAPPINGS).filter(([name, path]) => {\n      const isCurrentCategory = path.includes(category);\n      const isTargetIcon = targetIcons.includes(name);\n      return !isCurrentCategory && !isTargetIcon;\n    }).map(([name, path]) => ({\n      path: `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${path}`,\n      name: name,\n      category: path.split('/')[1]\n    }));\n\n    // Always select exactly 6 distractor icons\n    const selectedOtherIcons = [...otherIcons].sort(() => 0.5 - Math.random()).slice(0, 6);\n    if (selectedOtherIcons.length < 6) {\n      console.error('❌ Not enough distractor icons:', selectedOtherIcons.length);\n      selectedOtherIcons.forEach(icon => console.log('Missing Icon URL:', icon.path));\n      return;\n    }\n\n    // Combine all icons (4 targets + 6 distractors = 10 total)\n    const gameIcons = [...targetIcons.map(name => ({\n      path: `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${SERVICE_MAPPINGS[name]}`,\n      name: name,\n      category: category,\n      isTarget: true\n    })), ...selectedOtherIcons.map(icon => ({\n      ...icon,\n      isTarget: false\n    }))];\n    console.log('\\nAdding Icons to Game:');\n    console.log('Total Icons:', gameIcons.length);\n    console.log('Target Icons:', gameIcons.filter(icon => icon.isTarget).map(icon => icon.name));\n    console.log('Distractor Icons:', gameIcons.filter(icon => !icon.isTarget).map(icon => icon.name));\n\n    // Add all icons to the game\n    gameIcons.forEach(iconInfo => {\n      let x = getRandomX();\n      while (positions.some(pos => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: iconInfo.category,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false,\n        isTarget: iconInfo.isTarget\n      });\n    });\n    console.log('\\nIcons Generated Successfully');\n    console.log('============================\\n');\n\n    // Add this near the top of the function\n    console.log(\"Icon path example:\", `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${Object.values(SERVICE_MAPPINGS)[0]}`);\n  };\n\n  // Mission Display component with null check\n  const MissionDisplay = () => {\n    if (!currentMission.text) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-mission-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"gameCanvas-mission-title\",\n        children: \"Current Mission\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 813,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-mission-text\",\n        children: currentMission.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 816,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 812,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Add console logs to track state changes\n  useEffect(() => {\n    console.log('Mission Updated:', currentMission);\n  }, [currentMission]);\n  useEffect(() => {\n    console.log('Game Started:', gameStarted);\n  }, [gameStarted]);\n\n  // First, fix the canvas initialization\n  useEffect(() => {\n    if (gameInitialized && canvasRef.current) {\n      // Initialize canvas size\n      const canvas = canvasRef.current;\n      canvas.width = 1200; // Make sure the canvas has proper dimensions\n      canvas.height = 800;\n      console.log(\"Canvas initialized with dimensions:\", canvas.width, canvas.height);\n\n      // Start the game loop\n      console.log(\"Starting game loop\");\n      requestAnimationFrame(gameLoop);\n    }\n  }, [gameInitialized]); // This dependency is critical - the game loop starts when gameInitialized changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameCanvas-game-title\",\n      children: \"AZURE CLOUD SHOOTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 849,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-canvas-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"gameCanvas-game-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 852,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-instruction-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-player-name\",\n            children: [\"Player: \", playerName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-score-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"alien\",\n              children: \"\\uD83D\\uDC7E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 860,\n              columnNumber: 15\n            }, this), ' ', \"Score: \", score, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"joystick\",\n              children: \"\\uD83D\\uDD79\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 862,\n              columnNumber: 15\n            }, this), soundsLoaded && Object.values(sounds.current).some(sound => sound) && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gameCanvas-sound-toggle\",\n              onClick: toggleMute,\n              \"aria-label\": \"Toggle sound\",\n              children: isMuted ? '🔇' : '🔊'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 864,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 859,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 855,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-timer-display\",\n          children: [\"Time: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 875,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-score-explanation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"How to Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 880,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Hit correct icon: +5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 882,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Height bonus: up to +20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Wrong hit: -5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 884,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Tip: Shoot icons as high as possible!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 881,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 879,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-high-scores\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"High Scores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 890,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: highScores.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gameCanvas-high-score-name\",\n                children: [entry.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 894,\n                columnNumber: 19\n              }, this), \" \", entry.score]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 893,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 891,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 889,\n          columnNumber: 11\n        }, this), currentMission.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-mission-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"gameCanvas-mission-title\",\n            children: \"Current Mission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 902,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-mission-text\",\n            children: currentMission.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 901,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 7\n    }, this), showRocketModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-rocket-selection-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Choose Your Rocket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 916,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-rocket-grid\",\n          children: rocketOptions.map(rocket => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `gameCanvas-rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`,\n            onClick: () => handleRocketSelect(rocket.id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: rocket.id,\n              alt: rocket.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 924,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: rocket.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 928,\n              columnNumber: 19\n            }, this)]\n          }, rocket.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 919,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 917,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 915,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 914,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 938,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 939,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 937,\n      columnNumber: 9\n    }, this), showCheerMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-cheerleader-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheerleader-character\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${AZURE_BUCKET_URL}/games/utilities/cheerleader.png`,\n          alt: \"Cheerleader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 948,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 947,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheer-message\",\n        children: cheerMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 950,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 946,\n      columnNumber: 9\n    }, this), showNameModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to Azure Cloud Shooter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 959,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your name to start the game:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 960,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempPlayerName,\n            onChange: e => {\n              setTempPlayerName(e.target.value);\n              setNameError('');\n            },\n            placeholder: \"Your name\",\n            className: \"gameCanvas-name-input\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 962,\n            columnNumber: 15\n          }, this), nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-name-error\",\n            children: nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 973,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"gameCanvas-start-button\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 974,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 961,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 958,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 957,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 848,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"xkX7Ue6Nw/cRzNAu3x5YmFPD0Pg=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","AZURE_ICON_CATEGORIES","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","AZURE_BUCKET_URL","process","env","REACT_APP_AZURE_BUCKET_URL","ICONS_BASE_PATH","REACT_APP_ICONS_BASE_PATH","AZURE_ROCKET_PATH","DEFAULT_ROCKET","FIREBALL_PATH","console","log","GameCanvas","_s","gameStarted","setGameStarted","gameInitialized","setGameInitialized","timeLeft","setTimeLeft","score","setScore","currentInstructionIndex","setCurrentInstructionIndex","selectedRocket","setSelectedRocket","savedRocket","localStorage","getItem","showNameModal","setShowNameModal","tempPlayerName","setTempPlayerName","nameError","setNameError","playerName","setPlayerName","savedName","rocketPosition","setRocketPosition","x","y","instructions","getRandomCategories","categories","Object","keys","shuffled","sort","Math","random","map","category","displayName","split","word","charAt","toUpperCase","slice","toLowerCase","join","text","iconTypes","reduce","acc","instruction","categoryServices","entries","filter","_","path","includes","name","canvasRef","iconsRef","bulletsRef","feedbacksRef","rocketImage","Image","gameStateRef","iconsCount","bulletsCount","changingCategory","fireballImage","src","gunRef","width","height","current","onload","onerror","e","error","getRandomX","canvas","floor","currentMission","setCurrentMission","targetIcons","iconsEmpty","setIconsEmpty","updateGameMission","isInitial","selectedCategory","newMission","availableCats","Set","forEach","add","categoryIcons","matches","length","fallbackCategory","fallbackIcons","rocketOptions","id","rocket","handleRocketSelect","rocketId","rocketImg","setItem","setShowRocketModal","setTimeout","gameLoopId","requestAnimationFrame","gameLoop","cancelAnimationFrame","generateNewIcons","showFeedback","isCorrect","points","iconName","push","time","Date","now","checkCollisions","bullets","icons","icon","iconIndex","bullet","hit","isCorrectIcon","isTarget","heightPercentage","heightBonus","prev","max","highScores","s","showCheerleaderMessage","playSound","createExplosion","splice","ctx","getContext","clearRect","gunX","gunY","drawImage","save","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","image","restore","b","feedback","elapsed","shadowColor","shadowBlur","fillStyle","font","pointsText","fillText","particlesRef","particle","lifetime","size","update","draw","gameOver","sounds","soundsLoaded","setSoundsLoaded","soundFiles","shoot","correct","incorrect","levelup","createSafeAudio","audio","Audio","Promise","resolve","addEventListener","warn","loadSounds","loadedSounds","key","values","sound","pause","isMuted","setIsMuted","toggleMute","muted","soundName","currentTime","volume","play","catch","err","setHighScores","saved","JSON","parse","setGameOver","gameOverHandled","setGameOverHandled","Particle","constructor","color","speedX","speedY","initialSize","globalAlpha","arc","PI","fill","i","timer","setInterval","clearInterval","handleGameOver","newScore","newHighScores","a","stringify","handleMouseMove","rect","getBoundingClientRect","newX","clientX","left","min","handleCanvasClick","removeEventListener","removeItem","showRocketModal","cheerleaderMessages","goodShot","combo","timeWarning","encouragement","highScore","cheerMessage","setCheerMessage","showCheerMessage","setShowCheerMessage","messages","randomMessage","encouragementInterval","handleNameSubmit","preventDefault","trim","sampleIconName","sampleIconPath","positions","otherIcons","isCurrentCategory","isTargetIcon","selectedOtherIcons","gameIcons","iconInfo","some","pos","abs","iconImage","type","MissionDisplay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","role","onClick","entry","index","alt","window","location","reload","onSubmit","value","onChange","target","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/GameCanvas.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AZURE_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Add these constants from IconResolver.js\nconst AZURE_BUCKET_URL = process.env.REACT_APP_AZURE_BUCKET_URL;\nconst ICONS_BASE_PATH = process.env.REACT_APP_ICONS_BASE_PATH;\nconst AZURE_ROCKET_PATH = `${AZURE_BUCKET_URL}/games/rocket`;\nconst DEFAULT_ROCKET = `${AZURE_ROCKET_PATH}/rocket1.png`;\nconst FIREBALL_PATH = `${AZURE_BUCKET_URL}/games/bullet/fireball.png`;\n\n// Add this at the top to log environment variables\nconsole.log(\"Environment Variables:\", {\n  AZURE_BUCKET_URL,\n  ICONS_BASE_PATH\n});\n\nconst GameCanvas = () => {\n  // First, declare all state\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameInitialized, setGameInitialized] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const savedRocket = localStorage.getItem('selectedRocket');\n    return savedRocket || null;\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({ x: 375, y: 550 });\n\n  // Modify the instructions state initialization\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AZURE_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      // Get all categories instead of just one\n      return shuffled.map(category => {\n        const displayName = category.split('_')\n          .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n          .join(' ');\n        \n        return {\n          text: `Shoot the ${displayName} icons!`,\n          category: AZURE_ICON_CATEGORIES[category],\n          displayName: displayName\n        };\n      });\n    };\n\n    return getRandomCategories();\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS)\n        .filter(([_, path]) => path.includes(instruction.category))\n        .map(([name, path]) => ({\n          path: `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${path}`,\n          name: name\n        }));\n\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs\n  const canvasRef = useRef(null);\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n  const rocketImage = useRef(new Image());\n  const gameStateRef = useRef({\n    iconsCount: 0,\n    bulletsCount: 0,\n    timeLeft: 60,\n    score: 0,\n    changingCategory: false\n  });\n  const fireballImage = new Image();\n  fireballImage.src = FIREBALL_PATH;\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25,\n    y: 800 - 100,\n    width: 120,\n    height: 120,\n  });\n\n  // Load rocket image\n  useEffect(() => {\n    if (selectedRocket) {\n      rocketImage.current = new Image();\n      rocketImage.current.onload = () => {\n        console.log(\"Rocket image loaded successfully\");\n      };\n      rocketImage.current.onerror = (e) => {\n        console.error(\"Error loading rocket image:\", e);\n      };\n      rocketImage.current.src = selectedRocket;\n    }\n  }, [selectedRocket]);\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    return Math.floor(Math.random() * (canvas.width - 50));\n  };\n\n  // Add this state at the top with other states\n  const [currentMission, setCurrentMission] = useState({\n    category: '',\n    displayName: '',\n    targetIcons: [],\n    text: ''\n  });\n\n  // Add a state for empty icons\n  const [iconsEmpty, setIconsEmpty] = useState(false);\n\n  // Single function to handle mission updates\n  const updateGameMission = (isInitial = false) => {\n    const categories = Object.keys(AZURE_ICON_CATEGORIES);\n    const shuffled = [...categories].sort(() => 0.5 - Math.random());\n    const selectedCategory = shuffled[0];\n    const displayName = selectedCategory.split('_')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n      .join(' ');\n\n    console.log(\"Selected category:\", selectedCategory);\n    console.log(\"Category value:\", AZURE_ICON_CATEGORIES[selectedCategory]);\n    \n    const newMission = {\n      category: AZURE_ICON_CATEGORIES[selectedCategory],\n      displayName: displayName,\n      targetIcons: [],\n      text: `Shoot the ${displayName} icons!`\n    };\n\n    // Log all available mappings for debugging\n    console.log(\"Available categories in SERVICE_MAPPINGS:\");\n    const availableCats = new Set();\n    Object.entries(SERVICE_MAPPINGS).forEach(([name, path]) => {\n      const category = path.split('/')[1];\n      availableCats.add(category);\n    });\n    console.log([...availableCats]);\n\n    // Find all icons that match this category\n    const categoryIcons = Object.entries(SERVICE_MAPPINGS)\n      .filter(([_, path]) => {\n        const matches = path.includes(newMission.category);\n        return matches;\n      })\n      .map(([name, path]) => {\n        console.log(`Found icon: ${name}, path: ${path}`);\n        return name;\n      });\n    \n    if (categoryIcons.length === 0) {\n      console.error('❌ No icons found for category:', newMission.category);\n      console.error('Example expected path format:', `/some-path/${newMission.category}/icon.svg`);\n      \n      // Try a different category as a fallback\n      const fallbackCategory = [...availableCats][0];\n      console.log(`Trying fallback category: ${fallbackCategory}`);\n      \n      const fallbackIcons = Object.entries(SERVICE_MAPPINGS)\n        .filter(([_, path]) => path.includes(fallbackCategory))\n        .map(([name]) => name);\n        \n      if (fallbackIcons.length > 0) {\n        newMission.category = fallbackCategory;\n        newMission.displayName = fallbackCategory.charAt(0).toUpperCase() + fallbackCategory.slice(1);\n        newMission.text = `Shoot the ${newMission.displayName} icons!`;\n        console.log(`Fallback to category: ${fallbackCategory} with ${fallbackIcons.length} icons`);\n      } else {\n        console.error(\"Cannot find any valid icons in any category!\");\n        return; // Exit the function if no icons can be found\n      }\n    }\n    \n    // Continue with the rest of the function...\n  };\n\n  // Add to rocket options to log rocket paths\n  const rocketOptions = [\n    { id: `${AZURE_ROCKET_PATH}/rocket1.png`, name: 'Modern Rocket' },\n    { id: `${AZURE_ROCKET_PATH}/rocket2.png`, name: 'Power Rocket' },\n    { id: `${AZURE_ROCKET_PATH}/rocket3.png`, name: 'Stealth Rocket' },\n    { id: `${AZURE_ROCKET_PATH}/rocket4.png`, name: 'Classic Rocket' },\n  ];\n\n  // Log rocket paths when component loads\n  useEffect(() => {\n    console.log(\"Rocket paths:\", rocketOptions.map(rocket => rocket.id));\n    console.log(\"AZURE_ROCKET_PATH:\", AZURE_ROCKET_PATH);\n  }, []);\n\n  // Modify handleRocketSelect to add better logging\n  const handleRocketSelect = (rocketId) => {\n    console.log(\"🚀 Rocket selected:\", rocketId);\n    \n    // Set up rocket image first\n    const rocketImg = new Image();\n    rocketImg.onload = () => {\n      console.log(\"Rocket image loaded successfully:\", rocketId);\n      \n      // Only after the image loads, proceed with game initialization\n      setSelectedRocket(rocketId);\n      localStorage.setItem('selectedRocket', rocketId);\n      rocketImage.current = rocketImg;\n      \n      // Now close modal and start game\n      setShowRocketModal(false);\n      setGameStarted(true);\n      setGameInitialized(true);  // This will trigger the useEffect above\n      \n      // Start the mission after a small delay to ensure UI updates first\n      setTimeout(() => {\n        try {\n          updateGameMission(true);\n        } catch (error) {\n          console.error(\"❌ ERROR STARTING MISSION:\", error);\n        }\n      }, 100);\n    };\n    \n    rocketImg.onerror = (e) => {\n      console.error(\"❌ ERROR LOADING ROCKET IMAGE:\", e);\n      console.error(\"Failed URL:\", rocketId);\n    };\n    \n    console.log(\"Setting rocket image source to:\", rocketId);\n    rocketImg.src = rocketId;\n  };\n\n  // Use effect for when icons reach bottom\n  useEffect(() => {\n    if (!iconsEmpty || !gameStarted || !timeLeft) return;\n    updateGameMission(false);\n  }, [iconsEmpty, gameStarted, timeLeft]);\n\n  // Separate useEffect for game loop\n  useEffect(() => {\n    if (!gameInitialized || !canvasRef.current) return;\n\n    console.log(\"Starting game loop\");\n    const gameLoopId = requestAnimationFrame(gameLoop);\n\n    return () => {\n      console.log(\"Cleaning up game loop\");\n      cancelAnimationFrame(gameLoopId);\n    };\n  }, [gameInitialized]);\n\n  // Separate useEffect for initial mission\n  useEffect(() => {\n    if (!gameInitialized || !currentMission.category) return;\n\n    console.log(\"Setting up initial mission\");\n    generateNewIcons(currentMission.category, currentMission.targetIcons);\n  }, [gameInitialized, currentMission.category]);\n\n  // Show feedback\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now(),\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter((bullet) => {\n        if (\n          bullet.x > icon.x &&\n          bullet.x < icon.x + 50 &&\n          bullet.y > icon.y &&\n          bullet.y < icon.y + 50\n        ) {\n          icon.hit = true;\n\n          // Check if this is a target icon\n          const isCorrectIcon = icon.isTarget;\n\n          if (isCorrectIcon) {\n            const heightPercentage = 1 - (icon.y / canvas.height);\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            \n            setScore((prev) => {\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore((prev) => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n  };\n\n  // The main game loop\n  const gameLoop = () => {\n    if (!gameStarted || !canvasRef.current) {\n      console.log(\"Game not started or canvas not ready\");\n      return;\n    }\n\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Update game state ref silently\n    gameStateRef.current = {\n      iconsCount: iconsRef.current.length,\n      bulletsCount: bulletsRef.current.length,\n      timeLeft: timeLeft,\n      score: score\n    };\n\n    if (gameStarted) {\n      // Draw the rocket (gun)\n      const { x: gunX, y: gunY, width, height } = gunRef.current;\n      ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n\n      // Draw icons\n      iconsRef.current.forEach((icon) => {\n        if (!icon.hit) {\n          ctx.save();\n          const radius = 10;\n          const x = icon.x;\n          const y = icon.y;\n          const width = 50;\n          const height = 50;\n          \n          ctx.beginPath();\n          ctx.moveTo(x + radius, y);\n          ctx.lineTo(x + width - radius, y);\n          ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n          ctx.lineTo(x + width, y + height - radius);\n          ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n          ctx.lineTo(x + radius, y + height);\n          ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n          ctx.lineTo(x, y + radius);\n          ctx.quadraticCurveTo(x, y, x + radius, y);\n          ctx.closePath();\n          ctx.clip();\n          \n          ctx.drawImage(icon.image, x, y, width, height);\n          ctx.restore();\n          \n          icon.y += 0.7; \n        }\n      });\n\n      // Filter icons off-screen\n      iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n\n      // Check for empty icons and generate new category\n      if (iconsRef.current.length === 0 && !iconsEmpty) {\n        setIconsEmpty(true);\n      }\n\n      // Draw bullets\n      bulletsRef.current.forEach((bullet) => {\n        ctx.drawImage(fireballImage, bullet.x, bullet.y, 20, 20);\n        bullet.y -= 5;\n      });\n      bulletsRef.current = bulletsRef.current.filter((b) => b.y > 0);\n\n      // Draw feedback\n      const now = Date.now();\n      feedbacksRef.current = feedbacksRef.current.filter((feedback) => {\n        const elapsed = now - feedback.time;\n        if (elapsed < 3000) {\n          ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n          ctx.shadowBlur = 4;\n          ctx.fillStyle = feedback.isCorrect ? '#4CAF50' : '#F44336';\n          ctx.font = 'bold 28px Arial';\n\n          // Points text\n          const pointsText = feedback.points > 0 ? `+${feedback.points}` : `${feedback.points}`;\n          ctx.fillText(pointsText, feedback.x + 10, feedback.y - 20);\n\n          // Icon name\n          ctx.font = '16px Arial';\n          ctx.fillText(feedback.name, feedback.x + 60, feedback.y + 25);\n\n          // Checkmark or X\n          ctx.font = 'bold 55px Arial';\n          ctx.fillText(feedback.isCorrect ? '✔' : '✘', feedback.x + 10, feedback.y + 30);\n\n          ctx.shadowBlur = 0;\n          return true;\n        }\n        return false;\n      });\n\n      checkCollisions();\n\n      // Update and draw particles\n      particlesRef.current = particlesRef.current.filter(particle => {\n        if (particle.lifetime > 0 && particle.size > 0) {\n          particle.update();\n          particle.draw(ctx);\n          return true;\n        }\n        return false;\n      });\n    }\n\n    // Only request next frame if game is still running\n    if (gameStarted && !gameOver) {\n      requestAnimationFrame(gameLoop);\n    }\n  };\n\n  // Sounds\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  useEffect(() => {\n    const soundFiles = {\n      shoot:  `${AZURE_BUCKET_URL}/games/sounds/pistol_sound.mp3`,\n      correct: `${AZURE_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n      incorrect: `${AZURE_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n      levelup: `${AZURE_BUCKET_URL}/games/sounds/levelup.mp3`\n    };\n\n    const createSafeAudio = (path) => {\n      const audio = new Audio();\n      return new Promise((resolve) => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n        setTimeout(() => resolve(null), 2000);\n        audio.src = path;\n      });\n    };\n\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n    loadSounds();\n\n    return () => {\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  const [isMuted, setIsMuted] = useState(false);\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !sound.muted;\n      }\n    });\n  };\n\n  const playSound = (soundName) => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      setGameStarted(false);\n      setShowRocketModal(true);\n    };\n  }, []);\n\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size;\n    }\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n    draw(ctx) {\n      if (this.size <= 0) return;\n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled, gameStarted]);\n\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    setGameOver(true);\n    setGameOverHandled(true);\n    \n    const newScore = { name: playerName, score };\n    const newHighScores = [...highScores, newScore]\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 5);\n    \n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const handleMouseMove = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      let newX = e.clientX - rect.left - (gunRef.current.width / 2);\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n      gunRef.current.x = newX;\n    };\n\n    const handleCanvasClick = () => {\n      if (gameStarted && timeLeft > 0) {\n        playSound('shoot');\n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20,\n        });\n      }\n    };\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted]);\n\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  const cheerleaderMessages = {\n    goodShot: [\n      \"Great shot! You're an Azure Pro! 🌟\",\n      \"Amazing cloud skills! Keep it up! 🎯\",\n      \"You're on fire in the cloud! 🔥\",\n      \"That's how Azure experts do it! 👏\",\n    ],\n    combo: [\n      \"Cloud combo! 🎮\",\n      \"You're scaling infinitely! ⚡\",\n      \"What an Azure streak! 🌈\",\n    ],\n    timeWarning: [\n      \"30 seconds left - you're highly available! ⏰\",\n      \"Time for the final deployment! 💪\",\n      \"Make every compute unit count! ⭐\",\n    ],\n    encouragement: [\n      \"You've got this, cloud warrior! 🚀\",\n      \"Keep going! You're Azure certified material! \",\n      \"I believe in your cloud powers! 💫\",\n      \"Show them your Azure expertise! 💪\",\n    ],\n    highScore: [\n      \"New high score! You're going serverless! 🏆\",\n      \"You're breaking cloud records! 🎖️\",\n      \"Legendary Azure performance! 👑\",\n    ]\n  };\n\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  const showCheerleaderMessage = (category) => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowNameModal(false);\n  };\n\n  // Ensure generateNewIcons handles missing icons gracefully\n  const generateNewIcons = (category, targetIcons) => {\n    console.log('\\n==== GENERATING NEW ICONS ====');\n    console.log('Current Category:', category);\n    console.log('Target Icons:', targetIcons);\n    \n    // Log actual path construction for debugging\n    console.log('Path construction example:');\n    console.log(`AZURE_BUCKET_URL: ${AZURE_BUCKET_URL}`);\n    console.log(`ICONS_BASE_PATH: ${ICONS_BASE_PATH}`);\n    \n    // Check if a sample icon exists\n    if (targetIcons && targetIcons.length > 0) {\n      const sampleIconName = targetIcons[0];\n      const sampleIconPath = SERVICE_MAPPINGS[sampleIconName];\n      console.log(`Sample icon \"${sampleIconName}\" path:`, sampleIconPath);\n      console.log(`Full URL would be: ${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${sampleIconPath}`);\n    }\n    \n    if (!targetIcons || targetIcons.length !== 4) {\n      console.error('❌ Invalid target icons count:', targetIcons?.length);\n      return;\n    }\n    \n    iconsRef.current = [];\n    const positions = [];\n    \n    // Get ALL possible distractor icons\n    const otherIcons = Object.entries(SERVICE_MAPPINGS)\n      .filter(([name, path]) => {\n        const isCurrentCategory = path.includes(category);\n        const isTargetIcon = targetIcons.includes(name);\n        return !isCurrentCategory && !isTargetIcon;\n      })\n      .map(([name, path]) => ({\n        path: `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${path}`,\n        name: name,\n        category: path.split('/')[1]\n      }));\n\n    // Always select exactly 6 distractor icons\n    const selectedOtherIcons = [...otherIcons]\n      .sort(() => 0.5 - Math.random())\n      .slice(0, 6);\n\n    if (selectedOtherIcons.length < 6) {\n      console.error('❌ Not enough distractor icons:', selectedOtherIcons.length);\n      selectedOtherIcons.forEach(icon => console.log('Missing Icon URL:', icon.path));\n      return;\n    }\n\n    // Combine all icons (4 targets + 6 distractors = 10 total)\n    const gameIcons = [\n      ...targetIcons.map(name => ({\n        path: `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${SERVICE_MAPPINGS[name]}`,\n        name: name,\n        category: category,\n        isTarget: true\n      })),\n      ...selectedOtherIcons.map(icon => ({\n        ...icon,\n        isTarget: false\n      }))\n    ];\n\n    console.log('\\nAdding Icons to Game:');\n    console.log('Total Icons:', gameIcons.length);\n    console.log('Target Icons:', gameIcons.filter(icon => icon.isTarget).map(icon => icon.name));\n    console.log('Distractor Icons:', gameIcons.filter(icon => !icon.isTarget).map(icon => icon.name));\n\n    // Add all icons to the game\n    gameIcons.forEach((iconInfo) => {\n      let x = getRandomX();\n      while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: iconInfo.category,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false,\n        isTarget: iconInfo.isTarget\n      });\n    });\n\n    console.log('\\nIcons Generated Successfully');\n    console.log('============================\\n');\n\n    // Add this near the top of the function\n    console.log(\"Icon path example:\", \n      `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${Object.values(SERVICE_MAPPINGS)[0]}`);\n  };\n\n  // Mission Display component with null check\n  const MissionDisplay = () => {\n    if (!currentMission.text) return null;\n    \n    return (\n      <div className=\"gameCanvas-mission-container\">\n        <h3 className=\"gameCanvas-mission-title\">\n          Current Mission\n        </h3>\n        <div className=\"gameCanvas-mission-text\">\n          {currentMission.text}\n        </div>\n      </div>\n    );\n  };\n\n  // Add console logs to track state changes\n  useEffect(() => {\n    console.log('Mission Updated:', currentMission);\n  }, [currentMission]);\n\n  useEffect(() => {\n    console.log('Game Started:', gameStarted);\n  }, [gameStarted]);\n\n  // First, fix the canvas initialization\n  useEffect(() => {\n    if (gameInitialized && canvasRef.current) {\n      // Initialize canvas size\n      const canvas = canvasRef.current;\n      canvas.width = 1200;  // Make sure the canvas has proper dimensions\n      canvas.height = 800;\n      console.log(\"Canvas initialized with dimensions:\", canvas.width, canvas.height);\n      \n      // Start the game loop\n      console.log(\"Starting game loop\");\n      requestAnimationFrame(gameLoop);\n    }\n  }, [gameInitialized]);  // This dependency is critical - the game loop starts when gameInitialized changes\n\n  return (\n    <div className=\"gameCanvas-container\">\n      <h1 className=\"gameCanvas-game-title\">AZURE CLOUD SHOOTER</h1>\n      <div className=\"gameCanvas-game-content\">\n        <div className=\"gameCanvas-canvas-wrapper\">\n          <canvas ref={canvasRef} className=\"gameCanvas-game-canvas\" />\n        </div>\n        <div className=\"gameCanvas-instruction-panel\">\n          <div className=\"gameCanvas-player-info\">\n            <div className=\"gameCanvas-player-name\">\n              Player: {playerName}\n            </div>\n            <div className=\"gameCanvas-score-display\">\n              <span role=\"img\" aria-label=\"alien\">👾</span>{' '}\n              Score: {score}{' '}\n              <span role=\"img\" aria-label=\"joystick\">🕹️</span>\n              {soundsLoaded && Object.values(sounds.current).some(sound => sound) && (\n                <button \n                  className=\"gameCanvas-sound-toggle\"\n                  onClick={toggleMute}\n                  aria-label=\"Toggle sound\"\n                >\n                  {isMuted ? '🔇' : '🔊'}\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"gameCanvas-timer-display\">\n            Time: {timeLeft}s\n          </div>\n\n          <div className=\"gameCanvas-score-explanation\">\n            <h4>How to Score:</h4>\n            <ul>\n              <li>• Hit correct icon: +5 points</li>\n              <li>• Height bonus: up to +20</li>\n              <li>• Wrong hit: -5 points</li>\n              <li>• Tip: Shoot icons as high as possible!</li>\n            </ul>\n          </div>\n\n          <div className=\"gameCanvas-high-scores\">\n            <h4>High Scores</h4>\n            <ul>\n              {highScores.map((entry, index) => (\n                <li key={index}>\n                  <span className=\"gameCanvas-high-score-name\">{entry.name}:</span> {entry.score}\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {currentMission.text && (\n            <div className=\"gameCanvas-mission-container\">\n              <h3 className=\"gameCanvas-mission-title\">\n                Current Mission\n              </h3>\n              <div className=\"gameCanvas-mission-text\">\n                {currentMission.text}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {showRocketModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-rocket-selection-modal\">\n            <h2>Choose Your Rocket</h2>\n            <div className=\"gameCanvas-rocket-grid\">\n              {rocketOptions.map((rocket) => (\n                <div \n                  key={rocket.id} \n                  className={`gameCanvas-rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`}\n                  onClick={() => handleRocketSelect(rocket.id)}\n                >\n                  <img \n                    src={rocket.id} \n                    alt={rocket.name}\n                  />\n                  <p>{rocket.name}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {gameOver && (\n        <div className=\"gameCanvas-game-over\">\n          <h3>Game Over!</h3>\n          <button onClick={() => window.location.reload()}>\n            Play Again\n          </button>\n        </div>\n      )}\n\n      {showCheerMessage && (\n        <div className=\"gameCanvas-cheerleader-container\">\n          <div className=\"gameCanvas-cheerleader-character\">\n            <img src={`${AZURE_BUCKET_URL}/games/utilities/cheerleader.png`} alt=\"Cheerleader\" />\n          </div>\n          <div className=\"gameCanvas-cheer-message\">\n            {cheerMessage}\n          </div>\n        </div>\n      )}\n\n      {showNameModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-modal\">\n            <h2>Welcome to Azure Cloud Shooter!</h2>\n            <p>Enter your name to start the game:</p>\n            <form onSubmit={handleNameSubmit}>\n              <input\n                type=\"text\"\n                value={tempPlayerName}\n                onChange={(e) => {\n                  setTempPlayerName(e.target.value);\n                  setNameError('');\n                }}\n                placeholder=\"Your name\"\n                className=\"gameCanvas-name-input\"\n                autoFocus\n              />\n              {nameError && <div className=\"gameCanvas-name-error\">{nameError}</div>}\n              <button type=\"submit\" className=\"gameCanvas-start-button\">\n                Start Game\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GameCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}