{"ast":null,"code":"const TRANSLATOR_KEY = process.env.REACT_APP_TRANSLATOR_KEY;\nconst TRANSLATOR_ENDPOINT = process.env.REACT_APP_TRANSLATOR_ENDPOINT;\nconst TRANSLATOR_LOCATION = process.env.REACT_APP_TRANSLATOR_LOCATION;\nexport const translateText = async (text, targetLanguage) => {\n  try {\n    const response = await fetch(`${TRANSLATOR_ENDPOINT}/translate?api-version=3.0&to=${targetLanguage}`, {\n      method: 'POST',\n      headers: {\n        'Ocp-Apim-Subscription-Key': TRANSLATOR_KEY,\n        'Ocp-Apim-Subscription-Region': TRANSLATOR_LOCATION,\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify([{\n        text\n      }])\n    });\n    const result = await response.json();\n    return result[0].translations[0].text;\n  } catch (error) {\n    console.error('Translation error:', error);\n    return text; // Return original text if translation fails\n  }\n};","map":{"version":3,"names":["TRANSLATOR_KEY","process","env","REACT_APP_TRANSLATOR_KEY","TRANSLATOR_ENDPOINT","REACT_APP_TRANSLATOR_ENDPOINT","TRANSLATOR_LOCATION","REACT_APP_TRANSLATOR_LOCATION","translateText","text","targetLanguage","response","fetch","method","headers","body","JSON","stringify","result","json","translations","error","console"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/services/TranslationService.js"],"sourcesContent":["const TRANSLATOR_KEY = process.env.REACT_APP_TRANSLATOR_KEY;\nconst TRANSLATOR_ENDPOINT = process.env.REACT_APP_TRANSLATOR_ENDPOINT;\nconst TRANSLATOR_LOCATION = process.env.REACT_APP_TRANSLATOR_LOCATION;\n\nexport const translateText = async (text, targetLanguage) => {\n  try {\n    const response = await fetch(\n      `${TRANSLATOR_ENDPOINT}/translate?api-version=3.0&to=${targetLanguage}`,\n      {\n        method: 'POST',\n        headers: {\n          'Ocp-Apim-Subscription-Key': TRANSLATOR_KEY,\n          'Ocp-Apim-Subscription-Region': TRANSLATOR_LOCATION,\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify([{ text }]),\n      }\n    );\n\n    const result = await response.json();\n    return result[0].translations[0].text;\n  } catch (error) {\n    console.error('Translation error:', error);\n    return text; // Return original text if translation fails\n  }\n}; "],"mappings":"AAAA,MAAMA,cAAc,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAwB;AAC3D,MAAMC,mBAAmB,GAAGH,OAAO,CAACC,GAAG,CAACG,6BAA6B;AACrE,MAAMC,mBAAmB,GAAGL,OAAO,CAACC,GAAG,CAACK,6BAA6B;AAErE,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAOC,IAAI,EAAEC,cAAc,KAAK;EAC3D,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGR,mBAAmB,iCAAiCM,cAAc,EAAE,EACvE;MACEG,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,2BAA2B,EAAEd,cAAc;QAC3C,8BAA8B,EAAEM,mBAAmB;QACnD,cAAc,EAAE;MAClB,CAAC;MACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,CAAC;QAAER;MAAK,CAAC,CAAC;IACjC,CACF,CAAC;IAED,MAAMS,MAAM,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IACpC,OAAOD,MAAM,CAAC,CAAC,CAAC,CAACE,YAAY,CAAC,CAAC,CAAC,CAACX,IAAI;EACvC,CAAC,CAAC,OAAOY,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,OAAOZ,IAAI,CAAC,CAAC;EACf;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}