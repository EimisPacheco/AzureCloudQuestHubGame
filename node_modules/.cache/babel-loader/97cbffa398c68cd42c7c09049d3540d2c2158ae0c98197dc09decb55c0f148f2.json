{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/AzureArchitectureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport DraggableService from './DraggableService';\nimport { getServiceIcon } from '../services/IconResolver';\nimport '../styles/DifficultyButtons.css';\nimport '../styles/AzureArchitectureGame.css';\nimport ReactConfetti from 'react-confetti';\nimport { useWindowSize } from 'react-use';\nimport AzureArchitectureDisplay from './AzureArchitectureDisplay';\nimport { translateText } from '../services/TranslationService';\nimport LanguageSelector from './LanguageSelector';\n\n// Default translations\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultTranslations = {\n  gameTitle: 'Azure Architecture Challenge',\n  score: 'Score',\n  loading: 'Loading...',\n  newArchitecture: 'New Architecture',\n  question: 'Question',\n  optimizationFocus: 'Optimization Focus',\n  correctPoints: 'Correct! +{points} points',\n  perfectChoice: 'Perfect choice! This is the optimal solution.',\n  notOptimal: 'This answer is correct but not the best option according to the Optimization Focus.',\n  optimalAnswer: 'The optimal answer is:',\n  notCorrect: 'Not quite right',\n  nextService: 'Next Service ({current} of {total})',\n  learnAndHaveFun: 'Learn and have fun!',\n  service: 'Service {current} of {total}',\n  beginner: 'Beginner',\n  intermediate: 'Intermediate',\n  advanced: 'Advanced'\n};\nconst API_URL = process.env.REACT_APP_FUNCTION_URL;\nconst FUNCTION_KEY = process.env.REACT_APP_AZURE_FUNCTION_KEY;\nconst isValidArchitecture = data => {\n  if (!data || !Array.isArray(data.services) || !Array.isArray(data.connections)) {\n    console.warn(\"⚠️ Invalid JSON structure: Missing 'services' or 'connections'. Retrying...\");\n    return false;\n  }\n  const requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n  const serviceNames = data.services.map(service => typeof service === 'string' ? service : service === null || service === void 0 ? void 0 : service.name);\n  if (!requiredMissingServices.every(ms => serviceNames.includes(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing.`);\n    return false;\n  }\n  const connectionNodes = new Set();\n  data.connections.forEach(conn => {\n    connectionNodes.add(conn.from);\n    connectionNodes.add(conn.to);\n  });\n  if (!requiredMissingServices.every(ms => connectionNodes.has(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing from the connections.`);\n    return false;\n  }\n  return true;\n};\nconst validateJSONStructure = (json, difficulty) => {\n  let requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n  if (difficulty === 'INTERMEDIATE') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5'];\n  } else if (difficulty === 'ADVANCED') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5', 'missing_6', 'missing_7'];\n  }\n  return requiredMissingServices.every(service => json.missingServices.includes(service));\n};\nconst getMaxPossibleScore = difficulty => {\n  switch (difficulty) {\n    case 'INTERMEDIATE':\n      return 25;\n    // 5 questions * 5 points\n    case 'ADVANCED':\n      return 35;\n    // 7 questions * 5 points\n    default:\n      // BEGINNER\n      return 15;\n    // 3 questions * 5 points\n  }\n};\nconst AzureArchitectureGame = () => {\n  _s();\n  var _architectureInfo$mis, _architectureInfo$mis2, _architectureInfo$mis3;\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [architecture, setArchitecture] = useState(null);\n  const [architectureInfo, setArchitectureInfo] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [difficulty, setDifficulty] = useState('BEGINNER');\n  const [score, setScore] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [feedback, setFeedback] = useState({\n    isCorrect: false,\n    message: '',\n    points: 0\n  });\n  const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n  const [questionStartTime, setQuestionStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const {\n    width,\n    height\n  } = useWindowSize();\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showFireworks, setShowFireworks] = useState(false);\n  const [showSadFace, setShowSadFace] = useState(false);\n  const [allQuestionsAnswered, setAllQuestionsAnswered] = useState(false);\n\n  // Add translation state\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n  const [translations, setTranslations] = useState(defaultTranslations);\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(TouchSensor));\n\n  // Handle language change\n  const handleLanguageChange = async newLanguage => {\n    setCurrentLanguage(newLanguage);\n    if (newLanguage === 'en') {\n      setTranslations(defaultTranslations);\n      return;\n    }\n    try {\n      // Translate all UI text\n      const translationPromises = Object.entries(defaultTranslations).map(async ([key, value]) => {\n        const translatedValue = await translateText(value, newLanguage);\n        return [key, translatedValue];\n      });\n      const translatedEntries = await Promise.all(translationPromises);\n      const newTranslations = Object.fromEntries(translatedEntries);\n      setTranslations(newTranslations);\n    } catch (error) {\n      console.error('Translation error:', error);\n    }\n  };\n  const loadNextArchitecture = useCallback(async () => {\n    var _data$missingServices;\n    if (!FUNCTION_KEY) {\n      setError(\"Azure Function key is not configured\");\n      setIsLoading(false);\n      return;\n    }\n    setScore(0); // Reset score when loading new architecture\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    let attempt = 0;\n    let isValid = false;\n    let data = null;\n    let maxAttempts = 7;\n    while (!isValid && attempt < maxAttempts) {\n      try {\n        console.log(`🔄 Attempt ${attempt + 1}: Fetching architecture data...`);\n        const response = await fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-functions-key': FUNCTION_KEY\n          },\n          body: JSON.stringify({\n            difficulty\n          })\n        });\n        if (response.status === 503) {\n          console.warn(\"⚠️ Received 503 error. Retrying in 3 seconds...\");\n          attempt++;\n          await new Promise(resolve => setTimeout(resolve, 3000));\n          continue;\n        }\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        data = await response.json();\n        console.log('Raw AI Response:', JSON.stringify(data, null, 2));\n        console.log(\"📥 Received AI Response:\", JSON.stringify(data, null, 2));\n        isValid = isValidArchitecture(data);\n        if (!isValid) {\n          console.warn(`⛔ Invalid JSON structure. Retrying in 3 seconds...`);\n          await new Promise(resolve => setTimeout(resolve, 3000));\n        } else {\n          console.log(\"✅ Valid architecture received, updating state...\");\n          break;\n        }\n      } catch (error) {\n        console.error(\"❌ Failed to load architecture:\", error);\n        if (attempt >= maxAttempts - 1) {\n          setError(error.message);\n          setIsLoading(false);\n          return;\n        }\n        await new Promise(resolve => setTimeout(resolve, 3000)); // Wait 3 seconds before retrying\n      }\n      attempt++;\n    }\n    if (!isValid) {\n      console.error(\"❌ Maximum retries reached. Unable to get valid JSON.\");\n      setError(\"Failed to fetch a valid architecture after multiple attempts.\");\n      setIsLoading(false);\n      return;\n    }\n    const transformedServices = data.services.map(serviceName => ({\n      id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n      name: serviceName,\n      icon: getServiceIcon(serviceName)\n    }));\n    setArchitecture({\n      services: transformedServices,\n      connections: data.connections\n    });\n    if (((_data$missingServices = data.missingServices) === null || _data$missingServices === void 0 ? void 0 : _data$missingServices.length) > 0) {\n      const currentMissingService = data.missingServices[0];\n      setCurrentQuestion({\n        text: currentMissingService.question,\n        optimizationFocus: currentMissingService.optimizationFocus,\n        options: currentMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getServiceIcon(opt.service)\n        }))\n      });\n    }\n    setArchitectureInfo({\n      name: data.architecture.name,\n      description: data.architecture.description,\n      missingServices: data.missingServices\n    });\n    setCurrentMissingServiceIndex(0);\n    setShowFeedback(false);\n    setQuestionStartTime(Date.now());\n    setElapsedTime(0);\n    setIsLoading(false);\n  }, [difficulty]);\n  const handleServiceSelection = selectedService => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n    const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n    const correctOption = currentMissingService.options.find(opt => opt.isCorrect);\n    const optimalOption = currentMissingService.options.find(opt => opt.isOptimal);\n    if (selectedOption) {\n      setShowFeedback(true);\n      if (selectedOption.isCorrect) {\n        // Calculate points based on whether it's optimal or just correct\n        const points = selectedOption.isOptimal ? 5 : 2;\n        setScore(prevScore => {\n          const newScore = prevScore + points;\n          // Check if we've reached the maximum possible score for current difficulty\n          if (newScore === getMaxPossibleScore(difficulty)) {\n            setShowFireworks(true);\n            setTimeout(() => setShowFireworks(false), 5000);\n          }\n          return newScore;\n        });\n        if (selectedOption.isOptimal) {\n          setShowConfetti(true);\n          setTimeout(() => setShowConfetti(false), 2000);\n        }\n        setFeedback({\n          isCorrect: true,\n          message: selectedOption.explanation,\n          points: points,\n          isOptimal: selectedOption.isOptimal,\n          optimalSolution: !selectedOption.isOptimal ? optimalOption.service : null,\n          optimalExplanation: !selectedOption.isOptimal ? optimalOption.explanation : null\n        });\n      } else {\n        setShowSadFace(true);\n        setTimeout(() => setShowSadFace(false), 4000);\n        setFeedback({\n          isCorrect: false,\n          message: `<div class=\"feedback-explanation\">\n              <p>${selectedOption.explanation}</p>\n              <div class=\"correct-answer-wrapper\">\n                <p class=\"correct-answer-section\">\n                  <span style=\"color: lime; font-weight: bold;\">The correct answer was: </span>\n                  <strong>${correctOption.service}</strong>. ${correctOption.explanation}\n                </p>\n              </div>\n            </div>`,\n          points: 0,\n          correctAnswer: correctOption.service\n        });\n      }\n    }\n  };\n  const handleNext = () => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    setShowFeedback(false);\n    if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n      const nextIndex = currentMissingServiceIndex + 1;\n      setCurrentMissingServiceIndex(nextIndex);\n      const nextMissingService = architectureInfo.missingServices[nextIndex];\n      setCurrentQuestion({\n        text: nextMissingService.question,\n        optimizationFocus: nextMissingService.optimizationFocus,\n        options: nextMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getServiceIcon(opt.service)\n        }))\n      });\n      setQuestionStartTime(Date.now());\n      setElapsedTime(0);\n    }\n  };\n  const handleDifficultyChange = level => {\n    setDifficulty(level);\n  };\n  useEffect(() => {\n    if (currentQuestion && !questionStartTime) {\n      setQuestionStartTime(Date.now());\n    }\n    const timer = setInterval(() => {\n      if (questionStartTime && !showFeedback) {\n        const elapsed = Math.floor((Date.now() - questionStartTime) / 1000);\n        setElapsedTime(elapsed);\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [currentQuestion, questionStartTime, showFeedback]);\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"game-title\",\n            children: translations.gameTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score\",\n              children: [translations.score, \": \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"complexity\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"complexity-icon\",\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 376,\n                columnNumber: 19\n              }, this), translations[difficulty.toLowerCase()]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 17\n            }, this), currentQuestion && !showFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `timer ${elapsedTime > 60 ? 'danger' : elapsedTime > 30 ? 'warning' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timer-icon\",\n                children: \"\\u23F1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 21\n              }, this), Math.floor(elapsedTime / 60), \":\", (elapsedTime % 60).toString().padStart(2, '0')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-architecture-button\",\n            onClick: loadNextArchitecture,\n            disabled: isLoading,\n            children: isLoading ? translations.loading : translations.newArchitecture\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this), architectureInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"architecture-description\",\n          children: architectureInfo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 34\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(AzureArchitectureDisplay, {\n            architecture: architecture,\n            currentQuestion: currentQuestion,\n            currentLanguage: currentLanguage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 17\n          }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"question-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"highlight\",\n                children: [translations.question, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 23\n              }, this), \" \", currentQuestion.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"optimization-focus-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"highlight\",\n                children: [translations.optimizationFocus, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 416,\n                columnNumber: 23\n              }, this), \" \", currentQuestion.optimizationFocus]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 415,\n              columnNumber: 21\n            }, this), showFeedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'} ${feedback.isOptimal ? 'optimal' : ''}`,\n              children: [showSadFace && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sad-face-overlay\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  role: \"img\",\n                  \"aria-label\": \"sad face\",\n                  className: \"sad-face\",\n                  children: \"\\uD83D\\uDE22\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-content\",\n                children: [feedback.isCorrect ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [\"\\uD83C\\uDF89 \", translations.correctPoints.replace('{points}', feedback.points)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 31\n                  }, this), feedback.isOptimal ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"\\uD83C\\uDF1F \", translations.perfectChoice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 431,\n                    columnNumber: 33\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"\\u26A0\\uFE0F \", translations.notOptimal]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 434,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: 'green'\n                        },\n                        children: translations.optimalAnswer\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 435,\n                        columnNumber: 38\n                      }, this), \" \", feedback.optimalSolution, \".\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 435,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"\\u274C \", translations.notCorrect]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 440,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  dangerouslySetInnerHTML: {\n                    __html: feedback.message\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 442,\n                  columnNumber: 27\n                }, this), currentMissingServiceIndex < (architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis = architectureInfo.missingServices) === null || _architectureInfo$mis === void 0 ? void 0 : _architectureInfo$mis.length) - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"next-button\",\n                  onClick: handleNext,\n                  children: translations.nextService.replace('{current}', currentMissingServiceIndex + 2).replace('{total}', architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis2 = architectureInfo.missingServices) === null || _architectureInfo$mis2 === void 0 ? void 0 : _architectureInfo$mis2.length)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 445,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 426,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 420,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"service-options\",\n              children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(DraggableService, {\n                service: option,\n                onClick: () => handleServiceSelection(option.name)\n              }, `${option.id}-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 459,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-status\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices ? translations.service.replace('{current}', currentMissingServiceIndex + 1).replace('{total}', architectureInfo.missingServices.length) : translations.learnAndHaveFun\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 13\n        }, this), (!(architecture !== null && architecture !== void 0 && architecture.services) || currentMissingServiceIndex === (architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis3 = architectureInfo.missingServices) === null || _architectureInfo$mis3 === void 0 ? void 0 : _architectureInfo$mis3.length) - 1 && showFeedback) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-selection\",\n          children: ['BEGINNER', 'INTERMEDIATE', 'ADVANCED'].map(level => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `difficulty-button ${difficulty === level ? 'active' : ''}`,\n            onClick: () => handleDifficultyChange(level),\n            children: translations[level.toLowerCase()]\n          }, level, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(LanguageSelector, {\n          currentLanguage: currentLanguage,\n          onLanguageChange: handleLanguageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://hackthon-backend-files-ep-2024.s3.us-east-1.amazonaws.com/amazon-icons-set/Architecture-Service-Icons_06072024/AWSArchitectureApp.webp\",\n          alt: \"Loading...\",\n          style: {\n            width: '1200px',\n            height: '900px',\n            verticalAlign: 'middle',\n            display: 'inline-block',\n            borderRadius: '50px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 506,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 505,\n        columnNumber: 11\n      }, this), showConfetti && /*#__PURE__*/_jsxDEV(ReactConfetti, {\n        width: width,\n        height: height,\n        recycle: false,\n        numberOfPieces: 200,\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          pointerEvents: 'none',\n          zIndex: 'var(--z-index-confetti)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 519,\n        columnNumber: 13\n      }, this), showFireworks && /*#__PURE__*/_jsxDEV(ReactConfetti, {\n        width: width,\n        height: height,\n        recycle: true,\n        numberOfPieces: 500,\n        colors: ['#FFD700', '#FF0000', '#00FF00', '#0000FF', '#FF00FF'],\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          pointerEvents: 'none',\n          zIndex: 'var(--z-index-confetti)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 368,\n    columnNumber: 7\n  }, this);\n};\n_s(AzureArchitectureGame, \"eo6ypgCl9kt8VL1C7EcDuQutFe4=\", false, function () {\n  return [useWindowSize, useSensors, useSensor, useSensor];\n});\n_c = AzureArchitectureGame;\nexport default AzureArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AzureArchitectureGame\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","DndContext","useSensor","useSensors","PointerSensor","TouchSensor","DndProvider","HTML5Backend","DraggableService","getServiceIcon","ReactConfetti","useWindowSize","AzureArchitectureDisplay","translateText","LanguageSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultTranslations","gameTitle","score","loading","newArchitecture","question","optimizationFocus","correctPoints","perfectChoice","notOptimal","optimalAnswer","notCorrect","nextService","learnAndHaveFun","service","beginner","intermediate","advanced","API_URL","process","env","REACT_APP_FUNCTION_URL","FUNCTION_KEY","REACT_APP_AZURE_FUNCTION_KEY","isValidArchitecture","data","Array","isArray","services","connections","console","warn","requiredMissingServices","serviceNames","map","name","every","ms","includes","join","connectionNodes","Set","forEach","conn","add","from","to","has","validateJSONStructure","json","difficulty","missingServices","getMaxPossibleScore","AzureArchitectureGame","_s","_architectureInfo$mis","_architectureInfo$mis2","_architectureInfo$mis3","isLoading","setIsLoading","error","setError","architecture","setArchitecture","architectureInfo","setArchitectureInfo","currentQuestion","setCurrentQuestion","setDifficulty","setScore","showFeedback","setShowFeedback","feedback","setFeedback","isCorrect","message","points","currentMissingServiceIndex","setCurrentMissingServiceIndex","questionStartTime","setQuestionStartTime","elapsedTime","setElapsedTime","width","height","showConfetti","setShowConfetti","showFireworks","setShowFireworks","showSadFace","setShowSadFace","allQuestionsAnswered","setAllQuestionsAnswered","currentLanguage","setCurrentLanguage","translations","setTranslations","sensors","activationConstraint","distance","handleLanguageChange","newLanguage","translationPromises","Object","entries","key","value","translatedValue","translatedEntries","Promise","all","newTranslations","fromEntries","loadNextArchitecture","_data$missingServices","attempt","isValid","maxAttempts","log","response","fetch","method","headers","body","JSON","stringify","status","resolve","setTimeout","ok","Error","transformedServices","serviceName","id","toLowerCase","replace","icon","length","currentMissingService","text","options","opt","isOptimal","explanation","rating","description","Date","now","handleServiceSelection","selectedService","selectedOption","find","correctOption","optimalOption","prevScore","newScore","optimalSolution","optimalExplanation","correctAnswer","handleNext","nextIndex","nextMissingService","handleDifficultyChange","level","timer","setInterval","elapsed","Math","floor","clearInterval","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","toString","padStart","onClick","disabled","role","style","color","dangerouslySetInnerHTML","__html","option","index","onLanguageChange","src","alt","verticalAlign","display","borderRadius","recycle","numberOfPieces","position","top","left","pointerEvents","zIndex","colors","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/AzureArchitectureGame.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport DraggableService from './DraggableService';\nimport { getServiceIcon } from '../services/IconResolver';\nimport '../styles/DifficultyButtons.css';\nimport '../styles/AzureArchitectureGame.css';\nimport ReactConfetti from 'react-confetti';\nimport { useWindowSize } from 'react-use';\nimport AzureArchitectureDisplay from './AzureArchitectureDisplay';\nimport { translateText } from '../services/TranslationService';\nimport LanguageSelector from './LanguageSelector';\n\n// Default translations\nconst defaultTranslations = {\n  gameTitle: 'Azure Architecture Challenge',\n  score: 'Score',\n  loading: 'Loading...',\n  newArchitecture: 'New Architecture',\n  question: 'Question',\n  optimizationFocus: 'Optimization Focus',\n  correctPoints: 'Correct! +{points} points',\n  perfectChoice: 'Perfect choice! This is the optimal solution.',\n  notOptimal: 'This answer is correct but not the best option according to the Optimization Focus.',\n  optimalAnswer: 'The optimal answer is:',\n  notCorrect: 'Not quite right',\n  nextService: 'Next Service ({current} of {total})',\n  learnAndHaveFun: 'Learn and have fun!',\n  service: 'Service {current} of {total}',\n  beginner: 'Beginner',\n  intermediate: 'Intermediate',\n  advanced: 'Advanced'\n};\n\nconst API_URL = process.env.REACT_APP_FUNCTION_URL;\nconst FUNCTION_KEY = process.env.REACT_APP_AZURE_FUNCTION_KEY;\n\nconst isValidArchitecture = (data) => {\n  if (!data || !Array.isArray(data.services) || !Array.isArray(data.connections)) {\n    console.warn(\"⚠️ Invalid JSON structure: Missing 'services' or 'connections'. Retrying...\");\n    return false;\n  }\n\n  const requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n\n  const serviceNames = data.services.map(service => \n    typeof service === 'string' ? service : service?.name\n  );\n\n  if (!requiredMissingServices.every(ms => serviceNames.includes(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing.`);\n    return false;\n  }\n\n  const connectionNodes = new Set();\n  data.connections.forEach(conn => {\n    connectionNodes.add(conn.from);\n    connectionNodes.add(conn.to);\n  });\n\n  if (!requiredMissingServices.every(ms => connectionNodes.has(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing from the connections.`);\n    return false;\n  }\n\n  return true;\n};\n\nconst validateJSONStructure = (json, difficulty) => {\n  let requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n\n  if (difficulty === 'INTERMEDIATE') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5'];\n  } else if (difficulty === 'ADVANCED') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5', 'missing_6', 'missing_7'];\n  }\n\n  return requiredMissingServices.every(service => json.missingServices.includes(service));\n};\n\nconst getMaxPossibleScore = (difficulty) => {\n  switch(difficulty) {\n    case 'INTERMEDIATE':\n      return 25; // 5 questions * 5 points\n    case 'ADVANCED':\n      return 35; // 7 questions * 5 points\n    default: // BEGINNER\n      return 15; // 3 questions * 5 points\n  }\n};\n\nconst AzureArchitectureGame = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [architecture, setArchitecture] = useState(null);\n    const [architectureInfo, setArchitectureInfo] = useState(null);\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [difficulty, setDifficulty] = useState('BEGINNER');\n    const [score, setScore] = useState(0); \n    const [showFeedback, setShowFeedback] = useState(false);\n    const [feedback, setFeedback] = useState({ isCorrect: false, message: '', points: 0 });\n    const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n    const [questionStartTime, setQuestionStartTime] = useState(null);\n    const [elapsedTime, setElapsedTime] = useState(0);\n    const { width, height } = useWindowSize();\n    const [showConfetti, setShowConfetti] = useState(false);\n    const [showFireworks, setShowFireworks] = useState(false);\n    const [showSadFace, setShowSadFace] = useState(false);\n    const [allQuestionsAnswered, setAllQuestionsAnswered] = useState(false);\n    \n    // Add translation state\n    const [currentLanguage, setCurrentLanguage] = useState('en');\n    const [translations, setTranslations] = useState(defaultTranslations);\n\n    const sensors = useSensors(\n      useSensor(PointerSensor, {\n        activationConstraint: {\n          distance: 8,\n        },\n      }),\n      useSensor(TouchSensor)\n    );\n    \n    // Handle language change\n    const handleLanguageChange = async (newLanguage) => {\n      setCurrentLanguage(newLanguage);\n      \n      if (newLanguage === 'en') {\n        setTranslations(defaultTranslations);\n        return;\n      }\n      \n      try {\n        // Translate all UI text\n        const translationPromises = Object.entries(defaultTranslations).map(async ([key, value]) => {\n          const translatedValue = await translateText(value, newLanguage);\n          return [key, translatedValue];\n        });\n        \n        const translatedEntries = await Promise.all(translationPromises);\n        const newTranslations = Object.fromEntries(translatedEntries);\n        \n        setTranslations(newTranslations);\n      } catch (error) {\n        console.error('Translation error:', error);\n      }\n    };\n\n    const loadNextArchitecture = useCallback(async () => {\n      if (!FUNCTION_KEY) {\n        setError(\"Azure Function key is not configured\");\n        setIsLoading(false);\n        return;\n      }\n      \n      setScore(0); // Reset score when loading new architecture\n      if (isLoading) return;\n      setIsLoading(true);\n      setError(null);\n\n      let attempt = 0;\n      let isValid = false;\n      let data = null;\n      let maxAttempts = 7;\n\n      while (!isValid && attempt < maxAttempts) {\n        try {\n          console.log(`🔄 Attempt ${attempt + 1}: Fetching architecture data...`);\n          const response = await fetch(API_URL, {\n            method: 'POST',\n            headers: { \n              'Content-Type': 'application/json',\n              'x-functions-key': FUNCTION_KEY\n            },\n            body: JSON.stringify({ difficulty })\n          });\n\n          if (response.status === 503) {\n            console.warn(\"⚠️ Received 503 error. Retrying in 3 seconds...\");\n            attempt++;\n            await new Promise(resolve => setTimeout(resolve, 3000));\n            continue;\n          }\n\n          if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n\n          data = await response.json();\n          console.log('Raw AI Response:', JSON.stringify(data, null, 2));\n          console.log(\"📥 Received AI Response:\", JSON.stringify(data, null, 2));\n\n          isValid = isValidArchitecture(data);\n\n          if (!isValid) {\n            console.warn(`⛔ Invalid JSON structure. Retrying in 3 seconds...`);\n            await new Promise(resolve => setTimeout(resolve, 3000));\n          } else {\n            console.log(\"✅ Valid architecture received, updating state...\");\n            break;\n          }\n        } catch (error) {\n          console.error(\"❌ Failed to load architecture:\", error);\n          if (attempt >= maxAttempts - 1) {\n            setError(error.message);\n            setIsLoading(false);\n            return;\n          }\n          await new Promise(resolve => setTimeout(resolve, 3000)); // Wait 3 seconds before retrying\n        }\n\n        attempt++;\n      }\n\n      if (!isValid) {\n        console.error(\"❌ Maximum retries reached. Unable to get valid JSON.\");\n        setError(\"Failed to fetch a valid architecture after multiple attempts.\");\n        setIsLoading(false);\n        return;\n      }\n\n      const transformedServices = data.services.map(serviceName => ({\n        id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n        name: serviceName,\n        icon: getServiceIcon(serviceName)\n      }));\n\n      setArchitecture({\n        services: transformedServices,\n        connections: data.connections\n      });\n\n      if (data.missingServices?.length > 0) {\n        const currentMissingService = data.missingServices[0];\n        setCurrentQuestion({\n          text: currentMissingService.question,\n          optimizationFocus: currentMissingService.optimizationFocus,\n          options: currentMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getServiceIcon(opt.service)\n          }))\n        });\n      }\n\n      setArchitectureInfo({\n        name: data.architecture.name,\n        description: data.architecture.description,\n        missingServices: data.missingServices\n      });\n\n      setCurrentMissingServiceIndex(0);\n      setShowFeedback(false);\n      setQuestionStartTime(Date.now());\n      setElapsedTime(0);\n      setIsLoading(false);\n    }, [difficulty]);\n\n    const handleServiceSelection = (selectedService) => {\n      if (!architectureInfo?.missingServices) return;\n      \n      const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n      const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n      const correctOption = currentMissingService.options.find(opt => opt.isCorrect);\n      const optimalOption = currentMissingService.options.find(opt => opt.isOptimal);\n\n      if (selectedOption) {\n        setShowFeedback(true);\n        if (selectedOption.isCorrect) {\n          // Calculate points based on whether it's optimal or just correct\n          const points = selectedOption.isOptimal ? 5 : 2;\n          \n          setScore(prevScore => {\n            const newScore = prevScore + points;\n            // Check if we've reached the maximum possible score for current difficulty\n            if (newScore === getMaxPossibleScore(difficulty)) {\n              setShowFireworks(true);\n              setTimeout(() => setShowFireworks(false), 5000);\n            }\n            return newScore;\n          });\n          \n          if (selectedOption.isOptimal) {\n            setShowConfetti(true);\n            setTimeout(() => setShowConfetti(false), 2000);\n          }\n\n          setFeedback({\n            isCorrect: true,\n            message: selectedOption.explanation,\n            points: points,\n            isOptimal: selectedOption.isOptimal,\n            optimalSolution: !selectedOption.isOptimal ? optimalOption.service : null,\n            optimalExplanation: !selectedOption.isOptimal ? optimalOption.explanation : null\n          });\n        } else {\n          setShowSadFace(true);\n          setTimeout(() => setShowSadFace(false), 4000);\n\n          setFeedback({\n            isCorrect: false,\n            message: `<div class=\"feedback-explanation\">\n              <p>${selectedOption.explanation}</p>\n              <div class=\"correct-answer-wrapper\">\n                <p class=\"correct-answer-section\">\n                  <span style=\"color: lime; font-weight: bold;\">The correct answer was: </span>\n                  <strong>${correctOption.service}</strong>. ${correctOption.explanation}\n                </p>\n              </div>\n            </div>`,\n            points: 0,\n            correctAnswer: correctOption.service\n          });\n        }\n      }\n    };\n\n    const handleNext = () => {\n      if (!architectureInfo?.missingServices) return;\n      \n      setShowFeedback(false);\n      if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n        const nextIndex = currentMissingServiceIndex + 1;\n        setCurrentMissingServiceIndex(nextIndex);\n        \n        const nextMissingService = architectureInfo.missingServices[nextIndex];\n        setCurrentQuestion({\n          text: nextMissingService.question,\n          optimizationFocus: nextMissingService.optimizationFocus,\n          options: nextMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getServiceIcon(opt.service)\n          }))\n        });\n        setQuestionStartTime(Date.now());\n        setElapsedTime(0);\n      }\n    };\n\n    const handleDifficultyChange = (level) => {\n      setDifficulty(level);\n    };\n\n    useEffect(() => {\n      if (currentQuestion && !questionStartTime) {\n        setQuestionStartTime(Date.now());\n      }\n\n      const timer = setInterval(() => {\n        if (questionStartTime && !showFeedback) {\n          const elapsed = Math.floor((Date.now() - questionStartTime) / 1000);\n          setElapsedTime(elapsed);\n        }\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }, [currentQuestion, questionStartTime, showFeedback]);\n\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <DndContext sensors={sensors}>\n          <div className=\"game-container\">\n            <div className=\"game-header\">\n              <h2 className=\"game-title\">{translations.gameTitle}</h2>\n              <div className=\"game-stats\">\n                <div className=\"score\">{translations.score}: {score}</div>\n                <div className=\"complexity\">\n                  <span className=\"complexity-icon\">🎯</span>\n                  {translations[difficulty.toLowerCase()]}\n                </div>\n                {currentQuestion && !showFeedback && (\n                  <div className={`timer ${\n                    elapsedTime > 60 ? 'danger' : \n                    elapsedTime > 30 ? 'warning' : ''\n                  }`}>\n                    <span className=\"timer-icon\">⏱️</span>\n                    {Math.floor(elapsedTime / 60)}:{(elapsedTime % 60).toString().padStart(2, '0')}\n                  </div>\n                )}\n              </div>\n              <button \n                className=\"new-architecture-button\"\n                onClick={loadNextArchitecture}\n                disabled={isLoading}\n              >\n                {isLoading ? translations.loading : translations.newArchitecture}\n              </button>\n            </div>\n            \n            {architectureInfo && <p className=\"architecture-description\">{architectureInfo.description}</p>}\n            \n            {error ? (\n              <div className=\"error-message\">{error}</div>\n            ) : (\n              <>\n                <AzureArchitectureDisplay \n                  architecture={architecture}\n                  currentQuestion={currentQuestion}\n                  currentLanguage={currentLanguage}\n                />\n                \n                {currentQuestion && (\n                  <div className=\"question-container\">\n                    <h3 className=\"question-label\">\n                      <span className=\"highlight\">{translations.question}:</span> {currentQuestion.text}\n                    </h3>\n                    <p className=\"optimization-focus-label\">\n                      <span className=\"highlight\">{translations.optimizationFocus}:</span> {currentQuestion.optimizationFocus}\n                    </p>\n                    \n                    {showFeedback ? (\n                      <div className={`feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'} ${feedback.isOptimal ? 'optimal' : ''}`}>\n                        {showSadFace && (\n                          <div className=\"sad-face-overlay\">\n                            <span role=\"img\" aria-label=\"sad face\" className=\"sad-face\">😢</span>\n                          </div>\n                        )}\n                        <div className=\"feedback-content\">\n                          {feedback.isCorrect ? (\n                            <>\n                              <h3>🎉 {translations.correctPoints.replace('{points}', feedback.points)}</h3>\n                              {feedback.isOptimal ? (\n                                <p>🌟 {translations.perfectChoice}</p>\n                              ) : (\n                                <>\n                                  <p>⚠️ {translations.notOptimal}</p>\n                                  <p><span style={{ color: 'green' }}>{translations.optimalAnswer}</span> {feedback.optimalSolution}.</p>\n                                </>\n                              )}\n                            </>\n                          ) : (\n                            <h3>❌ {translations.notCorrect}</h3>\n                          )}\n                          <p dangerouslySetInnerHTML={{ __html: feedback.message }}></p>\n                          \n                          {currentMissingServiceIndex < (architectureInfo?.missingServices?.length - 1) && (\n                            <button \n                              className=\"next-button\"\n                              onClick={handleNext}\n                            >\n                              {translations.nextService\n                                .replace('{current}', currentMissingServiceIndex + 2)\n                                .replace('{total}', architectureInfo?.missingServices?.length)}\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"service-options\">\n                        {currentQuestion.options.map((option, index) => (\n                          <DraggableService\n                            key={`${option.id}-${index}`}\n                            service={option}\n                            onClick={() => handleServiceSelection(option.name)}\n                          />\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                )}\n              </>\n            )}\n            \n            <div className=\"game-status\">\n              <div className=\"progress\">\n                {architectureInfo?.missingServices ? \n                  translations.service\n                    .replace('{current}', currentMissingServiceIndex + 1)\n                    .replace('{total}', architectureInfo.missingServices.length) :\n                  translations.learnAndHaveFun\n                }\n              </div>\n            </div>\n\n            {(!architecture?.services || \n             (currentMissingServiceIndex === architectureInfo?.missingServices?.length - 1 && showFeedback)) && (\n              <div className=\"difficulty-selection\">\n                {['BEGINNER', 'INTERMEDIATE', 'ADVANCED'].map((level) => (\n                  <button\n                    key={level}\n                    className={`difficulty-button ${difficulty === level ? 'active' : ''}`}\n                    onClick={() => handleDifficultyChange(level)}\n                  >\n                    {translations[level.toLowerCase()]}\n                  </button>\n                ))}\n              </div>\n            )}\n            \n            {/* Language selector */}\n            <LanguageSelector \n              currentLanguage={currentLanguage}\n              onLanguageChange={handleLanguageChange}\n            />\n          </div>\n          <br></br>\n          <center>\n            <img \n              src=\"https://hackthon-backend-files-ep-2024.s3.us-east-1.amazonaws.com/amazon-icons-set/Architecture-Service-Icons_06072024/AWSArchitectureApp.webp\"\n              alt=\"Loading...\" \n              style={{ \n                width: '1200px',\n                height: '900px',\n                verticalAlign: 'middle',\n                display: 'inline-block',\n                borderRadius: '50px'\n              }} \n            />\n          </center>\n          {showConfetti && (\n            <ReactConfetti\n              width={width}\n              height={height}\n              recycle={false}\n              numberOfPieces={200}\n              style={{ \n                position: 'fixed',\n                top: 0,\n                left: 0,\n                pointerEvents: 'none',\n                zIndex: 'var(--z-index-confetti)'\n              }} \n            />\n          )}\n          {showFireworks && (\n            <ReactConfetti\n              width={width}\n              height={height}\n              recycle={true}\n              numberOfPieces={500}\n              colors={['#FFD700', '#FF0000', '#00FF00', '#0000FF', '#FF00FF']}\n              style={{ \n                position: 'fixed',\n                top: 0,\n                left: 0,\n                pointerEvents: 'none',\n                zIndex: 'var(--z-index-confetti)'\n              }}\n            />\n          )}\n        </DndContext>\n      </DndProvider>\n    );\n};\n\nexport default AzureArchitectureGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}