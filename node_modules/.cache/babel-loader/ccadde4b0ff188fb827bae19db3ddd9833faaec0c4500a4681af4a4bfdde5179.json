{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/ThreeDArchitecture.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ThreeDArchitecture = _ref => {\n  _s();\n  let {\n    architecture\n  } = _ref;\n  const mountRef = useRef(null);\n  const labelRendererRef = useRef(null);\n  useEffect(() => {\n    // Scene setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({\n      antialias: true,\n      alpha: true\n    });\n    const labelRenderer = new CSS2DRenderer();\n\n    // Service nodes setup\n    architecture.services.forEach((service, index) => {\n      const geometry = new THREE.SphereGeometry(1, 32, 32);\n      const material = new THREE.MeshPhongMaterial({\n        color: getServiceCategoryColor(service.category),\n        transparent: true,\n        opacity: service.missing ? 0.5 : 1\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n\n      // Position in 3D space\n      const phi = Math.acos(-1 + 2 * index / architecture.services.length);\n      const theta = Math.sqrt(architecture.services.length * Math.PI) * phi;\n      sphere.position.setFromSphericalCoords(10, phi, theta);\n\n      // Add label\n      const serviceLabel = document.createElement('div');\n      serviceLabel.className = 'service-label';\n      serviceLabel.textContent = service.name;\n      const label = new CSS2DObject(serviceLabel);\n      sphere.add(label);\n      scene.add(sphere);\n    });\n\n    // Controls and animation\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    camera.position.z = 20;\n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n    };\n    animate();\n    return () => {\n      mountRef.current.removeChild(renderer.domElement);\n      labelRendererRef.current.removeChild(labelRenderer.domElement);\n    };\n  }, [architecture]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mountRef,\n      className: \"three-d-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: labelRendererRef,\n      className: \"label-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(ThreeDArchitecture, \"CNE+RuHiv51kw1Rimp535Le1dX4=\");\n_c = ThreeDArchitecture;\nexport default ThreeDArchitecture;\nvar _c;\n$RefreshReg$(_c, \"ThreeDArchitecture\");","map":{"version":3,"names":["React","useEffect","useRef","THREE","OrbitControls","CSS2DRenderer","CSS2DObject","jsxDEV","_jsxDEV","ThreeDArchitecture","_ref","_s","architecture","mountRef","labelRendererRef","scene","Scene","camera","PerspectiveCamera","window","innerWidth","innerHeight","renderer","WebGLRenderer","antialias","alpha","labelRenderer","services","forEach","service","index","geometry","SphereGeometry","material","MeshPhongMaterial","color","getServiceCategoryColor","category","transparent","opacity","missing","sphere","Mesh","phi","Math","acos","length","theta","sqrt","PI","position","setFromSphericalCoords","serviceLabel","document","createElement","className","textContent","name","label","add","controls","domElement","z","animate","requestAnimationFrame","render","current","removeChild","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/ThreeDArchitecture.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls';\nimport { CSS2DRenderer, CSS2DObject } from 'three/examples/jsm/renderers/CSS2DRenderer';\n\nconst ThreeDArchitecture = ({ architecture }) => {\n  const mountRef = useRef(null);\n  const labelRendererRef = useRef(null);\n\n  useEffect(() => {\n    // Scene setup\n    const scene = new THREE.Scene();\n    const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n    const renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n    const labelRenderer = new CSS2DRenderer();\n    \n    // Service nodes setup\n    architecture.services.forEach((service, index) => {\n      const geometry = new THREE.SphereGeometry(1, 32, 32);\n      const material = new THREE.MeshPhongMaterial({ \n        color: getServiceCategoryColor(service.category),\n        transparent: true,\n        opacity: service.missing ? 0.5 : 1\n      });\n      const sphere = new THREE.Mesh(geometry, material);\n      \n      // Position in 3D space\n      const phi = Math.acos(-1 + (2 * index) / architecture.services.length);\n      const theta = Math.sqrt(architecture.services.length * Math.PI) * phi;\n      sphere.position.setFromSphericalCoords(10, phi, theta);\n      \n      // Add label\n      const serviceLabel = document.createElement('div');\n      serviceLabel.className = 'service-label';\n      serviceLabel.textContent = service.name;\n      const label = new CSS2DObject(serviceLabel);\n      sphere.add(label);\n      \n      scene.add(sphere);\n    });\n\n    // Controls and animation\n    const controls = new OrbitControls(camera, labelRenderer.domElement);\n    camera.position.z = 20;\n    \n    const animate = () => {\n      requestAnimationFrame(animate);\n      renderer.render(scene, camera);\n      labelRenderer.render(scene, camera);\n    };\n    \n    animate();\n\n    return () => {\n      mountRef.current.removeChild(renderer.domElement);\n      labelRendererRef.current.removeChild(labelRenderer.domElement);\n    };\n  }, [architecture]);\n\n  return (\n    <div>\n      <div ref={mountRef} className=\"three-d-container\" />\n      <div ref={labelRendererRef} className=\"label-container\" />\n    </div>\n  );\n};\n\nexport default ThreeDArchitecture; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}