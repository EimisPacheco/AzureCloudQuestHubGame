{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { Constants } from \"../common\";\nimport { decodeAndParseJSONString, getRequestChargeIfAny } from \"../queryExecutionContext/headerUtils\";\nexport class FeedResponse {\n  constructor(resources, headers, hasMoreResults, diagnostics) {\n    this.resources = resources;\n    this.headers = headers;\n    this.hasMoreResults = hasMoreResults;\n    this.diagnostics = diagnostics;\n  }\n  get continuation() {\n    return this.continuationToken;\n  }\n  get continuationToken() {\n    return this.headers[Constants.HttpHeaders.Continuation];\n  }\n  get queryMetrics() {\n    return this.headers[Constants.HttpHeaders.QueryMetrics];\n  }\n  get requestCharge() {\n    return getRequestChargeIfAny(this.headers);\n  }\n  get activityId() {\n    return this.headers[Constants.HttpHeaders.ActivityId];\n  }\n  get correlatedActivityId() {\n    return this.headers[Constants.HttpHeaders.CorrelatedActivityId];\n  }\n  get indexMetrics() {\n    return decodeAndParseJSONString(this.headers[Constants.HttpHeaders.IndexUtilization]);\n  }\n}","map":{"version":3,"names":["Constants","decodeAndParseJSONString","getRequestChargeIfAny","FeedResponse","constructor","resources","headers","hasMoreResults","diagnostics","continuation","continuationToken","HttpHeaders","Continuation","queryMetrics","QueryMetrics","requestCharge","activityId","ActivityId","correlatedActivityId","CorrelatedActivityId","indexMetrics","IndexUtilization"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /node_modules/@azure/cosmos/src/request/FeedResponse.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { Constants } from \"../common\";\nimport type { CosmosHeaders } from \"../queryExecutionContext/headerUtils\";\nimport {\n  decodeAndParseJSONString,\n  getRequestChargeIfAny,\n} from \"../queryExecutionContext/headerUtils\";\nimport type { CosmosDiagnostics } from \"../CosmosDiagnostics\";\n\nexport class FeedResponse<TResource> {\n  constructor(\n    public readonly resources: TResource[],\n    private readonly headers: CosmosHeaders,\n    public readonly hasMoreResults: boolean,\n    public readonly diagnostics: CosmosDiagnostics,\n  ) {}\n\n  public get continuation(): string {\n    return this.continuationToken;\n  }\n  public get continuationToken(): string {\n    return this.headers[Constants.HttpHeaders.Continuation];\n  }\n  public get queryMetrics(): string {\n    return this.headers[Constants.HttpHeaders.QueryMetrics];\n  }\n  public get requestCharge(): number {\n    return getRequestChargeIfAny(this.headers);\n  }\n  public get activityId(): string {\n    return this.headers[Constants.HttpHeaders.ActivityId];\n  }\n  public get correlatedActivityId(): string {\n    return this.headers[Constants.HttpHeaders.CorrelatedActivityId];\n  }\n  public get indexMetrics(): string {\n    return decodeAndParseJSONString(this.headers[Constants.HttpHeaders.IndexUtilization]);\n  }\n}\n"],"mappings":"AAAA;AACA;AACA,SAASA,SAAS,QAAQ,WAAW;AAErC,SACEC,wBAAwB,EACxBC,qBAAqB,QAChB,sCAAsC;AAG7C,OAAM,MAAOC,YAAY;EACvBC,YACkBC,SAAsB,EACrBC,OAAsB,EACvBC,cAAuB,EACvBC,WAA8B;IAH9B,KAAAH,SAAS,GAATA,SAAS;IACR,KAAAC,OAAO,GAAPA,OAAO;IACR,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,WAAW,GAAXA,WAAW;EAC1B;EAEH,IAAWC,YAAYA,CAAA;IACrB,OAAO,IAAI,CAACC,iBAAiB;EAC/B;EACA,IAAWA,iBAAiBA,CAAA;IAC1B,OAAO,IAAI,CAACJ,OAAO,CAACN,SAAS,CAACW,WAAW,CAACC,YAAY,CAAC;EACzD;EACA,IAAWC,YAAYA,CAAA;IACrB,OAAO,IAAI,CAACP,OAAO,CAACN,SAAS,CAACW,WAAW,CAACG,YAAY,CAAC;EACzD;EACA,IAAWC,aAAaA,CAAA;IACtB,OAAOb,qBAAqB,CAAC,IAAI,CAACI,OAAO,CAAC;EAC5C;EACA,IAAWU,UAAUA,CAAA;IACnB,OAAO,IAAI,CAACV,OAAO,CAACN,SAAS,CAACW,WAAW,CAACM,UAAU,CAAC;EACvD;EACA,IAAWC,oBAAoBA,CAAA;IAC7B,OAAO,IAAI,CAACZ,OAAO,CAACN,SAAS,CAACW,WAAW,CAACQ,oBAAoB,CAAC;EACjE;EACA,IAAWC,YAAYA,CAAA;IACrB,OAAOnB,wBAAwB,CAAC,IAAI,CAACK,OAAO,CAACN,SAAS,CAACW,WAAW,CAACU,gBAAgB,CAAC,CAAC;EACvF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}