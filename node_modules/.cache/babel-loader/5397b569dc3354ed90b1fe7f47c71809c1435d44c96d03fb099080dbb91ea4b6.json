{"ast":null,"code":"import { ref, set, onValue, push } from 'firebase/database';\nimport { db } from './firebase';\nclass MultiplayerService {\n  constructor() {\n    this.gameRef = ref(db, 'games');\n    this.leaderboardRef = ref(db, 'leaderboard');\n  }\n  createGame(userId) {\n    const newGameRef = push(this.gameRef);\n    return set(newGameRef, {\n      hostId: userId,\n      status: 'waiting',\n      players: [{\n        id: userId,\n        score: 0\n      }],\n      currentArchitecture: null,\n      startTime: Date.now()\n    });\n  }\n  joinGame(gameId, userId) {\n    const gameRef = ref(db, \"games/\".concat(gameId, \"/players\"));\n    return push(gameRef, {\n      id: userId,\n      score: 0\n    });\n  }\n  updateScore(gameId, userId, newScore) {\n    const playerRef = ref(db, \"games/\".concat(gameId, \"/players/\").concat(userId));\n    return set(playerRef, {\n      score: newScore\n    });\n  }\n  updateLeaderboard(userId, score, difficulty) {\n    const leaderboardEntry = {\n      userId,\n      score,\n      difficulty,\n      timestamp: Date.now()\n    };\n    return push(this.leaderboardRef, leaderboardEntry);\n  }\n}\nexport const multiplayerService = new MultiplayerService();","map":{"version":3,"names":["ref","set","onValue","push","db","MultiplayerService","constructor","gameRef","leaderboardRef","createGame","userId","newGameRef","hostId","status","players","id","score","currentArchitecture","startTime","Date","now","joinGame","gameId","concat","updateScore","newScore","playerRef","updateLeaderboard","difficulty","leaderboardEntry","timestamp","multiplayerService"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/services/MultiplayerService.js"],"sourcesContent":["import { ref, set, onValue, push } from 'firebase/database';\nimport { db } from './firebase';\n\nclass MultiplayerService {\n  constructor() {\n    this.gameRef = ref(db, 'games');\n    this.leaderboardRef = ref(db, 'leaderboard');\n  }\n\n  createGame(userId) {\n    const newGameRef = push(this.gameRef);\n    return set(newGameRef, {\n      hostId: userId,\n      status: 'waiting',\n      players: [{ id: userId, score: 0 }],\n      currentArchitecture: null,\n      startTime: Date.now()\n    });\n  }\n\n  joinGame(gameId, userId) {\n    const gameRef = ref(db, `games/${gameId}/players`);\n    return push(gameRef, { id: userId, score: 0 });\n  }\n\n  updateScore(gameId, userId, newScore) {\n    const playerRef = ref(db, `games/${gameId}/players/${userId}`);\n    return set(playerRef, { score: newScore });\n  }\n\n  updateLeaderboard(userId, score, difficulty) {\n    const leaderboardEntry = {\n      userId,\n      score,\n      difficulty,\n      timestamp: Date.now()\n    };\n    return push(this.leaderboardRef, leaderboardEntry);\n  }\n}\n\nexport const multiplayerService = new MultiplayerService(); "],"mappings":"AAAA,SAASA,GAAG,EAAEC,GAAG,EAAEC,OAAO,EAAEC,IAAI,QAAQ,mBAAmB;AAC3D,SAASC,EAAE,QAAQ,YAAY;AAE/B,MAAMC,kBAAkB,CAAC;EACvBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,OAAO,GAAGP,GAAG,CAACI,EAAE,EAAE,OAAO,CAAC;IAC/B,IAAI,CAACI,cAAc,GAAGR,GAAG,CAACI,EAAE,EAAE,aAAa,CAAC;EAC9C;EAEAK,UAAUA,CAACC,MAAM,EAAE;IACjB,MAAMC,UAAU,GAAGR,IAAI,CAAC,IAAI,CAACI,OAAO,CAAC;IACrC,OAAON,GAAG,CAACU,UAAU,EAAE;MACrBC,MAAM,EAAEF,MAAM;MACdG,MAAM,EAAE,SAAS;MACjBC,OAAO,EAAE,CAAC;QAAEC,EAAE,EAAEL,MAAM;QAAEM,KAAK,EAAE;MAAE,CAAC,CAAC;MACnCC,mBAAmB,EAAE,IAAI;MACzBC,SAAS,EAAEC,IAAI,CAACC,GAAG,CAAC;IACtB,CAAC,CAAC;EACJ;EAEAC,QAAQA,CAACC,MAAM,EAAEZ,MAAM,EAAE;IACvB,MAAMH,OAAO,GAAGP,GAAG,CAACI,EAAE,WAAAmB,MAAA,CAAWD,MAAM,aAAU,CAAC;IAClD,OAAOnB,IAAI,CAACI,OAAO,EAAE;MAAEQ,EAAE,EAAEL,MAAM;MAAEM,KAAK,EAAE;IAAE,CAAC,CAAC;EAChD;EAEAQ,WAAWA,CAACF,MAAM,EAAEZ,MAAM,EAAEe,QAAQ,EAAE;IACpC,MAAMC,SAAS,GAAG1B,GAAG,CAACI,EAAE,WAAAmB,MAAA,CAAWD,MAAM,eAAAC,MAAA,CAAYb,MAAM,CAAE,CAAC;IAC9D,OAAOT,GAAG,CAACyB,SAAS,EAAE;MAAEV,KAAK,EAAES;IAAS,CAAC,CAAC;EAC5C;EAEAE,iBAAiBA,CAACjB,MAAM,EAAEM,KAAK,EAAEY,UAAU,EAAE;IAC3C,MAAMC,gBAAgB,GAAG;MACvBnB,MAAM;MACNM,KAAK;MACLY,UAAU;MACVE,SAAS,EAAEX,IAAI,CAACC,GAAG,CAAC;IACtB,CAAC;IACD,OAAOjB,IAAI,CAAC,IAAI,CAACK,cAAc,EAAEqB,gBAAgB,CAAC;EACpD;AACF;AAEA,OAAO,MAAME,kBAAkB,GAAG,IAAI1B,kBAAkB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}