{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/IconsSelectCategoryFast.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport '../styles/GameCanvas.css';\nimport { getCategoryIcons, getRandomCategory } from '../utils/categorySelectionUtils';\nimport { getServiceIconUrl } from '../utils/memoryGameUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IconsSelectCategoryFast = () => {\n  _s();\n  // Game state\n  const [currentCategory, setCurrentCategory] = useState('');\n  const [displayCategory, setDisplayCategory] = useState('');\n  const [icons, setIcons] = useState([]);\n  const [selectedIcons, setSelectedIcons] = useState([]);\n  const [correctSelections, setCorrectSelections] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [roundComplete, setRoundComplete] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const TIME_LIMIT = 60; // 60 seconds time limit per round\n\n  // Sound state\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const sounds = useRef({});\n\n  // Game container ref\n  const gameContainerRef = useRef(null);\n  const timerRef = useRef(null);\n  const categoryIconsRef = useRef([]);\n\n  // Player state\n  const [playerName, setPlayerName] = useState('Player');\n\n  // Define sound files\n  const soundFiles = {\n    select: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/flip-switch.mp3`,\n    correct: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n    incorrect: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n    hover: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/hover.mp3`,\n    achievement: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/levelup.mp3`\n  };\n\n  // Helper function to safely create audio objects with timeout\n  const createSafeAudio = useCallback(path => {\n    const audio = new Audio();\n    return new Promise(resolve => {\n      audio.addEventListener('error', () => {\n        console.warn(`Sound file not found: ${path}`);\n        resolve(null);\n      });\n      audio.addEventListener('canplaythrough', () => {\n        resolve(audio);\n      });\n      // Timeout fallback in case sound loading takes too long\n      setTimeout(() => {\n        if (audio.readyState < 3) {\n          console.warn(`Sound loading timeout: ${path}`);\n          resolve(null);\n        }\n      }, 3000);\n      audio.src = path;\n    });\n  }, []);\n\n  // Load all sounds\n  useEffect(() => {\n    const loadSounds = async () => {\n      const soundPromises = Object.entries(soundFiles).map(async ([name, path]) => {\n        try {\n          const audio = await createSafeAudio(path);\n          return [name, audio];\n        } catch (error) {\n          console.error(`Failed to load sound ${name}:`, error);\n          return [name, null];\n        }\n      });\n      try {\n        const loadedSounds = await Promise.all(soundPromises);\n        const soundsMap = Object.fromEntries(loadedSounds);\n        sounds.current = soundsMap;\n\n        // Check if at least some sounds loaded successfully\n        const hasLoadedSounds = Object.values(soundsMap).some(sound => sound !== null);\n        setSoundsLoaded(hasLoadedSounds);\n        if (hasLoadedSounds) {\n          console.log('🔊 Sounds loaded successfully');\n        } else {\n          console.warn('⚠️ No sounds could be loaded');\n        }\n      } catch (error) {\n        console.error('Failed to load sounds:', error);\n      }\n    };\n    loadSounds();\n  }, [createSafeAudio]);\n\n  // Toggle mute\n  const toggleMute = useCallback(() => {\n    setIsMuted(!isMuted);\n  }, [isMuted]);\n\n  // Play a sound effect\n  const playSound = useCallback(soundName => {\n    if (isMuted || !sounds.current[soundName]) return;\n    const sound = sounds.current[soundName];\n    sound.currentTime = 0;\n    sound.play().catch(err => console.warn('Error playing sound:', err));\n  }, [isMuted]);\n\n  // First, define the initGame function without any dependencies to other functions\n  const initGame = useCallback(() => {\n    const {\n      category,\n      displayName,\n      icons: allIcons,\n      targetIcons\n    } = getRandomCategory();\n    setCurrentCategory(category);\n    setDisplayCategory(displayName);\n    setIcons(allIcons);\n    categoryIconsRef.current = targetIcons;\n    setSelectedIcons([]);\n    setCorrectSelections(0);\n    setTimeElapsed(0);\n    setRoundComplete(false);\n    setGameOver(false);\n    setGameStarted(true);\n\n    // Clear any existing timer\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n\n    // Start timer\n    const startTime = Date.now();\n    timerRef.current = setInterval(() => {\n      const newTime = Math.floor((Date.now() - startTime) / 1000);\n      setTimeElapsed(newTime);\n\n      // Check if time has run out\n      if (newTime >= TIME_LIMIT) {\n        // Handle timer expiry directly in the interval callback\n        if (timerRef.current) {\n          clearInterval(timerRef.current);\n        }\n        if (!roundComplete) {\n          setGameOver(true);\n          playSound('incorrect');\n        }\n      }\n    }, 1000);\n    console.log(`Starting new round with category: ${displayName}`);\n    console.log(`Target icons:`, targetIcons);\n  }, []);\n\n  // Next, define nextCategory with only initGame dependency\n  const nextCategory = useCallback(() => {\n    // Stop any confetti\n    setShowConfetti(false);\n\n    // Reset game state for next round\n    setGameOver(false);\n    initGame();\n\n    // Play sound effect\n    playSound('select');\n  }, [initGame, playSound]);\n\n  // Then, define handleRoundComplete\n  const handleRoundComplete = useCallback(() => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    setRoundComplete(true);\n    setShowConfetti(true);\n    playSound('achievement');\n\n    // Calculate score based on time\n    const timeBonus = Math.max(100 - timeElapsed * 2, 10); // More points for faster completion\n    setScore(prev => prev + timeBonus);\n  }, [timeElapsed, playSound]);\n\n  // Use an effect for auto-advancing to next category\n  useEffect(() => {\n    let timer;\n    if (roundComplete || gameOver) {\n      timer = setTimeout(() => {\n        nextCategory();\n      }, 3000);\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [roundComplete, gameOver, nextCategory]);\n\n  // Handle card click\n  const handleCardClick = icon => {\n    playSound('select');\n    if (selectedIcons.includes(icon)) {\n      // If already selected, deselect it\n      setSelectedIcons(prev => prev.filter(i => i !== icon));\n      if (categoryIconsRef.current.includes(icon)) {\n        setCorrectSelections(prev => prev - 1);\n      }\n    } else {\n      // If not selected, select it\n      setSelectedIcons(prev => [...prev, icon]);\n      if (categoryIconsRef.current.includes(icon)) {\n        // Correct selection\n        const newCorrectSelections = correctSelections + 1;\n        setCorrectSelections(newCorrectSelections);\n        playSound('correct');\n\n        // Add points for correct selection\n        setScore(prev => prev + 5);\n\n        // Check if all correct icons are selected\n        if (newCorrectSelections === categoryIconsRef.current.length) {\n          handleRoundComplete();\n        }\n      } else {\n        // Incorrect selection\n        playSound('incorrect');\n        setScore(prev => Math.max(0, prev - 5)); // Penalty for wrong selection\n      }\n    }\n  };\n\n  // Start the game when component mounts\n  useEffect(() => {\n    initGame();\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [initGame]);\n\n  // Format time as MM:SS\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins < 10 ? '0' : ''}${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // Confetti component\n  const Confetti = ({\n    active\n  }) => {\n    if (!active) return null;\n    const confettiCount = 150;\n    const confetti = [];\n    for (let i = 0; i < confettiCount; i++) {\n      const left = `${Math.random() * 100}%`;\n      const animationDelay = `${Math.random() * 5}s`;\n      const initialOpacity = Math.random();\n      const size = `${Math.random() * 10 + 5}px`;\n      const rotation = `${Math.random() * 360}deg`;\n      const color = ['#00ffff',\n      // Cyan (Azure color)\n      '#0078d4',\n      // Blue (Azure color)\n      '#ffb900',\n      // Gold\n      '#e74c3c',\n      // Red\n      '#2ecc71',\n      // Green\n      '#9b59b6',\n      // Purple\n      '#3498db' // Light blue\n      ][Math.floor(Math.random() * 7)];\n      confetti.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-confetti-particle\",\n        style: {\n          left,\n          top: '-10px',\n          width: size,\n          height: size,\n          backgroundColor: color,\n          transform: `rotate(${rotation})`,\n          opacity: initialOpacity,\n          animationDelay\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 9\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memory-confetti-container\",\n      children: confetti\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 12\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-container\",\n    ref: gameContainerRef,\n    children: [/*#__PURE__*/_jsxDEV(Confetti, {\n      active: showConfetti\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameCanvas-game-title\",\n      style: {\n        '--azure-icon': `url(${process.env.PUBLIC_URL}/azure-icons/Microsoft_Azure_Cyan.svg)`\n      },\n      children: \"zure Category Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-canvas-wrapper\",\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-selection-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"category-selection-instruction\",\n            children: [\"Select all the cards which belong to the category: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category-highlight\",\n              children: displayCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 66\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this), soundsLoaded && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"memory-game-sound-toggle top-right\",\n          onClick: toggleMute,\n          \"aria-label\": \"Toggle sound\",\n          children: isMuted ? '🔇' : '🔊'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"PLAYER:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), \" \", playerName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-score\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Score:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 15\n            }, this), \" \", score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-time\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Time:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), \" \", formatTime(timeElapsed)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-progress\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Progress:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 15\n            }, this), \" \", correctSelections, \" out of \", categoryIconsRef.current.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-selection-grid\",\n          children: icons.map((icon, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `category-selection-card ${selectedIcons.includes(icon.name) ? categoryIconsRef.current.includes(icon.name) ? 'correct' : 'wrong' : ''}`,\n            onClick: () => handleCardClick(icon.name),\n            onMouseEnter: () => playSound('hover'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: getServiceIconUrl(icon.path),\n              alt: icon.name,\n              onError: e => {\n                e.target.onerror = null;\n                e.target.src = `${process.env.PUBLIC_URL}/azure-icons/default.svg`;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 355,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-selection-card-text\",\n              children: icon.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 17\n            }, this)]\n          }, `${icon.name}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-selection-stats\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"category-selection-timer-score-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-selection-timer\",\n              children: [\"Time: \", formatTime(timeElapsed)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-selection-score\",\n              children: [\"Score: \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), roundComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-selection-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Great job! You found all \", categoryIconsRef.current.length, \" icons in \", timeElapsed, \" seconds.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You earned \", Math.max(100 - timeElapsed * 2, 10), \" points!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 13\n        }, this), gameOver && !roundComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-selection-failure-banner\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Time's up!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You found \", correctSelections, \" out of \", categoryIconsRef.current.length, \" icons.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Looking for: \", categoryIconsRef.current.join(', ')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 392,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 300,\n    columnNumber: 5\n  }, this);\n};\n_s(IconsSelectCategoryFast, \"KHFc2l1R7z+LoEMiOg7IafWjsRY=\");\n_c = IconsSelectCategoryFast;\nexport default IconsSelectCategoryFast;\nvar _c;\n$RefreshReg$(_c, \"IconsSelectCategoryFast\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","getCategoryIcons","getRandomCategory","getServiceIconUrl","jsxDEV","_jsxDEV","IconsSelectCategoryFast","_s","currentCategory","setCurrentCategory","displayCategory","setDisplayCategory","icons","setIcons","selectedIcons","setSelectedIcons","correctSelections","setCorrectSelections","timeElapsed","setTimeElapsed","score","setScore","gameStarted","setGameStarted","roundComplete","setRoundComplete","gameOver","setGameOver","showConfetti","setShowConfetti","TIME_LIMIT","soundsLoaded","setSoundsLoaded","isMuted","setIsMuted","sounds","gameContainerRef","timerRef","categoryIconsRef","playerName","setPlayerName","soundFiles","select","process","env","REACT_APP_AZURE_BUCKET_URL","correct","incorrect","hover","achievement","createSafeAudio","path","audio","Audio","Promise","resolve","addEventListener","console","warn","setTimeout","readyState","src","loadSounds","soundPromises","Object","entries","map","name","error","loadedSounds","all","soundsMap","fromEntries","current","hasLoadedSounds","values","some","sound","log","toggleMute","playSound","soundName","currentTime","play","catch","err","initGame","category","displayName","allIcons","targetIcons","clearInterval","startTime","Date","now","setInterval","newTime","Math","floor","nextCategory","handleRoundComplete","timeBonus","max","prev","timer","clearTimeout","handleCardClick","icon","includes","filter","i","newCorrectSelections","length","formatTime","seconds","mins","secs","Confetti","active","confettiCount","confetti","left","random","animationDelay","initialOpacity","size","rotation","color","push","className","style","top","width","height","backgroundColor","transform","opacity","fileName","_jsxFileName","lineNumber","columnNumber","children","ref","PUBLIC_URL","display","flexDirection","alignItems","justifyContent","onClick","index","onMouseEnter","alt","onError","e","target","onerror","join","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/IconsSelectCategoryFast.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport '../styles/GameCanvas.css';\nimport { getCategoryIcons, getRandomCategory } from '../utils/categorySelectionUtils';\nimport { getServiceIconUrl } from '../utils/memoryGameUtils';\n\nconst IconsSelectCategoryFast = () => {\n  // Game state\n  const [currentCategory, setCurrentCategory] = useState('');\n  const [displayCategory, setDisplayCategory] = useState('');\n  const [icons, setIcons] = useState([]);\n  const [selectedIcons, setSelectedIcons] = useState([]);\n  const [correctSelections, setCorrectSelections] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [roundComplete, setRoundComplete] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const TIME_LIMIT = 60; // 60 seconds time limit per round\n  \n  // Sound state\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const sounds = useRef({});\n  \n  // Game container ref\n  const gameContainerRef = useRef(null);\n  const timerRef = useRef(null);\n  const categoryIconsRef = useRef([]);\n\n  // Player state\n  const [playerName, setPlayerName] = useState('Player');\n\n  // Define sound files\n  const soundFiles = {\n    select: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/flip-switch.mp3`,\n    correct: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n    incorrect: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n    hover: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/hover.mp3`,\n    achievement: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/levelup.mp3`\n  };\n\n  // Helper function to safely create audio objects with timeout\n  const createSafeAudio = useCallback((path) => {\n    const audio = new Audio();\n    return new Promise((resolve) => {\n      audio.addEventListener('error', () => {\n        console.warn(`Sound file not found: ${path}`);\n        resolve(null);\n      });\n      audio.addEventListener('canplaythrough', () => {\n        resolve(audio);\n      });\n      // Timeout fallback in case sound loading takes too long\n      setTimeout(() => {\n        if (audio.readyState < 3) {\n          console.warn(`Sound loading timeout: ${path}`);\n          resolve(null);\n        }\n      }, 3000);\n      audio.src = path;\n    });\n  }, []);\n\n  // Load all sounds\n  useEffect(() => {\n    const loadSounds = async () => {\n      const soundPromises = Object.entries(soundFiles).map(async ([name, path]) => {\n        try {\n          const audio = await createSafeAudio(path);\n          return [name, audio];\n        } catch (error) {\n          console.error(`Failed to load sound ${name}:`, error);\n          return [name, null];\n        }\n      });\n\n      try {\n        const loadedSounds = await Promise.all(soundPromises);\n        const soundsMap = Object.fromEntries(loadedSounds);\n        sounds.current = soundsMap;\n        \n        // Check if at least some sounds loaded successfully\n        const hasLoadedSounds = Object.values(soundsMap).some(sound => sound !== null);\n        setSoundsLoaded(hasLoadedSounds);\n        \n        if (hasLoadedSounds) {\n          console.log('🔊 Sounds loaded successfully');\n        } else {\n          console.warn('⚠️ No sounds could be loaded');\n        }\n      } catch (error) {\n        console.error('Failed to load sounds:', error);\n      }\n    };\n\n    loadSounds();\n  }, [createSafeAudio]);\n  \n  // Toggle mute\n  const toggleMute = useCallback(() => {\n    setIsMuted(!isMuted);\n  }, [isMuted]);\n\n  // Play a sound effect\n  const playSound = useCallback(\n    (soundName) => {\n      if (isMuted || !sounds.current[soundName]) return;\n      const sound = sounds.current[soundName];\n      sound.currentTime = 0;\n      sound.play().catch(err => console.warn('Error playing sound:', err));\n    },\n    [isMuted]\n  );\n\n  // First, define the initGame function without any dependencies to other functions\n  const initGame = useCallback(() => {\n    const { category, displayName, icons: allIcons, targetIcons } = getRandomCategory();\n    \n    setCurrentCategory(category);\n    setDisplayCategory(displayName);\n    setIcons(allIcons);\n    categoryIconsRef.current = targetIcons;\n    setSelectedIcons([]);\n    setCorrectSelections(0);\n    setTimeElapsed(0);\n    setRoundComplete(false);\n    setGameOver(false);\n    setGameStarted(true);\n    \n    // Clear any existing timer\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    \n    // Start timer\n    const startTime = Date.now();\n    timerRef.current = setInterval(() => {\n      const newTime = Math.floor((Date.now() - startTime) / 1000);\n      setTimeElapsed(newTime);\n      \n      // Check if time has run out\n      if (newTime >= TIME_LIMIT) {\n        // Handle timer expiry directly in the interval callback\n        if (timerRef.current) {\n          clearInterval(timerRef.current);\n        }\n        \n        if (!roundComplete) {\n          setGameOver(true);\n          playSound('incorrect');\n        }\n      }\n    }, 1000);\n    \n    console.log(`Starting new round with category: ${displayName}`);\n    console.log(`Target icons:`, targetIcons);\n  }, []);\n\n  // Next, define nextCategory with only initGame dependency\n  const nextCategory = useCallback(() => {\n    // Stop any confetti\n    setShowConfetti(false);\n    \n    // Reset game state for next round\n    setGameOver(false);\n    initGame();\n    \n    // Play sound effect\n    playSound('select');\n  }, [initGame, playSound]);\n\n  // Then, define handleRoundComplete\n  const handleRoundComplete = useCallback(() => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    \n    setRoundComplete(true);\n    setShowConfetti(true);\n    playSound('achievement');\n    \n    // Calculate score based on time\n    const timeBonus = Math.max(100 - timeElapsed * 2, 10); // More points for faster completion\n    setScore(prev => prev + timeBonus);\n  }, [timeElapsed, playSound]);\n\n  // Use an effect for auto-advancing to next category\n  useEffect(() => {\n    let timer;\n    \n    if (roundComplete || gameOver) {\n      timer = setTimeout(() => {\n        nextCategory();\n      }, 3000);\n    }\n    \n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [roundComplete, gameOver, nextCategory]);\n\n  // Handle card click\n  const handleCardClick = (icon) => {\n    playSound('select');\n    \n    if (selectedIcons.includes(icon)) {\n      // If already selected, deselect it\n      setSelectedIcons(prev => prev.filter(i => i !== icon));\n      if (categoryIconsRef.current.includes(icon)) {\n        setCorrectSelections(prev => prev - 1);\n      }\n    } else {\n      // If not selected, select it\n      setSelectedIcons(prev => [...prev, icon]);\n      \n      if (categoryIconsRef.current.includes(icon)) {\n        // Correct selection\n        const newCorrectSelections = correctSelections + 1;\n        setCorrectSelections(newCorrectSelections);\n        playSound('correct');\n        \n        // Add points for correct selection\n        setScore(prev => prev + 5);\n        \n        // Check if all correct icons are selected\n        if (newCorrectSelections === categoryIconsRef.current.length) {\n          handleRoundComplete();\n        }\n      } else {\n        // Incorrect selection\n        playSound('incorrect');\n        setScore(prev => Math.max(0, prev - 5)); // Penalty for wrong selection\n      }\n    }\n  };\n\n  // Start the game when component mounts\n  useEffect(() => {\n    initGame();\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, [initGame]);\n\n  // Format time as MM:SS\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins < 10 ? '0' : ''}${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // Confetti component\n  const Confetti = ({ active }) => {\n    if (!active) return null;\n    \n    const confettiCount = 150;\n    const confetti = [];\n    \n    for (let i = 0; i < confettiCount; i++) {\n      const left = `${Math.random() * 100}%`;\n      const animationDelay = `${Math.random() * 5}s`;\n      const initialOpacity = Math.random();\n      const size = `${Math.random() * 10 + 5}px`;\n      const rotation = `${Math.random() * 360}deg`;\n      const color = [\n        '#00ffff', // Cyan (Azure color)\n        '#0078d4', // Blue (Azure color)\n        '#ffb900', // Gold\n        '#e74c3c', // Red\n        '#2ecc71', // Green\n        '#9b59b6', // Purple\n        '#3498db', // Light blue\n      ][Math.floor(Math.random() * 7)];\n      \n      confetti.push(\n        <div \n          key={i}\n          className=\"memory-confetti-particle\"\n          style={{\n            left,\n            top: '-10px',\n            width: size,\n            height: size,\n            backgroundColor: color,\n            transform: `rotate(${rotation})`,\n            opacity: initialOpacity,\n            animationDelay,\n          }}\n        />\n      );\n    }\n    \n    return <div className=\"memory-confetti-container\">{confetti}</div>;\n  };\n\n  return (\n    <div \n      className=\"gameCanvas-container\" \n      ref={gameContainerRef}\n    >\n      <Confetti active={showConfetti} />\n\n      <h1 \n        className=\"gameCanvas-game-title\"\n        style={{ '--azure-icon': `url(${process.env.PUBLIC_URL}/azure-icons/Microsoft_Azure_Cyan.svg)` }}\n      >\n        zure Category Challenge\n      </h1>\n      \n      <div className=\"gameCanvas-game-content\">\n        <div className=\"gameCanvas-canvas-wrapper\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'center' }}>\n          <div className=\"category-selection-header\">\n            <h2 className=\"category-selection-instruction\">\n              Select all the cards which belong to the category: <span className=\"category-highlight\">{displayCategory}</span>\n            </h2>\n          </div>\n          \n          {soundsLoaded && (\n            <button \n              className=\"memory-game-sound-toggle top-right\"\n              onClick={toggleMute}\n              aria-label=\"Toggle sound\"\n            >\n              {isMuted ? '🔇' : '🔊'}\n            </button>\n          )}\n          \n          <div className=\"player-panel\">\n            <div className=\"player-info\">\n              <strong>PLAYER:</strong> {playerName}\n            </div>\n            <div className=\"player-score\">\n              <strong>Score:</strong> {score}\n            </div>\n            <div className=\"player-time\">\n              <strong>Time:</strong> {formatTime(timeElapsed)}\n            </div>\n            <div className=\"player-progress\">\n              <strong>Progress:</strong> {correctSelections} out of {categoryIconsRef.current.length}\n            </div>\n          </div>\n          \n          <div className=\"category-selection-grid\">\n            {icons.map((icon, index) => (\n              <div\n                key={`${icon.name}-${index}`}\n                className={`category-selection-card ${selectedIcons.includes(icon.name) ? \n                  (categoryIconsRef.current.includes(icon.name) ? 'correct' : 'wrong') : ''}`}\n                onClick={() => handleCardClick(icon.name)}\n                onMouseEnter={() => playSound('hover')}\n              >\n                <img \n                  src={getServiceIconUrl(icon.path)} \n                  alt={icon.name} \n                  onError={(e) => {\n                    e.target.onerror = null;\n                    e.target.src = `${process.env.PUBLIC_URL}/azure-icons/default.svg`;\n                  }}\n                />\n                <div className=\"category-selection-card-text\">{icon.name}</div>\n              </div>\n            ))}\n          </div>\n          \n          <div className=\"category-selection-stats\">\n            <div className=\"category-selection-timer-score-container\">\n              <div className=\"category-selection-timer\">\n                Time: {formatTime(timeElapsed)}\n              </div>\n              \n              <div className=\"category-selection-score\">\n                Score: {score}\n              </div>\n            </div>\n          </div>\n          \n          {roundComplete && (\n            <div className=\"category-selection-success\">\n              <h3>Great job! You found all {categoryIconsRef.current.length} icons in {timeElapsed} seconds.</h3>\n              <p>You earned {Math.max(100 - timeElapsed * 2, 10)} points!</p>\n            </div>\n          )}\n          \n          {/* Add a message about missed selections when the round is complete */}\n          {gameOver && !roundComplete && (\n            <div className=\"category-selection-failure-banner\">\n              <h3>Time's up!</h3>\n              <p>You found {correctSelections} out of {categoryIconsRef.current.length} icons.</p>\n              <p>Looking for: {categoryIconsRef.current.join(', ')}</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default IconsSelectCategoryFast; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}