{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, useNodesState, useEdgesState, MarkerType, Handle } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { getCachedServiceIcon } from '../services/IconResolver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSServiceNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(motion.div, {\n  className: `aws-service-node ${data.isMissing ? 'missing' : ''}`,\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  animate: {\n    scale: 1,\n    opacity: 1\n  },\n  exit: {\n    scale: 0,\n    opacity: 0\n  },\n  whileHover: {\n    scale: 1.1\n  },\n  transition: {\n    type: \"spring\",\n    stiffness: 300\n  },\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\",\n    id: `${data.id}-target`,\n    className: \"handle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node-content\",\n    children: [data.isMissing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"missing-service-placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.icon,\n      alt: data.label,\n      className: \"service-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"service-label\",\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\",\n    id: `${data.id}-source`,\n    className: \"handle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c = AWSServiceNode;\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\nconst createNodeId = serviceName => {\n  if (typeof serviceName !== 'string') {\n    console.error('Invalid service name:', serviceName);\n    return 'invalid-service';\n  }\n  return serviceName.toLowerCase().replace(/\\s+/g, '-');\n};\nconst AWSArchitectureDisplay = ({\n  architecture,\n  missingServices\n}) => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  useEffect(() => {\n    if (!(architecture !== null && architecture !== void 0 && architecture.services)) return;\n\n    // Create nodes - keeping your exact format\n    const newNodes = architecture.services.map((service, index) => ({\n      id: service.id,\n      type: 'awsService',\n      position: {\n        x: index * 200,\n        y: Math.floor(index / 3) * 200\n      },\n      data: {\n        id: service.id,\n        label: service.name,\n        icon: service.icon,\n        isMissing: service.name.includes('missing')\n      }\n    }));\n\n    // Create edges with your working connection logic\n    const newEdges = architecture.connections.map((connection, index) => ({\n      id: `e${index}`,\n      source: connection.from.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n      target: connection.to.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n      type: 'smoothstep',\n      animated: true,\n      style: {\n        stroke: '#4FD1C5',\n        strokeWidth: 2\n      },\n      markerEnd: {\n        type: MarkerType.ArrowClosed\n      }\n    }));\n    console.log('Created Nodes:', newNodes);\n    console.log('Created Edges:', newEdges);\n    setNodes(newNodes);\n    setEdges(newEdges);\n  }, [architecture]);\n  if (!(architecture !== null && architecture !== void 0 && architecture.services)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '500px'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureDisplay, \"qOdGaiImnCja3mNU5uxxCrNYw9I=\");\n_c2 = AWSArchitectureDisplay;\nexport default AWSArchitectureDisplay;\nvar _c, _c2;\n$RefreshReg$(_c, \"AWSServiceNode\");\n$RefreshReg$(_c2, \"AWSArchitectureDisplay\");","map":{"version":3,"names":["React","useEffect","useState","ReactFlow","Background","Controls","MiniMap","useNodesState","useEdgesState","MarkerType","Handle","motion","getCachedServiceIcon","jsxDEV","_jsxDEV","AWSServiceNode","data","div","className","isMissing","initial","scale","opacity","animate","exit","whileHover","transition","type","stiffness","children","position","id","fileName","_jsxFileName","lineNumber","columnNumber","src","icon","alt","label","_c","nodeTypes","awsService","createNodeId","serviceName","console","error","toLowerCase","replace","AWSArchitectureDisplay","architecture","missingServices","_s","nodes","setNodes","edges","setEdges","services","newNodes","map","service","index","x","y","Math","floor","name","includes","newEdges","connections","connection","source","from","target","to","animated","style","stroke","strokeWidth","markerEnd","ArrowClosed","log","width","height","fitView","_c2","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactFlow, { \n  Background, \n  Controls, \n  MiniMap,\n  useNodesState,\n  useEdgesState,\n  MarkerType,\n  Handle\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { getCachedServiceIcon } from '../services/IconResolver';\n\nconst AWSServiceNode = ({ data }) => (\n  <motion.div\n    className={`aws-service-node ${data.isMissing ? 'missing' : ''}`}\n    initial={{ scale: 0, opacity: 0 }}\n    animate={{ scale: 1, opacity: 1 }}\n    exit={{ scale: 0, opacity: 0 }}\n    whileHover={{ scale: 1.1 }}\n    transition={{ type: \"spring\", stiffness: 300 }}\n  >\n    <Handle \n      type=\"target\" \n      position=\"top\" \n      id={`${data.id}-target`}\n      className=\"handle\"\n    />\n    <div className=\"node-content\">\n      {data.isMissing ? (\n        <div className=\"missing-service-placeholder\">\n          <span>?</span>\n        </div>\n      ) : (\n        <img src={data.icon} alt={data.label} className=\"service-icon\" />\n      )}\n      <span className=\"service-label\">{data.label}</span>\n    </div>\n    <Handle \n      type=\"source\" \n      position=\"bottom\" \n      id={`${data.id}-source`}\n      className=\"handle\"\n    />\n  </motion.div>\n);\n\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\n\nconst createNodeId = (serviceName) => {\n  if (typeof serviceName !== 'string') {\n    console.error('Invalid service name:', serviceName);\n    return 'invalid-service';\n  }\n  return serviceName.toLowerCase().replace(/\\s+/g, '-');\n};\n\nconst AWSArchitectureDisplay = ({ architecture, missingServices }) => {\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n\n  useEffect(() => {\n    if (!architecture?.services) return;\n\n    // Create nodes - keeping your exact format\n    const newNodes = architecture.services.map((service, index) => ({\n      id: service.id,\n      type: 'awsService',\n      position: { x: index * 200, y: Math.floor(index / 3) * 200 },\n      data: {\n        id: service.id,\n        label: service.name,\n        icon: service.icon,\n        isMissing: service.name.includes('missing')\n      }\n    }));\n\n    // Create edges with your working connection logic\n    const newEdges = architecture.connections.map((connection, index) => ({\n      id: `e${index}`,\n      source: connection.from.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n      target: connection.to.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n      type: 'smoothstep',\n      animated: true,\n      style: { stroke: '#4FD1C5', strokeWidth: 2 },\n      markerEnd: { type: MarkerType.ArrowClosed }\n    }));\n\n    console.log('Created Nodes:', newNodes);\n    console.log('Created Edges:', newEdges);\n\n    setNodes(newNodes);\n    setEdges(newEdges);\n  }, [architecture]);\n\n  if (!architecture?.services) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div style={{ width: '100%', height: '500px' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        fitView\n      >\n        <Background />\n        <Controls />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default AWSArchitectureDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}