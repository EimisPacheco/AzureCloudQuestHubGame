{"ast":null,"code":"const AWS_ICON_CATEGORIES = {\n  ANALYTICS: 'Arch_Analytics',\n  APP_INTEGRATION: 'Arch_App-Integration',\n  ARTIFICIAL_INTELLIGENCE: 'Arch_Artificial-Intelligence',\n  BLOCKCHAIN: 'Arch_Blockchain',\n  BUSINESS_APPLICATIONS: 'Arch_Business-Applications',\n  COMPUTE: 'Arch_Compute',\n  CONTAINERS: 'Arch_Containers',\n  DATABASE: 'Arch_Database',\n  DEVELOPER_TOOLS: 'Arch_Developer-Tools',\n  MANAGEMENT: 'Arch_Management-Governance',\n  NETWORKING: 'Arch_Networking-Content-Delivery',\n  SECURITY: 'Arch_Security-Identity-Compliance',\n  STORAGE: 'Arch_Storage'\n};\nconst SERVICE_MAPPINGS = {\n  \"Amazon Route 53\": \"Arch_Networking-Content-Delivery/16/Arch_Amazon-Route-53_16.svg\",\n  \"Amazon S3\": \"Arch_Storage/16/Arch_Amazon-Simple-Storage-Service_16.svg\",\n  \"Amazon CloudFront\": \"Arch_Networking-Content-Delivery/16/Arch_Amazon-CloudFront_16.svg\",\n  \"AWS Certificate Manager\": \"Arch_Security-Identity-Compliance/16/Arch_AWS-Certificate-Manager_16.svg\",\n  \"Amazon RDS\": \"Arch_Database/16/Arch_Amazon-RDS_16.svg\",\n  \"Amazon EC2\": \"Arch_Compute/16/Arch_Amazon-EC2_16.svg\",\n  \"Amazon DynamoDB\": \"Arch_Database/16/Arch_Amazon-DynamoDB_16.svg\",\n  \"AWS Lambda\": \"Arch_Compute/16/Arch_AWS-Lambda_16.svg\",\n  \"Amazon VPC\": \"Arch_Networking-Content-Delivery/16/Arch_Amazon-Virtual-Private-Cloud_16.svg\",\n  \"Amazon ECS\": \"Arch_Containers/16/Arch_Amazon-Elastic-Container-Service_16.svg\",\n  \"Amazon ElastiCache\": \"Arch_Database/16/Arch_Amazon-ElastiCache_16.svg\",\n  \"Amazon CloudWatch\": \"Arch_Management-Governance/16/Arch_Amazon-CloudWatch_16.svg\",\n  \"AWS Elastic Beanstalk\": \"Arch_Compute/16/Arch_AWS-Elastic-Beanstalk_16.svg\"\n};\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\n\n// Cache for resolved icons\nconst iconCache = new Map();\nconst getServiceIcon = serviceName => {\n  if (!serviceName) {\n    console.error('❌ No service name provided to getServiceIcon');\n    return null;\n  }\n\n  // Find the mapping for this service\n  const iconPath = SERVICE_MAPPINGS[serviceName];\n  if (!iconPath) {\n    console.error(`❌ No icon mapping found for service: ${serviceName}`);\n    return null;\n  }\n\n  // Construct the full URL\n  const fullUrl = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${iconPath}`;\n  console.log(`🔗 Constructed icon URL for ${serviceName}:`, fullUrl);\n  return fullUrl;\n};\nconst getCachedServiceIcon = serviceName => {\n  if (iconCache.has(serviceName)) {\n    return iconCache.get(serviceName);\n  }\n  const iconUrl = getServiceIcon(serviceName);\n  if (iconUrl) {\n    iconCache.set(serviceName, iconUrl);\n  }\n  return iconUrl;\n};\n\n// Single export statement for all needed functions and constants\nexport { getCachedServiceIcon, AWS_ICON_CATEGORIES, SERVICE_MAPPINGS };","map":{"version":3,"names":["AWS_ICON_CATEGORIES","ANALYTICS","APP_INTEGRATION","ARTIFICIAL_INTELLIGENCE","BLOCKCHAIN","BUSINESS_APPLICATIONS","COMPUTE","CONTAINERS","DATABASE","DEVELOPER_TOOLS","MANAGEMENT","NETWORKING","SECURITY","STORAGE","SERVICE_MAPPINGS","S3_BUCKET_URL","ICONS_BASE_PATH","iconCache","Map","getServiceIcon","serviceName","console","error","iconPath","fullUrl","log","getCachedServiceIcon","has","get","iconUrl","set"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/services/IconResolver.js"],"sourcesContent":["const AWS_ICON_CATEGORIES = {\n  ANALYTICS: 'Arch_Analytics',\n  APP_INTEGRATION: 'Arch_App-Integration',\n  ARTIFICIAL_INTELLIGENCE: 'Arch_Artificial-Intelligence',\n  BLOCKCHAIN: 'Arch_Blockchain',\n  BUSINESS_APPLICATIONS: 'Arch_Business-Applications',\n  COMPUTE: 'Arch_Compute',\n  CONTAINERS: 'Arch_Containers',\n  DATABASE: 'Arch_Database',\n  DEVELOPER_TOOLS: 'Arch_Developer-Tools',\n  MANAGEMENT: 'Arch_Management-Governance',\n  NETWORKING: 'Arch_Networking-Content-Delivery',\n  SECURITY: 'Arch_Security-Identity-Compliance',\n  STORAGE: 'Arch_Storage'\n};\n\nconst SERVICE_MAPPINGS = {\n  \"Amazon Route 53\": \"Arch_Networking-Content-Delivery/16/Arch_Amazon-Route-53_16.svg\",\n  \"Amazon S3\": \"Arch_Storage/16/Arch_Amazon-Simple-Storage-Service_16.svg\",\n  \"Amazon CloudFront\": \"Arch_Networking-Content-Delivery/16/Arch_Amazon-CloudFront_16.svg\",\n  \"AWS Certificate Manager\": \"Arch_Security-Identity-Compliance/16/Arch_AWS-Certificate-Manager_16.svg\",\n  \"Amazon RDS\": \"Arch_Database/16/Arch_Amazon-RDS_16.svg\",\n  \"Amazon EC2\": \"Arch_Compute/16/Arch_Amazon-EC2_16.svg\",\n  \"Amazon DynamoDB\": \"Arch_Database/16/Arch_Amazon-DynamoDB_16.svg\",\n  \"AWS Lambda\": \"Arch_Compute/16/Arch_AWS-Lambda_16.svg\",\n  \"Amazon VPC\": \"Arch_Networking-Content-Delivery/16/Arch_Amazon-Virtual-Private-Cloud_16.svg\",\n  \"Amazon ECS\": \"Arch_Containers/16/Arch_Amazon-Elastic-Container-Service_16.svg\",\n  \"Amazon ElastiCache\": \"Arch_Database/16/Arch_Amazon-ElastiCache_16.svg\",\n  \"Amazon CloudWatch\": \"Arch_Management-Governance/16/Arch_Amazon-CloudWatch_16.svg\",\n  \"AWS Elastic Beanstalk\": \"Arch_Compute/16/Arch_AWS-Elastic-Beanstalk_16.svg\"\n};\n\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\n\n// Cache for resolved icons\nconst iconCache = new Map();\n\nconst getServiceIcon = (serviceName) => {\n  if (!serviceName) {\n    console.error('❌ No service name provided to getServiceIcon');\n    return null;\n  }\n\n  // Find the mapping for this service\n  const iconPath = SERVICE_MAPPINGS[serviceName];\n  if (!iconPath) {\n    console.error(`❌ No icon mapping found for service: ${serviceName}`);\n    return null;\n  }\n\n  // Construct the full URL\n  const fullUrl = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${iconPath}`;\n  console.log(`🔗 Constructed icon URL for ${serviceName}:`, fullUrl);\n\n  return fullUrl;\n};\n\nconst getCachedServiceIcon = (serviceName) => {\n  if (iconCache.has(serviceName)) {\n    return iconCache.get(serviceName);\n  }\n\n  const iconUrl = getServiceIcon(serviceName);\n  if (iconUrl) {\n    iconCache.set(serviceName, iconUrl);\n  }\n\n  return iconUrl;\n};\n\n// Single export statement for all needed functions and constants\nexport {\n  getCachedServiceIcon,\n  AWS_ICON_CATEGORIES,\n  SERVICE_MAPPINGS\n}; "],"mappings":"AAAA,MAAMA,mBAAmB,GAAG;EAC1BC,SAAS,EAAE,gBAAgB;EAC3BC,eAAe,EAAE,sBAAsB;EACvCC,uBAAuB,EAAE,8BAA8B;EACvDC,UAAU,EAAE,iBAAiB;EAC7BC,qBAAqB,EAAE,4BAA4B;EACnDC,OAAO,EAAE,cAAc;EACvBC,UAAU,EAAE,iBAAiB;EAC7BC,QAAQ,EAAE,eAAe;EACzBC,eAAe,EAAE,sBAAsB;EACvCC,UAAU,EAAE,4BAA4B;EACxCC,UAAU,EAAE,kCAAkC;EAC9CC,QAAQ,EAAE,mCAAmC;EAC7CC,OAAO,EAAE;AACX,CAAC;AAED,MAAMC,gBAAgB,GAAG;EACvB,iBAAiB,EAAE,iEAAiE;EACpF,WAAW,EAAE,2DAA2D;EACxE,mBAAmB,EAAE,mEAAmE;EACxF,yBAAyB,EAAE,0EAA0E;EACrG,YAAY,EAAE,yCAAyC;EACvD,YAAY,EAAE,wCAAwC;EACtD,iBAAiB,EAAE,8CAA8C;EACjE,YAAY,EAAE,wCAAwC;EACtD,YAAY,EAAE,8EAA8E;EAC5F,YAAY,EAAE,iEAAiE;EAC/E,oBAAoB,EAAE,iDAAiD;EACvE,mBAAmB,EAAE,6DAA6D;EAClF,uBAAuB,EAAE;AAC3B,CAAC;AAED,MAAMC,aAAa,GAAG,yDAAyD;AAC/E,MAAMC,eAAe,GAAG,uDAAuD;;AAE/E;AACA,MAAMC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;AAE3B,MAAMC,cAAc,GAAIC,WAAW,IAAK;EACtC,IAAI,CAACA,WAAW,EAAE;IAChBC,OAAO,CAACC,KAAK,CAAC,8CAA8C,CAAC;IAC7D,OAAO,IAAI;EACb;;EAEA;EACA,MAAMC,QAAQ,GAAGT,gBAAgB,CAACM,WAAW,CAAC;EAC9C,IAAI,CAACG,QAAQ,EAAE;IACbF,OAAO,CAACC,KAAK,CAAC,wCAAwCF,WAAW,EAAE,CAAC;IACpE,OAAO,IAAI;EACb;;EAEA;EACA,MAAMI,OAAO,GAAG,GAAGT,aAAa,GAAGC,eAAe,IAAIO,QAAQ,EAAE;EAChEF,OAAO,CAACI,GAAG,CAAC,+BAA+BL,WAAW,GAAG,EAAEI,OAAO,CAAC;EAEnE,OAAOA,OAAO;AAChB,CAAC;AAED,MAAME,oBAAoB,GAAIN,WAAW,IAAK;EAC5C,IAAIH,SAAS,CAACU,GAAG,CAACP,WAAW,CAAC,EAAE;IAC9B,OAAOH,SAAS,CAACW,GAAG,CAACR,WAAW,CAAC;EACnC;EAEA,MAAMS,OAAO,GAAGV,cAAc,CAACC,WAAW,CAAC;EAC3C,IAAIS,OAAO,EAAE;IACXZ,SAAS,CAACa,GAAG,CAACV,WAAW,EAAES,OAAO,CAAC;EACrC;EAEA,OAAOA,OAAO;AAChB,CAAC;;AAED;AACA,SACEH,oBAAoB,EACpB1B,mBAAmB,EACnBc,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}