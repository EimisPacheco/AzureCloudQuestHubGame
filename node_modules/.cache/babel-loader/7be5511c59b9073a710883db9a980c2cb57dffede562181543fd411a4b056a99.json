{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/ArchitectureVisualizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useMemo } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, useNodesState, useEdgesState, Handle, MarkerType, Panel } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// Define node component outside\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSServiceNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(motion.div, {\n  className: `aws-service-node ${data.missing ? 'missing' : ''}`,\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  animate: {\n    scale: 1,\n    opacity: 1\n  },\n  exit: {\n    scale: 0,\n    opacity: 0\n  },\n  whileHover: {\n    scale: 1.1\n  },\n  transition: {\n    type: \"spring\",\n    stiffness: 300\n  },\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\",\n    className: \"handle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.icon,\n      alt: data.label,\n      className: \"service-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"service-label\",\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), data.missing && /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"missing-indicator\",\n      animate: {\n        scale: [1, 1.2, 1]\n      },\n      transition: {\n        repeat: Infinity,\n        duration: 2\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\",\n    className: \"handle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node-tooltip\",\n    children: data.description || `AWS ${data.label}`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n\n// Memoize nodeTypes outside component\n_c = AWSServiceNode;\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\nconst ArchitectureVisualizer = ({\n  architecture,\n  missingServices = [],\n  onNodeClick\n}) => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const convertArchitectureToNodes = useCallback(() => {\n    if (!(architecture !== null && architecture !== void 0 && architecture.services)) return;\n    const radius = 200;\n    const totalNodes = architecture.services.length;\n    const newNodes = architecture.services.map((service, index) => {\n      const angle = index / totalNodes * 2 * Math.PI;\n      const x = radius * Math.cos(angle);\n      const y = radius * Math.sin(angle);\n      return {\n        id: service.id,\n        type: 'awsService',\n        position: {\n          x: x + 300,\n          y: y + 200\n        },\n        data: {\n          label: service.name,\n          icon: service.icon,\n          missing: missingServices.includes(service.id)\n        }\n      };\n    });\n    const newEdges = (architecture.connections || []).map(conn => ({\n      id: `${conn.from}-${conn.to}`,\n      source: conn.from,\n      target: conn.to,\n      type: 'smoothstep',\n      animated: true,\n      style: {\n        stroke: '#4FD1C5',\n        strokeWidth: 2\n      }\n    }));\n    setNodes(newNodes);\n    setEdges(newEdges);\n  }, [architecture, missingServices, setNodes, setEdges]);\n  useEffect(() => {\n    convertArchitectureToNodes();\n  }, [architecture, convertArchitectureToNodes]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px'\n    },\n    className: \"architecture-visualizer\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      nodeTypes: nodeTypes,\n      onNodeClick: (_, node) => onNodeClick(node.id),\n      fitView: true,\n      minZoom: 0.5,\n      maxZoom: 1.5,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#4FD1C5\",\n        gap: 16,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: node => node.data.missing ? '#FF5656' : '#4FD1C5',\n        maskColor: \"rgba(13, 25, 35, 0.7)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(ArchitectureVisualizer, \"C8fKIW38D/dLX1wgnyhgyflo8NU=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = ArchitectureVisualizer;\nexport default ArchitectureVisualizer;\nvar _c, _c2;\n$RefreshReg$(_c, \"AWSServiceNode\");\n$RefreshReg$(_c2, \"ArchitectureVisualizer\");","map":{"version":3,"names":["React","useCallback","useEffect","useMemo","ReactFlow","Background","Controls","MiniMap","useNodesState","useEdgesState","Handle","MarkerType","Panel","motion","AnimatePresence","jsxDEV","_jsxDEV","AWSServiceNode","data","div","className","missing","initial","scale","opacity","animate","exit","whileHover","transition","type","stiffness","children","position","fileName","_jsxFileName","lineNumber","columnNumber","src","icon","alt","label","repeat","Infinity","duration","description","_c","nodeTypes","awsService","ArchitectureVisualizer","architecture","missingServices","onNodeClick","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","convertArchitectureToNodes","services","radius","totalNodes","length","newNodes","map","service","index","angle","Math","PI","x","cos","y","sin","id","name","includes","newEdges","connections","conn","from","to","source","target","animated","style","stroke","strokeWidth","height","_","node","fitView","minZoom","maxZoom","color","gap","size","nodeColor","maskColor","_c2","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/ArchitectureVisualizer.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useMemo } from 'react';\nimport ReactFlow, { \n  Background, \n  Controls, \n  MiniMap,\n  useNodesState,\n  useEdgesState,\n  Handle,\n  MarkerType,\n  Panel\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion, AnimatePresence } from 'framer-motion';\n\n// Define node component outside\nconst AWSServiceNode = ({ data }) => (\n  <motion.div\n    className={`aws-service-node ${data.missing ? 'missing' : ''}`}\n    initial={{ scale: 0, opacity: 0 }}\n    animate={{ scale: 1, opacity: 1 }}\n    exit={{ scale: 0, opacity: 0 }}\n    whileHover={{ scale: 1.1 }}\n    transition={{ type: \"spring\", stiffness: 300 }}\n  >\n    <Handle type=\"target\" position=\"top\" className=\"handle\" />\n    <div className=\"node-content\">\n      <img src={data.icon} alt={data.label} className=\"service-icon\" />\n      <span className=\"service-label\">{data.label}</span>\n      {data.missing && (\n        <motion.div \n          className=\"missing-indicator\"\n          animate={{ scale: [1, 1.2, 1] }}\n          transition={{ repeat: Infinity, duration: 2 }}\n        />\n      )}\n    </div>\n    <Handle type=\"source\" position=\"bottom\" className=\"handle\" />\n    <div className=\"node-tooltip\">\n      {data.description || `AWS ${data.label}`}\n    </div>\n  </motion.div>\n);\n\n// Memoize nodeTypes outside component\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\n\nconst ArchitectureVisualizer = ({ architecture, missingServices = [], onNodeClick }) => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  const convertArchitectureToNodes = useCallback(() => {\n    if (!architecture?.services) return;\n\n    const radius = 200;\n    const totalNodes = architecture.services.length;\n    \n    const newNodes = architecture.services.map((service, index) => {\n      const angle = (index / totalNodes) * 2 * Math.PI;\n      const x = radius * Math.cos(angle);\n      const y = radius * Math.sin(angle);\n\n      return {\n        id: service.id,\n        type: 'awsService',\n        position: { x: x + 300, y: y + 200 },\n        data: {\n          label: service.name,\n          icon: service.icon,\n          missing: missingServices.includes(service.id)\n        }\n      };\n    });\n\n    const newEdges = (architecture.connections || []).map((conn) => ({\n      id: `${conn.from}-${conn.to}`,\n      source: conn.from,\n      target: conn.to,\n      type: 'smoothstep',\n      animated: true,\n      style: { stroke: '#4FD1C5', strokeWidth: 2 }\n    }));\n\n    setNodes(newNodes);\n    setEdges(newEdges);\n  }, [architecture, missingServices, setNodes, setEdges]);\n\n  useEffect(() => {\n    convertArchitectureToNodes();\n  }, [architecture, convertArchitectureToNodes]);\n\n  return (\n    <div style={{ height: '500px' }} className=\"architecture-visualizer\">\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        nodeTypes={nodeTypes}\n        onNodeClick={(_, node) => onNodeClick(node.id)}\n        fitView\n        minZoom={0.5}\n        maxZoom={1.5}\n      >\n        <Background color=\"#4FD1C5\" gap={16} size={1} />\n        <Controls />\n        <MiniMap \n          nodeColor={(node) => node.data.missing ? '#FF5656' : '#4FD1C5'}\n          maskColor=\"rgba(13, 25, 35, 0.7)\"\n        />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default ArchitectureVisualizer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}