{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/GamePresenter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { motion } from \"framer-motion\";\nimport * as AWSService from \"../services/AWSArchitectureAI\";\nimport { difficultySystem } from '../services/DifficultySystem';\nimport { soundManager } from '../services/SoundManager';\nimport { awsGameService } from '../services/AWSGameService';\nimport ThreeDArchitecture from './ThreeDArchitecture';\nimport DraggableService from './DraggableService';\nimport ServiceTooltip from './ServiceTooltip';\nimport TutorialOverlay from './TutorialOverlay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GamePresenter = () => {\n  _s();\n  const [currentArchitecture, setCurrentArchitecture] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const fetchNextArchitecture = async () => {\n    setIsLoading(true);\n    try {\n      const difficulty = difficultySystem.getCurrentDifficulty();\n      const data = await AWSService.generateArchitecture(difficulty);\n      setCurrentArchitecture(data.architecture);\n      setCurrentQuestion(data.question);\n      setOptions(data.options);\n    } catch (error) {\n      console.error('Error fetching architecture:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchNextArchitecture();\n  }, []);\n  const handleServiceSelection = async selectedService => {\n    if (isLoading) return;\n    soundManager.play('select');\n    try {\n      const result = await AWSService.validateAnswer(currentArchitecture, selectedService, currentQuestion.position);\n      if (result.correct) {\n        soundManager.play('correct');\n        const newScore = score + 1;\n        setScore(newScore);\n        difficultySystem.updateProgress(true);\n\n        // Save score to AWS\n        try {\n          await awsGameService.updateLeaderboard(newScore, difficultySystem.getCurrentDifficulty());\n        } catch (error) {\n          console.error('Error saving score:', error);\n        }\n      } else {\n        soundManager.play('incorrect');\n      }\n      setTimeout(() => {\n        fetchNextArchitecture();\n      }, 750);\n    } catch (error) {\n      console.error('Error validating answer:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(motion.div, {\n      className: \"game-presenter\",\n      initial: {\n        opacity: 0\n      },\n      animate: {\n        opacity: 1\n      },\n      transition: {\n        duration: 0.5\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"AWS Architecture Challenge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score-display\",\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-display\",\n          children: [\"Level: \", difficultySystem.getCurrentDifficulty()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ThreeDArchitecture, {\n        architecture: currentArchitecture,\n        onServiceClick: handleServiceSelection\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), !isLoading && options.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"options-container\",\n        children: options.map(option => /*#__PURE__*/_jsxDEV(DraggableService, {\n          service: option,\n          onDrop: handleServiceSelection\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePresenter, \"rV04CfEzogCP7mVn3OawyHE+NTI=\");\n_c = GamePresenter;\nexport default GamePresenter;\nvar _c;\n$RefreshReg$(_c, \"GamePresenter\");","map":{"version":3,"names":["React","useState","useEffect","DndProvider","HTML5Backend","motion","AWSService","difficultySystem","soundManager","awsGameService","ThreeDArchitecture","DraggableService","ServiceTooltip","TutorialOverlay","jsxDEV","_jsxDEV","GamePresenter","_s","currentArchitecture","setCurrentArchitecture","currentQuestion","setCurrentQuestion","options","setOptions","score","setScore","isLoading","setIsLoading","fetchNextArchitecture","difficulty","getCurrentDifficulty","data","generateArchitecture","architecture","question","error","console","handleServiceSelection","selectedService","play","result","validateAnswer","position","correct","newScore","updateProgress","updateLeaderboard","setTimeout","backend","children","div","className","initial","opacity","animate","transition","duration","fileName","_jsxFileName","lineNumber","columnNumber","onServiceClick","length","map","option","service","onDrop","id","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/components/GamePresenter.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { motion } from \"framer-motion\";\nimport * as AWSService from \"../services/AWSArchitectureAI\";\nimport { difficultySystem } from '../services/DifficultySystem';\nimport { soundManager } from '../services/SoundManager';\nimport { awsGameService } from '../services/AWSGameService';\nimport ThreeDArchitecture from './ThreeDArchitecture';\nimport DraggableService from './DraggableService';\nimport ServiceTooltip from './ServiceTooltip';\nimport TutorialOverlay from './TutorialOverlay';\n\nconst GamePresenter = () => {\n  const [currentArchitecture, setCurrentArchitecture] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [options, setOptions] = useState([]);\n  const [score, setScore] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const fetchNextArchitecture = async () => {\n    setIsLoading(true);\n    try {\n      const difficulty = difficultySystem.getCurrentDifficulty();\n      const data = await AWSService.generateArchitecture(difficulty);\n      setCurrentArchitecture(data.architecture);\n      setCurrentQuestion(data.question);\n      setOptions(data.options);\n    } catch (error) {\n      console.error('Error fetching architecture:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchNextArchitecture();\n  }, []);\n\n  const handleServiceSelection = async (selectedService) => {\n    if (isLoading) return;\n    \n    soundManager.play('select');\n    \n    try {\n      const result = await AWSService.validateAnswer(\n        currentArchitecture,\n        selectedService,\n        currentQuestion.position\n      );\n      \n      if (result.correct) {\n        soundManager.play('correct');\n        const newScore = score + 1;\n        setScore(newScore);\n        difficultySystem.updateProgress(true);\n        \n        // Save score to AWS\n        try {\n          await awsGameService.updateLeaderboard(\n            newScore, \n            difficultySystem.getCurrentDifficulty()\n          );\n        } catch (error) {\n          console.error('Error saving score:', error);\n        }\n      } else {\n        soundManager.play('incorrect');\n      }\n\n      setTimeout(() => {\n        fetchNextArchitecture();\n      }, 750);\n    } catch (error) {\n      console.error('Error validating answer:', error);\n    }\n  };\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <motion.div \n        className=\"game-presenter\"\n        initial={{ opacity: 0 }}\n        animate={{ opacity: 1 }}\n        transition={{ duration: 0.5 }}\n      >\n        <div className=\"game-header\">\n          <h1>AWS Architecture Challenge</h1>\n          <div className=\"score-display\">Score: {score}</div>\n          <div className=\"difficulty-display\">\n            Level: {difficultySystem.getCurrentDifficulty()}\n          </div>\n        </div>\n\n        <ThreeDArchitecture \n          architecture={currentArchitecture}\n          onServiceClick={handleServiceSelection}\n        />\n\n        {!isLoading && options.length > 0 && (\n          <div className=\"options-container\">\n            {options.map((option) => (\n              <DraggableService\n                key={option.id}\n                service={option}\n                onDrop={handleServiceSelection}\n              />\n            ))}\n          </div>\n        )}\n      </motion.div>\n    </DndProvider>\n  );\n};\n\nexport default GamePresenter;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}