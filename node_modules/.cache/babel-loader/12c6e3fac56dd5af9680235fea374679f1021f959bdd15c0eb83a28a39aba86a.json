{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, useNodesState, useEdgesState, MarkerType, Handle, applyNodeChanges, applyEdgeChanges } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { getCachedServiceIcon } from '../services/IconResolver';\n\n// Move AWSServiceNode outside and memoize it\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSServiceNode = /*#__PURE__*/React.memo(_c = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(motion.div, {\n  className: `aws-service-node ${data.isMissing ? 'missing' : ''}`,\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  animate: {\n    scale: 1,\n    opacity: 1\n  },\n  exit: {\n    scale: 0,\n    opacity: 0\n  },\n  whileHover: {\n    scale: 1.1\n  },\n  transition: {\n    type: \"spring\",\n    stiffness: 300\n  },\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\",\n    id: `${data.id}-target`,\n    className: \"handle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node-content\",\n    children: [data.isMissing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"missing-service-placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.icon,\n      alt: data.label,\n      className: \"service-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"service-label\",\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\",\n    id: `${data.id}-source`,\n    className: \"handle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this));\n\n// Move nodeTypes outside component\n_c2 = AWSServiceNode;\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\nconst createNodeId = serviceName => {\n  if (typeof serviceName !== 'string') {\n    console.error('Invalid service name:', serviceName);\n    return 'invalid-service';\n  }\n  return serviceName.toLowerCase().replace(/\\s+/g, '-');\n};\nconst AWSArchitectureDisplay = ({\n  architecture,\n  currentQuestion\n}) => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  const onNodesChange = useCallback(changes => setNodes(nds => applyNodeChanges(changes, nds)), []);\n  const onEdgesChange = useCallback(changes => setEdges(eds => applyEdgeChanges(changes, eds)), []);\n  useEffect(() => {\n    var _architecture$connect, _architecture$connect2;\n    if (!architecture) return;\n\n    // Create graph structure\n    const graph = {\n      nodes: new Map(),\n      children: new Map(),\n      parents: new Map()\n    };\n\n    // Initialize graph\n    architecture.services.forEach(service => {\n      const id = service.id || service.name.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n      graph.nodes.set(id, service);\n      graph.children.set(id, new Set());\n      graph.parents.set(id, new Set());\n    });\n\n    // Build relationships\n    (_architecture$connect = architecture.connections) === null || _architecture$connect === void 0 ? void 0 : _architecture$connect.forEach(conn => {\n      const fromId = typeof conn.from === 'string' ? conn.from.toLowerCase().replace(/[^a-z0-9]+/g, '-') : conn.from.id;\n      const toId = typeof conn.to === 'string' ? conn.to.toLowerCase().replace(/[^a-z0-9]+/g, '-') : conn.to.id;\n      graph.children.get(fromId).add(toId);\n      graph.parents.get(toId).add(fromId);\n    });\n\n    // Find root nodes (no parents)\n    const rootNodes = Array.from(graph.nodes.keys()).filter(id => graph.parents.get(id).size === 0);\n\n    // Layout constants\n    const VERTICAL_GAP = 150;\n    const HORIZONTAL_GAP = 300;\n    const newNodes = [];\n    const newEdges = [];\n\n    // Calculate levels (distance from root)\n    const levels = new Map();\n    const calculateLevels = (nodeId, level = 0) => {\n      if (!levels.has(nodeId) || levels.get(nodeId) < level) {\n        levels.set(nodeId, level);\n        graph.children.get(nodeId).forEach(childId => {\n          calculateLevels(childId, level + 1);\n        });\n      }\n    };\n    rootNodes.forEach(rootId => calculateLevels(rootId));\n\n    // Group nodes by level\n    const nodesPerLevel = new Map();\n    levels.forEach((level, nodeId) => {\n      if (!nodesPerLevel.has(level)) {\n        nodesPerLevel.set(level, []);\n      }\n      nodesPerLevel.get(level).push(nodeId);\n    });\n\n    // Position nodes\n    nodesPerLevel.forEach((levelNodes, level) => {\n      const levelHeight = levelNodes.length * VERTICAL_GAP;\n      const startY = -(levelHeight / 2) + VERTICAL_GAP / 2;\n      levelNodes.forEach((nodeId, index) => {\n        const service = graph.nodes.get(nodeId);\n        const x = level * HORIZONTAL_GAP;\n        const y = startY + index * VERTICAL_GAP;\n        newNodes.push({\n          id: nodeId,\n          type: 'awsService',\n          position: {\n            x,\n            y\n          },\n          data: {\n            label: service.name,\n            icon: service.icon,\n            isMissing: service.name.toLowerCase().includes('missing')\n          },\n          style: {\n            width: 120,\n            height: 80\n          },\n          draggable: true // Enable node dragging\n        });\n      });\n    });\n\n    // Create edges with improved visibility\n    (_architecture$connect2 = architecture.connections) === null || _architecture$connect2 === void 0 ? void 0 : _architecture$connect2.forEach(conn => {\n      const fromId = typeof conn.from === 'string' ? conn.from.toLowerCase().replace(/[^a-z0-9]+/g, '-') : conn.from.id;\n      const toId = typeof conn.to === 'string' ? conn.to.toLowerCase().replace(/[^a-z0-9]+/g, '-') : conn.to.id;\n      newEdges.push({\n        id: `${fromId}-${toId}`,\n        source: fromId,\n        target: toId,\n        type: 'step',\n        // Changed to step for better visibility\n        animated: true,\n        style: {\n          stroke: '#4FD1C5',\n          strokeWidth: 3,\n          // Increased width\n          opacity: 1 // Full opacity\n        },\n        markerEnd: {\n          type: MarkerType.ArrowClosed,\n          width: 20,\n          height: 20,\n          color: '#4FD1C5'\n        }\n      });\n    });\n    setNodes(newNodes);\n    setEdges(newEdges);\n  }, [architecture]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '600px',\n      width: '100%'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      nodeTypes: nodeTypes,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      fitView: true,\n      fitViewOptions: {\n        padding: 0.3,\n        minZoom: 0.5,\n        maxZoom: 1.5\n      },\n      defaultViewport: {\n        zoom: 1\n      },\n      minZoom: 0.5,\n      maxZoom: 1.5,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#4FD1C5\",\n        gap: 16,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureDisplay, \"sdeFQG5Xa46JX/bRKr7FbXGJyUA=\");\n_c3 = AWSArchitectureDisplay;\nexport default AWSArchitectureDisplay;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"AWSServiceNode$React.memo\");\n$RefreshReg$(_c2, \"AWSServiceNode\");\n$RefreshReg$(_c3, \"AWSArchitectureDisplay\");","map":{"version":3,"names":["React","useMemo","useState","useEffect","useCallback","ReactFlow","Background","Controls","MiniMap","useNodesState","useEdgesState","MarkerType","Handle","applyNodeChanges","applyEdgeChanges","motion","getCachedServiceIcon","jsxDEV","_jsxDEV","AWSServiceNode","memo","_c","data","div","className","isMissing","initial","scale","opacity","animate","exit","whileHover","transition","type","stiffness","children","position","id","fileName","_jsxFileName","lineNumber","columnNumber","src","icon","alt","label","_c2","nodeTypes","awsService","createNodeId","serviceName","console","error","toLowerCase","replace","AWSArchitectureDisplay","architecture","currentQuestion","_s","nodes","setNodes","edges","setEdges","onNodesChange","changes","nds","onEdgesChange","eds","_architecture$connect","_architecture$connect2","graph","Map","parents","services","forEach","service","name","set","Set","connections","conn","fromId","from","toId","to","get","add","rootNodes","Array","keys","filter","size","VERTICAL_GAP","HORIZONTAL_GAP","newNodes","newEdges","levels","calculateLevels","nodeId","level","has","childId","rootId","nodesPerLevel","push","levelNodes","levelHeight","length","startY","index","x","y","includes","style","width","height","draggable","source","target","animated","stroke","strokeWidth","markerEnd","ArrowClosed","color","fitView","fitViewOptions","padding","minZoom","maxZoom","defaultViewport","zoom","gap","_c3","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx"],"sourcesContent":["import React, { useMemo, useState, useEffect, useCallback } from 'react';\nimport ReactFlow, { \n  Background, \n  Controls, \n  MiniMap,\n  useNodesState,\n  useEdgesState,\n  MarkerType,\n  Handle,\n  applyNodeChanges,\n  applyEdgeChanges\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { getCachedServiceIcon } from '../services/IconResolver';\n\n// Move AWSServiceNode outside and memoize it\nconst AWSServiceNode = React.memo(({ data }) => (\n  <motion.div\n    className={`aws-service-node ${data.isMissing ? 'missing' : ''}`}\n    initial={{ scale: 0, opacity: 0 }}\n    animate={{ scale: 1, opacity: 1 }}\n    exit={{ scale: 0, opacity: 0 }}\n    whileHover={{ scale: 1.1 }}\n    transition={{ type: \"spring\", stiffness: 300 }}\n  >\n    <Handle \n      type=\"target\" \n      position=\"top\" \n      id={`${data.id}-target`}\n      className=\"handle\"\n    />\n    <div className=\"node-content\">\n      {data.isMissing ? (\n        <div className=\"missing-service-placeholder\">\n          <span>?</span>\n        </div>\n      ) : (\n        <img src={data.icon} alt={data.label} className=\"service-icon\" />\n      )}\n      <span className=\"service-label\">{data.label}</span>\n    </div>\n    <Handle \n      type=\"source\" \n      position=\"bottom\" \n      id={`${data.id}-source`}\n      className=\"handle\"\n    />\n  </motion.div>\n));\n\n// Move nodeTypes outside component\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\n\nconst createNodeId = (serviceName) => {\n  if (typeof serviceName !== 'string') {\n    console.error('Invalid service name:', serviceName);\n    return 'invalid-service';\n  }\n  return serviceName.toLowerCase().replace(/\\s+/g, '-');\n};\n\nconst AWSArchitectureDisplay = ({ architecture, currentQuestion }) => {\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n\n  const onNodesChange = useCallback(\n    (changes) => setNodes((nds) => applyNodeChanges(changes, nds)),\n    []\n  );\n\n  const onEdgesChange = useCallback(\n    (changes) => setEdges((eds) => applyEdgeChanges(changes, eds)),\n    []\n  );\n\n  useEffect(() => {\n    if (!architecture) return;\n\n    // Create graph structure\n    const graph = {\n      nodes: new Map(),\n      children: new Map(),\n      parents: new Map(),\n    };\n\n    // Initialize graph\n    architecture.services.forEach(service => {\n      const id = service.id || service.name.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n      graph.nodes.set(id, service);\n      graph.children.set(id, new Set());\n      graph.parents.set(id, new Set());\n    });\n\n    // Build relationships\n    architecture.connections?.forEach(conn => {\n      const fromId = typeof conn.from === 'string' ? \n        conn.from.toLowerCase().replace(/[^a-z0-9]+/g, '-') : conn.from.id;\n      const toId = typeof conn.to === 'string' ? \n        conn.to.toLowerCase().replace(/[^a-z0-9]+/g, '-') : conn.to.id;\n      \n      graph.children.get(fromId).add(toId);\n      graph.parents.get(toId).add(fromId);\n    });\n\n    // Find root nodes (no parents)\n    const rootNodes = Array.from(graph.nodes.keys())\n      .filter(id => graph.parents.get(id).size === 0);\n\n    // Layout constants\n    const VERTICAL_GAP = 150;\n    const HORIZONTAL_GAP = 300;\n    const newNodes = [];\n    const newEdges = [];\n\n    // Calculate levels (distance from root)\n    const levels = new Map();\n    const calculateLevels = (nodeId, level = 0) => {\n      if (!levels.has(nodeId) || levels.get(nodeId) < level) {\n        levels.set(nodeId, level);\n        graph.children.get(nodeId).forEach(childId => {\n          calculateLevels(childId, level + 1);\n        });\n      }\n    };\n    rootNodes.forEach(rootId => calculateLevels(rootId));\n\n    // Group nodes by level\n    const nodesPerLevel = new Map();\n    levels.forEach((level, nodeId) => {\n      if (!nodesPerLevel.has(level)) {\n        nodesPerLevel.set(level, []);\n      }\n      nodesPerLevel.get(level).push(nodeId);\n    });\n\n    // Position nodes\n    nodesPerLevel.forEach((levelNodes, level) => {\n      const levelHeight = levelNodes.length * VERTICAL_GAP;\n      const startY = -(levelHeight / 2) + (VERTICAL_GAP / 2);\n      \n      levelNodes.forEach((nodeId, index) => {\n        const service = graph.nodes.get(nodeId);\n        const x = level * HORIZONTAL_GAP;\n        const y = startY + (index * VERTICAL_GAP);\n\n        newNodes.push({\n          id: nodeId,\n          type: 'awsService',\n          position: { x, y },\n          data: {\n            label: service.name,\n            icon: service.icon,\n            isMissing: service.name.toLowerCase().includes('missing')\n          },\n          style: {\n            width: 120,\n            height: 80\n          },\n          draggable: true // Enable node dragging\n        });\n      });\n    });\n\n    // Create edges with improved visibility\n    architecture.connections?.forEach(conn => {\n      const fromId = typeof conn.from === 'string' ? \n        conn.from.toLowerCase().replace(/[^a-z0-9]+/g, '-') : conn.from.id;\n      const toId = typeof conn.to === 'string' ? \n        conn.to.toLowerCase().replace(/[^a-z0-9]+/g, '-') : conn.to.id;\n\n      newEdges.push({\n        id: `${fromId}-${toId}`,\n        source: fromId,\n        target: toId,\n        type: 'step', // Changed to step for better visibility\n        animated: true,\n        style: { \n          stroke: '#4FD1C5', \n          strokeWidth: 3, // Increased width\n          opacity: 1 // Full opacity\n        },\n        markerEnd: { \n          type: MarkerType.ArrowClosed,\n          width: 20,\n          height: 20,\n          color: '#4FD1C5'\n        }\n      });\n    });\n\n    setNodes(newNodes);\n    setEdges(newEdges);\n  }, [architecture]);\n\n  return (\n    <div style={{ height: '600px', width: '100%' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        nodeTypes={nodeTypes}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        fitView\n        fitViewOptions={{\n          padding: 0.3,\n          minZoom: 0.5,\n          maxZoom: 1.5\n        }}\n        defaultViewport={{ zoom: 1 }}\n        minZoom={0.5}\n        maxZoom={1.5}\n      >\n        <Background color=\"#4FD1C5\" gap={16} size={1} />\n        <Controls />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default AWSArchitectureDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}