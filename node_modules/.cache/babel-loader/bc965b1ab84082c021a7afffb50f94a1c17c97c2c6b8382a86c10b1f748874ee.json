{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nexport class FloatSerializer {\n  deserialize(bytes) {\n    if (!bytes || bytes.length < 8) {\n      throw new Error(\"Invalid byte array for deserialization\");\n    }\n    const res = bytes.readDoubleLE(0);\n    return res;\n  }\n  serialize(value) {\n    if (!Number.isFinite(value)) {\n      throw new Error(\"Value is out of range\");\n    }\n    const buffer = Buffer.alloc(8);\n    buffer.writeDoubleLE(value, 0);\n    return buffer;\n  }\n}","map":{"version":3,"names":["FloatSerializer","deserialize","bytes","length","Error","res","readDoubleLE","serialize","value","Number","isFinite","buffer","Buffer","alloc","writeDoubleLE"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /node_modules/@azure/cosmos/src/encryption/Serializers/FloatSerializer.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { Serializer } from \"./Serializer\";\n\nexport class FloatSerializer implements Serializer {\n  deserialize(bytes: Buffer): number {\n    if (!bytes || bytes.length < 8) {\n      throw new Error(\"Invalid byte array for deserialization\");\n    }\n    const res = bytes.readDoubleLE(0);\n    return res;\n  }\n\n  serialize(value: number): Buffer {\n    if (!Number.isFinite(value)) {\n      throw new Error(\"Value is out of range\");\n    }\n    const buffer = Buffer.alloc(8);\n    buffer.writeDoubleLE(value, 0);\n    return buffer;\n  }\n}\n"],"mappings":"AAAA;AACA;AAIA,OAAM,MAAOA,eAAe;EAC1BC,WAAWA,CAACC,KAAa;IACvB,IAAI,CAACA,KAAK,IAAIA,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAC9B,MAAM,IAAIC,KAAK,CAAC,wCAAwC,CAAC;IAC3D;IACA,MAAMC,GAAG,GAAGH,KAAK,CAACI,YAAY,CAAC,CAAC,CAAC;IACjC,OAAOD,GAAG;EACZ;EAEAE,SAASA,CAACC,KAAa;IACrB,IAAI,CAACC,MAAM,CAACC,QAAQ,CAACF,KAAK,CAAC,EAAE;MAC3B,MAAM,IAAIJ,KAAK,CAAC,uBAAuB,CAAC;IAC1C;IACA,MAAMO,MAAM,GAAGC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9BF,MAAM,CAACG,aAAa,CAACN,KAAK,EAAE,CAAC,CAAC;IAC9B,OAAOG,MAAM;EACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}