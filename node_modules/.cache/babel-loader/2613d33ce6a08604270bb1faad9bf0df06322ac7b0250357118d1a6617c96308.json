{"ast":null,"code":"\"use strict\";\n\nvar _objectWithoutProperties = require(\"/Users/eimis/test-server/react_projects/legendary-lines-game/node_modules/@babel/runtime/helpers/objectWithoutProperties.js\").default;\nvar _objectSpread = require(\"/Users/eimis/test-server/react_projects/legendary-lines-game/node_modules/@babel/runtime/helpers/objectSpread2.js\").default;\nvar _asyncIterator = require(\"/Users/eimis/test-server/react_projects/legendary-lines-game/node_modules/@babel/runtime/helpers/asyncIterator.js\").default;\nvar _awaitAsyncGenerator = require(\"/Users/eimis/test-server/react_projects/legendary-lines-game/node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js\").default;\nvar _wrapAsyncGenerator = require(\"/Users/eimis/test-server/react_projects/legendary-lines-game/node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js\").default;\nconst _excluded = [\"signal\"];\nvar __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value), value;\n};\nvar __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isObj = exports.toBase64 = exports.getHeader = exports.getRequiredHeader = exports.isHeadersProtocol = exports.isRunningInBrowser = exports.debug = exports.hasOwn = exports.isEmptyObj = exports.maybeCoerceBoolean = exports.maybeCoerceFloat = exports.maybeCoerceInteger = exports.coerceBoolean = exports.coerceFloat = exports.coerceInteger = exports.readEnv = exports.ensurePresent = exports.castToError = exports.sleep = exports.safeJSON = exports.isRequestOptions = exports.createResponseHeaders = exports.PagePromise = exports.AbstractPage = exports.APIClient = exports.APIPromise = exports.createForm = exports.multipartFormRequestOptions = exports.maybeMultipartFormRequestOptions = void 0;\nconst version_1 = require(\"./version.js\");\nconst streaming_1 = require(\"./streaming.js\");\nconst error_1 = require(\"./error.js\");\nconst index_1 = require(\"./_shims/index.js\");\nconst uploads_1 = require(\"./uploads.js\");\nvar uploads_2 = require(\"./uploads.js\");\nObject.defineProperty(exports, \"maybeMultipartFormRequestOptions\", {\n  enumerable: true,\n  get: function () {\n    return uploads_2.maybeMultipartFormRequestOptions;\n  }\n});\nObject.defineProperty(exports, \"multipartFormRequestOptions\", {\n  enumerable: true,\n  get: function () {\n    return uploads_2.multipartFormRequestOptions;\n  }\n});\nObject.defineProperty(exports, \"createForm\", {\n  enumerable: true,\n  get: function () {\n    return uploads_2.createForm;\n  }\n});\nasync function defaultParseResponse(props) {\n  const {\n    response\n  } = props;\n  if (props.options.stream) {\n    debug('response', response.status, response.url, response.headers, response.body);\n    // Note: there is an invariant here that isn't represented in the type system\n    // that if you set `stream: true` the response type must also be `Stream<T>`\n    if (props.options.__streamClass) {\n      return props.options.__streamClass.fromSSEResponse(response, props.controller);\n    }\n    return streaming_1.Stream.fromSSEResponse(response, props.controller);\n  }\n  // fetch refuses to read the body when the status code is 204.\n  if (response.status === 204) {\n    return null;\n  }\n  if (props.options.__binaryResponse) {\n    return response;\n  }\n  const contentType = response.headers.get('content-type');\n  const isJSON = (contentType === null || contentType === void 0 ? void 0 : contentType.includes('application/json')) || (contentType === null || contentType === void 0 ? void 0 : contentType.includes('application/vnd.api+json'));\n  if (isJSON) {\n    const json = await response.json();\n    debug('response', response.status, response.url, response.headers, json);\n    return _addRequestID(json, response);\n  }\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n  // TODO handle blob, arraybuffer, other content types, etc.\n  return text;\n}\nfunction _addRequestID(value, response) {\n  if (!value || typeof value !== 'object' || Array.isArray(value)) {\n    return value;\n  }\n  return Object.defineProperty(value, '_request_id', {\n    value: response.headers.get('x-request-id'),\n    enumerable: false\n  });\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nclass APIPromise extends Promise {\n  constructor(responsePromise) {\n    let parseResponse = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultParseResponse;\n    super(resolve => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null);\n    });\n    this.responsePromise = responsePromise;\n    this.parseResponse = parseResponse;\n  }\n  _thenUnwrap(transform) {\n    return new APIPromise(this.responsePromise, async props => _addRequestID(transform(await this.parseResponse(props), props), props.response));\n  }\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from 'openai'`:\n   * - `import 'openai/shims/node'` (if you're running on Node)\n   * - `import 'openai/shims/web'` (otherwise)\n   */\n  asResponse() {\n    return this.responsePromise.then(p => p.response);\n  }\n  /**\n   * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n   * returned via the X-Request-ID header which is useful for debugging requests and reporting\n   * issues to OpenAI.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   *\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from 'openai'`:\n   * - `import 'openai/shims/node'` (if you're running on Node)\n   * - `import 'openai/shims/web'` (otherwise)\n   */\n  async withResponse() {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return {\n      data,\n      response,\n      request_id: response.headers.get('x-request-id')\n    };\n  }\n  parse() {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse);\n    }\n    return this.parsedPromise;\n  }\n  then(onfulfilled, onrejected) {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n  catch(onrejected) {\n    return this.parse().catch(onrejected);\n  }\n  finally(onfinally) {\n    return this.parse().finally(onfinally);\n  }\n}\nexports.APIPromise = APIPromise;\nclass APIClient {\n  constructor(_ref) {\n    let {\n      baseURL,\n      maxRetries = 2,\n      timeout = 600000,\n      // 10 minutes\n      httpAgent,\n      fetch: overriddenFetch\n    } = _ref;\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n    this.fetch = overriddenFetch !== null && overriddenFetch !== void 0 ? overriddenFetch : index_1.fetch;\n  }\n  authHeaders(opts) {\n    return {};\n  }\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  defaultHeaders(opts) {\n    return _objectSpread(_objectSpread({\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent()\n    }, getPlatformHeaders()), this.authHeaders(opts));\n  }\n  /**\n   * Override this to add your own headers validation:\n   */\n  validateHeaders(headers, customHeaders) {}\n  defaultIdempotencyKey() {\n    return \"stainless-node-retry-\".concat(uuid4());\n  }\n  get(path, opts) {\n    return this.methodRequest('get', path, opts);\n  }\n  post(path, opts) {\n    return this.methodRequest('post', path, opts);\n  }\n  patch(path, opts) {\n    return this.methodRequest('patch', path, opts);\n  }\n  put(path, opts) {\n    return this.methodRequest('put', path, opts);\n  }\n  delete(path, opts) {\n    return this.methodRequest('delete', path, opts);\n  }\n  methodRequest(method, path, opts) {\n    return this.request(Promise.resolve(opts).then(async opts => {\n      const body = opts && (0, uploads_1.isBlobLike)(opts === null || opts === void 0 ? void 0 : opts.body) ? new DataView(await opts.body.arrayBuffer()) : (opts === null || opts === void 0 ? void 0 : opts.body) instanceof DataView ? opts.body : (opts === null || opts === void 0 ? void 0 : opts.body) instanceof ArrayBuffer ? new DataView(opts.body) : opts && ArrayBuffer.isView(opts === null || opts === void 0 ? void 0 : opts.body) ? new DataView(opts.body.buffer) : opts === null || opts === void 0 ? void 0 : opts.body;\n      return _objectSpread(_objectSpread({\n        method,\n        path\n      }, opts), {}, {\n        body\n      });\n    }));\n  }\n  getAPIList(path, Page, opts) {\n    return this.requestAPIList(Page, _objectSpread({\n      method: 'get',\n      path\n    }, opts));\n  }\n  calculateContentLength(body) {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    } else if (ArrayBuffer.isView(body)) {\n      return body.byteLength.toString();\n    }\n    return null;\n  }\n  buildRequest(options) {\n    var _options$timeout, _ref2, _options$httpAgent, _httpAgent$options, _httpAgent$options$ti, _options$signal;\n    let {\n      retryCount = 0\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const {\n      method,\n      path,\n      query,\n      headers = {}\n    } = options;\n    const body = ArrayBuffer.isView(options.body) || options.__binaryRequest && typeof options.body === 'string' ? options.body : (0, uploads_1.isMultipartBody)(options.body) ? options.body.body : options.body ? JSON.stringify(options.body, null, 2) : null;\n    const contentLength = this.calculateContentLength(body);\n    const url = this.buildURL(path, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    const timeout = (_options$timeout = options.timeout) !== null && _options$timeout !== void 0 ? _options$timeout : this.timeout;\n    const httpAgent = (_ref2 = (_options$httpAgent = options.httpAgent) !== null && _options$httpAgent !== void 0 ? _options$httpAgent : this.httpAgent) !== null && _ref2 !== void 0 ? _ref2 : (0, index_1.getDefaultAgent)(url);\n    const minAgentTimeout = timeout + 1000;\n    if (typeof (httpAgent === null || httpAgent === void 0 || (_httpAgent$options = httpAgent.options) === null || _httpAgent$options === void 0 ? void 0 : _httpAgent$options.timeout) === 'number' && minAgentTimeout > ((_httpAgent$options$ti = httpAgent.options.timeout) !== null && _httpAgent$options$ti !== void 0 ? _httpAgent$options$ti : 0)) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      httpAgent.options.timeout = minAgentTimeout;\n    }\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = options.idempotencyKey;\n    }\n    const reqHeaders = this.buildHeaders({\n      options,\n      headers,\n      contentLength,\n      retryCount\n    });\n    const req = _objectSpread(_objectSpread(_objectSpread({\n      method\n    }, body && {\n      body: body\n    }), {}, {\n      headers: reqHeaders\n    }, httpAgent && {\n      agent: httpAgent\n    }), {}, {\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: (_options$signal = options.signal) !== null && _options$signal !== void 0 ? _options$signal : null\n    });\n    return {\n      req,\n      url,\n      timeout\n    };\n  }\n  buildHeaders(_ref3) {\n    let {\n      options,\n      headers,\n      contentLength,\n      retryCount\n    } = _ref3;\n    const reqHeaders = {};\n    if (contentLength) {\n      reqHeaders['content-length'] = contentLength;\n    }\n    const defaultHeaders = this.defaultHeaders(options);\n    applyHeadersMut(reqHeaders, defaultHeaders);\n    applyHeadersMut(reqHeaders, headers);\n    // let builtin fetch set the Content-Type for multipart bodies\n    if ((0, uploads_1.isMultipartBody)(options.body) && index_1.kind !== 'node') {\n      delete reqHeaders['content-type'];\n    }\n    // Don't set the retry count header if it was already set or removed through default headers or by the\n    // caller. We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to\n    // account for the removal case.\n    if ((0, exports.getHeader)(defaultHeaders, 'x-stainless-retry-count') === undefined && (0, exports.getHeader)(headers, 'x-stainless-retry-count') === undefined) {\n      reqHeaders['x-stainless-retry-count'] = String(retryCount);\n    }\n    this.validateHeaders(reqHeaders, headers);\n    return reqHeaders;\n  }\n  /**\n   * Used as a callback for mutating the given `FinalRequestOptions` object.\n   */\n  async prepareOptions(options) {}\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  async prepareRequest(request, _ref4) {\n    let {\n      url,\n      options\n    } = _ref4;\n  }\n  parseHeaders(headers) {\n    return !headers ? {} : Symbol.iterator in headers ? Object.fromEntries(Array.from(headers).map(header => [...header])) : _objectSpread({}, headers);\n  }\n  makeStatusError(status, error, message, headers) {\n    return error_1.APIError.generate(status, error, message, headers);\n  }\n  request(options) {\n    let remainingRetries = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n  async makeRequest(optionsInput, retriesRemaining) {\n    var _options$maxRetries, _options$signal2;\n    const options = await optionsInput;\n    const maxRetries = (_options$maxRetries = options.maxRetries) !== null && _options$maxRetries !== void 0 ? _options$maxRetries : this.maxRetries;\n    if (retriesRemaining == null) {\n      retriesRemaining = maxRetries;\n    }\n    await this.prepareOptions(options);\n    const {\n      req,\n      url,\n      timeout\n    } = this.buildRequest(options, {\n      retryCount: maxRetries - retriesRemaining\n    });\n    await this.prepareRequest(req, {\n      url,\n      options\n    });\n    debug('request', url, options, req.headers);\n    if ((_options$signal2 = options.signal) !== null && _options$signal2 !== void 0 && _options$signal2.aborted) {\n      throw new error_1.APIUserAbortError();\n    }\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(exports.castToError);\n    if (response instanceof Error) {\n      var _options$signal3;\n      if ((_options$signal3 = options.signal) !== null && _options$signal3 !== void 0 && _options$signal3.aborted) {\n        throw new error_1.APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new error_1.APIConnectionTimeoutError();\n      }\n      throw new error_1.APIConnectionError({\n        cause: response\n      });\n    }\n    const responseHeaders = (0, exports.createResponseHeaders)(response.headers);\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        const retryMessage = \"retrying, \".concat(retriesRemaining, \" attempts remaining\");\n        debug(\"response (error; \".concat(retryMessage, \")\"), response.status, url, responseHeaders);\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n      const errText = await response.text().catch(e => (0, exports.castToError)(e).message);\n      const errJSON = (0, exports.safeJSON)(errText);\n      const errMessage = errJSON ? undefined : errText;\n      const retryMessage = retriesRemaining ? \"(error; no more retries left)\" : \"(error; not retryable)\";\n      debug(\"response (error; \".concat(retryMessage, \")\"), response.status, url, responseHeaders, errMessage);\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n    return {\n      response,\n      options,\n      controller\n    };\n  }\n  requestAPIList(Page, options) {\n    const request = this.makeRequest(options, null);\n    return new PagePromise(this, request, Page);\n  }\n  buildURL(path, query) {\n    const url = isAbsoluteURL(path) ? new URL(path) : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = _objectSpread(_objectSpread({}, defaultQuery), query);\n    }\n    if (typeof query === 'object' && query && !Array.isArray(query)) {\n      url.search = this.stringifyQuery(query);\n    }\n    return url.toString();\n  }\n  stringifyQuery(query) {\n    return Object.entries(query).filter(_ref5 => {\n      let [_, value] = _ref5;\n      return typeof value !== 'undefined';\n    }).map(_ref6 => {\n      let [key, value] = _ref6;\n      if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(value));\n      }\n      if (value === null) {\n        return \"\".concat(encodeURIComponent(key), \"=\");\n      }\n      throw new error_1.OpenAIError(\"Cannot stringify type \".concat(typeof value, \"; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.\"));\n    }).join('&');\n  }\n  async fetchWithTimeout(url, init, ms, controller) {\n    const _ref7 = init || {},\n      {\n        signal\n      } = _ref7,\n      options = _objectWithoutProperties(_ref7, _excluded);\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n    const timeout = setTimeout(() => controller.abort(), ms);\n    const fetchOptions = _objectSpread({\n      signal: controller.signal\n    }, options);\n    if (fetchOptions.method) {\n      // Custom methods like 'patch' need to be uppercased\n      // See https://github.com/nodejs/undici/issues/2294\n      fetchOptions.method = fetchOptions.method.toUpperCase();\n    }\n    return (\n      // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n      this.fetch.call(undefined, url, fetchOptions).finally(() => {\n        clearTimeout(timeout);\n      })\n    );\n  }\n  shouldRetry(response) {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n    return false;\n  }\n  async retryRequest(options, retriesRemaining, responseHeaders) {\n    let timeoutMillis;\n    // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n    const retryAfterMillisHeader = responseHeaders === null || responseHeaders === void 0 ? void 0 : responseHeaders['retry-after-ms'];\n    if (retryAfterMillisHeader) {\n      const timeoutMs = parseFloat(retryAfterMillisHeader);\n      if (!Number.isNaN(timeoutMs)) {\n        timeoutMillis = timeoutMs;\n      }\n    }\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    const retryAfterHeader = responseHeaders === null || responseHeaders === void 0 ? void 0 : responseHeaders['retry-after'];\n    if (retryAfterHeader && !timeoutMillis) {\n      const timeoutSeconds = parseFloat(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n      var _options$maxRetries2;\n      const maxRetries = (_options$maxRetries2 = options.maxRetries) !== null && _options$maxRetries2 !== void 0 ? _options$maxRetries2 : this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await (0, exports.sleep)(timeoutMillis);\n    return this.makeRequest(options, retriesRemaining - 1);\n  }\n  calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 8.0;\n    const numRetries = maxRetries - retriesRemaining;\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n    // Apply some jitter, take up to at most 25 percent of the retry time.\n    const jitter = 1 - Math.random() * 0.25;\n    return sleepSeconds * jitter * 1000;\n  }\n  getUserAgent() {\n    return \"\".concat(this.constructor.name, \"/JS \").concat(version_1.VERSION);\n  }\n}\nexports.APIClient = APIClient;\nclass AbstractPage {\n  constructor(client, response, body, options) {\n    _AbstractPage_client.set(this, void 0);\n    __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n  hasNextPage() {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n  async getNextPage() {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new error_1.OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n    }\n    const nextOptions = _objectSpread({}, this.options);\n    if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n      nextOptions.query = _objectSpread(_objectSpread({}, nextOptions.query), nextInfo.params);\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n  }\n  iterPages() {\n    var _this = this;\n    return _wrapAsyncGenerator(function* () {\n      // eslint-disable-next-line @typescript-eslint/no-this-alias\n      let page = _this;\n      yield page;\n      while (page.hasNextPage()) {\n        page = yield _awaitAsyncGenerator(page.getNextPage());\n        yield page;\n      }\n    })();\n  }\n  [(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n    var _this2 = this;\n    return _wrapAsyncGenerator(function* () {\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n      var _iteratorError;\n      try {\n        for (var _iterator = _asyncIterator(_this2.iterPages()), _step; _iteratorAbruptCompletion = !(_step = yield _awaitAsyncGenerator(_iterator.next())).done; _iteratorAbruptCompletion = false) {\n          const page = _step.value;\n          {\n            for (const item of page.getPaginatedItems()) {\n              yield item;\n            }\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            yield _awaitAsyncGenerator(_iterator.return());\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n    })();\n  }\n}\nexports.AbstractPage = AbstractPage;\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nclass PagePromise extends APIPromise {\n  constructor(client, request, Page) {\n    super(request, async props => new Page(client, props.response, await defaultParseResponse(props), props.options));\n  }\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  [Symbol.asyncIterator]() {\n    var _this3 = this;\n    return _wrapAsyncGenerator(function* () {\n      const page = yield _awaitAsyncGenerator(_this3);\n      var _iteratorAbruptCompletion2 = false;\n      var _didIteratorError2 = false;\n      var _iteratorError2;\n      try {\n        for (var _iterator2 = _asyncIterator(page), _step2; _iteratorAbruptCompletion2 = !(_step2 = yield _awaitAsyncGenerator(_iterator2.next())).done; _iteratorAbruptCompletion2 = false) {\n          const item = _step2.value;\n          {\n            yield item;\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion2 && _iterator2.return != null) {\n            yield _awaitAsyncGenerator(_iterator2.return());\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    })();\n  }\n}\nexports.PagePromise = PagePromise;\nconst createResponseHeaders = headers => {\n  return new Proxy(Object.fromEntries(\n  // @ts-ignore\n  headers.entries()), {\n    get(target, name) {\n      const key = name.toString();\n      return target[key.toLowerCase()] || target[key];\n    }\n  });\n};\nexports.createResponseHeaders = createResponseHeaders;\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true,\n  __binaryRequest: true,\n  __binaryResponse: true,\n  __streamClass: true\n};\nconst isRequestOptions = obj => {\n  return typeof obj === 'object' && obj !== null && !isEmptyObj(obj) && Object.keys(obj).every(k => hasOwn(requestOptionsKeys, k));\n};\nexports.isRequestOptions = isRequestOptions;\nconst getPlatformProperties = () => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    var _Deno$version$deno, _Deno$version;\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': version_1.VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : (_Deno$version$deno = (_Deno$version = Deno.version) === null || _Deno$version === void 0 ? void 0 : _Deno$version.deno) !== null && _Deno$version$deno !== void 0 ? _Deno$version$deno : 'unknown'\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': version_1.VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': \"other:\".concat(EdgeRuntime),\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': version_1.VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version\n    };\n  }\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': version_1.VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': \"browser:\".concat(browserInfo.browser),\n      'X-Stainless-Runtime-Version': browserInfo.version\n    };\n  }\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': version_1.VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown'\n  };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n  // NOTE: The order matters here!\n  const browserPatterns = [{\n    key: 'edge',\n    pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'ie',\n    pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'chrome',\n    pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'firefox',\n    pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/\n  }, {\n    key: 'safari',\n    pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/\n  }];\n  // Find the FIRST matching browser\n  for (const {\n    key,\n    pattern\n  } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n      return {\n        browser: key,\n        version: \"\".concat(major, \".\").concat(minor, \".\").concat(patch)\n      };\n    }\n  }\n  return null;\n}\nconst normalizeArch = arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return \"other:\".concat(arch);\n  return 'unknown';\n};\nconst normalizePlatform = platform => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n  platform = platform.toLowerCase();\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return \"Other:\".concat(platform);\n  return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n  var _platformHeaders2;\n  return (_platformHeaders2 = _platformHeaders) !== null && _platformHeaders2 !== void 0 ? _platformHeaders2 : _platformHeaders = getPlatformProperties();\n};\nconst safeJSON = text => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\nexports.safeJSON = safeJSON;\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = url => {\n  return startsWithSchemeRegexp.test(url);\n};\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nexports.sleep = sleep;\nconst validatePositiveInteger = (name, n) => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new error_1.OpenAIError(\"\".concat(name, \" must be an integer\"));\n  }\n  if (n < 0) {\n    throw new error_1.OpenAIError(\"\".concat(name, \" must be a positive integer\"));\n  }\n  return n;\n};\nconst castToError = err => {\n  if (err instanceof Error) return err;\n  if (typeof err === 'object' && err !== null) {\n    try {\n      return new Error(JSON.stringify(err));\n    } catch (_unused) {}\n  }\n  return new Error(err);\n};\nexports.castToError = castToError;\nconst ensurePresent = value => {\n  if (value == null) throw new error_1.OpenAIError(\"Expected a value to be given but received \".concat(value, \" instead.\"));\n  return value;\n};\nexports.ensurePresent = ensurePresent;\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nconst readEnv = env => {\n  if (typeof process !== 'undefined') {\n    var _process$env$env$trim, _process$env;\n    return (_process$env$env$trim = (_process$env = process.env) === null || _process$env === void 0 || (_process$env = _process$env[env]) === null || _process$env === void 0 ? void 0 : _process$env.trim()) !== null && _process$env$env$trim !== void 0 ? _process$env$env$trim : undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    var _Deno$env, _Deno$env$get;\n    return (_Deno$env = Deno.env) === null || _Deno$env === void 0 || (_Deno$env$get = _Deno$env.get) === null || _Deno$env$get === void 0 || (_Deno$env$get = _Deno$env$get.call(_Deno$env, env)) === null || _Deno$env$get === void 0 ? void 0 : _Deno$env$get.trim();\n  }\n  return undefined;\n};\nexports.readEnv = readEnv;\nconst coerceInteger = value => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n  throw new error_1.OpenAIError(\"Could not coerce \".concat(value, \" (type: \").concat(typeof value, \") into a number\"));\n};\nexports.coerceInteger = coerceInteger;\nconst coerceFloat = value => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n  throw new error_1.OpenAIError(\"Could not coerce \".concat(value, \" (type: \").concat(typeof value, \") into a number\"));\n};\nexports.coerceFloat = coerceFloat;\nconst coerceBoolean = value => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\nexports.coerceBoolean = coerceBoolean;\nconst maybeCoerceInteger = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return (0, exports.coerceInteger)(value);\n};\nexports.maybeCoerceInteger = maybeCoerceInteger;\nconst maybeCoerceFloat = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return (0, exports.coerceFloat)(value);\n};\nexports.maybeCoerceFloat = maybeCoerceFloat;\nconst maybeCoerceBoolean = value => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return (0, exports.coerceBoolean)(value);\n};\nexports.maybeCoerceBoolean = maybeCoerceBoolean;\n// https://stackoverflow.com/a/34491287\nfunction isEmptyObj(obj) {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\nexports.isEmptyObj = isEmptyObj;\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nfunction hasOwn(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\nexports.hasOwn = hasOwn;\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n  for (const k in newHeaders) {\n    if (!hasOwn(newHeaders, k)) continue;\n    const lowerKey = k.toLowerCase();\n    if (!lowerKey) continue;\n    const val = newHeaders[k];\n    if (val === null) {\n      delete targetHeaders[lowerKey];\n    } else if (val !== undefined) {\n      targetHeaders[lowerKey] = val;\n    }\n  }\n}\nfunction debug(action) {\n  var _process;\n  if (typeof process !== 'undefined' && ((_process = process) === null || _process === void 0 || (_process = _process.env) === null || _process === void 0 ? void 0 : _process['DEBUG']) === 'true') {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    console.log(\"OpenAI:DEBUG:\".concat(action), ...args);\n  }\n}\nexports.debug = debug;\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = Math.random() * 16 | 0;\n    const v = c === 'x' ? r : r & 0x3 | 0x8;\n    return v.toString(16);\n  });\n};\nconst isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\nexports.isRunningInBrowser = isRunningInBrowser;\nconst isHeadersProtocol = headers => {\n  return typeof (headers === null || headers === void 0 ? void 0 : headers.get) === 'function';\n};\nexports.isHeadersProtocol = isHeadersProtocol;\nconst getRequiredHeader = (headers, header) => {\n  const foundHeader = (0, exports.getHeader)(headers, header);\n  if (foundHeader === undefined) {\n    throw new Error(\"Could not find \".concat(header, \" header\"));\n  }\n  return foundHeader;\n};\nexports.getRequiredHeader = getRequiredHeader;\nconst getHeader = (headers, header) => {\n  const lowerCasedHeader = header.toLowerCase();\n  if ((0, exports.isHeadersProtocol)(headers)) {\n    var _header$;\n    // to deal with the case where the header looks like Stainless-Event-Id\n    const intercapsHeader = ((_header$ = header[0]) === null || _header$ === void 0 ? void 0 : _header$.toUpperCase()) + header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n    for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n      const value = headers.get(key);\n      if (value) {\n        return value;\n      }\n    }\n  }\n  for (const [key, value] of Object.entries(headers)) {\n    if (key.toLowerCase() === lowerCasedHeader) {\n      if (Array.isArray(value)) {\n        if (value.length <= 1) return value[0];\n        console.warn(\"Received \".concat(value.length, \" entries for the \").concat(header, \" header, using the first entry.\"));\n        return value[0];\n      }\n      return value;\n    }\n  }\n  return undefined;\n};\nexports.getHeader = getHeader;\n/**\n * Encodes a string to Base64 format.\n */\nconst toBase64 = str => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n  throw new error_1.OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexports.toBase64 = toBase64;\nfunction isObj(obj) {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\nexports.isObj = isObj;","map":{"version":3,"names":["version_1","require","streaming_1","error_1","index_1","uploads_1","uploads_2","Object","defineProperty","exports","enumerable","get","maybeMultipartFormRequestOptions","multipartFormRequestOptions","createForm","defaultParseResponse","props","response","options","stream","debug","status","url","headers","body","__streamClass","fromSSEResponse","controller","Stream","__binaryResponse","contentType","isJSON","includes","json","_addRequestID","text","value","Array","isArray","APIPromise","Promise","constructor","responsePromise","parseResponse","arguments","length","undefined","resolve","_thenUnwrap","transform","asResponse","then","p","withResponse","data","all","parse","request_id","parsedPromise","onfulfilled","onrejected","catch","finally","onfinally","APIClient","_ref","baseURL","maxRetries","timeout","httpAgent","fetch","overriddenFetch","validatePositiveInteger","authHeaders","opts","defaultHeaders","_objectSpread","Accept","getUserAgent","getPlatformHeaders","validateHeaders","customHeaders","defaultIdempotencyKey","concat","uuid4","path","methodRequest","post","patch","put","delete","method","request","isBlobLike","DataView","arrayBuffer","ArrayBuffer","isView","buffer","getAPIList","Page","requestAPIList","calculateContentLength","Buffer","byteLength","toString","TextEncoder","encoder","encoded","encode","buildRequest","_options$timeout","_ref2","_options$httpAgent","_httpAgent$options","_httpAgent$options$ti","_options$signal","retryCount","query","__binaryRequest","isMultipartBody","JSON","stringify","contentLength","buildURL","getDefaultAgent","minAgentTimeout","idempotencyHeader","idempotencyKey","reqHeaders","buildHeaders","req","agent","signal","_ref3","applyHeadersMut","kind","getHeader","String","prepareOptions","prepareRequest","_ref4","parseHeaders","Symbol","iterator","fromEntries","from","map","header","makeStatusError","error","message","APIError","generate","remainingRetries","makeRequest","optionsInput","retriesRemaining","_options$maxRetries","_options$signal2","aborted","APIUserAbortError","AbortController","fetchWithTimeout","castToError","Error","_options$signal3","retryRequest","name","APIConnectionTimeoutError","APIConnectionError","cause","responseHeaders","createResponseHeaders","ok","shouldRetry","retryMessage","errText","e","errJSON","safeJSON","errMessage","err","PagePromise","isAbsoluteURL","URL","endsWith","startsWith","slice","defaultQuery","isEmptyObj","search","stringifyQuery","entries","filter","_ref5","_","_ref6","key","encodeURIComponent","OpenAIError","join","init","ms","_ref7","_objectWithoutProperties","_excluded","addEventListener","abort","setTimeout","fetchOptions","toUpperCase","call","clearTimeout","shouldRetryHeader","timeoutMillis","retryAfterMillisHeader","timeoutMs","parseFloat","Number","isNaN","retryAfterHeader","timeoutSeconds","Date","now","_options$maxRetries2","calculateDefaultRetryTimeoutMillis","sleep","initialRetryDelay","maxRetryDelay","numRetries","sleepSeconds","Math","min","pow","jitter","random","VERSION","AbstractPage","client","_AbstractPage_client","set","__classPrivateFieldSet","hasNextPage","items","getPaginatedItems","nextPageInfo","getNextPage","nextInfo","nextOptions","params","searchParams","__classPrivateFieldGet","iterPages","_this","_wrapAsyncGenerator","page","_awaitAsyncGenerator","WeakMap","asyncIterator","_this2","_iteratorAbruptCompletion","_didIteratorError","_iteratorError","_iterator","_asyncIterator","_step","next","done","item","return","_this3","_iteratorAbruptCompletion2","_didIteratorError2","_iteratorError2","_iterator2","_step2","Proxy","target","toLowerCase","requestOptionsKeys","isRequestOptions","obj","keys","every","k","hasOwn","getPlatformProperties","Deno","build","_Deno$version$deno","_Deno$version","normalizePlatform","os","normalizeArch","arch","version","deno","EdgeRuntime","process","prototype","platform","browserInfo","getBrowserInfo","browser","navigator","browserPatterns","pattern","match","exec","userAgent","major","minor","_platformHeaders","_platformHeaders2","startsWithSchemeRegexp","test","n","isInteger","_unused","ensurePresent","readEnv","env","_process$env$env$trim","_process$env","trim","_Deno$env","_Deno$env$get","coerceInteger","round","parseInt","coerceFloat","coerceBoolean","Boolean","maybeCoerceInteger","maybeCoerceFloat","maybeCoerceBoolean","_k","hasOwnProperty","targetHeaders","newHeaders","lowerKey","val","action","_process","_len","args","_key","console","log","replace","c","r","v","isRunningInBrowser","window","document","isHeadersProtocol","getRequiredHeader","foundHeader","lowerCasedHeader","_header$","intercapsHeader","substring","_m","g1","g2","warn","toBase64","str","btoa","isObj"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/node_modules/openai/src/core.ts"],"sourcesContent":["import { VERSION } from './version';\nimport { Stream } from './streaming';\nimport {\n  OpenAIError,\n  APIError,\n  APIConnectionError,\n  APIConnectionTimeoutError,\n  APIUserAbortError,\n} from './error';\nimport {\n  kind as shimsKind,\n  type Readable,\n  getDefaultAgent,\n  type Agent,\n  fetch,\n  type RequestInfo,\n  type RequestInit,\n  type Response,\n  type HeadersInit,\n} from './_shims/index';\nexport { type Response };\nimport { BlobLike, isBlobLike, isMultipartBody } from './uploads';\nexport {\n  maybeMultipartFormRequestOptions,\n  multipartFormRequestOptions,\n  createForm,\n  type Uploadable,\n} from './uploads';\n\nexport type Fetch = (url: RequestInfo, init?: RequestInit) => Promise<Response>;\n\ntype PromiseOrValue<T> = T | Promise<T>;\n\ntype APIResponseProps = {\n  response: Response;\n  options: FinalRequestOptions;\n  controller: AbortController;\n};\n\nasync function defaultParseResponse<T>(props: APIResponseProps): Promise<WithRequestID<T>> {\n  const { response } = props;\n  if (props.options.stream) {\n    debug('response', response.status, response.url, response.headers, response.body);\n\n    // Note: there is an invariant here that isn't represented in the type system\n    // that if you set `stream: true` the response type must also be `Stream<T>`\n\n    if (props.options.__streamClass) {\n      return props.options.__streamClass.fromSSEResponse(response, props.controller) as any;\n    }\n\n    return Stream.fromSSEResponse(response, props.controller) as any;\n  }\n\n  // fetch refuses to read the body when the status code is 204.\n  if (response.status === 204) {\n    return null as WithRequestID<T>;\n  }\n\n  if (props.options.__binaryResponse) {\n    return response as unknown as WithRequestID<T>;\n  }\n\n  const contentType = response.headers.get('content-type');\n  const isJSON =\n    contentType?.includes('application/json') || contentType?.includes('application/vnd.api+json');\n  if (isJSON) {\n    const json = await response.json();\n\n    debug('response', response.status, response.url, response.headers, json);\n\n    return _addRequestID(json, response);\n  }\n\n  const text = await response.text();\n  debug('response', response.status, response.url, response.headers, text);\n\n  // TODO handle blob, arraybuffer, other content types, etc.\n  return text as unknown as WithRequestID<T>;\n}\n\ntype WithRequestID<T> =\n  T extends Array<any> | Response | AbstractPage<any> ? T\n  : T extends Record<string, any> ? T & { _request_id?: string | null }\n  : T;\n\nfunction _addRequestID<T>(value: T, response: Response): WithRequestID<T> {\n  if (!value || typeof value !== 'object' || Array.isArray(value)) {\n    return value as WithRequestID<T>;\n  }\n\n  return Object.defineProperty(value, '_request_id', {\n    value: response.headers.get('x-request-id'),\n    enumerable: false,\n  }) as WithRequestID<T>;\n}\n\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise<T> extends Promise<WithRequestID<T>> {\n  private parsedPromise: Promise<WithRequestID<T>> | undefined;\n\n  constructor(\n    private responsePromise: Promise<APIResponseProps>,\n    private parseResponse: (\n      props: APIResponseProps,\n    ) => PromiseOrValue<WithRequestID<T>> = defaultParseResponse,\n  ) {\n    super((resolve) => {\n      // this is maybe a bit weird but this has to be a no-op to not implicitly\n      // parse the response body; instead .then, .catch, .finally are overridden\n      // to parse the response\n      resolve(null as any);\n    });\n  }\n\n  _thenUnwrap<U>(transform: (data: T, props: APIResponseProps) => U): APIPromise<U> {\n    return new APIPromise(this.responsePromise, async (props) =>\n      _addRequestID(transform(await this.parseResponse(props), props), props.response),\n    );\n  }\n\n  /**\n   * Gets the raw `Response` instance instead of parsing the response\n   * data.\n   *\n   * If you want to parse the response body but still get the `Response`\n   * instance, you can use {@link withResponse()}.\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from 'openai'`:\n   * - `import 'openai/shims/node'` (if you're running on Node)\n   * - `import 'openai/shims/web'` (otherwise)\n   */\n  asResponse(): Promise<Response> {\n    return this.responsePromise.then((p) => p.response);\n  }\n\n  /**\n   * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n   * returned via the X-Request-ID header which is useful for debugging requests and reporting\n   * issues to OpenAI.\n   *\n   * If you just want to get the raw `Response` instance without parsing it,\n   * you can use {@link asResponse()}.\n   *\n   *\n   * ðŸ‘‹ Getting the wrong TypeScript type for `Response`?\n   * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n   * or add one of these imports before your first `import â€¦ from 'openai'`:\n   * - `import 'openai/shims/node'` (if you're running on Node)\n   * - `import 'openai/shims/web'` (otherwise)\n   */\n  async withResponse(): Promise<{ data: T; response: Response; request_id: string | null | undefined }> {\n    const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n    return { data, response, request_id: response.headers.get('x-request-id') };\n  }\n\n  private parse(): Promise<WithRequestID<T>> {\n    if (!this.parsedPromise) {\n      this.parsedPromise = this.responsePromise.then(this.parseResponse) as any as Promise<WithRequestID<T>>;\n    }\n    return this.parsedPromise;\n  }\n\n  override then<TResult1 = WithRequestID<T>, TResult2 = never>(\n    onfulfilled?: ((value: WithRequestID<T>) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n  ): Promise<TResult1 | TResult2> {\n    return this.parse().then(onfulfilled, onrejected);\n  }\n\n  override catch<TResult = never>(\n    onrejected?: ((reason: any) => TResult | PromiseLike<TResult>) | undefined | null,\n  ): Promise<WithRequestID<T> | TResult> {\n    return this.parse().catch(onrejected);\n  }\n\n  override finally(onfinally?: (() => void) | undefined | null): Promise<WithRequestID<T>> {\n    return this.parse().finally(onfinally);\n  }\n}\n\nexport abstract class APIClient {\n  baseURL: string;\n  maxRetries: number;\n  timeout: number;\n  httpAgent: Agent | undefined;\n\n  private fetch: Fetch;\n  protected idempotencyHeader?: string;\n\n  constructor({\n    baseURL,\n    maxRetries = 2,\n    timeout = 600000, // 10 minutes\n    httpAgent,\n    fetch: overriddenFetch,\n  }: {\n    baseURL: string;\n    maxRetries?: number | undefined;\n    timeout: number | undefined;\n    httpAgent: Agent | undefined;\n    fetch: Fetch | undefined;\n  }) {\n    this.baseURL = baseURL;\n    this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n    this.timeout = validatePositiveInteger('timeout', timeout);\n    this.httpAgent = httpAgent;\n\n    this.fetch = overriddenFetch ?? fetch;\n  }\n\n  protected authHeaders(opts: FinalRequestOptions): Headers {\n    return {};\n  }\n\n  /**\n   * Override this to add your own default headers, for example:\n   *\n   *  {\n   *    ...super.defaultHeaders(),\n   *    Authorization: 'Bearer 123',\n   *  }\n   */\n  protected defaultHeaders(opts: FinalRequestOptions): Headers {\n    return {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      'User-Agent': this.getUserAgent(),\n      ...getPlatformHeaders(),\n      ...this.authHeaders(opts),\n    };\n  }\n\n  protected abstract defaultQuery(): DefaultQuery | undefined;\n\n  /**\n   * Override this to add your own headers validation:\n   */\n  protected validateHeaders(headers: Headers, customHeaders: Headers) {}\n\n  protected defaultIdempotencyKey(): string {\n    return `stainless-node-retry-${uuid4()}`;\n  }\n\n  get<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('get', path, opts);\n  }\n\n  post<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('post', path, opts);\n  }\n\n  patch<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('patch', path, opts);\n  }\n\n  put<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('put', path, opts);\n  }\n\n  delete<Req, Rsp>(path: string, opts?: PromiseOrValue<RequestOptions<Req>>): APIPromise<Rsp> {\n    return this.methodRequest('delete', path, opts);\n  }\n\n  private methodRequest<Req, Rsp>(\n    method: HTTPMethod,\n    path: string,\n    opts?: PromiseOrValue<RequestOptions<Req>>,\n  ): APIPromise<Rsp> {\n    return this.request(\n      Promise.resolve(opts).then(async (opts) => {\n        const body =\n          opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n          : opts?.body instanceof DataView ? opts.body\n          : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n          : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n          : opts?.body;\n        return { method, path, ...opts, body };\n      }),\n    );\n  }\n\n  getAPIList<Item, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    path: string,\n    Page: new (...args: any[]) => PageClass,\n    opts?: RequestOptions<any>,\n  ): PagePromise<PageClass, Item> {\n    return this.requestAPIList(Page, { method: 'get', path, ...opts });\n  }\n\n  private calculateContentLength(body: unknown): string | null {\n    if (typeof body === 'string') {\n      if (typeof Buffer !== 'undefined') {\n        return Buffer.byteLength(body, 'utf8').toString();\n      }\n\n      if (typeof TextEncoder !== 'undefined') {\n        const encoder = new TextEncoder();\n        const encoded = encoder.encode(body);\n        return encoded.length.toString();\n      }\n    } else if (ArrayBuffer.isView(body)) {\n      return body.byteLength.toString();\n    }\n\n    return null;\n  }\n\n  buildRequest<Req>(\n    options: FinalRequestOptions<Req>,\n    { retryCount = 0 }: { retryCount?: number } = {},\n  ): { req: RequestInit; url: string; timeout: number } {\n    const { method, path, query, headers: headers = {} } = options;\n\n    const body =\n      ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n        options.body\n      : isMultipartBody(options.body) ? options.body.body\n      : options.body ? JSON.stringify(options.body, null, 2)\n      : null;\n    const contentLength = this.calculateContentLength(body);\n\n    const url = this.buildURL(path!, query);\n    if ('timeout' in options) validatePositiveInteger('timeout', options.timeout);\n    const timeout = options.timeout ?? this.timeout;\n    const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n    const minAgentTimeout = timeout + 1000;\n    if (\n      typeof (httpAgent as any)?.options?.timeout === 'number' &&\n      minAgentTimeout > ((httpAgent as any).options.timeout ?? 0)\n    ) {\n      // Allow any given request to bump our agent active socket timeout.\n      // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n      // and without mutating agent we would need to create more of them.\n      // This tradeoff optimizes for performance.\n      (httpAgent as any).options.timeout = minAgentTimeout;\n    }\n\n    if (this.idempotencyHeader && method !== 'get') {\n      if (!options.idempotencyKey) options.idempotencyKey = this.defaultIdempotencyKey();\n      headers[this.idempotencyHeader] = options.idempotencyKey;\n    }\n\n    const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n\n    const req: RequestInit = {\n      method,\n      ...(body && { body: body as any }),\n      headers: reqHeaders,\n      ...(httpAgent && { agent: httpAgent }),\n      // @ts-ignore node-fetch uses a custom AbortSignal type that is\n      // not compatible with standard web types\n      signal: options.signal ?? null,\n    };\n\n    return { req, url, timeout };\n  }\n\n  private buildHeaders({\n    options,\n    headers,\n    contentLength,\n    retryCount,\n  }: {\n    options: FinalRequestOptions;\n    headers: Record<string, string | null | undefined>;\n    contentLength: string | null | undefined;\n    retryCount: number;\n  }): Record<string, string> {\n    const reqHeaders: Record<string, string> = {};\n    if (contentLength) {\n      reqHeaders['content-length'] = contentLength;\n    }\n\n    const defaultHeaders = this.defaultHeaders(options);\n    applyHeadersMut(reqHeaders, defaultHeaders);\n    applyHeadersMut(reqHeaders, headers);\n\n    // let builtin fetch set the Content-Type for multipart bodies\n    if (isMultipartBody(options.body) && shimsKind !== 'node') {\n      delete reqHeaders['content-type'];\n    }\n\n    // Don't set the retry count header if it was already set or removed through default headers or by the\n    // caller. We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to\n    // account for the removal case.\n    if (\n      getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n      getHeader(headers, 'x-stainless-retry-count') === undefined\n    ) {\n      reqHeaders['x-stainless-retry-count'] = String(retryCount);\n    }\n\n    this.validateHeaders(reqHeaders, headers);\n\n    return reqHeaders;\n  }\n\n  /**\n   * Used as a callback for mutating the given `FinalRequestOptions` object.\n   */\n  protected async prepareOptions(options: FinalRequestOptions): Promise<void> {}\n\n  /**\n   * Used as a callback for mutating the given `RequestInit` object.\n   *\n   * This is useful for cases where you want to add certain headers based off of\n   * the request properties, e.g. `method` or `url`.\n   */\n  protected async prepareRequest(\n    request: RequestInit,\n    { url, options }: { url: string; options: FinalRequestOptions },\n  ): Promise<void> {}\n\n  protected parseHeaders(headers: HeadersInit | null | undefined): Record<string, string> {\n    return (\n      !headers ? {}\n      : Symbol.iterator in headers ?\n        Object.fromEntries(Array.from(headers as Iterable<string[]>).map((header) => [...header]))\n      : { ...headers }\n    );\n  }\n\n  protected makeStatusError(\n    status: number | undefined,\n    error: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ): APIError {\n    return APIError.generate(status, error, message, headers);\n  }\n\n  request<Req, Rsp>(\n    options: PromiseOrValue<FinalRequestOptions<Req>>,\n    remainingRetries: number | null = null,\n  ): APIPromise<Rsp> {\n    return new APIPromise(this.makeRequest(options, remainingRetries));\n  }\n\n  private async makeRequest<Req>(\n    optionsInput: PromiseOrValue<FinalRequestOptions<Req>>,\n    retriesRemaining: number | null,\n  ): Promise<APIResponseProps> {\n    const options = await optionsInput;\n    const maxRetries = options.maxRetries ?? this.maxRetries;\n    if (retriesRemaining == null) {\n      retriesRemaining = maxRetries;\n    }\n\n    await this.prepareOptions(options);\n\n    const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n\n    await this.prepareRequest(req, { url, options });\n\n    debug('request', url, options, req.headers);\n\n    if (options.signal?.aborted) {\n      throw new APIUserAbortError();\n    }\n\n    const controller = new AbortController();\n    const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n\n    if (response instanceof Error) {\n      if (options.signal?.aborted) {\n        throw new APIUserAbortError();\n      }\n      if (retriesRemaining) {\n        return this.retryRequest(options, retriesRemaining);\n      }\n      if (response.name === 'AbortError') {\n        throw new APIConnectionTimeoutError();\n      }\n      throw new APIConnectionError({ cause: response });\n    }\n\n    const responseHeaders = createResponseHeaders(response.headers);\n\n    if (!response.ok) {\n      if (retriesRemaining && this.shouldRetry(response)) {\n        const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n        debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n        return this.retryRequest(options, retriesRemaining, responseHeaders);\n      }\n\n      const errText = await response.text().catch((e) => castToError(e).message);\n      const errJSON = safeJSON(errText);\n      const errMessage = errJSON ? undefined : errText;\n      const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n\n      debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n\n      const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n      throw err;\n    }\n\n    return { response, options, controller };\n  }\n\n  requestAPIList<Item = unknown, PageClass extends AbstractPage<Item> = AbstractPage<Item>>(\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n    options: FinalRequestOptions,\n  ): PagePromise<PageClass, Item> {\n    const request = this.makeRequest(options, null);\n    return new PagePromise<PageClass, Item>(this, request, Page);\n  }\n\n  buildURL<Req>(path: string, query: Req | null | undefined): string {\n    const url =\n      isAbsoluteURL(path) ?\n        new URL(path)\n      : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n\n    const defaultQuery = this.defaultQuery();\n    if (!isEmptyObj(defaultQuery)) {\n      query = { ...defaultQuery, ...query } as Req;\n    }\n\n    if (typeof query === 'object' && query && !Array.isArray(query)) {\n      url.search = this.stringifyQuery(query as Record<string, unknown>);\n    }\n\n    return url.toString();\n  }\n\n  protected stringifyQuery(query: Record<string, unknown>): string {\n    return Object.entries(query)\n      .filter(([_, value]) => typeof value !== 'undefined')\n      .map(([key, value]) => {\n        if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n          return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n        }\n        if (value === null) {\n          return `${encodeURIComponent(key)}=`;\n        }\n        throw new OpenAIError(\n          `Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`,\n        );\n      })\n      .join('&');\n  }\n\n  async fetchWithTimeout(\n    url: RequestInfo,\n    init: RequestInit | undefined,\n    ms: number,\n    controller: AbortController,\n  ): Promise<Response> {\n    const { signal, ...options } = init || {};\n    if (signal) signal.addEventListener('abort', () => controller.abort());\n\n    const timeout = setTimeout(() => controller.abort(), ms);\n\n    const fetchOptions = {\n      signal: controller.signal as any,\n      ...options,\n    };\n    if (fetchOptions.method) {\n      // Custom methods like 'patch' need to be uppercased\n      // See https://github.com/nodejs/undici/issues/2294\n      fetchOptions.method = fetchOptions.method.toUpperCase();\n    }\n\n    return (\n      // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n      this.fetch.call(undefined, url, fetchOptions).finally(() => {\n        clearTimeout(timeout);\n      })\n    );\n  }\n\n  private shouldRetry(response: Response): boolean {\n    // Note this is not a standard header.\n    const shouldRetryHeader = response.headers.get('x-should-retry');\n\n    // If the server explicitly says whether or not to retry, obey.\n    if (shouldRetryHeader === 'true') return true;\n    if (shouldRetryHeader === 'false') return false;\n\n    // Retry on request timeouts.\n    if (response.status === 408) return true;\n\n    // Retry on lock timeouts.\n    if (response.status === 409) return true;\n\n    // Retry on rate limits.\n    if (response.status === 429) return true;\n\n    // Retry internal errors.\n    if (response.status >= 500) return true;\n\n    return false;\n  }\n\n  private async retryRequest(\n    options: FinalRequestOptions,\n    retriesRemaining: number,\n    responseHeaders?: Headers | undefined,\n  ): Promise<APIResponseProps> {\n    let timeoutMillis: number | undefined;\n\n    // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n    const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n    if (retryAfterMillisHeader) {\n      const timeoutMs = parseFloat(retryAfterMillisHeader);\n      if (!Number.isNaN(timeoutMs)) {\n        timeoutMillis = timeoutMs;\n      }\n    }\n\n    // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n    const retryAfterHeader = responseHeaders?.['retry-after'];\n    if (retryAfterHeader && !timeoutMillis) {\n      const timeoutSeconds = parseFloat(retryAfterHeader);\n      if (!Number.isNaN(timeoutSeconds)) {\n        timeoutMillis = timeoutSeconds * 1000;\n      } else {\n        timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n      }\n    }\n\n    // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n    // just do what it says, but otherwise calculate a default\n    if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n      const maxRetries = options.maxRetries ?? this.maxRetries;\n      timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n    }\n    await sleep(timeoutMillis);\n\n    return this.makeRequest(options, retriesRemaining - 1);\n  }\n\n  private calculateDefaultRetryTimeoutMillis(retriesRemaining: number, maxRetries: number): number {\n    const initialRetryDelay = 0.5;\n    const maxRetryDelay = 8.0;\n\n    const numRetries = maxRetries - retriesRemaining;\n\n    // Apply exponential backoff, but not more than the max.\n    const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n\n    // Apply some jitter, take up to at most 25 percent of the retry time.\n    const jitter = 1 - Math.random() * 0.25;\n\n    return sleepSeconds * jitter * 1000;\n  }\n\n  private getUserAgent(): string {\n    return `${this.constructor.name}/JS ${VERSION}`;\n  }\n}\n\nexport type PageInfo = { url: URL } | { params: Record<string, unknown> | null };\n\nexport abstract class AbstractPage<Item> implements AsyncIterable<Item> {\n  #client: APIClient;\n  protected options: FinalRequestOptions;\n\n  protected response: Response;\n  protected body: unknown;\n\n  constructor(client: APIClient, response: Response, body: unknown, options: FinalRequestOptions) {\n    this.#client = client;\n    this.options = options;\n    this.response = response;\n    this.body = body;\n  }\n\n  /**\n   * @deprecated Use nextPageInfo instead\n   */\n  abstract nextPageParams(): Partial<Record<string, unknown>> | null;\n  abstract nextPageInfo(): PageInfo | null;\n\n  abstract getPaginatedItems(): Item[];\n\n  hasNextPage(): boolean {\n    const items = this.getPaginatedItems();\n    if (!items.length) return false;\n    return this.nextPageInfo() != null;\n  }\n\n  async getNextPage(): Promise<this> {\n    const nextInfo = this.nextPageInfo();\n    if (!nextInfo) {\n      throw new OpenAIError(\n        'No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.',\n      );\n    }\n    const nextOptions = { ...this.options };\n    if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n      nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n    } else if ('url' in nextInfo) {\n      const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n      for (const [key, value] of params) {\n        nextInfo.url.searchParams.set(key, value as any);\n      }\n      nextOptions.query = undefined;\n      nextOptions.path = nextInfo.url.toString();\n    }\n    return await this.#client.requestAPIList(this.constructor as any, nextOptions);\n  }\n\n  async *iterPages(): AsyncGenerator<this> {\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    let page: this = this;\n    yield page;\n    while (page.hasNextPage()) {\n      page = await page.getNextPage();\n      yield page;\n    }\n  }\n\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    for await (const page of this.iterPages()) {\n      for (const item of page.getPaginatedItems()) {\n        yield item;\n      }\n    }\n  }\n}\n\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise<\n    PageClass extends AbstractPage<Item>,\n    Item = ReturnType<PageClass['getPaginatedItems']>[number],\n  >\n  extends APIPromise<PageClass>\n  implements AsyncIterable<Item>\n{\n  constructor(\n    client: APIClient,\n    request: Promise<APIResponseProps>,\n    Page: new (...args: ConstructorParameters<typeof AbstractPage>) => PageClass,\n  ) {\n    super(\n      request,\n      async (props) =>\n        new Page(\n          client,\n          props.response,\n          await defaultParseResponse(props),\n          props.options,\n        ) as WithRequestID<PageClass>,\n    );\n  }\n\n  /**\n   * Allow auto-paginating iteration on an unawaited list call, eg:\n   *\n   *    for await (const item of client.items.list()) {\n   *      console.log(item)\n   *    }\n   */\n  async *[Symbol.asyncIterator](): AsyncGenerator<Item> {\n    const page = await this;\n    for await (const item of page) {\n      yield item;\n    }\n  }\n}\n\nexport const createResponseHeaders = (\n  headers: Awaited<ReturnType<Fetch>>['headers'],\n): Record<string, string> => {\n  return new Proxy(\n    Object.fromEntries(\n      // @ts-ignore\n      headers.entries(),\n    ),\n    {\n      get(target, name) {\n        const key = name.toString();\n        return target[key.toLowerCase()] || target[key];\n      },\n    },\n  );\n};\n\ntype HTTPMethod = 'get' | 'post' | 'put' | 'patch' | 'delete';\n\nexport type RequestClient = { fetch: Fetch };\nexport type Headers = Record<string, string | null | undefined>;\nexport type DefaultQuery = Record<string, string | undefined>;\nexport type KeysEnum<T> = { [P in keyof Required<T>]: true };\n\nexport type RequestOptions<\n  Req = unknown | Record<string, unknown> | Readable | BlobLike | ArrayBufferView | ArrayBuffer,\n> = {\n  method?: HTTPMethod;\n  path?: string;\n  query?: Req | undefined;\n  body?: Req | null | undefined;\n  headers?: Headers | undefined;\n\n  maxRetries?: number;\n  stream?: boolean | undefined;\n  timeout?: number;\n  httpAgent?: Agent;\n  signal?: AbortSignal | undefined | null;\n  idempotencyKey?: string;\n\n  __binaryRequest?: boolean | undefined;\n  __binaryResponse?: boolean | undefined;\n  __streamClass?: typeof Stream;\n};\n\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys: KeysEnum<RequestOptions> = {\n  method: true,\n  path: true,\n  query: true,\n  body: true,\n  headers: true,\n\n  maxRetries: true,\n  stream: true,\n  timeout: true,\n  httpAgent: true,\n  signal: true,\n  idempotencyKey: true,\n\n  __binaryRequest: true,\n  __binaryResponse: true,\n  __streamClass: true,\n};\n\nexport const isRequestOptions = (obj: unknown): obj is RequestOptions => {\n  return (\n    typeof obj === 'object' &&\n    obj !== null &&\n    !isEmptyObj(obj) &&\n    Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k))\n  );\n};\n\nexport type FinalRequestOptions<Req = unknown | Record<string, unknown> | Readable | DataView> =\n  RequestOptions<Req> & {\n    method: HTTPMethod;\n    path: string;\n  };\n\ndeclare const Deno: any;\ndeclare const EdgeRuntime: any;\ntype Arch = 'x32' | 'x64' | 'arm' | 'arm64' | `other:${string}` | 'unknown';\ntype PlatformName =\n  | 'MacOS'\n  | 'Linux'\n  | 'Windows'\n  | 'FreeBSD'\n  | 'OpenBSD'\n  | 'iOS'\n  | 'Android'\n  | `Other:${string}`\n  | 'Unknown';\ntype Browser = 'ie' | 'edge' | 'chrome' | 'firefox' | 'safari';\ntype PlatformProperties = {\n  'X-Stainless-Lang': 'js';\n  'X-Stainless-Package-Version': string;\n  'X-Stainless-OS': PlatformName;\n  'X-Stainless-Arch': Arch;\n  'X-Stainless-Runtime': 'node' | 'deno' | 'edge' | `browser:${Browser}` | 'unknown';\n  'X-Stainless-Runtime-Version': string;\n};\nconst getPlatformProperties = (): PlatformProperties => {\n  if (typeof Deno !== 'undefined' && Deno.build != null) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(Deno.build.os),\n      'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n      'X-Stainless-Runtime': 'deno',\n      'X-Stainless-Runtime-Version':\n        typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n    };\n  }\n  if (typeof EdgeRuntime !== 'undefined') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': `other:${EdgeRuntime}`,\n      'X-Stainless-Runtime': 'edge',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n  // Check if Node.js\n  if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': normalizePlatform(process.platform),\n      'X-Stainless-Arch': normalizeArch(process.arch),\n      'X-Stainless-Runtime': 'node',\n      'X-Stainless-Runtime-Version': process.version,\n    };\n  }\n\n  const browserInfo = getBrowserInfo();\n  if (browserInfo) {\n    return {\n      'X-Stainless-Lang': 'js',\n      'X-Stainless-Package-Version': VERSION,\n      'X-Stainless-OS': 'Unknown',\n      'X-Stainless-Arch': 'unknown',\n      'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n      'X-Stainless-Runtime-Version': browserInfo.version,\n    };\n  }\n\n  // TODO add support for Cloudflare workers, etc.\n  return {\n    'X-Stainless-Lang': 'js',\n    'X-Stainless-Package-Version': VERSION,\n    'X-Stainless-OS': 'Unknown',\n    'X-Stainless-Arch': 'unknown',\n    'X-Stainless-Runtime': 'unknown',\n    'X-Stainless-Runtime-Version': 'unknown',\n  };\n};\n\ntype BrowserInfo = {\n  browser: Browser;\n  version: string;\n};\n\ndeclare const navigator: { userAgent: string } | undefined;\n\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo(): BrowserInfo | null {\n  if (typeof navigator === 'undefined' || !navigator) {\n    return null;\n  }\n\n  // NOTE: The order matters here!\n  const browserPatterns = [\n    { key: 'edge' as const, pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'ie' as const, pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'chrome' as const, pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'firefox' as const, pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n    { key: 'safari' as const, pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n  ];\n\n  // Find the FIRST matching browser\n  for (const { key, pattern } of browserPatterns) {\n    const match = pattern.exec(navigator.userAgent);\n    if (match) {\n      const major = match[1] || 0;\n      const minor = match[2] || 0;\n      const patch = match[3] || 0;\n\n      return { browser: key, version: `${major}.${minor}.${patch}` };\n    }\n  }\n\n  return null;\n}\n\nconst normalizeArch = (arch: string): Arch => {\n  // Node docs:\n  // - https://nodejs.org/api/process.html#processarch\n  // Deno docs:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  if (arch === 'x32') return 'x32';\n  if (arch === 'x86_64' || arch === 'x64') return 'x64';\n  if (arch === 'arm') return 'arm';\n  if (arch === 'aarch64' || arch === 'arm64') return 'arm64';\n  if (arch) return `other:${arch}`;\n  return 'unknown';\n};\n\nconst normalizePlatform = (platform: string): PlatformName => {\n  // Node platforms:\n  // - https://nodejs.org/api/process.html#processplatform\n  // Deno platforms:\n  // - https://doc.deno.land/deno/stable/~/Deno.build\n  // - https://github.com/denoland/deno/issues/14799\n\n  platform = platform.toLowerCase();\n\n  // NOTE: this iOS check is untested and may not work\n  // Node does not work natively on IOS, there is a fork at\n  // https://github.com/nodejs-mobile/nodejs-mobile\n  // however it is unknown at the time of writing how to detect if it is running\n  if (platform.includes('ios')) return 'iOS';\n  if (platform === 'android') return 'Android';\n  if (platform === 'darwin') return 'MacOS';\n  if (platform === 'win32') return 'Windows';\n  if (platform === 'freebsd') return 'FreeBSD';\n  if (platform === 'openbsd') return 'OpenBSD';\n  if (platform === 'linux') return 'Linux';\n  if (platform) return `Other:${platform}`;\n  return 'Unknown';\n};\n\nlet _platformHeaders: PlatformProperties;\nconst getPlatformHeaders = () => {\n  return (_platformHeaders ??= getPlatformProperties());\n};\n\nexport const safeJSON = (text: string) => {\n  try {\n    return JSON.parse(text);\n  } catch (err) {\n    return undefined;\n  }\n};\n\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url: string): boolean => {\n  return startsWithSchemeRegexp.test(url);\n};\n\nexport const sleep = (ms: number) => new Promise((resolve) => setTimeout(resolve, ms));\n\nconst validatePositiveInteger = (name: string, n: unknown): number => {\n  if (typeof n !== 'number' || !Number.isInteger(n)) {\n    throw new OpenAIError(`${name} must be an integer`);\n  }\n  if (n < 0) {\n    throw new OpenAIError(`${name} must be a positive integer`);\n  }\n  return n;\n};\n\nexport const castToError = (err: any): Error => {\n  if (err instanceof Error) return err;\n  if (typeof err === 'object' && err !== null) {\n    try {\n      return new Error(JSON.stringify(err));\n    } catch {}\n  }\n  return new Error(err);\n};\n\nexport const ensurePresent = <T>(value: T | null | undefined): T => {\n  if (value == null) throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n  return value;\n};\n\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env: string): string | undefined => {\n  if (typeof process !== 'undefined') {\n    return process.env?.[env]?.trim() ?? undefined;\n  }\n  if (typeof Deno !== 'undefined') {\n    return Deno.env?.get?.(env)?.trim();\n  }\n  return undefined;\n};\n\nexport const coerceInteger = (value: unknown): number => {\n  if (typeof value === 'number') return Math.round(value);\n  if (typeof value === 'string') return parseInt(value, 10);\n\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceFloat = (value: unknown): number => {\n  if (typeof value === 'number') return value;\n  if (typeof value === 'string') return parseFloat(value);\n\n  throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\n\nexport const coerceBoolean = (value: unknown): boolean => {\n  if (typeof value === 'boolean') return value;\n  if (typeof value === 'string') return value === 'true';\n  return Boolean(value);\n};\n\nexport const maybeCoerceInteger = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceInteger(value);\n};\n\nexport const maybeCoerceFloat = (value: unknown): number | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceFloat(value);\n};\n\nexport const maybeCoerceBoolean = (value: unknown): boolean | undefined => {\n  if (value === undefined) {\n    return undefined;\n  }\n  return coerceBoolean(value);\n};\n\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj: Object | null | undefined): boolean {\n  if (!obj) return true;\n  for (const _k in obj) return false;\n  return true;\n}\n\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj: Object, key: string): boolean {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders: Headers, newHeaders: Headers): void {\n  for (const k in newHeaders) {\n    if (!hasOwn(newHeaders, k)) continue;\n    const lowerKey = k.toLowerCase();\n    if (!lowerKey) continue;\n\n    const val = newHeaders[k];\n\n    if (val === null) {\n      delete targetHeaders[lowerKey];\n    } else if (val !== undefined) {\n      targetHeaders[lowerKey] = val;\n    }\n  }\n}\n\nexport function debug(action: string, ...args: any[]) {\n  if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n    console.log(`OpenAI:DEBUG:${action}`, ...args);\n  }\n}\n\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n    const r = (Math.random() * 16) | 0;\n    const v = c === 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n};\n\nexport const isRunningInBrowser = () => {\n  return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n    // @ts-ignore\n    typeof window.document !== 'undefined' &&\n    // @ts-ignore\n    typeof navigator !== 'undefined'\n  );\n};\n\nexport interface HeadersProtocol {\n  get: (header: string) => string | null | undefined;\n}\nexport type HeadersLike = Record<string, string | string[] | undefined> | HeadersProtocol;\n\nexport const isHeadersProtocol = (headers: any): headers is HeadersProtocol => {\n  return typeof headers?.get === 'function';\n};\n\nexport const getRequiredHeader = (headers: HeadersLike | Headers, header: string): string => {\n  const foundHeader = getHeader(headers, header);\n  if (foundHeader === undefined) {\n    throw new Error(`Could not find ${header} header`);\n  }\n  return foundHeader;\n};\n\nexport const getHeader = (headers: HeadersLike | Headers, header: string): string | undefined => {\n  const lowerCasedHeader = header.toLowerCase();\n  if (isHeadersProtocol(headers)) {\n    // to deal with the case where the header looks like Stainless-Event-Id\n    const intercapsHeader =\n      header[0]?.toUpperCase() +\n      header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n    for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n      const value = headers.get(key);\n      if (value) {\n        return value;\n      }\n    }\n  }\n\n  for (const [key, value] of Object.entries(headers)) {\n    if (key.toLowerCase() === lowerCasedHeader) {\n      if (Array.isArray(value)) {\n        if (value.length <= 1) return value[0];\n        console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n        return value[0];\n      }\n      return value;\n    }\n  }\n\n  return undefined;\n};\n\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str: string | null | undefined): string => {\n  if (!str) return '';\n  if (typeof Buffer !== 'undefined') {\n    return Buffer.from(str).toString('base64');\n  }\n\n  if (typeof btoa !== 'undefined') {\n    return btoa(str);\n  }\n\n  throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\n\nexport function isObj(obj: unknown): obj is Record<string, unknown> {\n  return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}