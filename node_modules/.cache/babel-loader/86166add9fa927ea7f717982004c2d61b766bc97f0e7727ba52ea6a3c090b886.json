{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/ArchitectureVisualizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, useNodesState, useEdgesState, MarkerType } from 'reactflow';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArchitectureVisualizer = ({\n  architecture,\n  onNodeClick\n}) => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const calculateNodePosition = (index, total) => {\n    const radius = 200;\n    const angle = 2 * Math.PI * index / total;\n    return {\n      x: radius * Math.cos(angle) + 300,\n      y: radius * Math.sin(angle) + 300\n    };\n  };\n  const convertArchitectureToNodes = useCallback(architecture => {\n    const nodes = architecture.services.map((service, index) => ({\n      id: service.id,\n      type: 'awsService',\n      data: {\n        label: service.name,\n        icon: service.icon,\n        missing: architecture.missingServices.includes(service.id)\n      },\n      position: calculateNodePosition(index, architecture.services.length),\n      style: {\n        opacity: architecture.missingServices.includes(service.id) ? 0.5 : 1\n      }\n    }));\n    const edges = architecture.connections.map(conn => ({\n      id: `${conn.from}-${conn.to}`,\n      source: conn.from,\n      target: conn.to,\n      type: 'smoothstep',\n      animated: true,\n      markerEnd: {\n        type: MarkerType.ArrowClosed\n      },\n      style: {\n        stroke: '#4FD1C5'\n      }\n    }));\n    setNodes(nodes);\n    setEdges(edges);\n  }, []);\n  useEffect(() => {\n    if (architecture) {\n      convertArchitectureToNodes(architecture);\n    }\n  }, [architecture, convertArchitectureToNodes]);\n  const AWSServiceNode = ({\n    data\n  }) => /*#__PURE__*/_jsxDEV(motion.div, {\n    className: `aws-service-node ${data.missing ? 'missing' : ''}`,\n    initial: {\n      scale: 0\n    },\n    animate: {\n      scale: 1\n    },\n    whileHover: {\n      scale: 1.1\n    },\n    transition: {\n      type: \"spring\",\n      stiffness: 300\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.icon,\n      alt: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n  const nodeTypes = {\n    awsService: AWSServiceNode\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '600px'\n    },\n    className: \"architecture-visualizer\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      nodeTypes: nodeTypes,\n      onNodeClick: (_, node) => onNodeClick(node.id),\n      fitView: true,\n      minZoom: 0.5,\n      maxZoom: 1.5,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#4FD1C5\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: node => node.data.missing ? '#FF0000' : '#4FD1C5',\n        maskColor: \"rgba(0, 0, 0, 0.2)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(ArchitectureVisualizer, \"C8fKIW38D/dLX1wgnyhgyflo8NU=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = ArchitectureVisualizer;\nexport default ArchitectureVisualizer;\nvar _c;\n$RefreshReg$(_c, \"ArchitectureVisualizer\");","map":{"version":3,"names":["React","useCallback","useEffect","ReactFlow","Background","Controls","MiniMap","useNodesState","useEdgesState","MarkerType","motion","AnimatePresence","jsxDEV","_jsxDEV","ArchitectureVisualizer","architecture","onNodeClick","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","calculateNodePosition","index","total","radius","angle","Math","PI","x","cos","y","sin","convertArchitectureToNodes","services","map","service","id","type","data","label","name","icon","missing","missingServices","includes","position","length","style","opacity","connections","conn","from","to","source","target","animated","markerEnd","ArrowClosed","stroke","AWSServiceNode","div","className","initial","scale","animate","whileHover","transition","stiffness","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","nodeTypes","awsService","height","_","node","fitView","minZoom","maxZoom","color","gap","nodeColor","maskColor","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/ArchitectureVisualizer.jsx"],"sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport ReactFlow, { \n  Background,\n  Controls,\n  MiniMap,\n  useNodesState,\n  useEdgesState,\n  MarkerType\n} from 'reactflow';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport 'reactflow/dist/style.css';\n\nconst ArchitectureVisualizer = ({ architecture, onNodeClick }) => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  const calculateNodePosition = (index, total) => {\n    const radius = 200;\n    const angle = (2 * Math.PI * index) / total;\n    return {\n      x: radius * Math.cos(angle) + 300,\n      y: radius * Math.sin(angle) + 300\n    };\n  };\n\n  const convertArchitectureToNodes = useCallback((architecture) => {\n    const nodes = architecture.services.map((service, index) => ({\n      id: service.id,\n      type: 'awsService',\n      data: { \n        label: service.name,\n        icon: service.icon,\n        missing: architecture.missingServices.includes(service.id)\n      },\n      position: calculateNodePosition(index, architecture.services.length),\n      style: {\n        opacity: architecture.missingServices.includes(service.id) ? 0.5 : 1\n      }\n    }));\n\n    const edges = architecture.connections.map(conn => ({\n      id: `${conn.from}-${conn.to}`,\n      source: conn.from,\n      target: conn.to,\n      type: 'smoothstep',\n      animated: true,\n      markerEnd: { type: MarkerType.ArrowClosed },\n      style: { stroke: '#4FD1C5' }\n    }));\n\n    setNodes(nodes);\n    setEdges(edges);\n  }, []);\n\n  useEffect(() => {\n    if (architecture) {\n      convertArchitectureToNodes(architecture);\n    }\n  }, [architecture, convertArchitectureToNodes]);\n\n  const AWSServiceNode = ({ data }) => (\n    <motion.div\n      className={`aws-service-node ${data.missing ? 'missing' : ''}`}\n      initial={{ scale: 0 }}\n      animate={{ scale: 1 }}\n      whileHover={{ scale: 1.1 }}\n      transition={{ type: \"spring\", stiffness: 300 }}\n    >\n      <img src={data.icon} alt={data.label} />\n      <span>{data.label}</span>\n    </motion.div>\n  );\n\n  const nodeTypes = {\n    awsService: AWSServiceNode\n  };\n\n  return (\n    <div style={{ height: '600px' }} className=\"architecture-visualizer\">\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        nodeTypes={nodeTypes}\n        onNodeClick={(_, node) => onNodeClick(node.id)}\n        fitView\n        minZoom={0.5}\n        maxZoom={1.5}\n      >\n        <Background color=\"#4FD1C5\" gap={16} />\n        <Controls />\n        <MiniMap \n          nodeColor={(node) => (node.data.missing ? '#FF0000' : '#4FD1C5')}\n          maskColor=\"rgba(0, 0, 0, 0.2)\"\n        />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default ArchitectureVisualizer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}