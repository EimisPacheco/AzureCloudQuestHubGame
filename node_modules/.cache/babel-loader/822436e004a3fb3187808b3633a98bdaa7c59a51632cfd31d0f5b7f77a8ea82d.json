{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game copy 20- copy 2/src/components/GameCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AWS_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Add these constants from IconResolver.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst GameCanvas = () => {\n  _s();\n  // First, declare all state\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const savedRocket = localStorage.getItem('selectedRocket');\n    return savedRocket || 'rocket1.png';\n  });\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    if (savedName) return savedName;\n    const name = prompt('Welcome! Enter your name to start:') || 'Player';\n    localStorage.setItem('playerName', name);\n    return name;\n  });\n  const [rocketPosition, setRocketPosition] = useState({\n    x: 375,\n    y: 550\n  });\n\n  // Get random categories for instructions only once at game start\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AWS_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 2);\n    };\n    return getRandomCategories().map(category => ({\n      text: `Shoot the ${category.replace(/_/g, ' ')} icons!`,\n      category: AWS_ICON_CATEGORIES[category]\n    }));\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => path.includes(instruction.category)).map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name\n      }));\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs and other setup code\n  const canvasRef = useRef(null);\n\n  // We'll keep arrays for icons, bullets, and feedback in refs to avoid\n  // re-rendering the whole component every time they update.\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n\n  // Images for the gun and bullets\n  const rocketImage = useRef(new Image());\n\n  // Initialize rocket image\n  useEffect(() => {\n    rocketImage.current.src = `icons/${selectedRocket}`;\n  }, [selectedRocket]); // Update when selectedRocket changes\n\n  const fireballImage = new Image();\n  fireballImage.src = 'icons/fireball.png';\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25,\n    // center of an 800px width minus half the gun width\n    y: 800 - 100,\n    // Adjust this value to move the rocket closer to the bottom\n    width: 120,\n    height: 120\n  });\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    return Math.floor(Math.random() * (canvas.width - 50));\n  };\n\n  // Load icons for the current instruction\n  const loadIcons = () => {\n    iconsRef.current = [];\n    const positions = [];\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    // Add current category icons\n    for (let i = 0; i < 4; i++) {\n      let x = getRandomX();\n      while (positions.some(pos => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n      const categoryIcons = iconTypes[currentCategory];\n      const iconInfo = categoryIcons[i % categoryIcons.length];\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: currentCategory,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false\n      });\n    }\n\n    // Add other category icons\n    const otherCategory = instructions[(currentInstructionIndex + 1) % 2].category;\n    for (let i = 4; i < 10; i++) {\n      let x = getRandomX();\n      while (positions.some(pos => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n      const categoryIcons = iconTypes[otherCategory];\n      const iconInfo = categoryIcons[i % categoryIcons.length];\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: otherCategory,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false\n      });\n    }\n  };\n\n  // Show feedback (checkmark or X) and points after a shot\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now()\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter(bullet => {\n        if (bullet.x > icon.x && bullet.x < icon.x + 50 && bullet.y > icon.y && bullet.y < icon.y + 50) {\n          icon.hit = true;\n          const currentCat = instructions[currentInstructionIndex].category;\n          if (icon.type === currentCat) {\n            const heightPercentage = 1 - icon.y / canvas.height;\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            setScore(prev => {\n              // Show high score message if close to high score\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                // Great shot at high height\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore(prev => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n\n    // If no icons left and still time left, load new icons\n    if (iconsRef.current.length === 0 && timeLeft > 0) {\n      playSound('levelup');\n      setCurrentInstructionIndex(prev => (prev + 1) % instructions.length);\n      loadIcons();\n    }\n  };\n\n  // The main game loop, which draws everything on the canvas\n  const gameLoop = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw the rocket (gun)\n    const {\n      x: gunX,\n      y: gunY,\n      width,\n      height\n    } = gunRef.current;\n    ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n\n    // Draw icons\n    iconsRef.current.forEach(icon => {\n      if (!icon.hit) {\n        ctx.drawImage(icon.image, icon.x, icon.y, 50, 50);\n        icon.y += 0.3; // Keep consistent speed\n      }\n    });\n\n    // Remove icons that are off screen and check if we need new ones\n    iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n    if (iconsRef.current.length === 0 && timeLeft > 0) {\n      playSound('levelup');\n      setCurrentInstructionIndex(prev => (prev + 1) % instructions.length);\n      loadIcons();\n    }\n\n    // Draw bullets\n    bulletsRef.current.forEach(bullet => {\n      ctx.drawImage(fireballImage, bullet.x, bullet.y, 20, 20);\n      bullet.y -= 5;\n    });\n\n    // Remove bullets that are off-screen\n    bulletsRef.current = bulletsRef.current.filter(b => b.y > 0);\n\n    // Draw feedback with consistent styling for both positive and negative points\n    const now = Date.now();\n    feedbacksRef.current = feedbacksRef.current.filter(feedback => {\n      const elapsed = now - feedback.time;\n      if (elapsed < 3000) {\n        // Draw points with consistent styling\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n        ctx.shadowBlur = 4;\n        ctx.fillStyle = feedback.isCorrect ? '#4CAF50' : '#F44336';\n        ctx.font = 'bold 28px Arial';\n\n        // Show points with + or - sign\n        const pointsText = feedback.points > 0 ? `+${feedback.points}` : `${feedback.points}`;\n        ctx.fillText(pointsText, feedback.x + 10, feedback.y - 20);\n\n        // Draw icon name\n        ctx.font = '16px Arial';\n        ctx.fillText(feedback.name, feedback.x + 60, feedback.y + 25);\n\n        // Draw feedback symbol\n        ctx.font = 'bold 55px Arial';\n        ctx.fillText(feedback.isCorrect ? '✔' : '✘', feedback.x + 10, feedback.y + 30);\n        ctx.shadowBlur = 0;\n        return true;\n      }\n      return false;\n    });\n    checkCollisions();\n\n    // Update and draw particles\n    particlesRef.current = particlesRef.current.filter(particle => {\n      if (particle.lifetime > 0 && particle.size > 0) {\n        particle.update();\n        particle.draw(ctx);\n        return true;\n      }\n      return false;\n    });\n    requestAnimationFrame(gameLoop);\n  };\n\n  // Add sound references with error handling\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Initialize sounds with error handling\n  useEffect(() => {\n    const soundFiles = {\n      shoot: '/sounds/pistol_sound.mp3',\n      correct: '/sounds/correct_sound.mp3',\n      incorrect: '/sounds/incorrect_sound.mp3',\n      levelup: '/sounds/levelup.mp3'\n    };\n\n    // Create a safe audio player that won't break if files are missing\n    const createSafeAudio = path => {\n      const audio = new Audio();\n      return new Promise(resolve => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n\n        // Set timeout in case the file takes too long to load\n        setTimeout(() => resolve(null), 2000);\n        audio.src = path;\n      });\n    };\n\n    // Load all sound files with error handling\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n    loadSounds();\n\n    // Set initial volume\n    return () => {\n      // Cleanup sounds on unmount\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  // Safe play function\n  const playSound = soundName => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Add a mute toggle button to the UI\n  const [isMuted, setIsMuted] = useState(false);\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !isMuted;\n      }\n    });\n  };\n\n  // Add new state and refs for particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n\n  // Add state to track if we've already handled game over\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  // Particle class\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size; // Store initial size\n    }\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      // Calculate size based on lifetime instead of continuous subtraction\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n    draw(ctx) {\n      if (this.size <= 0) return; // Don't draw if size is 0 or negative\n\n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Function to create explosion effect\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (!gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled]);\n\n  // Handle game over\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    setGameOver(true);\n    setGameOverHandled(true);\n    const newScore = {\n      name: playerName,\n      score\n    };\n    const newHighScores = [...highScores, newScore].sort((a, b) => b.score - a.score).slice(0, 5);\n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  // Split the initialization into two effects\n  // First effect for canvas setup\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      canvas.width = 1200;\n      canvas.height = 800;\n      const ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n      loadIcons();\n      requestAnimationFrame(gameLoop);\n    }\n  }, []);\n\n  // Second effect for event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ROCKET_WIDTH = 50;\n    const FIXED_ROCKET_Y = 550;\n    const handleMouseMove = e => {\n      const rect = canvas.getBoundingClientRect();\n\n      // Calculate new X position\n      let newX = e.clientX - rect.left - gunRef.current.width / 2;\n\n      // Add boundary checks\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n\n      // Update gun position\n      gunRef.current.x = newX;\n    };\n    const handleCanvasClick = () => {\n      if (timeLeft > 0) {\n        playSound('pistol_sound');\n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20\n        });\n      }\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [timeLeft]);\n\n  // Clear both name and rocket selection when component mounts\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  // Add state for modal visibility\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  // Add rocket options\n  const rocketOptions = [{\n    id: 'rocket1.png',\n    name: 'Modern Rocket'\n  }, {\n    id: 'rocket2.png',\n    name: 'Power Rocket'\n  }, {\n    id: 'rocket3.png',\n    name: 'Stealth Rocket'\n  }, {\n    id: 'rocket4.png',\n    name: 'Classic Rocket'\n  }];\n\n  // Handle rocket selection\n  const handleRocketSelect = rocketId => {\n    setSelectedRocket(rocketId);\n    localStorage.setItem('selectedRocket', rocketId);\n\n    // Update the rocket image immediately\n    rocketImage.current.src = `icons/${rocketId}`;\n    setShowRocketModal(false);\n  };\n\n  // Add state for cheerleader messages\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  // Add cheerleader messages for different situations\n  const cheerleaderMessages = {\n    goodShot: [\"Great shot! You're an AWS Pro! 🌟\", \"Amazing cloud skills! Keep it up! 🎯\", \"You're on fire in the cloud! 🔥\", \"That's how AWS experts do it! 👏\"],\n    combo: [\"Cloud combo! 🎮\", \"You're scaling infinitely! ⚡\", \"What an AWS streak! 🌈\"],\n    timeWarning: [\"30 seconds left - you're highly available! ⏰\", \"Time for the final deployment! 💪\", \"Make every compute unit count! ⭐\"],\n    encouragement: [\"You've got this, cloud warrior! 🚀\", \"Keep going! You're AWS certified material! 🌟\", \"I believe in your cloud powers! 💫\", \"Show them your AWS expertise! 💪\"],\n    highScore: [\"New high score! You're going serverless! 🏆\", \"You're breaking cloud records! 🎖️\", \"Legendary AWS performance! 👑\"]\n  };\n\n  // Function to show a random message from a category\n  const showCheerleaderMessage = category => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n\n    // Hide message after 3 seconds\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  // Add periodic encouragement\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  // Add time warning messages\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameCanvas-game-title\",\n      children: \"AWS Cloud Shooter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 625,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-canvas-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"gameCanvas-game-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 627,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-instruction-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-player-name\",\n            children: [\"Player: \", playerName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-score-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"alien\",\n              children: \"\\uD83D\\uDC7E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 15\n            }, this), ' ', \"Score: \", score, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"joystick\",\n              children: \"\\uD83D\\uDD79\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 638,\n              columnNumber: 15\n            }, this), soundsLoaded && Object.values(sounds.current).some(sound => sound) && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gameCanvas-sound-toggle\",\n              onClick: toggleMute,\n              \"aria-label\": \"Toggle sound\",\n              children: isMuted ? '🔇' : '🔊'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 635,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-timer-display\",\n          children: [\"Time: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-score-explanation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"How to Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Hit correct icon: +5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Height bonus: up to +20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 660,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Wrong hit: -5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 661,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Tip: Shoot icons as high as possible!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 658,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 656,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-high-scores\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"High Scores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: highScores.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gameCanvas-high-score-name\",\n                children: [entry.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 671,\n                columnNumber: 17\n              }, this), \" \", entry.score]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 668,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 666,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-mission-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"gameCanvas-mission-title\",\n            children: \"Current Mission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 678,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-mission-text\",\n            children: instructions[currentInstructionIndex].text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 682,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 677,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 626,\n      columnNumber: 7\n    }, this), showRocketModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-rocket-selection-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Choose Your Rocket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-rocket-grid\",\n          children: rocketOptions.map(rocket => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `gameCanvas-rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`,\n            onClick: () => handleRocketSelect(rocket.id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: `icons/${rocket.id}`,\n              alt: rocket.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 700,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: rocket.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 19\n            }, this)]\n          }, rocket.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 695,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 690,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 714,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 715,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 713,\n      columnNumber: 9\n    }, this), showCheerMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-cheerleader-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheerleader-character\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/cheerleader.png\",\n          alt: \"Cheerleader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 724,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 723,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheer-message\",\n        children: cheerMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 726,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 722,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 624,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"Y70w13lAsr9U/rh/I0EDSO0D1I8=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","AWS_ICON_CATEGORIES","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","S3_BUCKET_URL","ICONS_BASE_PATH","GameCanvas","_s","timeLeft","setTimeLeft","score","setScore","currentInstructionIndex","setCurrentInstructionIndex","selectedRocket","setSelectedRocket","savedRocket","localStorage","getItem","playerName","setPlayerName","savedName","name","prompt","setItem","rocketPosition","setRocketPosition","x","y","instructions","getRandomCategories","categories","Object","keys","shuffled","sort","Math","random","slice","map","category","text","replace","iconTypes","reduce","acc","instruction","categoryServices","entries","filter","_","path","includes","canvasRef","iconsRef","bulletsRef","feedbacksRef","rocketImage","Image","current","src","fireballImage","gunRef","width","height","getRandomX","canvas","floor","loadIcons","positions","currentCategory","i","some","pos","abs","push","categoryIcons","iconInfo","length","iconImage","type","image","hit","otherCategory","showFeedback","isCorrect","points","iconName","time","Date","now","checkCollisions","bullets","icons","forEach","icon","iconIndex","bullet","currentCat","heightPercentage","heightBonus","prev","max","highScores","s","showCheerleaderMessage","playSound","createExplosion","splice","gameLoop","ctx","getContext","clearRect","gunX","gunY","drawImage","b","feedback","elapsed","shadowColor","shadowBlur","fillStyle","font","pointsText","fillText","particlesRef","particle","lifetime","size","update","draw","requestAnimationFrame","sounds","soundsLoaded","setSoundsLoaded","soundFiles","shoot","correct","incorrect","levelup","createSafeAudio","audio","Audio","Promise","resolve","addEventListener","console","warn","setTimeout","loadSounds","loadedSounds","key","values","sound","pause","soundName","isMuted","currentTime","volume","play","catch","err","setIsMuted","toggleMute","muted","setHighScores","saved","JSON","parse","gameOver","setGameOver","gameOverHandled","setGameOverHandled","Particle","constructor","color","speedX","speedY","initialSize","globalAlpha","beginPath","arc","PI","fill","timer","setInterval","clearInterval","handleGameOver","newScore","newHighScores","a","stringify","imageSmoothingEnabled","ROCKET_WIDTH","FIXED_ROCKET_Y","handleMouseMove","e","rect","getBoundingClientRect","newX","clientX","left","min","handleCanvasClick","removeEventListener","removeItem","showRocketModal","setShowRocketModal","rocketOptions","id","handleRocketSelect","rocketId","cheerMessage","setCheerMessage","showCheerMessage","setShowCheerMessage","cheerleaderMessages","goodShot","combo","timeWarning","encouragement","highScore","messages","randomMessage","encouragementInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","role","onClick","entry","index","rocket","alt","window","location","reload","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game copy 20- copy 2/src/components/GameCanvas.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AWS_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Add these constants from IconResolver.js\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\n\nconst GameCanvas = () => {\n  // First, declare all state\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const savedRocket = localStorage.getItem('selectedRocket');\n    return savedRocket || 'rocket1.png';\n  });\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    if (savedName) return savedName;\n    \n    const name = prompt('Welcome! Enter your name to start:') || 'Player';\n    localStorage.setItem('playerName', name);\n    return name;\n  });\n  const [rocketPosition, setRocketPosition] = useState({ x: 375, y: 550 });\n\n  // Get random categories for instructions only once at game start\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AWS_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 2);\n    };\n\n    return getRandomCategories().map(category => ({\n      text: `Shoot the ${category.replace(/_/g, ' ')} icons!`,\n      category: AWS_ICON_CATEGORIES[category]\n    }));\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS)\n        .filter(([_, path]) => path.includes(instruction.category))\n        .map(([name, path]) => ({\n          path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n          name: name\n        }));\n\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs and other setup code\n  const canvasRef = useRef(null);\n\n  // We'll keep arrays for icons, bullets, and feedback in refs to avoid\n  // re-rendering the whole component every time they update.\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n\n  // Images for the gun and bullets\n  const rocketImage = useRef(new Image());\n  \n  // Initialize rocket image\n  useEffect(() => {\n    rocketImage.current.src = `icons/${selectedRocket}`;\n  }, [selectedRocket]); // Update when selectedRocket changes\n\n  const fireballImage = new Image();\n  fireballImage.src = 'icons/fireball.png';\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25, // center of an 800px width minus half the gun width\n    y: 800 - 100, // Adjust this value to move the rocket closer to the bottom\n    width: 120,\n    height: 120,\n  });\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    return Math.floor(Math.random() * (canvas.width - 50));\n  };\n\n  // Load icons for the current instruction\n  const loadIcons = () => {\n    iconsRef.current = [];\n    const positions = [];\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    // Add current category icons\n    for (let i = 0; i < 4; i++) {\n      let x = getRandomX();\n      while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n\n      const categoryIcons = iconTypes[currentCategory];\n      const iconInfo = categoryIcons[i % categoryIcons.length];\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: currentCategory,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false,\n      });\n    }\n\n    // Add other category icons\n    const otherCategory = instructions[(currentInstructionIndex + 1) % 2].category;\n    for (let i = 4; i < 10; i++) {\n      let x = getRandomX();\n      while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n\n      const categoryIcons = iconTypes[otherCategory];\n      const iconInfo = categoryIcons[i % categoryIcons.length];\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: otherCategory,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false,\n      });\n    }\n  };\n\n  // Show feedback (checkmark or X) and points after a shot\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now(),\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter((bullet) => {\n        if (\n          bullet.x > icon.x &&\n          bullet.x < icon.x + 50 &&\n          bullet.y > icon.y &&\n          bullet.y < icon.y + 50\n        ) {\n          icon.hit = true;\n          const currentCat = instructions[currentInstructionIndex].category;\n\n          if (icon.type === currentCat) {\n            const heightPercentage = 1 - (icon.y / canvas.height);\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            \n            setScore((prev) => {\n              // Show high score message if close to high score\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) { // Great shot at high height\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore((prev) => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n\n    // If no icons left and still time left, load new icons\n    if (iconsRef.current.length === 0 && timeLeft > 0) {\n      playSound('levelup');\n      setCurrentInstructionIndex((prev) => (prev + 1) % instructions.length);\n      loadIcons();\n    }\n  };\n\n  // The main game loop, which draws everything on the canvas\n  const gameLoop = () => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext('2d');\n\n    // Clear the canvas\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Draw the rocket (gun)\n    const { x: gunX, y: gunY, width, height } = gunRef.current;\n    ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n\n    // Draw icons\n    iconsRef.current.forEach((icon) => {\n      if (!icon.hit) {\n        ctx.drawImage(icon.image, icon.x, icon.y, 50, 50);\n        icon.y += 0.3; // Keep consistent speed\n      }\n    });\n\n    // Remove icons that are off screen and check if we need new ones\n    iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n    if (iconsRef.current.length === 0 && timeLeft > 0) {\n      playSound('levelup');\n      setCurrentInstructionIndex((prev) => (prev + 1) % instructions.length);\n      loadIcons();\n    }\n\n    // Draw bullets\n    bulletsRef.current.forEach((bullet) => {\n      ctx.drawImage(fireballImage, bullet.x, bullet.y, 20, 20);\n      bullet.y -= 5;\n    });\n\n    // Remove bullets that are off-screen\n    bulletsRef.current = bulletsRef.current.filter((b) => b.y > 0);\n\n    // Draw feedback with consistent styling for both positive and negative points\n    const now = Date.now();\n    feedbacksRef.current = feedbacksRef.current.filter((feedback) => {\n      const elapsed = now - feedback.time;\n      if (elapsed < 3000) {\n        // Draw points with consistent styling\n        ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n        ctx.shadowBlur = 4;\n        ctx.fillStyle = feedback.isCorrect ? '#4CAF50' : '#F44336';\n        ctx.font = 'bold 28px Arial';\n        \n        // Show points with + or - sign\n        const pointsText = feedback.points > 0 ? `+${feedback.points}` : `${feedback.points}`;\n        ctx.fillText(\n          pointsText,\n          feedback.x + 10,\n          feedback.y - 20\n        );\n\n        // Draw icon name\n        ctx.font = '16px Arial';\n        ctx.fillText(\n          feedback.name,\n          feedback.x + 60,\n          feedback.y + 25\n        );\n        \n        // Draw feedback symbol\n        ctx.font = 'bold 55px Arial';\n        ctx.fillText(\n          feedback.isCorrect ? '✔' : '✘',\n          feedback.x + 10,\n          feedback.y + 30\n        );\n        \n        ctx.shadowBlur = 0;\n        return true;\n      }\n      return false;\n    });\n\n    checkCollisions();\n\n    // Update and draw particles\n    particlesRef.current = particlesRef.current.filter(particle => {\n      if (particle.lifetime > 0 && particle.size > 0) {\n        particle.update();\n        particle.draw(ctx);\n        return true;\n      }\n      return false;\n    });\n\n    requestAnimationFrame(gameLoop);\n  };\n\n  // Add sound references with error handling\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Initialize sounds with error handling\n  useEffect(() => {\n    const soundFiles = {\n      shoot: '/sounds/pistol_sound.mp3',\n      correct: '/sounds/correct_sound.mp3',\n      incorrect: '/sounds/incorrect_sound.mp3',\n      levelup: '/sounds/levelup.mp3'\n    };\n\n    // Create a safe audio player that won't break if files are missing\n    const createSafeAudio = (path) => {\n      const audio = new Audio();\n      \n      return new Promise((resolve) => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n\n        // Set timeout in case the file takes too long to load\n        setTimeout(() => resolve(null), 2000);\n\n        audio.src = path;\n      });\n    };\n\n    // Load all sound files with error handling\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      \n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n\n    loadSounds();\n\n    // Set initial volume\n    return () => {\n      // Cleanup sounds on unmount\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  // Safe play function\n  const playSound = (soundName) => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Add a mute toggle button to the UI\n  const [isMuted, setIsMuted] = useState(false);\n\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !isMuted;\n      }\n    });\n  };\n\n  // Add new state and refs for particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n\n  // Add state to track if we've already handled game over\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  // Particle class\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size; // Store initial size\n    }\n\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      // Calculate size based on lifetime instead of continuous subtraction\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n\n    draw(ctx) {\n      if (this.size <= 0) return; // Don't draw if size is 0 or negative\n      \n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Function to create explosion effect\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (!gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled]);\n\n  // Handle game over\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    \n    setGameOver(true);\n    setGameOverHandled(true);\n    \n    const newScore = { name: playerName, score };\n    const newHighScores = [...highScores, newScore]\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 5);\n    \n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  // Split the initialization into two effects\n  // First effect for canvas setup\n  useEffect(() => {\n    if (canvasRef.current) {\n      const canvas = canvasRef.current;\n      canvas.width = 1200;\n      canvas.height = 800;\n      \n      const ctx = canvas.getContext('2d');\n      ctx.imageSmoothingEnabled = true;\n\n      loadIcons();\n      requestAnimationFrame(gameLoop);\n    }\n  }, []);\n\n  // Second effect for event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    \n    const ROCKET_WIDTH = 50;\n    const FIXED_ROCKET_Y = 550;\n\n    const handleMouseMove = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      \n      // Calculate new X position\n      let newX = e.clientX - rect.left - (gunRef.current.width / 2);\n      \n      // Add boundary checks\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n      \n      // Update gun position\n      gunRef.current.x = newX;\n    };\n\n    const handleCanvasClick = () => {\n      if (timeLeft > 0) {\n        playSound('pistol_sound');\n        \n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20,\n        });\n      }\n    };\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [timeLeft]);\n\n  // Clear both name and rocket selection when component mounts\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  // Add state for modal visibility\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  // Add rocket options\n  const rocketOptions = [\n    { id: 'rocket1.png', name: 'Modern Rocket' },\n    { id: 'rocket2.png', name: 'Power Rocket' },\n    { id: 'rocket3.png', name: 'Stealth Rocket' },\n    { id: 'rocket4.png', name: 'Classic Rocket' },\n  ];\n\n  // Handle rocket selection\n  const handleRocketSelect = (rocketId) => {\n    setSelectedRocket(rocketId);\n    localStorage.setItem('selectedRocket', rocketId);\n    \n    // Update the rocket image immediately\n    rocketImage.current.src = `icons/${rocketId}`;\n    \n    setShowRocketModal(false);\n  };\n\n  // Add state for cheerleader messages\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  // Add cheerleader messages for different situations\n  const cheerleaderMessages = {\n    goodShot: [\n      \"Great shot! You're an AWS Pro! 🌟\",\n      \"Amazing cloud skills! Keep it up! 🎯\",\n      \"You're on fire in the cloud! 🔥\",\n      \"That's how AWS experts do it! 👏\",\n    ],\n    combo: [\n      \"Cloud combo! 🎮\",\n      \"You're scaling infinitely! ⚡\",\n      \"What an AWS streak! 🌈\",\n    ],\n    timeWarning: [\n      \"30 seconds left - you're highly available! ⏰\",\n      \"Time for the final deployment! 💪\",\n      \"Make every compute unit count! ⭐\",\n    ],\n    encouragement: [\n      \"You've got this, cloud warrior! 🚀\",\n      \"Keep going! You're AWS certified material! 🌟\",\n      \"I believe in your cloud powers! 💫\",\n      \"Show them your AWS expertise! 💪\",\n    ],\n    highScore: [\n      \"New high score! You're going serverless! 🏆\",\n      \"You're breaking cloud records! 🎖️\",\n      \"Legendary AWS performance! 👑\",\n    ]\n  };\n\n  // Function to show a random message from a category\n  const showCheerleaderMessage = (category) => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n    \n    // Hide message after 3 seconds\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  // Add periodic encouragement\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  // Add time warning messages\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  return (\n    <div className=\"gameCanvas-container\">\n      <h1 className=\"gameCanvas-game-title\">AWS Cloud Shooter</h1>\n      <div className=\"gameCanvas-game-content\">\n        <div className=\"gameCanvas-canvas-wrapper\">\n          <canvas ref={canvasRef} className=\"gameCanvas-game-canvas\" />\n        </div>\n        <div className=\"gameCanvas-instruction-panel\">\n          <div className=\"gameCanvas-player-info\">\n            <div className=\"gameCanvas-player-name\">\n              Player: {playerName}\n            </div>\n            <div className=\"gameCanvas-score-display\">\n              <span role=\"img\" aria-label=\"alien\">👾</span>{' '}\n              Score: {score}{' '}\n              <span role=\"img\" aria-label=\"joystick\">🕹️</span>\n              \n              {soundsLoaded && Object.values(sounds.current).some(sound => sound) && (\n                <button \n                  className=\"gameCanvas-sound-toggle\"\n                  onClick={toggleMute}\n                  aria-label=\"Toggle sound\"\n                >\n                  {isMuted ? '🔇' : '🔊'}\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"gameCanvas-timer-display\">\n            Time: {timeLeft}s\n          </div>\n\n          <div className=\"gameCanvas-score-explanation\">\n            <h4>How to Score:</h4>\n            <ul>\n            <li>• Hit correct icon: +5 points</li>\n            <li>• Height bonus: up to +20</li>\n            <li>• Wrong hit: -5 points</li>\n            <li>• Tip: Shoot icons as high as possible!</li>\n            </ul>\n          </div>\n\n          <div className=\"gameCanvas-high-scores\">\n          <h4>High Scores</h4>\n          <ul>\n            {highScores.map((entry, index) => (\n              <li key={index}>\n                <span className=\"gameCanvas-high-score-name\">{entry.name}:</span> {entry.score}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n          <div className=\"gameCanvas-mission-container\">\n            <h3 className=\"gameCanvas-mission-title\">\n              Current Mission\n            </h3>\n            \n            <div className=\"gameCanvas-mission-text\">\n              {instructions[currentInstructionIndex].text}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showRocketModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-rocket-selection-modal\">\n            <h2>Choose Your Rocket</h2>\n            <div className=\"gameCanvas-rocket-grid\">\n              {rocketOptions.map((rocket) => (\n                <div \n                  key={rocket.id} \n                  className={`gameCanvas-rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`}\n                  onClick={() => handleRocketSelect(rocket.id)}\n                >\n                  <img \n                    src={`icons/${rocket.id}`} \n                    alt={rocket.name}\n                  />\n                  <p>{rocket.name}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {gameOver && (\n        <div className=\"gameCanvas-game-over\">\n          <h3>Game Over!</h3>\n          <button onClick={() => window.location.reload()}>\n            Play Again\n          </button>\n        </div>\n      )}\n\n      {showCheerMessage && (\n        <div className=\"gameCanvas-cheerleader-container\">\n          <div className=\"gameCanvas-cheerleader-character\">\n            <img src=\"icons/cheerleader.png\" alt=\"Cheerleader\" />\n          </div>\n          <div className=\"gameCanvas-cheer-message\">\n            {cheerMessage}\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GameCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}