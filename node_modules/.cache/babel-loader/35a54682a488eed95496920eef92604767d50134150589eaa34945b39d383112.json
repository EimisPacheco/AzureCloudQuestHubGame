{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/IconsSelectCategoryFast.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport '../styles/GameCanvas.css';\nimport '../styles/IconsSelectCategoryFast.css';\nimport { getCategoryIcons, getRandomCategory } from '../utils/categorySelectionUtils';\nimport { getServiceIconUrl } from '../utils/memoryGameUtils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IconsSelectCategoryFast = () => {\n  _s();\n  // Game state\n  const [currentCategory, setCurrentCategory] = useState('');\n  const [displayCategory, setDisplayCategory] = useState('');\n  const [icons, setIcons] = useState([]);\n  const [selectedIcons, setSelectedIcons] = useState([]);\n  const [correctSelections, setCorrectSelections] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [roundComplete, setRoundComplete] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const TIME_LIMIT = 60; // 60 seconds time limit per round\n\n  // Sound state\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const sounds = useRef({});\n\n  // Game container ref\n  const gameContainerRef = useRef(null);\n  const timerRef = useRef(null);\n  const categoryIconsRef = useRef([]);\n\n  // Player state & Welcome Modal State\n  const [playerName, setPlayerName] = useState('');\n  const [showWelcome, setShowWelcome] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n\n  // Define sound files\n  const soundFiles = {\n    select: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/flip-switch.mp3`,\n    correct: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n    incorrect: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n    hover: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/hover.mp3`,\n    achievement: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/levelup.mp3`\n  };\n\n  // Helper function to safely create audio objects with timeout\n  const createSafeAudio = useCallback(path => {\n    const audio = new Audio();\n    return new Promise(resolve => {\n      audio.addEventListener('error', () => {\n        console.warn(`Sound file not found: ${path}`);\n        resolve(null);\n      });\n      audio.addEventListener('canplaythrough', () => {\n        resolve(audio);\n      });\n      // Timeout fallback in case sound loading takes too long\n      setTimeout(() => {\n        if (audio.readyState < 3) {\n          console.warn(`Sound loading timeout: ${path}`);\n          resolve(null);\n        }\n      }, 3000);\n      audio.src = path;\n    });\n  }, []);\n\n  // Load all sounds\n  useEffect(() => {\n    const loadSounds = async () => {\n      const soundPromises = Object.entries(soundFiles).map(async ([name, path]) => {\n        try {\n          const audio = await createSafeAudio(path);\n          return [name, audio];\n        } catch (error) {\n          console.error(`Failed to load sound ${name}:`, error);\n          return [name, null];\n        }\n      });\n      try {\n        const loadedSounds = await Promise.all(soundPromises);\n        const soundsMap = Object.fromEntries(loadedSounds);\n        sounds.current = soundsMap;\n\n        // Check if at least some sounds loaded successfully\n        const hasLoadedSounds = Object.values(soundsMap).some(sound => sound !== null);\n        setSoundsLoaded(hasLoadedSounds);\n        if (hasLoadedSounds) {\n          console.log('🔊 Sounds loaded successfully');\n        } else {\n          console.warn('⚠️ No sounds could be loaded');\n        }\n      } catch (error) {\n        console.error('Failed to load sounds:', error);\n      }\n    };\n    loadSounds();\n  }, [createSafeAudio]);\n\n  // Toggle mute\n  const toggleMute = useCallback(() => {\n    setIsMuted(!isMuted);\n  }, [isMuted]);\n\n  // Play a sound effect\n  const playSound = useCallback(soundName => {\n    if (isMuted || !sounds.current[soundName]) return;\n    const sound = sounds.current[soundName];\n    sound.currentTime = 0;\n    sound.play().catch(err => console.warn('Error playing sound:', err));\n  }, [isMuted]);\n\n  // Initialize a round (called by startGame and nextCategory)\n  const initRound = useCallback(() => {\n    const {\n      category,\n      displayName,\n      icons: allIcons,\n      targetIcons\n    } = getRandomCategory();\n    setCurrentCategory(category);\n    setDisplayCategory(displayName);\n    setIcons(allIcons);\n    categoryIconsRef.current = targetIcons;\n    setSelectedIcons([]);\n    setCorrectSelections(0);\n    setTimeElapsed(0);\n    setRoundComplete(false);\n    setGameOver(false);\n    setShowConfetti(false);\n\n    // Clear any existing timer\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n\n    // Start timer only if game has officially started (name entered)\n    if (gameStarted) {\n      const startTime = Date.now();\n      timerRef.current = setInterval(() => {\n        const newTime = Math.floor((Date.now() - startTime) / 1000);\n        setTimeElapsed(newTime);\n\n        // Check if time has run out\n        if (newTime >= TIME_LIMIT) {\n          if (timerRef.current) {\n            clearInterval(timerRef.current);\n          }\n          // Only set gameOver if the round wasn't already completed successfully\n          if (!roundComplete) {\n            setGameOver(true);\n            playSound('incorrect');\n          }\n        }\n      }, 1000);\n    }\n    console.log(`Starting new round with category: ${displayName}`);\n    console.log(`Target icons:`, targetIcons);\n  }, [gameStarted, roundComplete, playSound]);\n\n  // Next category logic\n  const nextCategory = useCallback(() => {\n    // Stop any confetti\n    setShowConfetti(false);\n\n    // Reset game state for next round using initRound\n    initRound();\n\n    // Play sound effect\n    playSound('select');\n  }, [initRound, playSound]);\n\n  // Handle round completion\n  const handleRoundComplete = useCallback(() => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    setRoundComplete(true);\n    setShowConfetti(true);\n    playSound('achievement');\n\n    // Calculate score based on time\n    const timeBonus = Math.max(100 - timeElapsed * 2, 10);\n    setScore(prev => prev + timeBonus);\n\n    // Automatically move to the next category after a delay\n    setTimeout(() => {\n      nextCategory();\n    }, 3000); // 3 second delay\n  }, [timeElapsed, playSound, nextCategory]);\n\n  // Handle card click - Updated Scoring\n  const handleCardClick = iconName => {\n    if (roundComplete || gameOver) return; // Don't allow clicks if round/game is over\n\n    playSound('select');\n    const isTarget = categoryIconsRef.current.includes(iconName);\n    if (selectedIcons.includes(iconName)) {\n      // Deselecting\n      setSelectedIcons(prev => prev.filter(i => i !== iconName));\n      if (isTarget) {\n        setCorrectSelections(prev => prev - 1);\n        // Optional: Penalize for deselecting a correct card? Current logic doesn't.\n      }\n    } else {\n      // Selecting\n      setSelectedIcons(prev => [...prev, iconName]);\n      if (isTarget) {\n        // Correct selection\n        const newCorrectSelections = correctSelections + 1;\n        setCorrectSelections(newCorrectSelections);\n        playSound('correct');\n        setScore(prev => prev + 5); // Add 5 points for correct selection\n\n        // Check if all correct icons are selected\n        if (newCorrectSelections === categoryIconsRef.current.length) {\n          handleRoundComplete();\n        }\n      } else {\n        // Incorrect selection\n        playSound('incorrect');\n        setScore(prev => Math.max(0, prev - 5)); // Penalty of 5 points\n      }\n    }\n  };\n\n  // Start the actual game after name submission\n  const startGame = useCallback(() => {\n    setShowWelcome(false);\n    setGameStarted(true); // Mark game as officially started\n    setScore(0); // Reset score when starting fresh\n    initRound(); // Initialize the first round\n  }, [initRound]);\n\n  // Handle Name Submission from Welcome Modal\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    const trimmedName = tempPlayerName.trim();\n    if (trimmedName.length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (trimmedName.length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(trimmedName);\n    // Optionally save to localStorage if needed: localStorage.setItem('playerName', trimmedName);\n    setNameError('');\n    startGame(); // Call startGame to hide modal and init the first round\n  };\n\n  // Effect to handle game over state (when timer runs out)\n  useEffect(() => {\n    let timer;\n    if (gameOver && !roundComplete) {\n      // Only trigger if game over due to time, not completion\n      // Show failure message, maybe wait a bit before next round\n      timer = setTimeout(() => {\n        nextCategory(); // Move to the next category/round after timeout\n      }, 3000); // 3 second delay\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [gameOver, roundComplete, nextCategory]);\n\n  // Cleanup timer on unmount\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n\n  // Format time as MM:SS\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins < 10 ? '0' : ''}${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // Confetti component\n  const Confetti = ({\n    active\n  }) => {\n    if (!active) return null;\n    const confettiCount = 150;\n    const confetti = [];\n    for (let i = 0; i < confettiCount; i++) {\n      const left = `${Math.random() * 100}%`;\n      const animationDelay = `${Math.random() * 5}s`;\n      const initialOpacity = Math.random();\n      const size = `${Math.random() * 10 + 5}px`;\n      const rotation = `${Math.random() * 360}deg`;\n      const color = ['#00ffff',\n      // Cyan (Azure color)\n      '#0078d4',\n      // Blue (Azure color)\n      '#ffb900',\n      // Gold\n      '#e74c3c',\n      // Red\n      '#2ecc71',\n      // Green\n      '#9b59b6',\n      // Purple\n      '#3498db' // Light blue\n      ][Math.floor(Math.random() * 7)];\n      confetti.push(/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"memory-confetti-particle\",\n        style: {\n          left,\n          top: '-10px',\n          width: size,\n          height: size,\n          backgroundColor: color,\n          transform: `rotate(${rotation})`,\n          opacity: initialOpacity,\n          animationDelay\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 9\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memory-confetti-container\",\n      children: confetti\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 12\n    }, this);\n  };\n\n  // Show Welcome Modal if showWelcome is true\n  if (showWelcome) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to Azure Category Challenge!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your name to start the game:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempPlayerName,\n            onChange: e => {\n              setTempPlayerName(e.target.value);\n              setNameError(''); // Clear error on change\n            },\n            placeholder: \"Your name\",\n            className: \"gameCanvas-name-input\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 343,\n            columnNumber: 13\n          }, this), nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-name-error\",\n            children: nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"gameCanvas-start-button\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 342,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 7\n    }, this);\n  }\n\n  // Main Game UI\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-container\",\n    ref: gameContainerRef,\n    children: [/*#__PURE__*/_jsxDEV(Confetti, {\n      active: showConfetti\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameCanvas-game-title\",\n      style: {\n        '--azure-icon': `url(${process.env.PUBLIC_URL}/azure-icons/Microsoft_Azure_Cyan.svg)`\n      },\n      children: \"Azure Category Challenge\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-canvas-wrapper\",\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'flex-start'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-selection-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"category-selection-instruction\",\n            children: [\"Select all cards for: \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"category-highlight\",\n              children: displayCategory\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"category-selection-progress\",\n            children: [\"Found: \", correctSelections, \" / \", categoryIconsRef.current.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 381,\n          columnNumber: 11\n        }, this), soundsLoaded && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"memory-game-sound-toggle top-right\",\n          onClick: toggleMute,\n          \"aria-label\": \"Toggle sound\",\n          children: isMuted ? '🔇' : '🔊'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 391,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-player-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-player-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gameCanvas-player-name\",\n              children: [\"Player: \", playerName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 402,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gameCanvas-score-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"alien\",\n                children: \"\\uD83D\\uDC7E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 17\n              }, this), ' ', \"Score: \", score, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"joystick\",\n                children: \"\\uD83D\\uDD79\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 401,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-timer-display\",\n            children: [\"Time: \", formatTime(TIME_LIMIT - timeElapsed)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 411,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-selection-grid\",\n          children: icons.map((icon, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `category-selection-card ${selectedIcons.includes(icon.name) ? categoryIconsRef.current.includes(icon.name) ? 'correct' : 'wrong' : ''} ${roundComplete || gameOver ? 'disabled' : ''}`,\n            onClick: () => handleCardClick(icon.name),\n            onMouseEnter: () => !roundComplete && !gameOver && playSound('hover'),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: getServiceIconUrl(icon.path),\n              alt: icon.name,\n              onError: e => {\n                e.target.onerror = null;\n                e.target.src = `${process.env.PUBLIC_URL}/azure-icons/default.svg`;\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"category-selection-card-text\",\n              children: icon.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 433,\n              columnNumber: 17\n            }, this)]\n          }, `${icon.name}-${index}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 418,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), roundComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-selection-message category-selection-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Great job! You found all \", categoryIconsRef.current.length, \" icons in \", timeElapsed, \" seconds.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Time Bonus: +\", Math.max(100 - timeElapsed * 2, 10), \" points!\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 441,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Next round starting soon...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 442,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), gameOver && !roundComplete && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"category-selection-message category-selection-failure-banner\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Time's up!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 448,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"You found \", correctSelections, \" out of \", categoryIconsRef.current.length, \" icons for \", displayCategory, \".\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Next round starting soon...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 447,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 379,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 366,\n    columnNumber: 5\n  }, this);\n};\n_s(IconsSelectCategoryFast, \"YgWYsUpDe8lLDPqeCgeaEuekVeU=\");\n_c = IconsSelectCategoryFast;\nexport default IconsSelectCategoryFast;\nvar _c;\n$RefreshReg$(_c, \"IconsSelectCategoryFast\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","getCategoryIcons","getRandomCategory","getServiceIconUrl","jsxDEV","_jsxDEV","IconsSelectCategoryFast","_s","currentCategory","setCurrentCategory","displayCategory","setDisplayCategory","icons","setIcons","selectedIcons","setSelectedIcons","correctSelections","setCorrectSelections","timeElapsed","setTimeElapsed","score","setScore","gameStarted","setGameStarted","roundComplete","setRoundComplete","gameOver","setGameOver","showConfetti","setShowConfetti","TIME_LIMIT","soundsLoaded","setSoundsLoaded","isMuted","setIsMuted","sounds","gameContainerRef","timerRef","categoryIconsRef","playerName","setPlayerName","showWelcome","setShowWelcome","tempPlayerName","setTempPlayerName","nameError","setNameError","soundFiles","select","process","env","REACT_APP_AZURE_BUCKET_URL","correct","incorrect","hover","achievement","createSafeAudio","path","audio","Audio","Promise","resolve","addEventListener","console","warn","setTimeout","readyState","src","loadSounds","soundPromises","Object","entries","map","name","error","loadedSounds","all","soundsMap","fromEntries","current","hasLoadedSounds","values","some","sound","log","toggleMute","playSound","soundName","currentTime","play","catch","err","initRound","category","displayName","allIcons","targetIcons","clearInterval","startTime","Date","now","setInterval","newTime","Math","floor","nextCategory","handleRoundComplete","timeBonus","max","prev","handleCardClick","iconName","isTarget","includes","filter","i","newCorrectSelections","length","startGame","handleNameSubmit","e","preventDefault","trimmedName","trim","timer","clearTimeout","formatTime","seconds","mins","secs","Confetti","active","confettiCount","confetti","left","random","animationDelay","initialOpacity","size","rotation","color","push","className","style","top","width","height","backgroundColor","transform","opacity","fileName","_jsxFileName","lineNumber","columnNumber","children","onSubmit","type","value","onChange","target","placeholder","autoFocus","ref","PUBLIC_URL","display","flexDirection","alignItems","justifyContent","onClick","role","icon","index","onMouseEnter","alt","onError","onerror","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/IconsSelectCategoryFast.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport '../styles/GameCanvas.css';\nimport '../styles/IconsSelectCategoryFast.css';\nimport { getCategoryIcons, getRandomCategory } from '../utils/categorySelectionUtils';\nimport { getServiceIconUrl } from '../utils/memoryGameUtils';\n\nconst IconsSelectCategoryFast = () => {\n  // Game state\n  const [currentCategory, setCurrentCategory] = useState('');\n  const [displayCategory, setDisplayCategory] = useState('');\n  const [icons, setIcons] = useState([]);\n  const [selectedIcons, setSelectedIcons] = useState([]);\n  const [correctSelections, setCorrectSelections] = useState(0);\n  const [timeElapsed, setTimeElapsed] = useState(0);\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [roundComplete, setRoundComplete] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const TIME_LIMIT = 60; // 60 seconds time limit per round\n  \n  // Sound state\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const sounds = useRef({});\n  \n  // Game container ref\n  const gameContainerRef = useRef(null);\n  const timerRef = useRef(null);\n  const categoryIconsRef = useRef([]);\n\n  // Player state & Welcome Modal State\n  const [playerName, setPlayerName] = useState('');\n  const [showWelcome, setShowWelcome] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n\n  // Define sound files\n  const soundFiles = {\n    select: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/flip-switch.mp3`,\n    correct: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n    incorrect: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n    hover: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/hover.mp3`,\n    achievement: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/levelup.mp3`\n  };\n\n  // Helper function to safely create audio objects with timeout\n  const createSafeAudio = useCallback((path) => {\n    const audio = new Audio();\n    return new Promise((resolve) => {\n      audio.addEventListener('error', () => {\n        console.warn(`Sound file not found: ${path}`);\n        resolve(null);\n      });\n      audio.addEventListener('canplaythrough', () => {\n        resolve(audio);\n      });\n      // Timeout fallback in case sound loading takes too long\n      setTimeout(() => {\n        if (audio.readyState < 3) {\n          console.warn(`Sound loading timeout: ${path}`);\n          resolve(null);\n        }\n      }, 3000);\n      audio.src = path;\n    });\n  }, []);\n\n  // Load all sounds\n  useEffect(() => {\n    const loadSounds = async () => {\n      const soundPromises = Object.entries(soundFiles).map(async ([name, path]) => {\n        try {\n          const audio = await createSafeAudio(path);\n          return [name, audio];\n        } catch (error) {\n          console.error(`Failed to load sound ${name}:`, error);\n          return [name, null];\n        }\n      });\n\n      try {\n        const loadedSounds = await Promise.all(soundPromises);\n        const soundsMap = Object.fromEntries(loadedSounds);\n        sounds.current = soundsMap;\n        \n        // Check if at least some sounds loaded successfully\n        const hasLoadedSounds = Object.values(soundsMap).some(sound => sound !== null);\n        setSoundsLoaded(hasLoadedSounds);\n        \n        if (hasLoadedSounds) {\n          console.log('🔊 Sounds loaded successfully');\n        } else {\n          console.warn('⚠️ No sounds could be loaded');\n        }\n      } catch (error) {\n        console.error('Failed to load sounds:', error);\n      }\n    };\n\n    loadSounds();\n  }, [createSafeAudio]);\n  \n  // Toggle mute\n  const toggleMute = useCallback(() => {\n    setIsMuted(!isMuted);\n  }, [isMuted]);\n\n  // Play a sound effect\n  const playSound = useCallback(\n    (soundName) => {\n      if (isMuted || !sounds.current[soundName]) return;\n      const sound = sounds.current[soundName];\n      sound.currentTime = 0;\n      sound.play().catch(err => console.warn('Error playing sound:', err));\n    },\n    [isMuted]\n  );\n\n  // Initialize a round (called by startGame and nextCategory)\n  const initRound = useCallback(() => {\n    const { category, displayName, icons: allIcons, targetIcons } = getRandomCategory();\n    \n    setCurrentCategory(category);\n    setDisplayCategory(displayName);\n    setIcons(allIcons);\n    categoryIconsRef.current = targetIcons;\n    setSelectedIcons([]);\n    setCorrectSelections(0);\n    setTimeElapsed(0);\n    setRoundComplete(false);\n    setGameOver(false);\n    setShowConfetti(false);\n\n    // Clear any existing timer\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    \n    // Start timer only if game has officially started (name entered)\n    if (gameStarted) {\n      const startTime = Date.now();\n      timerRef.current = setInterval(() => {\n        const newTime = Math.floor((Date.now() - startTime) / 1000);\n        setTimeElapsed(newTime);\n        \n        // Check if time has run out\n        if (newTime >= TIME_LIMIT) {\n          if (timerRef.current) {\n            clearInterval(timerRef.current);\n          }\n          // Only set gameOver if the round wasn't already completed successfully\n          if (!roundComplete) {\n            setGameOver(true);\n            playSound('incorrect');\n          }\n        }\n      }, 1000);\n    }\n    \n    console.log(`Starting new round with category: ${displayName}`);\n    console.log(`Target icons:`, targetIcons);\n  }, [gameStarted, roundComplete, playSound]);\n\n  // Next category logic\n  const nextCategory = useCallback(() => {\n    // Stop any confetti\n    setShowConfetti(false);\n    \n    // Reset game state for next round using initRound\n    initRound();\n    \n    // Play sound effect\n    playSound('select');\n  }, [initRound, playSound]);\n\n  // Handle round completion\n  const handleRoundComplete = useCallback(() => {\n    if (timerRef.current) {\n      clearInterval(timerRef.current);\n    }\n    \n    setRoundComplete(true);\n    setShowConfetti(true);\n    playSound('achievement');\n    \n    // Calculate score based on time\n    const timeBonus = Math.max(100 - timeElapsed * 2, 10);\n    setScore(prev => prev + timeBonus);\n\n    // Automatically move to the next category after a delay\n    setTimeout(() => {\n      nextCategory();\n    }, 3000); // 3 second delay\n  }, [timeElapsed, playSound, nextCategory]);\n\n  // Handle card click - Updated Scoring\n  const handleCardClick = (iconName) => {\n    if (roundComplete || gameOver) return; // Don't allow clicks if round/game is over\n\n    playSound('select');\n    \n    const isTarget = categoryIconsRef.current.includes(iconName);\n\n    if (selectedIcons.includes(iconName)) {\n      // Deselecting\n      setSelectedIcons(prev => prev.filter(i => i !== iconName));\n      if (isTarget) {\n        setCorrectSelections(prev => prev - 1);\n        // Optional: Penalize for deselecting a correct card? Current logic doesn't.\n      }\n    } else {\n      // Selecting\n      setSelectedIcons(prev => [...prev, iconName]);\n      \n      if (isTarget) {\n        // Correct selection\n        const newCorrectSelections = correctSelections + 1;\n        setCorrectSelections(newCorrectSelections);\n        playSound('correct');\n        setScore(prev => prev + 5); // Add 5 points for correct selection\n        \n        // Check if all correct icons are selected\n        if (newCorrectSelections === categoryIconsRef.current.length) {\n          handleRoundComplete();\n        }\n      } else {\n        // Incorrect selection\n        playSound('incorrect');\n        setScore(prev => Math.max(0, prev - 5)); // Penalty of 5 points\n      }\n    }\n  };\n\n  // Start the actual game after name submission\n  const startGame = useCallback(() => {\n    setShowWelcome(false);\n    setGameStarted(true); // Mark game as officially started\n    setScore(0); // Reset score when starting fresh\n    initRound(); // Initialize the first round\n  }, [initRound]);\n\n  // Handle Name Submission from Welcome Modal\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n    const trimmedName = tempPlayerName.trim();\n    if (trimmedName.length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (trimmedName.length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(trimmedName);\n    // Optionally save to localStorage if needed: localStorage.setItem('playerName', trimmedName);\n    setNameError('');\n    startGame(); // Call startGame to hide modal and init the first round\n  };\n\n  // Effect to handle game over state (when timer runs out)\n  useEffect(() => {\n    let timer;\n    if (gameOver && !roundComplete) { // Only trigger if game over due to time, not completion\n      // Show failure message, maybe wait a bit before next round\n      timer = setTimeout(() => {\n        nextCategory(); // Move to the next category/round after timeout\n      }, 3000); // 3 second delay\n    }\n    return () => {\n      if (timer) clearTimeout(timer);\n    };\n  }, [gameOver, roundComplete, nextCategory]);\n\n  // Cleanup timer on unmount\n  useEffect(() => {\n    return () => {\n      if (timerRef.current) {\n        clearInterval(timerRef.current);\n      }\n    };\n  }, []);\n\n  // Format time as MM:SS\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = seconds % 60;\n    return `${mins < 10 ? '0' : ''}${mins}:${secs < 10 ? '0' : ''}${secs}`;\n  };\n\n  // Confetti component\n  const Confetti = ({ active }) => {\n    if (!active) return null;\n    \n    const confettiCount = 150;\n    const confetti = [];\n    \n    for (let i = 0; i < confettiCount; i++) {\n      const left = `${Math.random() * 100}%`;\n      const animationDelay = `${Math.random() * 5}s`;\n      const initialOpacity = Math.random();\n      const size = `${Math.random() * 10 + 5}px`;\n      const rotation = `${Math.random() * 360}deg`;\n      const color = [\n        '#00ffff', // Cyan (Azure color)\n        '#0078d4', // Blue (Azure color)\n        '#ffb900', // Gold\n        '#e74c3c', // Red\n        '#2ecc71', // Green\n        '#9b59b6', // Purple\n        '#3498db', // Light blue\n      ][Math.floor(Math.random() * 7)];\n      \n      confetti.push(\n        <div \n          key={i}\n          className=\"memory-confetti-particle\"\n          style={{\n            left,\n            top: '-10px',\n            width: size,\n            height: size,\n            backgroundColor: color,\n            transform: `rotate(${rotation})`,\n            opacity: initialOpacity,\n            animationDelay,\n          }}\n        />\n      );\n    }\n    \n    return <div className=\"memory-confetti-container\">{confetti}</div>;\n  };\n\n  // Show Welcome Modal if showWelcome is true\n  if (showWelcome) {\n    return (\n      <div className=\"gameCanvas-modal-overlay\">\n        <div className=\"gameCanvas-modal\">\n          <h2>Welcome to Azure Category Challenge!</h2>\n          <p>Enter your name to start the game:</p>\n          <form onSubmit={handleNameSubmit}>\n            <input\n              type=\"text\"\n              value={tempPlayerName}\n              onChange={(e) => {\n                setTempPlayerName(e.target.value);\n                setNameError(''); // Clear error on change\n              }}\n              placeholder=\"Your name\"\n              className=\"gameCanvas-name-input\"\n              autoFocus\n            />\n            {nameError && <div className=\"gameCanvas-name-error\">{nameError}</div>}\n            <button type=\"submit\" className=\"gameCanvas-start-button\">\n              Start Game\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n\n  // Main Game UI\n  return (\n    <div \n      className=\"gameCanvas-container\" \n      ref={gameContainerRef}\n    >\n      <Confetti active={showConfetti} />\n\n      <h1 \n        className=\"gameCanvas-game-title\"\n        style={{ '--azure-icon': `url(${process.env.PUBLIC_URL}/azure-icons/Microsoft_Azure_Cyan.svg)` }}\n      >\n        Azure Category Challenge\n      </h1>\n      \n      <div className=\"gameCanvas-game-content\">\n        <div className=\"gameCanvas-canvas-wrapper\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', justifyContent: 'flex-start' }}>\n          <div className=\"category-selection-header\">\n            <h2 className=\"category-selection-instruction\">\n              Select all cards for: <span className=\"category-highlight\">{displayCategory}</span>\n            </h2>\n            <p className=\"category-selection-progress\">\n              Found: {correctSelections} / {categoryIconsRef.current.length}\n            </p>\n          </div>\n          \n          {soundsLoaded && (\n            <button \n              className=\"memory-game-sound-toggle top-right\"\n              onClick={toggleMute}\n              aria-label=\"Toggle sound\"\n            >\n              {isMuted ? '🔇' : '🔊'}\n            </button>\n          )}\n          \n          <div className=\"gameCanvas-player-panel\">\n            <div className=\"gameCanvas-player-info\">\n              <div className=\"gameCanvas-player-name\">\n                Player: {playerName}\n              </div>\n              <div className=\"gameCanvas-score-display\">\n                <span role=\"img\" aria-label=\"alien\">👾</span>{' '}\n                Score: {score}{' '}\n                <span role=\"img\" aria-label=\"joystick\">🕹️</span>\n              </div>\n            </div>\n            <div className=\"gameCanvas-timer-display\">\n              Time: {formatTime(TIME_LIMIT - timeElapsed)}\n            </div>\n          </div>\n          \n          <div className=\"category-selection-grid\">\n            {icons.map((icon, index) => (\n              <div\n                key={`${icon.name}-${index}`}\n                className={`category-selection-card ${selectedIcons.includes(icon.name) ? \n                  (categoryIconsRef.current.includes(icon.name) ? 'correct' : 'wrong') : ''} ${roundComplete || gameOver ? 'disabled' : ''}`}\n                onClick={() => handleCardClick(icon.name)}\n                onMouseEnter={() => !roundComplete && !gameOver && playSound('hover')}\n              >\n                <img \n                  src={getServiceIconUrl(icon.path)} \n                  alt={icon.name} \n                  onError={(e) => {\n                    e.target.onerror = null;\n                    e.target.src = `${process.env.PUBLIC_URL}/azure-icons/default.svg`;\n                  }}\n                />\n                <div className=\"category-selection-card-text\">{icon.name}</div>\n              </div>\n            ))}\n          </div>\n          \n          {roundComplete && (\n            <div className=\"category-selection-message category-selection-success\">\n              <h3>Great job! You found all {categoryIconsRef.current.length} icons in {timeElapsed} seconds.</h3>\n              <p>Time Bonus: +{Math.max(100 - timeElapsed * 2, 10)} points!</p>\n              <p>Next round starting soon...</p>\n            </div>\n          )}\n          \n          {gameOver && !roundComplete && (\n            <div className=\"category-selection-message category-selection-failure-banner\">\n              <h3>Time's up!</h3>\n              <p>You found {correctSelections} out of {categoryIconsRef.current.length} icons for {displayCategory}.</p>\n              <p>Next round starting soon...</p>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default IconsSelectCategoryFast; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}