{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSArchitectureDisplay = ({\n  architecture\n}) => {\n  if (!architecture || !architecture.services) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"architecture-container\",\n      children: \"No architecture to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 3,\n      columnNumber: 12\n    }, this);\n  }\n  const calculateServicePositions = () => {\n    const positions = {};\n    const totalWidth = 1000;\n    const totalHeight = 400;\n    const serviceWidth = 120;\n    const serviceHeight = 100;\n\n    // Count services to determine spacing\n    const serviceCount = architecture.services.length;\n    const horizontalGap = (totalWidth - serviceCount * serviceWidth) / (serviceCount + 1);\n\n    // Position services in a horizontal line with even spacing\n    architecture.services.forEach((service, index) => {\n      positions[service] = {\n        x: horizontalGap + index * (serviceWidth + horizontalGap),\n        y: totalHeight / 2 - serviceHeight / 2\n      };\n    });\n    return positions;\n  };\n  const positions = calculateServicePositions();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"architecture-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"architecture-diagram\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"connections-layer\",\n        width: \"100%\",\n        height: \"100%\",\n        children: architecture.connections.map(({\n          from,\n          to\n        }, index) => {\n          const fromPos = positions[from];\n          const toPos = positions[to];\n          if (fromPos && toPos) {\n            return /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: fromPos.x + 60,\n              y1: fromPos.y + 50,\n              x2: toPos.x + 60,\n              y2: toPos.y + 50,\n              stroke: \"#4FD1C5\",\n              strokeWidth: \"2\"\n            }, `${from}-${to}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this);\n          }\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"services-layer\",\n        children: architecture.services.map(service => {\n          const position = positions[service];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"service-node\",\n            style: {\n              transform: `translate(${position.x}px, ${position.y}px)`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"service-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `/aws-icons/${service.toLowerCase().replace(/\\s+/g, '-')}.png`,\n                alt: service,\n                onError: e => {\n                  e.target.src = '/aws-icons/default.png';\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"service-name\",\n              children: service\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)]\n          }, service, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_c = AWSArchitectureDisplay;\nexport default AWSArchitectureDisplay;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureDisplay\");","map":{"version":3,"names":["AWSArchitectureDisplay","architecture","services","_jsxDEV","className","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateServicePositions","positions","totalWidth","totalHeight","serviceWidth","serviceHeight","serviceCount","length","horizontalGap","forEach","service","index","x","y","width","height","connections","map","from","to","fromPos","toPos","x1","y1","x2","y2","stroke","strokeWidth","position","style","transform","src","toLowerCase","replace","alt","onError","e","target","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx"],"sourcesContent":["const AWSArchitectureDisplay = ({ architecture }) => {\n  if (!architecture || !architecture.services) {\n    return <div className=\"architecture-container\">No architecture to display</div>;\n  }\n\n  const calculateServicePositions = () => {\n    const positions = {};\n    const totalWidth = 1000;\n    const totalHeight = 400;\n    const serviceWidth = 120;\n    const serviceHeight = 100;\n    \n    // Count services to determine spacing\n    const serviceCount = architecture.services.length;\n    const horizontalGap = (totalWidth - (serviceCount * serviceWidth)) / (serviceCount + 1);\n    \n    // Position services in a horizontal line with even spacing\n    architecture.services.forEach((service, index) => {\n      positions[service] = {\n        x: horizontalGap + (index * (serviceWidth + horizontalGap)),\n        y: totalHeight / 2 - serviceHeight / 2\n      };\n    });\n\n    return positions;\n  };\n\n  const positions = calculateServicePositions();\n\n  return (\n    <div className=\"architecture-container\">\n      <div className=\"architecture-diagram\">\n        <svg className=\"connections-layer\" width=\"100%\" height=\"100%\">\n          {architecture.connections.map(({ from, to }, index) => {\n            const fromPos = positions[from];\n            const toPos = positions[to];\n            if (fromPos && toPos) {\n              return (\n                <line\n                  key={`${from}-${to}-${index}`}\n                  x1={fromPos.x + 60}\n                  y1={fromPos.y + 50}\n                  x2={toPos.x + 60}\n                  y2={toPos.y + 50}\n                  stroke=\"#4FD1C5\"\n                  strokeWidth=\"2\"\n                />\n              );\n            }\n            return null;\n          })}\n        </svg>\n        \n        <div className=\"services-layer\">\n          {architecture.services.map(service => {\n            const position = positions[service];\n            return (\n              <div\n                key={service}\n                className=\"service-node\"\n                style={{\n                  transform: `translate(${position.x}px, ${position.y}px)`\n                }}\n              >\n                <div className=\"service-icon\">\n                  <img\n                    src={`/aws-icons/${service.toLowerCase().replace(/\\s+/g, '-')}.png`}\n                    alt={service}\n                    onError={(e) => {\n                      e.target.src = '/aws-icons/default.png';\n                    }}\n                  />\n                </div>\n                <div className=\"service-name\">{service}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AWSArchitectureDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}