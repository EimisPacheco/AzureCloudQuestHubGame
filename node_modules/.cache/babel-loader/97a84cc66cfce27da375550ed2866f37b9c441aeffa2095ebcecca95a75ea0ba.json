{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactFlow, { Background, Controls } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSArchitectureDisplay = ({\n  architecture,\n  currentQuestion\n}) => {\n  _s();\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n  useEffect(() => {\n    if (architecture) {\n      // Create nodes for all services\n      const newNodes = architecture.services.map((service, index) => ({\n        id: service.id,\n        type: 'default',\n        data: {\n          label: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: service.icon,\n              alt: service.name,\n              style: {\n                width: 30,\n                height: 30\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: service.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 13\n          }, this)\n        },\n        position: {\n          x: index * 200,\n          y: Math.floor(index / 3) * 200\n        },\n        style: service.name.includes('missing') ? {\n          background: '#ffcccc'\n        } : {}\n      }));\n\n      // Create edges for all connections\n      const newEdges = architecture.connections.map((connection, index) => ({\n        id: `e${index}`,\n        source: connection.from.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n        target: connection.to.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n        type: 'smoothstep'\n      }));\n      setNodes(newNodes);\n      setEdges(newEdges);\n    }\n  }, [architecture]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      height: '500px'\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureDisplay, \"qOdGaiImnCja3mNU5uxxCrNYw9I=\");\n_c = AWSArchitectureDisplay;\nexport default AWSArchitectureDisplay;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureDisplay\");","map":{"version":3,"names":["React","useEffect","useState","ReactFlow","Background","Controls","jsxDEV","_jsxDEV","AWSArchitectureDisplay","architecture","currentQuestion","_s","nodes","setNodes","edges","setEdges","newNodes","services","map","service","index","id","type","data","label","children","src","icon","alt","name","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","position","x","y","Math","floor","includes","background","newEdges","connections","connection","source","from","toLowerCase","replace","target","to","fitView","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactFlow, { Background, Controls } from 'reactflow';\nimport 'reactflow/dist/style.css';\n\nconst AWSArchitectureDisplay = ({ architecture, currentQuestion }) => {\n  const [nodes, setNodes] = useState([]);\n  const [edges, setEdges] = useState([]);\n\n  useEffect(() => {\n    if (architecture) {\n      // Create nodes for all services\n      const newNodes = architecture.services.map((service, index) => ({\n        id: service.id,\n        type: 'default',\n        data: { \n          label: (\n            <div>\n              <img src={service.icon} alt={service.name} style={{ width: 30, height: 30 }} />\n              <div>{service.name}</div>\n            </div>\n          )\n        },\n        position: { x: index * 200, y: Math.floor(index / 3) * 200 },\n        style: service.name.includes('missing') ? { background: '#ffcccc' } : {}\n      }));\n\n      // Create edges for all connections\n      const newEdges = architecture.connections.map((connection, index) => ({\n        id: `e${index}`,\n        source: connection.from.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n        target: connection.to.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n        type: 'smoothstep',\n      }));\n\n      setNodes(newNodes);\n      setEdges(newEdges);\n    }\n  }, [architecture]);\n\n  return (\n    <div style={{ width: '100%', height: '500px' }}>\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        fitView\n      >\n        <Background />\n        <Controls />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default AWSArchitectureDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}