{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, useNodesState, useEdgesState, MarkerType } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSServiceNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(motion.div, {\n  className: \"aws-service-node\",\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  animate: {\n    scale: 1,\n    opacity: 1\n  },\n  exit: {\n    scale: 0,\n    opacity: 0\n  },\n  whileHover: {\n    scale: 1.1\n  },\n  transition: {\n    type: \"spring\",\n    stiffness: 300\n  },\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node-content\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.icon,\n      alt: data.label,\n      className: \"service-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"service-label\",\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this);\n_c = AWSServiceNode;\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\nconst AWSArchitectureDisplay = ({\n  architecture\n}) => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  React.useEffect(() => {\n    if (!(architecture !== null && architecture !== void 0 && architecture.services)) return;\n\n    // Create nodes\n    const newNodes = architecture.services.map((service, index) => ({\n      id: service.id,\n      type: 'awsService',\n      position: {\n        x: index * 200,\n        y: 200\n      },\n      data: {\n        label: service.name,\n        icon: service.icon\n      }\n    }));\n\n    // Create edges\n    const newEdges = (architecture.connections || []).map(conn => ({\n      id: `${conn.from}-${conn.to}`,\n      source: conn.from,\n      target: conn.to,\n      type: 'smoothstep',\n      animated: true,\n      style: {\n        stroke: '#4FD1C5',\n        strokeWidth: 2\n      },\n      markerEnd: {\n        type: MarkerType.ArrowClosed\n      }\n    }));\n    setNodes(newNodes);\n    setEdges(newEdges);\n  }, [architecture, setNodes, setEdges]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px'\n    },\n    className: \"architecture-visualizer\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      minZoom: 0.5,\n      maxZoom: 1.5,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#4FD1C5\",\n        gap: 16,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: () => '#4FD1C5',\n        maskColor: \"rgba(13, 25, 35, 0.7)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureDisplay, \"rzIEgmHf9ZP2zq7JmENY3vIBekY=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = AWSArchitectureDisplay;\nexport default AWSArchitectureDisplay;\nvar _c, _c2;\n$RefreshReg$(_c, \"AWSServiceNode\");\n$RefreshReg$(_c2, \"AWSArchitectureDisplay\");","map":{"version":3,"names":["React","ReactFlow","Background","Controls","MiniMap","useNodesState","useEdgesState","MarkerType","motion","jsxDEV","_jsxDEV","AWSServiceNode","data","div","className","initial","scale","opacity","animate","exit","whileHover","transition","type","stiffness","children","src","icon","alt","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","nodeTypes","awsService","AWSArchitectureDisplay","architecture","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","useEffect","services","newNodes","map","service","index","id","position","x","y","name","newEdges","connections","conn","from","to","source","target","animated","style","stroke","strokeWidth","markerEnd","ArrowClosed","height","fitView","minZoom","maxZoom","color","gap","size","nodeColor","maskColor","_c2","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx"],"sourcesContent":["import React from 'react';\nimport ReactFlow, { \n  Background, \n  Controls, \n  MiniMap,\n  useNodesState,\n  useEdgesState,\n  MarkerType\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\n\nconst AWSServiceNode = ({ data }) => (\n  <motion.div\n    className=\"aws-service-node\"\n    initial={{ scale: 0, opacity: 0 }}\n    animate={{ scale: 1, opacity: 1 }}\n    exit={{ scale: 0, opacity: 0 }}\n    whileHover={{ scale: 1.1 }}\n    transition={{ type: \"spring\", stiffness: 300 }}\n  >\n    <div className=\"node-content\">\n      <img src={data.icon} alt={data.label} className=\"service-icon\" />\n      <span className=\"service-label\">{data.label}</span>\n    </div>\n  </motion.div>\n);\n\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\n\nconst AWSArchitectureDisplay = ({ architecture }) => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  React.useEffect(() => {\n    if (!architecture?.services) return;\n\n    // Create nodes\n    const newNodes = architecture.services.map((service, index) => ({\n      id: service.id,\n      type: 'awsService',\n      position: { x: index * 200, y: 200 },\n      data: {\n        label: service.name,\n        icon: service.icon\n      }\n    }));\n\n    // Create edges\n    const newEdges = (architecture.connections || []).map((conn) => ({\n      id: `${conn.from}-${conn.to}`,\n      source: conn.from,\n      target: conn.to,\n      type: 'smoothstep',\n      animated: true,\n      style: { stroke: '#4FD1C5', strokeWidth: 2 },\n      markerEnd: { type: MarkerType.ArrowClosed }\n    }));\n\n    setNodes(newNodes);\n    setEdges(newEdges);\n  }, [architecture, setNodes, setEdges]);\n\n  return (\n    <div style={{ height: '500px' }} className=\"architecture-visualizer\">\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        nodeTypes={nodeTypes}\n        fitView\n        minZoom={0.5}\n        maxZoom={1.5}\n      >\n        <Background color=\"#4FD1C5\" gap={16} size={1} />\n        <Controls />\n        <MiniMap \n          nodeColor={() => '#4FD1C5'}\n          maskColor=\"rgba(13, 25, 35, 0.7)\"\n        />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default AWSArchitectureDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}