{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx\",\n  _s = $RefreshSig$();\nimport { getCachedServiceIcon, getIconResolutionStats } from '../services/IconResolver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSArchitectureDisplay = ({\n  architecture\n}) => {\n  _s();\n  if (!architecture || !architecture.services) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"architecture-container\",\n      children: \"No architecture to display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 12\n    }, this);\n  }\n  const calculateServicePositions = () => {\n    const positions = {};\n    const totalWidth = 1000;\n    const totalHeight = 400;\n    const serviceWidth = 120;\n    const serviceHeight = 100;\n    const serviceCount = architecture.services.length;\n    const horizontalGap = (totalWidth - serviceCount * serviceWidth) / (serviceCount + 1);\n    architecture.services.forEach((service, index) => {\n      positions[service.name] = {\n        x: horizontalGap + index * (serviceWidth + horizontalGap),\n        y: totalHeight / 2 - serviceHeight / 2\n      };\n    });\n    return positions;\n  };\n  const positions = calculateServicePositions();\n  useEffect(() => {\n    // After all icons are loaded, show statistics\n    const timer = setTimeout(() => {\n      getIconResolutionStats();\n    }, 2000); // Wait for all icons to attempt loading\n\n    return () => clearTimeout(timer);\n  }, [architecture]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"architecture-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"architecture-diagram\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        className: \"connections-layer\",\n        width: \"100%\",\n        height: \"100%\",\n        children: architecture.connections.map(({\n          from,\n          to\n        }, index) => {\n          const fromPos = positions[from];\n          const toPos = positions[to];\n          if (fromPos && toPos) {\n            return /*#__PURE__*/_jsxDEV(\"line\", {\n              x1: fromPos.x + 60,\n              y1: fromPos.y + 50,\n              x2: toPos.x + 60,\n              y2: toPos.y + 50,\n              stroke: \"#4FD1C5\",\n              strokeWidth: \"2\"\n            }, `${from}-${to}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this);\n          }\n          return null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"services-layer\",\n        children: architecture.services.map(service => {\n          const position = positions[service.name];\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"service-node\",\n            style: {\n              transform: `translate(${position.x}px, ${position.y}px)`\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"service-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `/aws-icons/${service.name.toLowerCase().replace(/\\s+/g, '-')}.png`,\n                alt: service.name,\n                onError: e => {\n                  e.target.src = '/aws-icons/default.png';\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"service-name\",\n              children: service.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)]\n          }, service.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureDisplay, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = AWSArchitectureDisplay;\nexport default AWSArchitectureDisplay;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureDisplay\");","map":{"version":3,"names":["getCachedServiceIcon","getIconResolutionStats","jsxDEV","_jsxDEV","AWSArchitectureDisplay","architecture","_s","services","className","children","fileName","_jsxFileName","lineNumber","columnNumber","calculateServicePositions","positions","totalWidth","totalHeight","serviceWidth","serviceHeight","serviceCount","length","horizontalGap","forEach","service","index","name","x","y","useEffect","timer","setTimeout","clearTimeout","width","height","connections","map","from","to","fromPos","toPos","x1","y1","x2","y2","stroke","strokeWidth","position","style","transform","src","toLowerCase","replace","alt","onError","e","target","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx"],"sourcesContent":["import { getCachedServiceIcon, getIconResolutionStats } from '../services/IconResolver';\n\nconst AWSArchitectureDisplay = ({ architecture }) => {\n  if (!architecture || !architecture.services) {\n    return <div className=\"architecture-container\">No architecture to display</div>;\n  }\n\n  const calculateServicePositions = () => {\n    const positions = {};\n    const totalWidth = 1000;\n    const totalHeight = 400;\n    const serviceWidth = 120;\n    const serviceHeight = 100;\n    \n    const serviceCount = architecture.services.length;\n    const horizontalGap = (totalWidth - (serviceCount * serviceWidth)) / (serviceCount + 1);\n    \n    architecture.services.forEach((service, index) => {\n      positions[service.name] = {\n        x: horizontalGap + (index * (serviceWidth + horizontalGap)),\n        y: totalHeight / 2 - serviceHeight / 2\n      };\n    });\n\n    return positions;\n  };\n\n  const positions = calculateServicePositions();\n\n  useEffect(() => {\n    // After all icons are loaded, show statistics\n    const timer = setTimeout(() => {\n      getIconResolutionStats();\n    }, 2000); // Wait for all icons to attempt loading\n\n    return () => clearTimeout(timer);\n  }, [architecture]);\n\n  return (\n    <div className=\"architecture-container\">\n      <div className=\"architecture-diagram\">\n        <svg className=\"connections-layer\" width=\"100%\" height=\"100%\">\n          {architecture.connections.map(({ from, to }, index) => {\n            const fromPos = positions[from];\n            const toPos = positions[to];\n            if (fromPos && toPos) {\n              return (\n                <line\n                  key={`${from}-${to}-${index}`}\n                  x1={fromPos.x + 60}\n                  y1={fromPos.y + 50}\n                  x2={toPos.x + 60}\n                  y2={toPos.y + 50}\n                  stroke=\"#4FD1C5\"\n                  strokeWidth=\"2\"\n                />\n              );\n            }\n            return null;\n          })}\n        </svg>\n        \n        <div className=\"services-layer\">\n          {architecture.services.map(service => {\n            const position = positions[service.name];\n            return (\n              <div\n                key={service.name}\n                className=\"service-node\"\n                style={{\n                  transform: `translate(${position.x}px, ${position.y}px)`\n                }}\n              >\n                <div className=\"service-icon\">\n                  <img\n                    src={`/aws-icons/${service.name.toLowerCase().replace(/\\s+/g, '-')}.png`}\n                    alt={service.name}\n                    onError={(e) => {\n                      e.target.src = '/aws-icons/default.png';\n                    }}\n                  />\n                </div>\n                <div className=\"service-name\">{service.name}</div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AWSArchitectureDisplay;"],"mappings":";;AAAA,SAASA,oBAAoB,EAAEC,sBAAsB,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExF,MAAMC,sBAAsB,GAAGA,CAAC;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EACnD,IAAI,CAACD,YAAY,IAAI,CAACA,YAAY,CAACE,QAAQ,EAAE;IAC3C,oBAAOJ,OAAA;MAAKK,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjF;EAEA,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;IACtC,MAAMC,SAAS,GAAG,CAAC,CAAC;IACpB,MAAMC,UAAU,GAAG,IAAI;IACvB,MAAMC,WAAW,GAAG,GAAG;IACvB,MAAMC,YAAY,GAAG,GAAG;IACxB,MAAMC,aAAa,GAAG,GAAG;IAEzB,MAAMC,YAAY,GAAGf,YAAY,CAACE,QAAQ,CAACc,MAAM;IACjD,MAAMC,aAAa,GAAG,CAACN,UAAU,GAAII,YAAY,GAAGF,YAAa,KAAKE,YAAY,GAAG,CAAC,CAAC;IAEvFf,YAAY,CAACE,QAAQ,CAACgB,OAAO,CAAC,CAACC,OAAO,EAAEC,KAAK,KAAK;MAChDV,SAAS,CAACS,OAAO,CAACE,IAAI,CAAC,GAAG;QACxBC,CAAC,EAAEL,aAAa,GAAIG,KAAK,IAAIP,YAAY,GAAGI,aAAa,CAAE;QAC3DM,CAAC,EAAEX,WAAW,GAAG,CAAC,GAAGE,aAAa,GAAG;MACvC,CAAC;IACH,CAAC,CAAC;IAEF,OAAOJ,SAAS;EAClB,CAAC;EAED,MAAMA,SAAS,GAAGD,yBAAyB,CAAC,CAAC;EAE7Ce,SAAS,CAAC,MAAM;IACd;IACA,MAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;MAC7B9B,sBAAsB,CAAC,CAAC;IAC1B,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAM+B,YAAY,CAACF,KAAK,CAAC;EAClC,CAAC,EAAE,CAACzB,YAAY,CAAC,CAAC;EAElB,oBACEF,OAAA;IAAKK,SAAS,EAAC,wBAAwB;IAAAC,QAAA,eACrCN,OAAA;MAAKK,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnCN,OAAA;QAAKK,SAAS,EAAC,mBAAmB;QAACyB,KAAK,EAAC,MAAM;QAACC,MAAM,EAAC,MAAM;QAAAzB,QAAA,EAC1DJ,YAAY,CAAC8B,WAAW,CAACC,GAAG,CAAC,CAAC;UAAEC,IAAI;UAAEC;QAAG,CAAC,EAAEb,KAAK,KAAK;UACrD,MAAMc,OAAO,GAAGxB,SAAS,CAACsB,IAAI,CAAC;UAC/B,MAAMG,KAAK,GAAGzB,SAAS,CAACuB,EAAE,CAAC;UAC3B,IAAIC,OAAO,IAAIC,KAAK,EAAE;YACpB,oBACErC,OAAA;cAEEsC,EAAE,EAAEF,OAAO,CAACZ,CAAC,GAAG,EAAG;cACnBe,EAAE,EAAEH,OAAO,CAACX,CAAC,GAAG,EAAG;cACnBe,EAAE,EAAEH,KAAK,CAACb,CAAC,GAAG,EAAG;cACjBiB,EAAE,EAAEJ,KAAK,CAACZ,CAAC,GAAG,EAAG;cACjBiB,MAAM,EAAC,SAAS;cAChBC,WAAW,EAAC;YAAG,GANV,GAAGT,IAAI,IAAIC,EAAE,IAAIb,KAAK,EAAE;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAO9B,CAAC;UAEN;UACA,OAAO,IAAI;QACb,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENV,OAAA;QAAKK,SAAS,EAAC,gBAAgB;QAAAC,QAAA,EAC5BJ,YAAY,CAACE,QAAQ,CAAC6B,GAAG,CAACZ,OAAO,IAAI;UACpC,MAAMuB,QAAQ,GAAGhC,SAAS,CAACS,OAAO,CAACE,IAAI,CAAC;UACxC,oBACEvB,OAAA;YAEEK,SAAS,EAAC,cAAc;YACxBwC,KAAK,EAAE;cACLC,SAAS,EAAE,aAAaF,QAAQ,CAACpB,CAAC,OAAOoB,QAAQ,CAACnB,CAAC;YACrD,CAAE;YAAAnB,QAAA,gBAEFN,OAAA;cAAKK,SAAS,EAAC,cAAc;cAAAC,QAAA,eAC3BN,OAAA;gBACE+C,GAAG,EAAE,cAAc1B,OAAO,CAACE,IAAI,CAACyB,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,MAAO;gBACzEC,GAAG,EAAE7B,OAAO,CAACE,IAAK;gBAClB4B,OAAO,EAAGC,CAAC,IAAK;kBACdA,CAAC,CAACC,MAAM,CAACN,GAAG,GAAG,wBAAwB;gBACzC;cAAE;gBAAAxC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eACNV,OAAA;cAAKK,SAAS,EAAC,cAAc;cAAAC,QAAA,EAAEe,OAAO,CAACE;YAAI;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC;UAAA,GAf7CW,OAAO,CAACE,IAAI;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAgBd,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACP,EAAA,CAxFIF,sBAAsB;AAAAqD,EAAA,GAAtBrD,sBAAsB;AA0F5B,eAAeA,sBAAsB;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}