{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/MatchDefinitionWithIconGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/GameCanvas.css';\nimport { getRandomServices, getRandomDefinition, isGameComplete, formatTime, calculateScore } from '../utils/definitionMatchingUtils';\nimport { getServiceIconUrl } from '../utils/memoryGameUtils';\nimport { AZURE_ICON_CATEGORIES } from '../services/IconResolver';\nimport CosmosDBService from '../services/CosmosDBService';\nimport { translateText, translateBatch } from '../services/TranslationService';\nimport LanguageSelector from './LanguageSelector';\n\n// Add default UI translations\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultTranslations = {\n  title: 'Azure Definition Match',\n  backToHome: 'Back to Home',\n  player: 'PLAYER',\n  score: 'Score',\n  time: 'TIME',\n  howToScore: 'HOW TO SCORE',\n  correctMatch: 'Correct match: +20 points',\n  wrongMatch: 'Wrong match: -5 points',\n  tip: 'Tip: Match definitions as fast as possible!',\n  progress: 'Progress',\n  outOf: 'out of',\n  highScores: 'HIGH SCORES',\n  currentMission: 'CURRENT MISSION',\n  missionText: 'Match the Azure service with its definition!',\n  serviceDefinition: 'Service Definition:',\n  congratulations: 'Congratulations!',\n  timesUp: 'Time\\'s Up!',\n  matchedAll: 'You matched all definitions with {time} remaining!',\n  matchedSome: 'You matched {matched} out of {total} definitions.',\n  playAgain: 'Play Again',\n  welcomeTitle: 'Welcome to Azure Definition Match!',\n  welcomeText: 'Match Azure services with their definitions. Enter your name to start:',\n  yourName: 'Your name',\n  startGame: 'START GAME',\n  loading: 'Loading Azure Service Definitions...',\n  categoryBelongs: 'The Service \"{service}\" belongs to the {category} Category'\n};\n\n// Confetti component for celebration effect\nconst Confetti = ({\n  active\n}) => {\n  if (!active) return null;\n  const confettiCount = 150;\n  const confetti = [];\n  for (let i = 0; i < confettiCount; i++) {\n    const left = `${Math.random() * 100}%`;\n    const animationDelay = `${Math.random() * 5}s`;\n    const initialOpacity = Math.random();\n    const size = `${Math.random() * 10 + 5}px`;\n    const rotation = `${Math.random() * 360}deg`;\n    const color = ['#00ffff',\n    // Cyan (Azure color)\n    '#0078d4',\n    // Blue (Azure color)\n    '#ffb900',\n    // Gold\n    '#e74c3c',\n    // Red\n    '#2ecc71',\n    // Green\n    '#9b59b6',\n    // Purple\n    '#3498db' // Light blue\n    ][Math.floor(Math.random() * 7)];\n    confetti.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memory-confetti-particle\",\n      style: {\n        left,\n        top: '-10px',\n        width: size,\n        height: size,\n        backgroundColor: color,\n        transform: `rotate(${rotation})`,\n        opacity: initialOpacity,\n        animationDelay\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-confetti-container\",\n    children: confetti\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n};\n_c = Confetti;\nconst MatchDefinitionWithIconGame = () => {\n  _s();\n  // Game state\n  const [services, setServices] = useState([]);\n  const [currentDefinition, setCurrentDefinition] = useState(null);\n  const [selectedService, setSelectedService] = useState(null);\n  const [matchedServices, setMatchedServices] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(300); // 5 minutes in seconds\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showWelcome, setShowWelcome] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || 'Player';\n  });\n\n  // Sound state\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const sounds = useRef({});\n\n  // Game container ref\n  const gameContainerRef = useRef(null);\n\n  // High scores\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // Define sound files\n  const soundFiles = {\n    select: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/flip-switch.mp3`,\n    correct: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n    incorrect: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n    hover: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/hover.mp3`,\n    achievement: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/levelup.mp3`\n  };\n\n  // First, add a new state for the current category\n  const [currentCategory, setCurrentCategory] = useState('');\n\n  // Add new state for showing category\n  const [showCategory, setShowCategory] = useState(false);\n\n  // Add loading state\n  const [loading, setLoading] = useState(true);\n\n  // Add translations state\n  const [translations, setTranslations] = useState(defaultTranslations);\n  const [translatedDefinition, setTranslatedDefinition] = useState('');\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n\n  // Helper function to safely create audio objects with timeout\n  const createSafeAudio = useCallback(path => {\n    const audio = new Audio();\n    return new Promise(resolve => {\n      audio.addEventListener('error', () => {\n        console.warn(`Sound file not found: ${path}`);\n        resolve(null);\n      });\n      audio.addEventListener('canplaythrough', () => {\n        resolve(audio);\n      });\n      // Timeout fallback in case sound loading takes too long\n      setTimeout(() => {\n        if (audio.readyState < 3) {\n          console.warn(`Sound loading timeout: ${path}`);\n          resolve(null);\n        }\n      }, 3000);\n      audio.src = path;\n    });\n  }, []);\n\n  // Load all sounds\n  useEffect(() => {\n    const loadSounds = async () => {\n      const soundPromises = Object.entries(soundFiles).map(async ([name, path]) => {\n        try {\n          const audio = await createSafeAudio(path);\n          return [name, audio];\n        } catch (error) {\n          console.error(`Failed to load sound ${name}:`, error);\n          return [name, null];\n        }\n      });\n      try {\n        const loadedSounds = await Promise.all(soundPromises);\n        const soundsMap = Object.fromEntries(loadedSounds);\n        sounds.current = soundsMap;\n\n        // Check if at least some sounds loaded successfully\n        const hasLoadedSounds = Object.values(soundsMap).some(sound => sound !== null);\n        setSoundsLoaded(hasLoadedSounds);\n        if (hasLoadedSounds) {\n          console.log('🔊 Sounds loaded successfully');\n        } else {\n          console.warn('⚠️ No sounds could be loaded');\n        }\n      } catch (error) {\n        console.error('Failed to load sounds:', error);\n      }\n    };\n    loadSounds();\n  }, [createSafeAudio]);\n\n  // Play sound function\n  const playSound = useCallback(soundName => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  }, [isMuted]);\n\n  // Toggle mute function\n  const toggleMute = useCallback(() => {\n    setIsMuted(prev => !prev);\n  }, []);\n\n  // Update initGame to handle async data\n  const initGame = useCallback(async () => {\n    setLoading(true);\n    try {\n      const newServices = await getRandomServices(20); // Get 20 random services\n      setServices(newServices);\n\n      // Select a random definition to start with\n      const randomIndex = Math.floor(Math.random() * newServices.length);\n      setCurrentDefinition({\n        name: newServices[randomIndex].name,\n        definition: newServices[randomIndex].definition,\n        path: newServices[randomIndex].path // Add path for category detection\n      });\n      setSelectedService(null);\n      setMatchedServices([]);\n      setTimeLeft(300);\n      setScore(0);\n      setGameStarted(true);\n      setGameOver(false);\n      setShowConfetti(false);\n      setCurrentCategory(''); // Reset category\n    } catch (error) {\n      console.error('Error initializing game:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Update the handleCardClick function\n  const handleCardClick = useCallback((service, index) => {\n    if (gameOver || matchedServices.includes(service.name)) {\n      return;\n    }\n    setSelectedService(service);\n    if (service.name === currentDefinition.name) {\n      // Correct match\n      playSound('correct');\n\n      // Get the category of the service\n      let serviceCategory = 'Other';\n      const servicePath = service.path.toLowerCase();\n\n      // Try to find the category\n      for (const [category, path] of Object.entries(AZURE_ICON_CATEGORIES)) {\n        const normalizedPath = path.toLowerCase();\n        if (servicePath.includes(normalizedPath)) {\n          serviceCategory = category;\n          break;\n        }\n      }\n\n      // Format the category name for display\n      const formattedCategory = serviceCategory.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');\n      setCurrentCategory(formattedCategory);\n      setShowCategory(true); // Show category message\n\n      // Add to matched services\n      const newMatchedServices = [...matchedServices, service.name];\n      setMatchedServices(newMatchedServices);\n\n      // Calculate score bonus based on time\n      const timeBonus = Math.floor(timeLeft / 300 * 50);\n      const points = calculateScore(true);\n      setScore(prevScore => prevScore + points);\n\n      // Check if all services are matched\n      if (newMatchedServices.length === services.length) {\n        setShowConfetti(true);\n        setTimeout(() => {\n          setShowConfetti(false);\n        }, 5000);\n        playSound('achievement');\n        setGameOver(true);\n\n        // Update high scores\n        const newScore = score + 20 + timeBonus;\n        updateHighScores(newScore);\n      } else {\n        // Get next random definition from remaining services\n        const remainingServices = services.filter(s => !newMatchedServices.includes(s.name));\n        const randomIndex = Math.floor(Math.random() * remainingServices.length);\n        setCurrentDefinition({\n          name: remainingServices[randomIndex].name,\n          definition: remainingServices[randomIndex].definition,\n          path: remainingServices[randomIndex].path // Add path for category detection\n        });\n      }\n      console.log('Service path:', service.path);\n      console.log('Available categories:', AZURE_ICON_CATEGORIES);\n      console.log('Found category:', serviceCategory);\n    } else {\n      // Wrong match\n      playSound('incorrect');\n      const points = calculateScore(false);\n      setScore(prevScore => Math.max(0, prevScore + points));\n\n      // Visual feedback for wrong match\n      setTimeout(() => {\n        setSelectedService(null);\n      }, 1000);\n    }\n  }, [gameOver, matchedServices, currentDefinition, timeLeft, score, services, playSound]);\n\n  // Update the useEffect for game completion check\n  useEffect(() => {\n    if (isGameComplete(matchedServices, services.length) && timeLeft > 0) {\n      setShowConfetti(true);\n      setTimeout(() => {\n        setShowConfetti(false);\n      }, 5000);\n      setGameOver(true);\n      playSound('achievement');\n    }\n  }, [matchedServices, services.length, timeLeft, playSound]);\n\n  // Update high scores\n  const updateHighScores = newScore => {\n    const newHighScores = [...highScores];\n\n    // Add the new score\n    newHighScores.push({\n      name: playerName,\n      score: newScore,\n      date: new Date().toISOString()\n    });\n\n    // Sort by score (highest first)\n    newHighScores.sort((a, b) => b.score - a.score);\n\n    // Keep only top 5\n    const topScores = newHighScores.slice(0, 5);\n\n    // Update state and localStorage\n    setHighScores(topScores);\n    localStorage.setItem('highScores', JSON.stringify(topScores));\n  };\n\n  // Timer countdown\n  useEffect(() => {\n    if (!gameStarted || gameOver) return;\n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          setGameOver(true);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [gameStarted, gameOver]);\n\n  // Start the game when component mounts\n  useEffect(() => {\n    if (!showWelcome) {\n      initGame();\n    }\n  }, [initGame, showWelcome]);\n\n  // Auto-hide confetti after celebration\n  useEffect(() => {\n    if (showConfetti) {\n      const timer = setTimeout(() => {\n        setShowConfetti(false);\n      }, 7000); // Hide confetti after 7 seconds\n\n      return () => clearTimeout(timer);\n    }\n  }, [showConfetti]);\n\n  // Handle name submission\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowWelcome(false);\n    initGame(); // Start the game after name submission\n  };\n\n  // Add this to retrieve the nickname\n  const getNickname = () => {\n    return localStorage.getItem('userNickname') || 'Anonymous';\n  };\n\n  // Modify the game over function to save score\n  const handleGameOver = async () => {\n    console.log('🏁 handleGameOver triggered');\n    setGameOver(true);\n    try {\n      console.log('🎯 Calling saveScore from handleGameOver');\n      await saveScore();\n      console.log('✅ Score saved successfully from handleGameOver');\n    } catch (error) {\n      console.error('❌ Error saving score from handleGameOver:', error);\n    }\n    if (isGameComplete(matchedServices.length, services.length)) {\n      setShowConfetti(true);\n    }\n  };\n\n  // Update the language handling function to translate all UI elements\n  const handleLanguageChange = async newLanguage => {\n    setCurrentLanguage(newLanguage);\n    if (newLanguage === 'en') {\n      setTranslations(defaultTranslations);\n      if (currentDefinition) {\n        setTranslatedDefinition(currentDefinition.definition);\n      }\n      return;\n    }\n    try {\n      // Use batch translation for UI elements\n      const keys = Object.keys(defaultTranslations);\n      const values = Object.values(defaultTranslations);\n      const translatedValues = await translateBatch(values, newLanguage);\n      const newTranslations = {};\n      keys.forEach((key, index) => {\n        newTranslations[key] = translatedValues[index];\n      });\n      setTranslations(newTranslations);\n\n      // Translate current definition if it exists\n      if (currentDefinition) {\n        const translated = await translateText(currentDefinition.definition, newLanguage);\n        setTranslatedDefinition(translated);\n      }\n    } catch (error) {\n      console.error('Translation error:', error);\n    }\n  };\n\n  // Translate definition whenever it changes\n  useEffect(() => {\n    if (currentDefinition && currentLanguage !== 'en') {\n      handleLanguageChange(currentLanguage);\n    } else if (currentDefinition) {\n      // Use original definition for English\n      setTranslatedDefinition(currentDefinition.definition);\n    }\n  }, [currentDefinition, currentLanguage]);\n\n  // When a correct answer is selected, update the score\n  const handleCorrectAnswer = () => {\n    const points = calculateScore(true);\n    setScore(prevScore => prevScore + points);\n  };\n\n  // When a wrong answer is selected, update the score\n  const handleWrongAnswer = () => {\n    const points = calculateScore(false);\n    setScore(prevScore => Math.max(0, prevScore + points));\n  };\n\n  // Modify the saveScore function to be more verbose\n  const saveScore = async () => {\n    console.log('🚀 =====================================');\n    console.log('🚀 CALLING AZURE FUNCTION: save_games_score');\n    console.log('🚀 URL:', process.env.REACT_APP_FUNCTION_SAVE_SCORE_URL);\n    console.log('🚀 =====================================');\n    try {\n      const metadata = {\n        matchedCount: matchedServices.length,\n        totalServices: services.length,\n        timeLeft: timeLeft,\n        timestamp: new Date().toISOString()\n      };\n      const data = {\n        nickname: playerName,\n        gameType: \"DefinitionMatch\",\n        score,\n        metadata\n      };\n      console.log('📤 Sending this data to Azure Function:', data);\n      const savedScore = await CosmosDBService.saveGameScore(playerName, \"DefinitionMatch\", score, metadata);\n      console.log('📥 Azure Function Response:', savedScore);\n      await loadLeaderboard();\n      return savedScore;\n    } catch (error) {\n      console.error('❌ Azure Function Error:', error);\n      throw error;\n    }\n  };\n\n  // Also update the loadLeaderboard function to be more explicit\n  const loadLeaderboard = async () => {\n    console.log('🏆 LOADING LEADERBOARD from Azure Function (get_leader_board)');\n    try {\n      const leaderboard = await CosmosDBService.getLeaderboard(\"DefinitionMatch\");\n      console.log('📊 Leaderboard loaded from Azure Function:', leaderboard);\n      setHighScores(leaderboard);\n    } catch (error) {\n      console.error('❌ Error loading leaderboard from Azure Function:', error);\n    }\n  };\n\n  // First, let's modify where we check for game completion\n  useEffect(() => {\n    // Check if game is complete (all services matched)\n    if (gameStarted && !gameOver && isGameComplete(matchedServices.length, services.length)) {\n      console.log('🎮 GAME COMPLETION DETECTED!');\n      console.log('Current State:', {\n        matchedServices: matchedServices.length,\n        totalServices: services.length,\n        score,\n        timeLeft,\n        playerName\n      });\n      setGameOver(true);\n      setShowConfetti(true);\n\n      // Call saveScore with immediate feedback\n      console.log('📝 Triggering score save...');\n      saveScore().then(() => {\n        console.log('✅ Score save process completed');\n      }).catch(error => {\n        console.error('❌ Score save process failed:', error);\n      });\n      const confettiTimer = setTimeout(() => {\n        setShowConfetti(false);\n      }, 5000);\n      return () => clearTimeout(confettiTimer);\n    }\n  }, [gameStarted, gameOver, matchedServices.length, services.length, score, timeLeft, playerName]);\n\n  // Add this near the start of your component\n  useEffect(() => {\n    // Debug log all relevant environment variables\n    console.log('🔧 Environment Variables Check:');\n    console.log({\n      SAVE_SCORE_URL: process.env.REACT_APP_FUNCTION_SAVE_SCORE_URL,\n      LEADERBOARD_URL: process.env.REACT_APP_FUNCTION_LEADERBOARD_URL,\n      NODE_ENV: process.env.NODE_ENV\n    });\n    if (!process.env.REACT_APP_FUNCTION_SAVE_SCORE_URL || !process.env.REACT_APP_FUNCTION_LEADERBOARD_URL) {\n      console.error('❌ Missing environment variables!');\n    } else {\n      console.log('✅ All environment variables present');\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-container\",\n    ref: gameContainerRef,\n    children: [loading && !showWelcome && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 611,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: translations.loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 610,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Confetti, {\n      active: showConfetti\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 616,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"back-to-home-button\",\n      style: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        display: 'flex',\n        alignItems: 'center',\n        padding: '10px 20px',\n        backgroundColor: 'rgba(0, 255, 255, 0.1)',\n        border: '2px solid #00ffff',\n        borderRadius: '5px',\n        color: '#00ffff',\n        textDecoration: 'none',\n        fontFamily: 'Orbitron, sans-serif',\n        fontSize: '14px',\n        transition: 'all 0.3s ease',\n        zIndex: 100\n      },\n      onMouseEnter: () => playSound('hover'),\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        style: {\n          width: '20px',\n          height: '20px',\n          marginRight: '8px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M12 2L1 12h3v9h6v-6h4v6h6v-9h3L12 2z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 651,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 641,\n        columnNumber: 9\n      }, this), translations.backToHome]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 619,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameCanvas-game-title\",\n      style: {\n        '--azure-icon': `url(${process.env.PUBLIC_URL}/azure-icons/Microsoft_Azure_Cyan.svg)`\n      },\n      children: [\"zure \", translations.title.replace('Azure', '')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 656,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-canvas-wrapper\",\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'flex-start',\n          position: 'relative',\n          paddingTop: '80px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            position: 'absolute',\n            top: '20px',\n            right: '20px',\n            zIndex: 100\n          },\n          children: /*#__PURE__*/_jsxDEV(LanguageSelector, {\n            currentLanguage: currentLanguage,\n            onLanguageChange: handleLanguageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 673,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"memory-game-grid\",\n          style: {\n            margin: '0 auto',\n            display: 'grid',\n            gridTemplateColumns: 'repeat(5, 1fr)',\n            gap: '15px',\n            maxWidth: '800px',\n            marginTop: '40px'\n          },\n          children: services.map((service, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `memory-game-card ${selectedService && selectedService.name === service.name ? service.name === currentDefinition.name ? 'correct' : 'wrong' : matchedServices.includes(service.name) ? 'correct' : ''}`,\n            onClick: () => handleCardClick(service, index),\n            onMouseEnter: () => {\n              playSound('hover');\n              setSelectedService(service);\n\n              // Get the category\n              let serviceCategory = 'Other';\n              const servicePath = service.path.toLowerCase();\n\n              // Find the category\n              for (const [category, path] of Object.entries(AZURE_ICON_CATEGORIES)) {\n                const normalizedPath = path.toLowerCase();\n                if (servicePath.includes(normalizedPath)) {\n                  serviceCategory = category;\n                  break;\n                }\n              }\n\n              // Format the category\n              const formattedCategory = serviceCategory.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');\n              setCurrentCategory(formattedCategory);\n\n              // Only show the category if the service is already matched\n              if (matchedServices.includes(service.name)) {\n                setShowCategory(true);\n              }\n            },\n            onMouseLeave: () => {\n              setShowCategory(false);\n            },\n            style: {\n              cursor: matchedServices.includes(service.name) ? 'default' : 'pointer',\n              opacity: matchedServices.includes(service.name) ? 0.7 : 1,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n              direction: 'ltr',\n              transform: 'none'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"memory-card-content\",\n              style: {\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                justifyContent: 'center',\n                height: '100%',\n                direction: 'ltr',\n                transform: 'none'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: getServiceIconUrl(service.path),\n                alt: service.name,\n                style: {\n                  width: '50px',\n                  height: '50px',\n                  marginBottom: '8px',\n                  transform: 'none'\n                },\n                onError: e => {\n                  e.target.onerror = null;\n                  e.target.src = `${process.env.PUBLIC_URL}/azure-icons/default.svg`;\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 758,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"memory-card-text\",\n                style: {\n                  fontSize: '12px',\n                  textAlign: 'center',\n                  wordBreak: 'break-word',\n                  direction: 'ltr',\n                  unicodeBidi: 'normal',\n                  transform: 'none'\n                },\n                children: service.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 772,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 17\n            }, this)\n          }, `${service.name}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 698,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 11\n        }, this), currentCategory && showCategory && selectedService && /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            color: '#00ffff',\n            fontSize: '16px',\n            margin: '20px auto',\n            padding: '10px',\n            fontFamily: 'Orbitron, sans-serif',\n            position: 'absolute',\n            width: '100%',\n            left: '0',\n            top: '580px',\n            zIndex: 2\n          },\n          children: translations.categoryBelongs.replace('{service}', selectedService.name || 'Unknown').replace('{category}', currentCategory)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"definition-card\",\n          style: {\n            backgroundColor: 'rgba(0, 40, 56, 0.9)',\n            padding: '20px',\n            margin: '40px auto',\n            border: '2px solid #00ffff',\n            borderRadius: '10px',\n            boxShadow: '0 4px 15px rgba(0, 255, 255, 0.3)',\n            width: '90%',\n            maxWidth: '800px',\n            textAlign: 'center',\n            fontSize: '18px',\n            fontWeight: 'normal',\n            color: '#ffffff',\n            lineHeight: '1.5',\n            position: 'relative',\n            zIndex: 1,\n            marginTop: '40px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontWeight: 'bold',\n              marginBottom: '10px',\n              color: '#00ffff'\n            },\n            children: translations.serviceDefinition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 827,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              fontSize: '16px',\n              padding: '10px',\n              backgroundColor: 'rgba(0, 40, 56, 0.8)',\n              borderRadius: '5px'\n            },\n            children: translatedDefinition || currentDefinition && currentDefinition.definition\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 834,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-game-over\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: matchedServices.length === services.length ? translations.congratulations : translations.timesUp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 847,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: matchedServices.length === services.length ? translations.matchedAll.replace('{time}', formatTime(timeLeft)) : translations.matchedSome.replace('{matched}', matchedServices.length).replace('{total}', services.length)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 852,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              playSound('select');\n              initGame();\n            },\n            children: translations.playAgain\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 859,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 846,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 665,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-instruction-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-player-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-player-name\",\n            children: [translations.player, \": \", playerName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 875,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 874,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-score-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-score-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"alien\",\n              children: \"\\uD83D\\uDC7E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 15\n            }, this), \" \", translations.score, \": \", score, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"joystick\",\n              children: \"\\uD83D\\uDD79\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 883,\n              columnNumber: 91\n            }, this), soundsLoaded && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gameCanvas-sound-toggle\",\n              onClick: toggleMute,\n              \"aria-label\": \"Toggle sound\",\n              style: {\n                marginLeft: '8px',\n                display: 'inline-block'\n              },\n              children: isMuted ? '🔇' : '🔊'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 885,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 882,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 881,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-timer-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-timer-display\",\n            \"data-label\": translations.time ? `${translations.time}:` : \"TIME:\",\n            children: formatTime(timeLeft)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 899,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 898,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-score-explanation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [translations.howToScore, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 909,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u2022 \", translations.correctMatch]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 911,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u2022 \", translations.wrongMatch]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 912,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [\"\\u2022 \", translations.tip]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 913,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 910,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 908,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-progress-display\",\n          children: [translations.progress, \": \", matchedServices.length, \" \", translations.outOf, \" \", services.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 918,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-high-scores\",\n          style: {\n            backgroundColor: 'rgba(0, 40, 56, 0.8)',\n            border: '1px solid #00ffff',\n            borderRadius: '8px',\n            padding: '15px',\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            style: {\n              color: '#00ffff',\n              marginBottom: '10px',\n              textAlign: 'center'\n            },\n            children: translations.highScores\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 930,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            style: {\n              listStyle: 'none',\n              padding: 0\n            },\n            children: highScores.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              style: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                padding: '4px 0'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gameCanvas-high-score-name\",\n                children: [entry.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 944,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: entry.score\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 945,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 939,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 937,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 923,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-mission-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"gameCanvas-mission-title\",\n            children: translations.currentMission\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 953,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-mission-text\",\n            children: translations.missionText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 956,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 952,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 872,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 7\n    }, this), showWelcome && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: translations.welcomeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 967,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: translations.welcomeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 968,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempPlayerName,\n            onChange: e => {\n              setTempPlayerName(e.target.value);\n              setNameError('');\n            },\n            placeholder: translations.yourName,\n            className: \"gameCanvas-name-input\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 970,\n            columnNumber: 15\n          }, this), nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-name-error\",\n            children: nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"gameCanvas-start-button\",\n            children: translations.startGame\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 982,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 969,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 966,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 965,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        console.log('🔍 DEBUG: Manual save triggered');\n        saveScore().then(() => {\n          console.log('✅ DEBUG: Manual save completed');\n        }).catch(error => {\n          console.error('❌ DEBUG: Manual save failed:', error);\n        });\n      },\n      style: {\n        position: 'absolute',\n        top: '60px',\n        right: '20px',\n        zIndex: 1000,\n        background: '#ff0000',\n        color: 'white',\n        padding: '5px',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: 'pointer'\n      },\n      children: \"DEBUG: Save Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 608,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchDefinitionWithIconGame, \"zKkJSWEg1/ZYtGn5shRjPRdUPLM=\");\n_c2 = MatchDefinitionWithIconGame;\nexport default MatchDefinitionWithIconGame;\nvar _c, _c2;\n$RefreshReg$(_c, \"Confetti\");\n$RefreshReg$(_c2, \"MatchDefinitionWithIconGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Link","getRandomServices","getRandomDefinition","isGameComplete","formatTime","calculateScore","getServiceIconUrl","AZURE_ICON_CATEGORIES","CosmosDBService","translateText","translateBatch","LanguageSelector","jsxDEV","_jsxDEV","defaultTranslations","title","backToHome","player","score","time","howToScore","correctMatch","wrongMatch","tip","progress","outOf","highScores","currentMission","missionText","serviceDefinition","congratulations","timesUp","matchedAll","matchedSome","playAgain","welcomeTitle","welcomeText","yourName","startGame","loading","categoryBelongs","Confetti","active","confettiCount","confetti","i","left","Math","random","animationDelay","initialOpacity","size","rotation","color","floor","push","className","style","top","width","height","backgroundColor","transform","opacity","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","MatchDefinitionWithIconGame","_s","services","setServices","currentDefinition","setCurrentDefinition","selectedService","setSelectedService","matchedServices","setMatchedServices","timeLeft","setTimeLeft","setScore","gameStarted","setGameStarted","gameOver","setGameOver","showConfetti","setShowConfetti","showWelcome","setShowWelcome","tempPlayerName","setTempPlayerName","nameError","setNameError","playerName","setPlayerName","savedName","localStorage","getItem","soundsLoaded","setSoundsLoaded","isMuted","setIsMuted","sounds","gameContainerRef","setHighScores","saved","JSON","parse","soundFiles","select","process","env","REACT_APP_AZURE_BUCKET_URL","correct","incorrect","hover","achievement","currentCategory","setCurrentCategory","showCategory","setShowCategory","setLoading","translations","setTranslations","translatedDefinition","setTranslatedDefinition","currentLanguage","setCurrentLanguage","createSafeAudio","path","audio","Audio","Promise","resolve","addEventListener","console","warn","setTimeout","readyState","src","loadSounds","soundPromises","Object","entries","map","name","error","loadedSounds","all","soundsMap","fromEntries","current","hasLoadedSounds","values","some","sound","log","playSound","soundName","currentTime","volume","play","catch","err","toggleMute","prev","initGame","newServices","randomIndex","length","definition","handleCardClick","service","index","includes","serviceCategory","servicePath","toLowerCase","category","normalizedPath","formattedCategory","split","word","charAt","toUpperCase","slice","join","newMatchedServices","timeBonus","points","prevScore","newScore","updateHighScores","remainingServices","filter","s","max","newHighScores","date","Date","toISOString","sort","a","b","topScores","setItem","stringify","timer","setInterval","clearInterval","clearTimeout","handleNameSubmit","e","preventDefault","trim","getNickname","handleGameOver","saveScore","handleLanguageChange","newLanguage","keys","translatedValues","newTranslations","forEach","key","translated","handleCorrectAnswer","handleWrongAnswer","REACT_APP_FUNCTION_SAVE_SCORE_URL","metadata","matchedCount","totalServices","timestamp","data","nickname","gameType","savedScore","saveGameScore","loadLeaderboard","leaderboard","getLeaderboard","then","confettiTimer","SAVE_SCORE_URL","LEADERBOARD_URL","REACT_APP_FUNCTION_LEADERBOARD_URL","NODE_ENV","ref","to","position","display","alignItems","padding","border","borderRadius","textDecoration","fontFamily","fontSize","transition","zIndex","onMouseEnter","xmlns","viewBox","fill","marginRight","d","PUBLIC_URL","replace","flexDirection","justifyContent","paddingTop","right","onLanguageChange","margin","gridTemplateColumns","gap","maxWidth","marginTop","onClick","onMouseLeave","cursor","direction","alt","marginBottom","onError","target","onerror","textAlign","wordBreak","unicodeBidi","boxShadow","fontWeight","lineHeight","role","marginLeft","listStyle","entry","onSubmit","type","value","onChange","placeholder","autoFocus","background","_c2","$RefreshReg$"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/MatchDefinitionWithIconGame.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/GameCanvas.css';\nimport { \n  getRandomServices, \n  getRandomDefinition, \n  isGameComplete,\n  formatTime,\n  calculateScore\n} from '../utils/definitionMatchingUtils';\nimport { getServiceIconUrl } from '../utils/memoryGameUtils';\nimport { AZURE_ICON_CATEGORIES } from '../services/IconResolver';\nimport CosmosDBService from '../services/CosmosDBService';\nimport { translateText, translateBatch } from '../services/TranslationService';\nimport LanguageSelector from './LanguageSelector';\n\n// Add default UI translations\nconst defaultTranslations = {\n  title: 'Azure Definition Match',\n  backToHome: 'Back to Home',\n  player: 'PLAYER',\n  score: 'Score',\n  time: 'TIME',\n  howToScore: 'HOW TO SCORE',\n  correctMatch: 'Correct match: +20 points',\n  wrongMatch: 'Wrong match: -5 points',\n  tip: 'Tip: Match definitions as fast as possible!',\n  progress: 'Progress',\n  outOf: 'out of',\n  highScores: 'HIGH SCORES',\n  currentMission: 'CURRENT MISSION',\n  missionText: 'Match the Azure service with its definition!',\n  serviceDefinition: 'Service Definition:',\n  congratulations: 'Congratulations!',\n  timesUp: 'Time\\'s Up!',\n  matchedAll: 'You matched all definitions with {time} remaining!',\n  matchedSome: 'You matched {matched} out of {total} definitions.',\n  playAgain: 'Play Again',\n  welcomeTitle: 'Welcome to Azure Definition Match!',\n  welcomeText: 'Match Azure services with their definitions. Enter your name to start:',\n  yourName: 'Your name',\n  startGame: 'START GAME',\n  loading: 'Loading Azure Service Definitions...',\n  categoryBelongs: 'The Service \"{service}\" belongs to the {category} Category'\n};\n\n// Confetti component for celebration effect\nconst Confetti = ({ active }) => {\n  if (!active) return null;\n  \n  const confettiCount = 150;\n  const confetti = [];\n  \n  for (let i = 0; i < confettiCount; i++) {\n    const left = `${Math.random() * 100}%`;\n    const animationDelay = `${Math.random() * 5}s`;\n    const initialOpacity = Math.random();\n    const size = `${Math.random() * 10 + 5}px`;\n    const rotation = `${Math.random() * 360}deg`;\n    const color = [\n      '#00ffff', // Cyan (Azure color)\n      '#0078d4', // Blue (Azure color)\n      '#ffb900', // Gold\n      '#e74c3c', // Red\n      '#2ecc71', // Green\n      '#9b59b6', // Purple\n      '#3498db', // Light blue\n    ][Math.floor(Math.random() * 7)];\n    \n    confetti.push(\n      <div \n        key={i}\n        className=\"memory-confetti-particle\"\n        style={{\n          left,\n          top: '-10px',\n          width: size,\n          height: size,\n          backgroundColor: color,\n          transform: `rotate(${rotation})`,\n          opacity: initialOpacity,\n          animationDelay,\n        }}\n      />\n    );\n  }\n  \n  return <div className=\"memory-confetti-container\">{confetti}</div>;\n};\n\nconst MatchDefinitionWithIconGame = () => {\n  // Game state\n  const [services, setServices] = useState([]);\n  const [currentDefinition, setCurrentDefinition] = useState(null);\n  const [selectedService, setSelectedService] = useState(null);\n  const [matchedServices, setMatchedServices] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(300); // 5 minutes in seconds\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showWelcome, setShowWelcome] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || 'Player';\n  });\n  \n  // Sound state\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const sounds = useRef({});\n  \n  // Game container ref\n  const gameContainerRef = useRef(null);\n  \n  // High scores\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // Define sound files\n  const soundFiles = {\n    select: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/flip-switch.mp3`,\n    correct: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n    incorrect: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n    hover: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/hover.mp3`,\n    achievement: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/levelup.mp3`\n  };\n\n  // First, add a new state for the current category\n  const [currentCategory, setCurrentCategory] = useState('');\n\n  // Add new state for showing category\n  const [showCategory, setShowCategory] = useState(false);\n\n  // Add loading state\n  const [loading, setLoading] = useState(true);\n\n  // Add translations state\n  const [translations, setTranslations] = useState(defaultTranslations);\n  const [translatedDefinition, setTranslatedDefinition] = useState('');\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n\n  // Helper function to safely create audio objects with timeout\n  const createSafeAudio = useCallback((path) => {\n    const audio = new Audio();\n    return new Promise((resolve) => {\n      audio.addEventListener('error', () => {\n        console.warn(`Sound file not found: ${path}`);\n        resolve(null);\n      });\n      audio.addEventListener('canplaythrough', () => {\n        resolve(audio);\n      });\n      // Timeout fallback in case sound loading takes too long\n      setTimeout(() => {\n        if (audio.readyState < 3) {\n          console.warn(`Sound loading timeout: ${path}`);\n          resolve(null);\n        }\n      }, 3000);\n      audio.src = path;\n    });\n  }, []);\n\n  // Load all sounds\n  useEffect(() => {\n    const loadSounds = async () => {\n      const soundPromises = Object.entries(soundFiles).map(async ([name, path]) => {\n        try {\n          const audio = await createSafeAudio(path);\n          return [name, audio];\n        } catch (error) {\n          console.error(`Failed to load sound ${name}:`, error);\n          return [name, null];\n        }\n      });\n\n      try {\n        const loadedSounds = await Promise.all(soundPromises);\n        const soundsMap = Object.fromEntries(loadedSounds);\n        sounds.current = soundsMap;\n        \n        // Check if at least some sounds loaded successfully\n        const hasLoadedSounds = Object.values(soundsMap).some(sound => sound !== null);\n        setSoundsLoaded(hasLoadedSounds);\n        \n        if (hasLoadedSounds) {\n          console.log('🔊 Sounds loaded successfully');\n        } else {\n          console.warn('⚠️ No sounds could be loaded');\n        }\n      } catch (error) {\n        console.error('Failed to load sounds:', error);\n      }\n    };\n\n    loadSounds();\n  }, [createSafeAudio]);\n  \n  // Play sound function\n  const playSound = useCallback((soundName) => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  }, [isMuted]);\n  \n  // Toggle mute function\n  const toggleMute = useCallback(() => {\n    setIsMuted(prev => !prev);\n  }, []);\n\n  // Update initGame to handle async data\n  const initGame = useCallback(async () => {\n    setLoading(true);\n    try {\n      const newServices = await getRandomServices(20); // Get 20 random services\n      setServices(newServices);\n      \n      // Select a random definition to start with\n      const randomIndex = Math.floor(Math.random() * newServices.length);\n      setCurrentDefinition({\n        name: newServices[randomIndex].name,\n        definition: newServices[randomIndex].definition,\n        path: newServices[randomIndex].path // Add path for category detection\n      });\n      \n      setSelectedService(null);\n      setMatchedServices([]);\n      setTimeLeft(300);\n      setScore(0);\n      setGameStarted(true);\n      setGameOver(false);\n      setShowConfetti(false);\n      setCurrentCategory(''); // Reset category\n    } catch (error) {\n      console.error('Error initializing game:', error);\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n\n  // Update the handleCardClick function\n  const handleCardClick = useCallback((service, index) => {\n    if (gameOver || matchedServices.includes(service.name)) {\n      return;\n    }\n\n    setSelectedService(service);\n\n    if (service.name === currentDefinition.name) {\n      // Correct match\n      playSound('correct');\n      \n      // Get the category of the service\n      let serviceCategory = 'Other';\n      const servicePath = service.path.toLowerCase();\n      \n      // Try to find the category\n      for (const [category, path] of Object.entries(AZURE_ICON_CATEGORIES)) {\n        const normalizedPath = path.toLowerCase();\n        if (servicePath.includes(normalizedPath)) {\n          serviceCategory = category;\n          break;\n        }\n      }\n      \n      // Format the category name for display\n      const formattedCategory = serviceCategory\n        .split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ');\n      \n      setCurrentCategory(formattedCategory);\n      setShowCategory(true); // Show category message\n      \n      // Add to matched services\n      const newMatchedServices = [...matchedServices, service.name];\n      setMatchedServices(newMatchedServices);\n      \n      // Calculate score bonus based on time\n      const timeBonus = Math.floor((timeLeft / 300) * 50);\n      const points = calculateScore(true);\n      setScore(prevScore => prevScore + points);\n\n      // Check if all services are matched\n      if (newMatchedServices.length === services.length) {\n        setShowConfetti(true);\n        setTimeout(() => {\n          setShowConfetti(false);\n        }, 5000);\n        playSound('achievement');\n        setGameOver(true);\n        \n        // Update high scores\n        const newScore = score + 20 + timeBonus;\n        updateHighScores(newScore);\n      } else {\n        // Get next random definition from remaining services\n        const remainingServices = services.filter(s => !newMatchedServices.includes(s.name));\n        const randomIndex = Math.floor(Math.random() * remainingServices.length);\n        setCurrentDefinition({\n          name: remainingServices[randomIndex].name,\n          definition: remainingServices[randomIndex].definition,\n          path: remainingServices[randomIndex].path // Add path for category detection\n        });\n      }\n\n      console.log('Service path:', service.path);\n      console.log('Available categories:', AZURE_ICON_CATEGORIES);\n      console.log('Found category:', serviceCategory);\n    } else {\n      // Wrong match\n      playSound('incorrect');\n      const points = calculateScore(false);\n      setScore(prevScore => Math.max(0, prevScore + points));\n      \n      // Visual feedback for wrong match\n      setTimeout(() => {\n        setSelectedService(null);\n      }, 1000);\n    }\n  }, [gameOver, matchedServices, currentDefinition, timeLeft, score, services, playSound]);\n\n  // Update the useEffect for game completion check\n  useEffect(() => {\n    if (isGameComplete(matchedServices, services.length) && timeLeft > 0) {\n      setShowConfetti(true);\n      setTimeout(() => {\n        setShowConfetti(false);\n      }, 5000);\n      setGameOver(true);\n      playSound('achievement');\n    }\n  }, [matchedServices, services.length, timeLeft, playSound]);\n\n  // Update high scores\n  const updateHighScores = (newScore) => {\n    const newHighScores = [...highScores];\n    \n    // Add the new score\n    newHighScores.push({\n      name: playerName,\n      score: newScore,\n      date: new Date().toISOString()\n    });\n    \n    // Sort by score (highest first)\n    newHighScores.sort((a, b) => b.score - a.score);\n    \n    // Keep only top 5\n    const topScores = newHighScores.slice(0, 5);\n    \n    // Update state and localStorage\n    setHighScores(topScores);\n    localStorage.setItem('highScores', JSON.stringify(topScores));\n  };\n\n  // Timer countdown\n  useEffect(() => {\n    if (!gameStarted || gameOver) return;\n    \n    const timer = setInterval(() => {\n      setTimeLeft(prev => {\n        if (prev <= 1) {\n          clearInterval(timer);\n          setGameOver(true);\n          return 0;\n        }\n        return prev - 1;\n      });\n    }, 1000);\n    \n    return () => clearInterval(timer);\n  }, [gameStarted, gameOver]);\n\n  // Start the game when component mounts\n  useEffect(() => {\n    if (!showWelcome) {\n      initGame();\n    }\n  }, [initGame, showWelcome]);\n\n  // Auto-hide confetti after celebration\n  useEffect(() => {\n    if (showConfetti) {\n      const timer = setTimeout(() => {\n        setShowConfetti(false);\n      }, 7000); // Hide confetti after 7 seconds\n      \n      return () => clearTimeout(timer);\n    }\n  }, [showConfetti]);\n\n  // Handle name submission\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowWelcome(false);\n    initGame(); // Start the game after name submission\n  };\n\n  // Add this to retrieve the nickname\n  const getNickname = () => {\n    return localStorage.getItem('userNickname') || 'Anonymous';\n  };\n\n  // Modify the game over function to save score\n  const handleGameOver = async () => {\n    console.log('🏁 handleGameOver triggered');\n    setGameOver(true);\n    \n    try {\n      console.log('🎯 Calling saveScore from handleGameOver');\n      await saveScore();\n      console.log('✅ Score saved successfully from handleGameOver');\n    } catch (error) {\n      console.error('❌ Error saving score from handleGameOver:', error);\n    }\n    \n    if (isGameComplete(matchedServices.length, services.length)) {\n      setShowConfetti(true);\n    }\n  };\n\n  // Update the language handling function to translate all UI elements\n  const handleLanguageChange = async (newLanguage) => {\n    setCurrentLanguage(newLanguage);\n    \n    if (newLanguage === 'en') {\n      setTranslations(defaultTranslations);\n      if (currentDefinition) {\n        setTranslatedDefinition(currentDefinition.definition);\n      }\n      return;\n    }\n    \n    try {\n      // Use batch translation for UI elements\n      const keys = Object.keys(defaultTranslations);\n      const values = Object.values(defaultTranslations);\n      \n      const translatedValues = await translateBatch(values, newLanguage);\n      \n      const newTranslations = {};\n      keys.forEach((key, index) => {\n        newTranslations[key] = translatedValues[index];\n      });\n      \n      setTranslations(newTranslations);\n      \n      // Translate current definition if it exists\n      if (currentDefinition) {\n        const translated = await translateText(currentDefinition.definition, newLanguage);\n        setTranslatedDefinition(translated);\n      }\n    } catch (error) {\n      console.error('Translation error:', error);\n    }\n  };\n\n  // Translate definition whenever it changes\n  useEffect(() => {\n    if (currentDefinition && currentLanguage !== 'en') {\n      handleLanguageChange(currentLanguage);\n    } else if (currentDefinition) {\n      // Use original definition for English\n      setTranslatedDefinition(currentDefinition.definition);\n    }\n  }, [currentDefinition, currentLanguage]);\n\n  // When a correct answer is selected, update the score\n  const handleCorrectAnswer = () => {\n    const points = calculateScore(true);\n    setScore(prevScore => prevScore + points);\n  };\n\n  // When a wrong answer is selected, update the score\n  const handleWrongAnswer = () => {\n    const points = calculateScore(false);\n    setScore(prevScore => Math.max(0, prevScore + points));\n  };\n\n  // Modify the saveScore function to be more verbose\n  const saveScore = async () => {\n    console.log('🚀 =====================================');\n    console.log('🚀 CALLING AZURE FUNCTION: save_games_score');\n    console.log('🚀 URL:', process.env.REACT_APP_FUNCTION_SAVE_SCORE_URL);\n    console.log('🚀 =====================================');\n    \n    try {\n      const metadata = {\n        matchedCount: matchedServices.length,\n        totalServices: services.length,\n        timeLeft: timeLeft,\n        timestamp: new Date().toISOString()\n      };\n\n      const data = {\n        nickname: playerName,\n        gameType: \"DefinitionMatch\",\n        score,\n        metadata\n      };\n\n      console.log('📤 Sending this data to Azure Function:', data);\n\n      const savedScore = await CosmosDBService.saveGameScore(\n        playerName, \n        \"DefinitionMatch\", \n        score,\n        metadata\n      );\n\n      console.log('📥 Azure Function Response:', savedScore);\n      await loadLeaderboard();\n      return savedScore;\n    } catch (error) {\n      console.error('❌ Azure Function Error:', error);\n      throw error;\n    }\n  };\n\n  // Also update the loadLeaderboard function to be more explicit\n  const loadLeaderboard = async () => {\n    console.log('🏆 LOADING LEADERBOARD from Azure Function (get_leader_board)');\n    try {\n      const leaderboard = await CosmosDBService.getLeaderboard(\"DefinitionMatch\");\n      console.log('📊 Leaderboard loaded from Azure Function:', leaderboard);\n      setHighScores(leaderboard);\n    } catch (error) {\n      console.error('❌ Error loading leaderboard from Azure Function:', error);\n    }\n  };\n\n  // First, let's modify where we check for game completion\n  useEffect(() => {\n    // Check if game is complete (all services matched)\n    if (gameStarted && !gameOver && isGameComplete(matchedServices.length, services.length)) {\n      console.log('🎮 GAME COMPLETION DETECTED!');\n      console.log('Current State:', {\n        matchedServices: matchedServices.length,\n        totalServices: services.length,\n        score,\n        timeLeft,\n        playerName\n      });\n      \n      setGameOver(true);\n      setShowConfetti(true);\n      \n      // Call saveScore with immediate feedback\n      console.log('📝 Triggering score save...');\n      saveScore().then(() => {\n        console.log('✅ Score save process completed');\n      }).catch(error => {\n        console.error('❌ Score save process failed:', error);\n      });\n      \n      const confettiTimer = setTimeout(() => {\n        setShowConfetti(false);\n      }, 5000);\n      \n      return () => clearTimeout(confettiTimer);\n    }\n  }, [gameStarted, gameOver, matchedServices.length, services.length, score, timeLeft, playerName]);\n\n  // Add this near the start of your component\n  useEffect(() => {\n    // Debug log all relevant environment variables\n    console.log('🔧 Environment Variables Check:');\n    console.log({\n      SAVE_SCORE_URL: process.env.REACT_APP_FUNCTION_SAVE_SCORE_URL,\n      LEADERBOARD_URL: process.env.REACT_APP_FUNCTION_LEADERBOARD_URL,\n      NODE_ENV: process.env.NODE_ENV\n    });\n    \n    if (!process.env.REACT_APP_FUNCTION_SAVE_SCORE_URL || \n        !process.env.REACT_APP_FUNCTION_LEADERBOARD_URL) {\n      console.error('❌ Missing environment variables!');\n    } else {\n      console.log('✅ All environment variables present');\n    }\n  }, []);\n\n  return (\n    <div className=\"gameCanvas-container\" ref={gameContainerRef}>\n      {loading && !showWelcome && (\n        <div className=\"loading-overlay\">\n          <div className=\"loading-spinner\"></div>\n          <p>{translations.loading}</p>\n        </div>\n      )}\n      \n      <Confetti active={showConfetti} />\n\n      {/* Back to Home button */}\n      <Link \n        to=\"/\" \n        className=\"back-to-home-button\"\n        style={{\n          position: 'absolute',\n          top: '20px',\n          left: '20px',\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px 20px',\n          backgroundColor: 'rgba(0, 255, 255, 0.1)',\n          border: '2px solid #00ffff',\n          borderRadius: '5px',\n          color: '#00ffff',\n          textDecoration: 'none',\n          fontFamily: 'Orbitron, sans-serif',\n          fontSize: '14px',\n          transition: 'all 0.3s ease',\n          zIndex: 100\n        }}\n        onMouseEnter={() => playSound('hover')}\n      >\n        <svg \n          xmlns=\"http://www.w3.org/2000/svg\" \n          viewBox=\"0 0 24 24\" \n          fill=\"currentColor\" \n          style={{\n            width: '20px',\n            height: '20px',\n            marginRight: '8px'\n          }}\n        >\n          <path d=\"M12 2L1 12h3v9h6v-6h4v6h6v-9h3L12 2z\"/>\n        </svg>\n        {translations.backToHome}\n      </Link>\n\n      <h1 \n        className=\"gameCanvas-game-title\"\n        style={{ '--azure-icon': `url(${process.env.PUBLIC_URL}/azure-icons/Microsoft_Azure_Cyan.svg)` }}\n      >\n        zure {translations.title.replace('Azure', '')}\n      </h1>\n      \n      <div className=\"gameCanvas-game-content\">\n        {/* Main game area with centered grid */}\n        <div className=\"gameCanvas-canvas-wrapper\" style={{ \n          display: 'flex', \n          flexDirection: 'column', \n          justifyContent: 'flex-start',\n          position: 'relative',\n          paddingTop: '80px'\n        }}>\n          {/* Add LanguageSelector here with absolute positioning */}\n          <div style={{\n            position: 'absolute',\n            top: '20px',\n            right: '20px',\n            zIndex: 100\n          }}>\n            <LanguageSelector \n              currentLanguage={currentLanguage}\n              onLanguageChange={handleLanguageChange}\n            />\n          </div>\n\n          {/* Service icons grid */}\n          <div \n            className=\"memory-game-grid\" \n            style={{ \n              margin: '0 auto',\n              display: 'grid',\n              gridTemplateColumns: 'repeat(5, 1fr)',\n              gap: '15px',\n              maxWidth: '800px',\n              marginTop: '40px'\n            }}\n          >\n            {services.map((service, index) => (\n              <div\n                key={`${service.name}-${index}`}\n                className={`memory-game-card ${\n                  selectedService && selectedService.name === service.name \n                    ? (service.name === currentDefinition.name ? 'correct' : 'wrong') \n                    : matchedServices.includes(service.name) ? 'correct' : ''\n                }`}\n                onClick={() => handleCardClick(service, index)}\n                onMouseEnter={() => {\n                  playSound('hover');\n                  setSelectedService(service);\n                  \n                  // Get the category\n                  let serviceCategory = 'Other';\n                  const servicePath = service.path.toLowerCase();\n                  \n                  // Find the category\n                  for (const [category, path] of Object.entries(AZURE_ICON_CATEGORIES)) {\n                    const normalizedPath = path.toLowerCase();\n                    if (servicePath.includes(normalizedPath)) {\n                      serviceCategory = category;\n                      break;\n                    }\n                  }\n                  \n                  // Format the category\n                  const formattedCategory = serviceCategory\n                    .split('_')\n                    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n                    .join(' ');\n                  \n                  setCurrentCategory(formattedCategory);\n                  \n                  // Only show the category if the service is already matched\n                  if (matchedServices.includes(service.name)) {\n                    setShowCategory(true);\n                  }\n                }}\n                onMouseLeave={() => {\n                  setShowCategory(false);\n                }}\n                style={{\n                  cursor: matchedServices.includes(service.name) ? 'default' : 'pointer',\n                  opacity: matchedServices.includes(service.name) ? 0.7 : 1,\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  direction: 'ltr',\n                  transform: 'none'\n                }}\n              >\n                <div className=\"memory-card-content\" style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  height: '100%',\n                  direction: 'ltr',\n                  transform: 'none'\n                }}>\n                  <img \n                    src={getServiceIconUrl(service.path)} \n                    alt={service.name}\n                    style={{\n                      width: '50px',\n                      height: '50px',\n                      marginBottom: '8px',\n                      transform: 'none'\n                    }}\n                    onError={(e) => {\n                      e.target.onerror = null;\n                      e.target.src = `${process.env.PUBLIC_URL}/azure-icons/default.svg`;\n                    }}\n                  />\n                  <div className=\"memory-card-text\" style={{\n                    fontSize: '12px',\n                    textAlign: 'center',\n                    wordBreak: 'break-word',\n                    direction: 'ltr',\n                    unicodeBidi: 'normal',\n                    transform: 'none'\n                  }}>\n                    {service.name}\n                  </div>\n                </div>\n              </div>\n            ))}\n          </div>\n\n          {/* Category display with translations */}\n          {currentCategory && showCategory && selectedService && (\n            <div style={{\n              textAlign: 'center',\n              color: '#00ffff',\n              fontSize: '16px',\n              margin: '20px auto',\n              padding: '10px',\n              fontFamily: 'Orbitron, sans-serif',\n              position: 'absolute',\n              width: '100%',\n              left: '0',\n              top: '580px',\n              zIndex: 2\n            }}>\n              {translations.categoryBelongs\n                .replace('{service}', selectedService.name || 'Unknown')\n                .replace('{category}', currentCategory)}\n            </div>\n          )}\n\n          {/* Definition card with translations */}\n          <div className=\"definition-card\" style={{\n            backgroundColor: 'rgba(0, 40, 56, 0.9)',\n            padding: '20px',\n            margin: '40px auto',\n            border: '2px solid #00ffff',\n            borderRadius: '10px',\n            boxShadow: '0 4px 15px rgba(0, 255, 255, 0.3)',\n            width: '90%',\n            maxWidth: '800px',\n            textAlign: 'center',\n            fontSize: '18px',\n            fontWeight: 'normal',\n            color: '#ffffff',\n            lineHeight: '1.5',\n            position: 'relative',\n            zIndex: 1,\n            marginTop: '40px'\n          }}>\n            <div style={{\n              fontWeight: 'bold',\n              marginBottom: '10px',\n              color: '#00ffff'\n            }}>\n              {translations.serviceDefinition}\n            </div>\n            <div style={{\n              fontSize: '16px',\n              padding: '10px',\n              backgroundColor: 'rgba(0, 40, 56, 0.8)',\n              borderRadius: '5px'\n            }}>\n              {translatedDefinition || (currentDefinition && currentDefinition.definition)}\n            </div>\n          </div>\n\n          {/* Game over message with translations */}\n          {gameOver && (\n            <div className=\"gameCanvas-game-over\">\n              <h3>\n                {matchedServices.length === services.length \n                  ? translations.congratulations \n                  : translations.timesUp}\n              </h3>\n              <p>\n                {matchedServices.length === services.length \n                  ? translations.matchedAll.replace('{time}', formatTime(timeLeft))\n                  : translations.matchedSome\n                      .replace('{matched}', matchedServices.length)\n                      .replace('{total}', services.length)}\n              </p>\n              <button \n                onClick={() => {\n                  playSound('select');\n                  initGame();\n                }}\n              >\n                {translations.playAgain}\n              </button>\n            </div>\n          )}\n        </div>\n\n        {/* Right side panel with translations */}\n        <div className=\"gameCanvas-instruction-panel\">\n          {/* Player info box */}\n          <div className=\"gameCanvas-player-box\">\n            <div className=\"gameCanvas-player-name\">\n              {translations.player}: {playerName}\n            </div>\n          </div>\n\n          {/* Score box */}\n          <div className=\"gameCanvas-score-box\">\n            <div className=\"gameCanvas-score-display\">\n              <span role=\"img\" aria-label=\"alien\">👾</span> {translations.score}: {score} <span role=\"img\" aria-label=\"joystick\">🕹️</span>\n              {soundsLoaded && (\n                <button \n                  className=\"gameCanvas-sound-toggle\"\n                  onClick={toggleMute}\n                  aria-label=\"Toggle sound\"\n                  style={{ marginLeft: '8px', display: 'inline-block' }}\n                >\n                  {isMuted ? '🔇' : '🔊'}\n                </button>\n              )}\n            </div>\n          </div>\n\n          {/* Timer box */}\n          <div className=\"gameCanvas-timer-box\">\n            <div \n              className=\"gameCanvas-timer-display\"\n              data-label={translations.time ? `${translations.time}:` : \"TIME:\"}\n            >\n              {formatTime(timeLeft)}\n            </div>\n          </div>\n\n          {/* How to score box */}\n          <div className=\"gameCanvas-score-explanation\">\n            <h4>{translations.howToScore}:</h4>\n            <ul>\n              <li>• {translations.correctMatch}</li>\n              <li>• {translations.wrongMatch}</li>\n              <li>• {translations.tip}</li>\n            </ul>\n          </div>\n\n          {/* Progress display */}\n          <div className=\"gameCanvas-progress-display\">\n            {translations.progress}: {matchedServices.length} {translations.outOf} {services.length}\n          </div>\n\n          {/* High scores section */}\n          <div className=\"gameCanvas-high-scores\" style={{\n            backgroundColor: 'rgba(0, 40, 56, 0.8)',\n            border: '1px solid #00ffff',\n            borderRadius: '8px',\n            padding: '15px',\n            marginTop: '10px'\n          }}>\n            <h4 style={{ \n              color: '#00ffff',\n              marginBottom: '10px',\n              textAlign: 'center'\n            }}>\n              {translations.highScores}\n            </h4>\n            <ul style={{ listStyle: 'none', padding: 0 }}>\n              {highScores.map((entry, index) => (\n                <li key={index} style={{ \n                  display: 'flex', \n                  justifyContent: 'space-between',\n                  padding: '4px 0'\n                }}>\n                  <span className=\"gameCanvas-high-score-name\">{entry.name}:</span>\n                  <span>{entry.score}</span>\n                </li>\n              ))}\n            </ul>\n          </div>\n\n          {/* Current mission box */}\n          <div className=\"gameCanvas-mission-container\">\n            <h3 className=\"gameCanvas-mission-title\">\n              {translations.currentMission}\n            </h3>\n            <div className=\"gameCanvas-mission-text\">\n              {translations.missionText}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {/* Welcome modal with translations */}\n      {showWelcome && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-modal\">\n            <h2>{translations.welcomeTitle}</h2>\n            <p>{translations.welcomeText}</p>\n            <form onSubmit={handleNameSubmit}>\n              <input\n                type=\"text\"\n                value={tempPlayerName}\n                onChange={(e) => {\n                  setTempPlayerName(e.target.value);\n                  setNameError('');\n                }}\n                placeholder={translations.yourName}\n                className=\"gameCanvas-name-input\"\n                autoFocus\n              />\n              {nameError && <div className=\"gameCanvas-name-error\">{nameError}</div>}\n              <button type=\"submit\" className=\"gameCanvas-start-button\">\n                {translations.startGame}\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {/* Add this debugging button somewhere in your UI during development */}\n      <button \n        onClick={() => {\n          console.log('🔍 DEBUG: Manual save triggered');\n          saveScore().then(() => {\n            console.log('✅ DEBUG: Manual save completed');\n          }).catch(error => {\n            console.error('❌ DEBUG: Manual save failed:', error);\n          });\n        }}\n        style={{\n          position: 'absolute',\n          top: '60px',\n          right: '20px',\n          zIndex: 1000,\n          background: '#ff0000',\n          color: 'white',\n          padding: '5px',\n          border: 'none',\n          borderRadius: '4px',\n          cursor: 'pointer'\n        }}\n      >\n        DEBUG: Save Score\n      </button>\n    </div>\n  );\n};\n\nexport default MatchDefinitionWithIconGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}