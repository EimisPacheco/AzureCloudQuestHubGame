{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport ArchitectureVisualizer from './ArchitectureVisualizer';\nimport ServiceOptionsPanel from './ServiceOptionsPanel';\nimport { generateArchitecture } from '../services/AWSArchitectureAI';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AWSArchitectureGame = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [architecture, setArchitecture] = useState(null);\n  const [architectureInfo, setArchitectureInfo] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [serviceOptions, setServiceOptions] = useState([]);\n  const [difficulty] = useState('BEGINNER');\n  const [score, setScore] = useState(0);\n  const API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(TouchSensor));\n  const loadNextArchitecture = useCallback(async () => {\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Origin': 'http://localhost:3000'\n        },\n        mode: 'cors',\n        credentials: 'omit',\n        body: JSON.stringify({\n          difficulty\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('API Response:', JSON.stringify(data, null, 2));\n      if (!data || !data.architecture || !data.services || !data.connections || !data.missingServices) {\n        throw new Error('Missing required fields in API response');\n      }\n      setArchitectureInfo({\n        name: data.architecture.name,\n        description: data.architecture.description\n      });\n      const transformedServices = data.services.map(serviceName => ({\n        id: serviceName.toLowerCase().replace(/\\s+/g, '-'),\n        name: serviceName,\n        icon: `/aws-icons/${serviceName.toLowerCase().replace(/\\s+/g, '-')}.png`\n      }));\n      setArchitecture({\n        services: transformedServices,\n        connections: data.connections\n      });\n      if (data.missingServices && data.missingServices.length > 0) {\n        setCurrentQuestion(data.missingServices[0]);\n        setServiceOptions(data.missingServices[0].options);\n      }\n    } catch (error) {\n      console.error('Failed to load architecture:', error);\n      setError(`Failed to load architecture: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_URL, difficulty]);\n  useEffect(() => {\n    const controller = new AbortController();\n    if (!architecture && !isLoading) {\n      loadNextArchitecture();\n    }\n    return () => {\n      controller.abort();\n    };\n  }, [architecture, isLoading, loadNextArchitecture]);\n  const handleServiceSelection = async selectedServiceId => {\n    const selectedOption = currentQuestion.options.find(opt => opt.service === selectedServiceId);\n    if (selectedOption !== null && selectedOption !== void 0 && selectedOption.isCorrect) {\n      const points = selectedOption.isOptimal ? 2 : 1;\n      setScore(prev => prev + points);\n      await loadNextArchitecture();\n    }\n  };\n  const handleDragEnd = event => {\n    const {\n      active,\n      over\n    } = event;\n    if (over && over.id === 'architecture-drop-zone') {\n      handleServiceSelection(active.id);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading\",\n      children: \"Loading architecture...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"retry-button\",\n        onClick: () => loadNextArchitecture(0),\n        children: \"Try Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n        className: \"error-hint\",\n        children: \"If the error persists, please check your network connection or try again later.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: (architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.name) || 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"architecture-description\",\n        children: architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AWSArchitectureDisplay, {\n          architecture: architecture,\n          currentQuestion: currentQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"service-options\",\n          children: serviceOptions.map((option, index) => /*#__PURE__*/_jsxDEV(DraggableService, {\n            service: option,\n            onClick: () => handleServiceSelection(option.service)\n          }, `${option.service}-${index}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureGame, \"xTvxxocDkKFTwQW1lDYgPVxx+X8=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c = AWSArchitectureGame;\nexport default AWSArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","DndContext","useSensor","useSensors","PointerSensor","TouchSensor","ArchitectureVisualizer","ServiceOptionsPanel","generateArchitecture","AWSArchitectureDisplay","DraggableService","DndProvider","HTML5Backend","jsxDEV","_jsxDEV","Fragment","_Fragment","AWSArchitectureGame","_s","isLoading","setIsLoading","error","setError","architecture","setArchitecture","architectureInfo","setArchitectureInfo","currentQuestion","setCurrentQuestion","serviceOptions","setServiceOptions","difficulty","score","setScore","API_URL","sensors","activationConstraint","distance","loadNextArchitecture","response","fetch","method","headers","mode","credentials","body","JSON","stringify","ok","Error","status","data","json","console","log","services","connections","missingServices","name","description","transformedServices","map","serviceName","id","toLowerCase","replace","icon","length","options","message","controller","AbortController","abort","handleServiceSelection","selectedServiceId","selectedOption","find","opt","service","isCorrect","points","isOptimal","prev","handleDragEnd","event","active","over","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","backend","option","index","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport ArchitectureVisualizer from './ArchitectureVisualizer';\nimport ServiceOptionsPanel from './ServiceOptionsPanel';\nimport { generateArchitecture } from '../services/AWSArchitectureAI';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\n\n\n\nconst AWSArchitectureGame = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [architecture, setArchitecture] = useState(null);\n    const [architectureInfo, setArchitectureInfo] = useState(null);\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [serviceOptions, setServiceOptions] = useState([]);\n    const [difficulty] = useState('BEGINNER');\n    const [score, setScore] = useState(0); \n  \n  const API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n\n  const sensors = useSensors(\n    useSensor(PointerSensor, {\n      activationConstraint: {\n        distance: 8,\n      },\n    }),\n    useSensor(TouchSensor)\n  );\n\n  const loadNextArchitecture = useCallback(async () => {\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    \n    try {\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Origin': 'http://localhost:3000'\n        },\n        mode: 'cors',\n        credentials: 'omit',\n        body: JSON.stringify({ difficulty })\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      console.log('API Response:', JSON.stringify(data, null, 2));\n\n      if (!data || !data.architecture || !data.services || !data.connections || !data.missingServices) {\n        throw new Error('Missing required fields in API response');\n      }\n\n      setArchitectureInfo({\n        name: data.architecture.name,\n        description: data.architecture.description\n      });\n      \n      const transformedServices = data.services.map(serviceName => ({\n        id: serviceName.toLowerCase().replace(/\\s+/g, '-'),\n        name: serviceName,\n        icon: `/aws-icons/${serviceName.toLowerCase().replace(/\\s+/g, '-')}.png`\n      }));\n\n      setArchitecture({\n        services: transformedServices,\n        connections: data.connections\n      });\n\n      if (data.missingServices && data.missingServices.length > 0) {\n        setCurrentQuestion(data.missingServices[0]);\n        setServiceOptions(data.missingServices[0].options);\n      }\n    } catch (error) {\n      console.error('Failed to load architecture:', error);\n      setError(`Failed to load architecture: ${error.message}`);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_URL, difficulty]);\n\n  useEffect(() => {\n    const controller = new AbortController();\n    \n    if (!architecture && !isLoading) {\n      loadNextArchitecture();\n    }\n\n    return () => {\n      controller.abort();\n    };\n  }, [architecture, isLoading, loadNextArchitecture]);\n\n  const handleServiceSelection = async (selectedServiceId) => {\n    const selectedOption = currentQuestion.options.find(opt => opt.service === selectedServiceId);\n    \n    if (selectedOption?.isCorrect) {\n      const points = selectedOption.isOptimal ? 2 : 1;\n      setScore(prev => prev + points);\n      await loadNextArchitecture();\n    }\n  };\n\n  const handleDragEnd = (event) => {\n    const { active, over } = event;\n    \n    if (over && over.id === 'architecture-drop-zone') {\n      handleServiceSelection(active.id);\n    }\n  };\n\n  if (isLoading) {\n    return <div className=\"loading\">Loading architecture...</div>;\n  }\n\n  if (error) {\n    return (\n      <div className=\"error-container\">\n        <p className=\"error-message\">{error}</p>\n        <button \n          className=\"retry-button\"\n          onClick={() => loadNextArchitecture(0)}\n        >\n          Try Again\n        </button>\n        <small className=\"error-hint\">\n          If the error persists, please check your network connection or try again later.\n        </small>\n      </div>\n    );\n  }\n\n  return (\n    <DndProvider backend={HTML5Backend}>\n      <div className=\"game-container\">\n        <div className=\"game-header\">\n          <h2>{architectureInfo?.name || 'Loading...'}</h2>\n          <div className=\"score\">Score: {score}</div>\n        </div>\n        \n        <p className=\"architecture-description\">{architectureInfo?.description}</p>\n        \n        {error ? (\n          <div className=\"error-message\">{error}</div>\n        ) : (\n          <>\n            <AWSArchitectureDisplay \n              architecture={architecture}\n              currentQuestion={currentQuestion}\n            />\n            \n            <div className=\"service-options\">\n              {serviceOptions.map((option, index) => (\n                <DraggableService\n                  key={`${option.service}-${index}`}\n                  service={option}\n                  onClick={() => handleServiceSelection(option.service)}\n                />\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n    </DndProvider>\n  );\n};\n\nexport default AWSArchitectureGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}