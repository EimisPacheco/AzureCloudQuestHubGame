{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst AWSArchitectureGame = () => {\n  _s();\n  var _currentQuestion$opti;\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [architecture, setArchitecture] = useState(null);\n  const [architectureInfo, setArchitectureInfo] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [serviceOptions, setServiceOptions] = useState([]);\n  const [difficulty] = useState('BEGINNER');\n  const [score, setScore] = useState(0);\n  const API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(TouchSensor));\n  const loadNextArchitecture = useCallback(async () => {\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    try {\n      console.log('🚀 Fetching new architecture...');\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Origin': 'http://localhost:3000'\n        },\n        mode: 'cors',\n        credentials: 'omit',\n        body: JSON.stringify({\n          difficulty\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('📦 Received data:', data);\n\n      // Set architecture info\n      setArchitectureInfo({\n        name: data.architecture.name,\n        description: data.architecture.description\n      });\n\n      // Transform services with proper error handling\n      const transformedServices = (data.services || []).map(serviceName => {\n        if (!serviceName) {\n          console.warn('⚠️ Undefined service name encountered');\n          return null;\n        }\n        return {\n          id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n          name: serviceName,\n          icon: serviceName.toLowerCase().includes('missing') ? '/aws-icons/missing.svg' : getCachedServiceIcon(serviceName)\n        };\n      }).filter(Boolean);\n\n      // Create service name to ID mapping\n      const serviceNameToId = {};\n      transformedServices.forEach(service => {\n        if (service && service.name) {\n          serviceNameToId[service.name] = service.id;\n        }\n      });\n\n      // Transform connections\n      const transformedConnections = (data.connections || []).filter(conn => conn && conn.from && conn.to).map(conn => ({\n        from: serviceNameToId[conn.from] || conn.from.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n        to: serviceNameToId[conn.to] || conn.to.toLowerCase().replace(/[^a-z0-9]+/g, '-')\n      }));\n      setArchitecture({\n        services: transformedServices,\n        connections: transformedConnections\n      });\n\n      // Handle missing services and questions\n      if (data.missingServices && data.missingServices.length > 0) {\n        const currentMissingService = data.missingServices[0];\n        setCurrentQuestion({\n          text: currentMissingService.question,\n          optimizationFocus: currentMissingService.optimizationFocus,\n          position: currentMissingService.position,\n          options: currentMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: opt.service.toLowerCase().includes('missing') ? '/aws-icons/missing.svg' : getCachedServiceIcon(opt.service)\n          }))\n        });\n      }\n    } catch (error) {\n      console.error('❌ Failed to load architecture:', error);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_URL, difficulty, isLoading]);\n  const handleServiceSelection = async selectedServiceId => {\n    const selectedOption = currentQuestion.options.find(opt => opt.service === selectedServiceId);\n    if (selectedOption !== null && selectedOption !== void 0 && selectedOption.isCorrect) {\n      const points = selectedOption.isOptimal ? 2 : 1;\n      setScore(prev => prev + points);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: (architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.name) || 'AWS Architecture Challenge'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-architecture-button\",\n          onClick: loadNextArchitecture,\n          disabled: isLoading,\n          children: isLoading ? 'Loading...' : 'New Architecture'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), architectureInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"architecture-description\",\n        children: architectureInfo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 32\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AWSArchitectureDisplay, {\n          architecture: architecture,\n          currentQuestion: currentQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question: \", currentQuestion.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Optimization Focus: \", currentQuestion.optimizationFocus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"service-options\",\n            children: (_currentQuestion$opti = currentQuestion.options) === null || _currentQuestion$opti === void 0 ? void 0 : _currentQuestion$opti.map((option, index) => /*#__PURE__*/_jsxDEV(DraggableService, {\n              service: option,\n              onClick: () => handleServiceSelection(option.id)\n            }, `${option.id}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 23\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 7\n  }, this);\n};\n_s(AWSArchitectureGame, \"bSQea3j8JJ0kyR2XgeOxzOSfgLk=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c = AWSArchitectureGame;\nexport default AWSArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureGame\");","map":{"version":3,"names":["React","useState","useCallback","DndContext","useSensor","useSensors","PointerSensor","TouchSensor","AWSArchitectureDisplay","DraggableService","DndProvider","HTML5Backend","getCachedServiceIcon","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","Fragment","_Fragment","S3_BUCKET_URL","ICONS_BASE_PATH","AWSArchitectureGame","_s","_currentQuestion$opti","isLoading","setIsLoading","error","setError","architecture","setArchitecture","architectureInfo","setArchitectureInfo","currentQuestion","setCurrentQuestion","serviceOptions","setServiceOptions","difficulty","score","setScore","API_URL","sensors","activationConstraint","distance","loadNextArchitecture","console","log","response","fetch","method","headers","mode","credentials","body","JSON","stringify","ok","Error","status","data","json","name","description","transformedServices","services","map","serviceName","warn","id","toLowerCase","replace","icon","includes","filter","Boolean","serviceNameToId","forEach","service","transformedConnections","connections","conn","from","to","missingServices","length","currentMissingService","text","question","optimizationFocus","position","options","opt","isCorrect","isOptimal","explanation","rating","message","handleServiceSelection","selectedServiceId","selectedOption","find","points","prev","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","option","index","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\n\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\n\nconst AWSArchitectureGame = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [architecture, setArchitecture] = useState(null);\n    const [architectureInfo, setArchitectureInfo] = useState(null);\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [serviceOptions, setServiceOptions] = useState([]);\n    const [difficulty] = useState('BEGINNER');\n    const [score, setScore] = useState(0); \n  \n    const API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n\n    const sensors = useSensors(\n      useSensor(PointerSensor, {\n        activationConstraint: {\n          distance: 8,\n        },\n      }),\n      useSensor(TouchSensor)\n    );\n\n    const loadNextArchitecture = useCallback(async () => {\n      if (isLoading) return;\n      setIsLoading(true);\n      setError(null);\n      \n      try {\n        console.log('🚀 Fetching new architecture...');\n        const response = await fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Origin': 'http://localhost:3000'\n          },\n          mode: 'cors',\n          credentials: 'omit',\n          body: JSON.stringify({ difficulty })\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('📦 Received data:', data);\n\n        // Set architecture info\n        setArchitectureInfo({\n          name: data.architecture.name,\n          description: data.architecture.description\n        });\n        \n        // Transform services with proper error handling\n        const transformedServices = (data.services || []).map(serviceName => {\n          if (!serviceName) {\n            console.warn('⚠️ Undefined service name encountered');\n            return null;\n          }\n          return {\n            id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n            name: serviceName,\n            icon: serviceName.toLowerCase().includes('missing') ? \n              '/aws-icons/missing.svg' : \n              getCachedServiceIcon(serviceName)\n          };\n        }).filter(Boolean);\n\n        // Create service name to ID mapping\n        const serviceNameToId = {};\n        transformedServices.forEach(service => {\n          if (service && service.name) {\n            serviceNameToId[service.name] = service.id;\n          }\n        });\n\n        // Transform connections\n        const transformedConnections = (data.connections || [])\n          .filter(conn => conn && conn.from && conn.to)\n          .map(conn => ({\n            from: serviceNameToId[conn.from] || conn.from.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n            to: serviceNameToId[conn.to] || conn.to.toLowerCase().replace(/[^a-z0-9]+/g, '-')\n          }));\n\n        setArchitecture({\n          services: transformedServices,\n          connections: transformedConnections\n        });\n\n        // Handle missing services and questions\n        if (data.missingServices && data.missingServices.length > 0) {\n          const currentMissingService = data.missingServices[0];\n          setCurrentQuestion({\n            text: currentMissingService.question,\n            optimizationFocus: currentMissingService.optimizationFocus,\n            position: currentMissingService.position,\n            options: currentMissingService.options.map(opt => ({\n              id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n              name: opt.service,\n              isCorrect: opt.isCorrect,\n              isOptimal: opt.isOptimal,\n              explanation: opt.explanation,\n              rating: opt.rating,\n              icon: opt.service.toLowerCase().includes('missing') ? \n                '/aws-icons/missing.svg' : \n                getCachedServiceIcon(opt.service)\n            }))\n          });\n        }\n      } catch (error) {\n        console.error('❌ Failed to load architecture:', error);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }, [API_URL, difficulty, isLoading]);\n\n    const handleServiceSelection = async (selectedServiceId) => {\n      const selectedOption = currentQuestion.options.find(opt => opt.service === selectedServiceId);\n      \n      if (selectedOption?.isCorrect) {\n        const points = selectedOption.isOptimal ? 2 : 1;\n        setScore(prev => prev + points);\n      }\n    };\n\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <div className=\"game-container\">\n          <div className=\"game-header\">\n            <h2>{architectureInfo?.name || 'AWS Architecture Challenge'}</h2>\n            <div className=\"score\">Score: {score}</div>\n            <button \n              className=\"new-architecture-button\"\n              onClick={loadNextArchitecture}\n              disabled={isLoading}\n            >\n              {isLoading ? 'Loading...' : 'New Architecture'}\n            </button>\n          </div>\n          \n          {architectureInfo && <p className=\"architecture-description\">{architectureInfo.description}</p>}\n          \n          {error ? (\n            <div className=\"error-message\">{error}</div>\n          ) : (\n            <>\n              <AWSArchitectureDisplay \n                architecture={architecture}\n                currentQuestion={currentQuestion}\n              />\n              \n              {currentQuestion && (\n                <div className=\"question-container\">\n                  <h3>Question: {currentQuestion.text}</h3>\n                  <p>Optimization Focus: {currentQuestion.optimizationFocus}</p>\n                  <div className=\"service-options\">\n                    {currentQuestion.options?.map((option, index) => (\n                      <DraggableService\n                        key={`${option.id}-${index}`}\n                        service={option}\n                        onClick={() => handleServiceSelection(option.id)}\n                      />\n                    ))}\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </div>\n      </DndProvider>\n    );\n};\n\nexport default AWSArchitectureGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}