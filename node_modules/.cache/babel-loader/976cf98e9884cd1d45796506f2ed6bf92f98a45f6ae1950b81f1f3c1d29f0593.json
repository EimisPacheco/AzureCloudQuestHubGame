{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst AWSArchitectureGame = () => {\n  _s();\n  var _architectureInfo$mis, _architectureInfo$mis2, _currentQuestion$opti;\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [architecture, setArchitecture] = useState(null);\n  const [architectureInfo, setArchitectureInfo] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [serviceOptions, setServiceOptions] = useState([]);\n  const [difficulty] = useState('BEGINNER');\n  const [score, setScore] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [feedback, setFeedback] = useState({\n    isCorrect: false,\n    message: '',\n    points: 0\n  });\n  const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n  const API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(TouchSensor));\n  const S3_ICONS_PATH = `${S3_BUCKET_URL}${ICONS_BASE_PATH}`;\n  const getServiceIcon = serviceName => {\n    if (!serviceName) {\n      console.error('No service name provided to getServiceIcon');\n      return null;\n    }\n\n    // Handle missing services locally\n    if (serviceName.toLowerCase().includes('missing')) {\n      console.log('Loading missing service icon locally:', '/aws-icons/missing.svg');\n      return '/aws-icons/missing.svg';\n    }\n\n    // Construct the potential S3 URL based on the service name\n    const cleanedServiceName = serviceName.toLowerCase().replace(/^(amazon|aws)\\s+/, '').replace(/\\s+/g, '-');\n    const potentialS3Url = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/Arch_${cleanedServiceName}_64.svg`;\n    console.log(`🔍 Attempting to load icon for \"${serviceName}\" from: ${potentialS3Url}`);\n\n    // Try to get icon from IconResolver\n    const resolvedIcon = getCachedServiceIcon(serviceName);\n    if (resolvedIcon) {\n      console.log(`✅ Successfully resolved icon for \"${serviceName}\": ${resolvedIcon}`);\n      return resolvedIcon;\n    }\n\n    // If IconResolver returns null (icon not found), log and use default\n    console.warn(`❌ Icon not found for \"${serviceName}\" at attempted path: ${potentialS3Url}`);\n    return '/aws-icons/default.svg';\n  };\n  const loadNextArchitecture = useCallback(async () => {\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    try {\n      var _data$missingServices;\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          difficulty\n        })\n      });\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      console.log('Raw AI Response:', JSON.stringify(data, null, 2));\n\n      // Transform services with proper icon handling\n      const transformedServices = data.services.map(serviceName => {\n        if (!serviceName) {\n          console.error('Undefined service name in services array');\n          return null;\n        }\n        return {\n          id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n          name: serviceName,\n          icon: getServiceIcon(serviceName)\n        };\n      }).filter(Boolean); // Remove any null entries\n\n      setArchitecture({\n        services: transformedServices,\n        connections: data.connections\n      });\n      if (((_data$missingServices = data.missingServices) === null || _data$missingServices === void 0 ? void 0 : _data$missingServices.length) > 0) {\n        const currentMissingService = data.missingServices[0];\n        setCurrentQuestion({\n          text: currentMissingService.question,\n          optimizationFocus: currentMissingService.optimizationFocus,\n          options: currentMissingService.options.map(opt => {\n            if (!opt.service) {\n              console.error('Undefined service in options:', opt);\n              return null;\n            }\n            return {\n              id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n              name: opt.service,\n              isCorrect: opt.isCorrect,\n              isOptimal: opt.isOptimal,\n              explanation: opt.explanation,\n              rating: opt.rating,\n              icon: getServiceIcon(opt.service)\n            };\n          }).filter(Boolean) // Remove any null entries\n        });\n      }\n      setArchitectureInfo({\n        name: data.architecture.name,\n        description: data.architecture.description,\n        missingServices: data.missingServices\n      });\n    } catch (error) {\n      console.error('Failed to load architecture:', error);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_URL, difficulty, isLoading]);\n  const handleServiceSelection = selectedService => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n    const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n    if (selectedOption) {\n      setShowFeedback(true);\n      if (selectedOption.isCorrect) {\n        const points = selectedOption.rating;\n        setScore(prevScore => prevScore + points);\n        setFeedback({\n          isCorrect: true,\n          message: selectedOption.explanation,\n          points: points,\n          isOptimal: selectedOption.isOptimal\n        });\n      } else {\n        setFeedback({\n          isCorrect: false,\n          message: selectedOption.explanation,\n          points: 0\n        });\n      }\n    }\n  };\n  const handleNext = () => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    setShowFeedback(false);\n    if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n      const nextIndex = currentMissingServiceIndex + 1;\n      setCurrentMissingServiceIndex(nextIndex);\n      const nextMissingService = architectureInfo.missingServices[nextIndex];\n      setCurrentQuestion({\n        text: nextMissingService.question,\n        optimizationFocus: nextMissingService.optimizationFocus,\n        options: nextMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getCachedServiceIcon(opt.service)\n        }))\n      });\n    }\n  };\n\n  // Update service options with proper icon resolution\n  useEffect(() => {\n    if (currentQuestion !== null && currentQuestion !== void 0 && currentQuestion.options) {\n      const updatedOptions = currentQuestion.options.map(option => ({\n        ...option,\n        icon: getCachedServiceIcon(option.service)\n      }));\n      setServiceOptions(updatedOptions);\n    }\n  }, [currentQuestion]);\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: (architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.name) || 'AWS Architecture Challenge'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-architecture-button\",\n          onClick: loadNextArchitecture,\n          disabled: isLoading,\n          children: isLoading ? 'Loading...' : 'New Architecture'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), architectureInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"architecture-description\",\n        children: architectureInfo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 32\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AWSArchitectureDisplay, {\n          architecture: architecture,\n          currentQuestion: currentQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question: \", currentQuestion.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Optimization Focus: \", currentQuestion.optimizationFocus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 19\n          }, this), showFeedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedback-content\",\n              children: [feedback.isCorrect ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"\\uD83C\\uDF89 Correct! +\", feedback.points, \" points\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 29\n                }, this), feedback.isOptimal && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\uD83C\\uDF1F Perfect choice! This is the optimal solution.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"\\u274C Not quite right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: feedback.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 25\n              }, this), currentMissingServiceIndex < (architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis = architectureInfo.missingServices) === null || _architectureInfo$mis === void 0 ? void 0 : _architectureInfo$mis.length) - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"next-button\",\n                onClick: handleNext,\n                children: [\"Next Service (\", currentMissingServiceIndex + 2, \" of \", architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis2 = architectureInfo.missingServices) === null || _architectureInfo$mis2 === void 0 ? void 0 : _architectureInfo$mis2.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"service-options\",\n            children: (_currentQuestion$opti = currentQuestion.options) === null || _currentQuestion$opti === void 0 ? void 0 : _currentQuestion$opti.map((option, index) => /*#__PURE__*/_jsxDEV(DraggableService, {\n              service: option,\n              onClick: () => handleServiceSelection(option.name)\n            }, `${option.id}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-status\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices ? `Service ${currentMissingServiceIndex + 1} of ${architectureInfo.missingServices.length}` : 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 212,\n    columnNumber: 7\n  }, this);\n};\n_s(AWSArchitectureGame, \"wblwfB0dGRuKnWBN3ApBATOXnSE=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c = AWSArchitectureGame;\nexport default AWSArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureGame\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","DndContext","useSensor","useSensors","PointerSensor","TouchSensor","AWSArchitectureDisplay","DraggableService","DndProvider","HTML5Backend","getCachedServiceIcon","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","Fragment","_Fragment","S3_BUCKET_URL","ICONS_BASE_PATH","AWSArchitectureGame","_s","_architectureInfo$mis","_architectureInfo$mis2","_currentQuestion$opti","isLoading","setIsLoading","error","setError","architecture","setArchitecture","architectureInfo","setArchitectureInfo","currentQuestion","setCurrentQuestion","serviceOptions","setServiceOptions","difficulty","score","setScore","showFeedback","setShowFeedback","feedback","setFeedback","isCorrect","message","points","currentMissingServiceIndex","setCurrentMissingServiceIndex","API_URL","sensors","activationConstraint","distance","S3_ICONS_PATH","getServiceIcon","serviceName","console","toLowerCase","includes","log","cleanedServiceName","replace","potentialS3Url","resolvedIcon","warn","loadNextArchitecture","_data$missingServices","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","transformedServices","services","map","id","name","icon","filter","Boolean","connections","missingServices","length","currentMissingService","text","question","optimizationFocus","options","opt","service","isOptimal","explanation","rating","description","handleServiceSelection","selectedService","selectedOption","find","prevScore","handleNext","nextIndex","nextMissingService","updatedOptions","option","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","index","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\n\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\n\nconst AWSArchitectureGame = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [architecture, setArchitecture] = useState(null);\n    const [architectureInfo, setArchitectureInfo] = useState(null);\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [serviceOptions, setServiceOptions] = useState([]);\n    const [difficulty] = useState('BEGINNER');\n    const [score, setScore] = useState(0); \n    const [showFeedback, setShowFeedback] = useState(false);\n    const [feedback, setFeedback] = useState({ isCorrect: false, message: '', points: 0 });\n    const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n  \n    const API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n\n    const sensors = useSensors(\n      useSensor(PointerSensor, {\n        activationConstraint: {\n          distance: 8,\n        },\n      }),\n      useSensor(TouchSensor)\n    );\n\n    const S3_ICONS_PATH = `${S3_BUCKET_URL}${ICONS_BASE_PATH}`;\n\n    const getServiceIcon = (serviceName) => {\n      if (!serviceName) {\n        console.error('No service name provided to getServiceIcon');\n        return null;\n      }\n\n      // Handle missing services locally\n      if (serviceName.toLowerCase().includes('missing')) {\n        console.log('Loading missing service icon locally:', '/aws-icons/missing.svg');\n        return '/aws-icons/missing.svg';\n      }\n\n      // Construct the potential S3 URL based on the service name\n      const cleanedServiceName = serviceName\n        .toLowerCase()\n        .replace(/^(amazon|aws)\\s+/, '')\n        .replace(/\\s+/g, '-');\n        \n      const potentialS3Url = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/Arch_${cleanedServiceName}_64.svg`;\n      console.log(`🔍 Attempting to load icon for \"${serviceName}\" from: ${potentialS3Url}`);\n\n      // Try to get icon from IconResolver\n      const resolvedIcon = getCachedServiceIcon(serviceName);\n      \n      if (resolvedIcon) {\n        console.log(`✅ Successfully resolved icon for \"${serviceName}\": ${resolvedIcon}`);\n        return resolvedIcon;\n      }\n\n      // If IconResolver returns null (icon not found), log and use default\n      console.warn(`❌ Icon not found for \"${serviceName}\" at attempted path: ${potentialS3Url}`);\n      return '/aws-icons/default.svg';\n    };\n\n    const loadNextArchitecture = useCallback(async () => {\n      if (isLoading) return;\n      setIsLoading(true);\n      setError(null);\n      \n      try {\n        const response = await fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ difficulty })\n        });\n\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        \n        const data = await response.json();\n        console.log('Raw AI Response:', JSON.stringify(data, null, 2));\n        \n        // Transform services with proper icon handling\n        const transformedServices = data.services.map(serviceName => {\n          if (!serviceName) {\n            console.error('Undefined service name in services array');\n            return null;\n          }\n\n          return {\n            id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n            name: serviceName,\n            icon: getServiceIcon(serviceName)\n          };\n        }).filter(Boolean); // Remove any null entries\n\n        setArchitecture({\n          services: transformedServices,\n          connections: data.connections\n        });\n\n        if (data.missingServices?.length > 0) {\n          const currentMissingService = data.missingServices[0];\n          setCurrentQuestion({\n            text: currentMissingService.question,\n            optimizationFocus: currentMissingService.optimizationFocus,\n            options: currentMissingService.options.map(opt => {\n              if (!opt.service) {\n                console.error('Undefined service in options:', opt);\n                return null;\n              }\n\n              return {\n                id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n                name: opt.service,\n                isCorrect: opt.isCorrect,\n                isOptimal: opt.isOptimal,\n                explanation: opt.explanation,\n                rating: opt.rating,\n                icon: getServiceIcon(opt.service)\n              };\n            }).filter(Boolean) // Remove any null entries\n          });\n        }\n\n        setArchitectureInfo({\n          name: data.architecture.name,\n          description: data.architecture.description,\n          missingServices: data.missingServices\n        });\n\n      } catch (error) {\n        console.error('Failed to load architecture:', error);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }, [API_URL, difficulty, isLoading]);\n\n    const handleServiceSelection = (selectedService) => {\n      if (!architectureInfo?.missingServices) return;\n      \n      const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n      const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n\n      if (selectedOption) {\n        setShowFeedback(true);\n        if (selectedOption.isCorrect) {\n          const points = selectedOption.rating;\n          setScore(prevScore => prevScore + points);\n          setFeedback({\n            isCorrect: true,\n            message: selectedOption.explanation,\n            points: points,\n            isOptimal: selectedOption.isOptimal\n          });\n        } else {\n          setFeedback({\n            isCorrect: false,\n            message: selectedOption.explanation,\n            points: 0\n          });\n        }\n      }\n    };\n\n    const handleNext = () => {\n      if (!architectureInfo?.missingServices) return;\n      \n      setShowFeedback(false);\n      if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n        const nextIndex = currentMissingServiceIndex + 1;\n        setCurrentMissingServiceIndex(nextIndex);\n        \n        const nextMissingService = architectureInfo.missingServices[nextIndex];\n        setCurrentQuestion({\n          text: nextMissingService.question,\n          optimizationFocus: nextMissingService.optimizationFocus,\n          options: nextMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getCachedServiceIcon(opt.service)\n          }))\n        });\n      }\n    };\n\n    // Update service options with proper icon resolution\n    useEffect(() => {\n      if (currentQuestion?.options) {\n        const updatedOptions = currentQuestion.options.map(option => ({\n          ...option,\n          icon: getCachedServiceIcon(option.service)\n        }));\n        setServiceOptions(updatedOptions);\n      }\n    }, [currentQuestion]);\n\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <div className=\"game-container\">\n          <div className=\"game-header\">\n            <h2>{architectureInfo?.name || 'AWS Architecture Challenge'}</h2>\n            <div className=\"score\">Score: {score}</div>\n            <button \n              className=\"new-architecture-button\"\n              onClick={loadNextArchitecture}\n              disabled={isLoading}\n            >\n              {isLoading ? 'Loading...' : 'New Architecture'}\n            </button>\n          </div>\n          \n          {architectureInfo && <p className=\"architecture-description\">{architectureInfo.description}</p>}\n          \n          {error ? (\n            <div className=\"error-message\">{error}</div>\n          ) : (\n            <>\n              <AWSArchitectureDisplay \n                architecture={architecture}\n                currentQuestion={currentQuestion}\n              />\n              \n              {currentQuestion && (\n                <div className=\"question-container\">\n                  <h3>Question: {currentQuestion.text}</h3>\n                  <p>Optimization Focus: {currentQuestion.optimizationFocus}</p>\n                  \n                  {showFeedback ? (\n                    <div className={`feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'}`}>\n                      <div className=\"feedback-content\">\n                        {feedback.isCorrect ? (\n                          <>\n                            <h3>🎉 Correct! +{feedback.points} points</h3>\n                            {feedback.isOptimal && <p>🌟 Perfect choice! This is the optimal solution.</p>}\n                          </>\n                        ) : (\n                          <h3>❌ Not quite right</h3>\n                        )}\n                        <p>{feedback.message}</p>\n                        \n                        {currentMissingServiceIndex < (architectureInfo?.missingServices?.length - 1) && (\n                          <button \n                            className=\"next-button\"\n                            onClick={handleNext}\n                          >\n                            Next Service ({currentMissingServiceIndex + 2} of {architectureInfo?.missingServices?.length})\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"service-options\">\n                      {currentQuestion.options?.map((option, index) => (\n                        <DraggableService\n                          key={`${option.id}-${index}`}\n                          service={option}\n                          onClick={() => handleServiceSelection(option.name)}\n                        />\n                      ))}\n                    </div>\n                  )}\n                </div>\n              )}\n            </>\n          )}\n          \n          <div className=\"game-status\">\n            <div className=\"progress\">\n              {architectureInfo?.missingServices ? \n                `Service ${currentMissingServiceIndex + 1} of ${architectureInfo.missingServices.length}` :\n                'Loading...'\n              }\n            </div>\n          </div>\n        </div>\n      </DndProvider>\n    );\n};\n\nexport default AWSArchitectureGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}