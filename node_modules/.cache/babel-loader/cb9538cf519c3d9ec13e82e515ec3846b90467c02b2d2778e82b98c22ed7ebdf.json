{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { parseKeyVaultKeyIdentifier } from \"./identifier.js\";\n/**\n * @internal\n * Shapes the exposed {@link KeyVaultKey} based on either a received key bundle or deleted key bundle.\n */\nexport function getKeyFromKeyBundle(bundle) {\n  const keyBundle = bundle;\n  const deletedKeyBundle = bundle;\n  const parsedId = parseKeyVaultKeyIdentifier(keyBundle.key.kid);\n  const attributes = keyBundle.attributes || {};\n  delete keyBundle.attributes;\n  const resultObject = {\n    key: keyBundle.key,\n    id: keyBundle.key ? keyBundle.key.kid : undefined,\n    name: parsedId.name,\n    keyOperations: keyBundle.key ? keyBundle.key.keyOps : undefined,\n    keyType: keyBundle.key ? keyBundle.key.kty : undefined,\n    properties: {\n      tags: keyBundle.tags,\n      enabled: attributes.enabled,\n      notBefore: attributes.notBefore,\n      expiresOn: attributes.expires,\n      createdOn: attributes.created,\n      updatedOn: attributes.updated,\n      recoverableDays: attributes.recoverableDays,\n      recoveryLevel: attributes.recoveryLevel,\n      exportable: attributes.exportable,\n      releasePolicy: keyBundle.releasePolicy,\n      hsmPlatform: attributes.hsmPlatform,\n      vaultUrl: parsedId.vaultUrl,\n      version: parsedId.version,\n      name: parsedId.name,\n      managed: keyBundle.managed,\n      id: keyBundle.key ? keyBundle.key.kid : undefined\n    }\n  };\n  if (deletedKeyBundle.recoveryId) {\n    resultObject.properties.recoveryId = deletedKeyBundle.recoveryId;\n    resultObject.properties.scheduledPurgeDate = deletedKeyBundle.scheduledPurgeDate;\n    resultObject.properties.deletedOn = deletedKeyBundle.deletedDate;\n  }\n  return resultObject;\n}\n/**\n * @internal\n * Shapes the exposed {@link DeletedKey} based on a received KeyItem.\n */\nexport function getDeletedKeyFromDeletedKeyItem(keyItem) {\n  const commonProperties = getKeyPropertiesFromKeyItem(keyItem);\n  return {\n    key: {\n      kid: keyItem.kid\n    },\n    id: keyItem.kid,\n    name: commonProperties.name,\n    properties: Object.assign(Object.assign({}, commonProperties), {\n      recoveryId: keyItem.recoveryId,\n      scheduledPurgeDate: keyItem.scheduledPurgeDate,\n      deletedOn: keyItem.deletedDate\n    })\n  };\n}\n/**\n * @internal\n * Shapes the exposed {@link KeyProperties} based on a received KeyItem.\n */\nexport function getKeyPropertiesFromKeyItem(keyItem) {\n  const parsedId = parseKeyVaultKeyIdentifier(keyItem.kid);\n  const attributes = keyItem.attributes || {};\n  const resultObject = {\n    createdOn: attributes.created,\n    enabled: attributes === null || attributes === void 0 ? void 0 : attributes.enabled,\n    expiresOn: attributes === null || attributes === void 0 ? void 0 : attributes.expires,\n    id: keyItem.kid,\n    managed: keyItem.managed,\n    name: parsedId.name,\n    notBefore: attributes === null || attributes === void 0 ? void 0 : attributes.notBefore,\n    recoverableDays: attributes === null || attributes === void 0 ? void 0 : attributes.recoverableDays,\n    recoveryLevel: attributes === null || attributes === void 0 ? void 0 : attributes.recoveryLevel,\n    hsmPlatform: attributes === null || attributes === void 0 ? void 0 : attributes.hsmPlatform,\n    tags: keyItem.tags,\n    updatedOn: attributes.updated,\n    vaultUrl: parsedId.vaultUrl,\n    version: parsedId.version\n  };\n  return resultObject;\n}\nconst actionTypeCaseInsensitiveMapping = {\n  rotate: \"Rotate\",\n  notify: \"Notify\"\n};\nfunction getNormalizedActionType(caseInsensitiveActionType) {\n  const result = actionTypeCaseInsensitiveMapping[caseInsensitiveActionType.toLowerCase()];\n  if (result) {\n    return result;\n  }\n  throw new Error(`Unrecognized action type: ${caseInsensitiveActionType}`);\n}\n/**\n * @internal\n */\nexport const keyRotationTransformations = {\n  propertiesToGenerated: function (parameters) {\n    var _a;\n    const policy = {\n      attributes: {\n        expiryTime: parameters.expiresIn\n      },\n      lifetimeActions: (_a = parameters.lifetimeActions) === null || _a === void 0 ? void 0 : _a.map(action => {\n        const generatedAction = {\n          action: {\n            type: action.action\n          },\n          trigger: {}\n        };\n        if (action.timeAfterCreate) {\n          generatedAction.trigger.timeAfterCreate = action.timeAfterCreate;\n        }\n        if (action.timeBeforeExpiry) {\n          generatedAction.trigger.timeBeforeExpiry = action.timeBeforeExpiry;\n        }\n        return generatedAction;\n      })\n    };\n    return policy;\n  },\n  generatedToPublic(generated) {\n    var _a, _b, _c, _d;\n    const policy = {\n      id: generated.id,\n      createdOn: (_a = generated.attributes) === null || _a === void 0 ? void 0 : _a.created,\n      updatedOn: (_b = generated.attributes) === null || _b === void 0 ? void 0 : _b.updated,\n      expiresIn: (_c = generated.attributes) === null || _c === void 0 ? void 0 : _c.expiryTime,\n      lifetimeActions: (_d = generated.lifetimeActions) === null || _d === void 0 ? void 0 : _d.map(action => {\n        var _a, _b;\n        return {\n          action: getNormalizedActionType(action.action.type),\n          timeAfterCreate: (_a = action.trigger) === null || _a === void 0 ? void 0 : _a.timeAfterCreate,\n          timeBeforeExpiry: (_b = action.trigger) === null || _b === void 0 ? void 0 : _b.timeBeforeExpiry\n        };\n      })\n    };\n    return policy;\n  }\n};","map":{"version":3,"names":["parseKeyVaultKeyIdentifier","getKeyFromKeyBundle","bundle","keyBundle","deletedKeyBundle","parsedId","key","kid","attributes","resultObject","id","undefined","name","keyOperations","keyOps","keyType","kty","properties","tags","enabled","notBefore","expiresOn","expires","createdOn","created","updatedOn","updated","recoverableDays","recoveryLevel","exportable","releasePolicy","hsmPlatform","vaultUrl","version","managed","recoveryId","scheduledPurgeDate","deletedOn","deletedDate","getDeletedKeyFromDeletedKeyItem","keyItem","commonProperties","getKeyPropertiesFromKeyItem","Object","assign","actionTypeCaseInsensitiveMapping","rotate","notify","getNormalizedActionType","caseInsensitiveActionType","result","toLowerCase","Error","keyRotationTransformations","propertiesToGenerated","parameters","policy","expiryTime","expiresIn","lifetimeActions","_a","map","action","generatedAction","type","trigger","timeAfterCreate","timeBeforeExpiry","generatedToPublic","generated","_b","_c","_d"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /node_modules/@azure/keyvault-keys/src/transformations.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { ActionType } from \"./generated/index.js\";\nimport {\n  DeletedKeyBundle,\n  DeletedKeyItem,\n  KeyRotationPolicy as GeneratedPolicy,\n  KeyAttributes,\n  KeyBundle,\n  KeyItem,\n  LifetimeActions,\n} from \"./generated/models/index.js\";\nimport { parseKeyVaultKeyIdentifier } from \"./identifier.js\";\nimport {\n  DeletedKey,\n  KeyProperties,\n  KeyRotationPolicy,\n  KeyRotationPolicyProperties,\n  KeyVaultKey,\n} from \"./keysModels.js\";\n\n/**\n * @internal\n * Shapes the exposed {@link KeyVaultKey} based on either a received key bundle or deleted key bundle.\n */\nexport function getKeyFromKeyBundle(\n  bundle: KeyBundle | DeletedKeyBundle,\n): KeyVaultKey | DeletedKey {\n  const keyBundle = bundle as KeyBundle;\n  const deletedKeyBundle = bundle as DeletedKeyBundle;\n\n  const parsedId = parseKeyVaultKeyIdentifier(keyBundle.key!.kid!);\n\n  const attributes: KeyAttributes = keyBundle.attributes || {};\n  delete keyBundle.attributes;\n\n  const resultObject: KeyVaultKey | DeletedKey = {\n    key: keyBundle.key,\n    id: keyBundle.key ? keyBundle.key.kid : undefined,\n    name: parsedId.name,\n    keyOperations: keyBundle.key ? keyBundle.key.keyOps : undefined,\n    keyType: keyBundle.key ? keyBundle.key.kty : undefined,\n    properties: {\n      tags: keyBundle.tags,\n\n      enabled: attributes.enabled,\n      notBefore: attributes.notBefore,\n      expiresOn: attributes.expires,\n      createdOn: attributes.created,\n      updatedOn: attributes.updated,\n      recoverableDays: attributes.recoverableDays,\n      recoveryLevel: attributes.recoveryLevel,\n      exportable: attributes.exportable,\n      releasePolicy: keyBundle.releasePolicy,\n      hsmPlatform: attributes.hsmPlatform,\n\n      vaultUrl: parsedId.vaultUrl,\n      version: parsedId.version,\n      name: parsedId.name,\n      managed: keyBundle.managed,\n\n      id: keyBundle.key ? keyBundle.key.kid : undefined,\n    },\n  };\n\n  if (deletedKeyBundle.recoveryId) {\n    (resultObject as any).properties.recoveryId = deletedKeyBundle.recoveryId;\n    (resultObject as any).properties.scheduledPurgeDate = deletedKeyBundle.scheduledPurgeDate;\n    (resultObject as any).properties.deletedOn = deletedKeyBundle.deletedDate;\n  }\n\n  return resultObject;\n}\n\n/**\n * @internal\n * Shapes the exposed {@link DeletedKey} based on a received KeyItem.\n */\nexport function getDeletedKeyFromDeletedKeyItem(keyItem: DeletedKeyItem): DeletedKey {\n  const commonProperties = getKeyPropertiesFromKeyItem(keyItem);\n\n  return {\n    key: {\n      kid: keyItem.kid,\n    },\n    id: keyItem.kid,\n    name: commonProperties.name,\n    properties: {\n      ...commonProperties,\n      recoveryId: keyItem.recoveryId,\n      scheduledPurgeDate: keyItem.scheduledPurgeDate,\n      deletedOn: keyItem.deletedDate,\n    },\n  };\n}\n\n/**\n * @internal\n * Shapes the exposed {@link KeyProperties} based on a received KeyItem.\n */\nexport function getKeyPropertiesFromKeyItem(keyItem: KeyItem): KeyProperties {\n  const parsedId = parseKeyVaultKeyIdentifier(keyItem.kid!);\n  const attributes = keyItem.attributes || {};\n\n  const resultObject: KeyProperties = {\n    createdOn: attributes.created,\n    enabled: attributes?.enabled,\n    expiresOn: attributes?.expires,\n    id: keyItem.kid,\n    managed: keyItem.managed,\n    name: parsedId.name,\n    notBefore: attributes?.notBefore,\n    recoverableDays: attributes?.recoverableDays,\n    recoveryLevel: attributes?.recoveryLevel,\n    hsmPlatform: attributes?.hsmPlatform,\n    tags: keyItem.tags,\n    updatedOn: attributes.updated,\n    vaultUrl: parsedId.vaultUrl,\n    version: parsedId.version,\n  };\n\n  return resultObject;\n}\n\nconst actionTypeCaseInsensitiveMapping: Record<string, string> = {\n  rotate: \"Rotate\",\n  notify: \"Notify\",\n};\n\nfunction getNormalizedActionType(caseInsensitiveActionType: string): ActionType {\n  const result = actionTypeCaseInsensitiveMapping[caseInsensitiveActionType.toLowerCase()];\n  if (result) {\n    return result as ActionType;\n  }\n\n  throw new Error(`Unrecognized action type: ${caseInsensitiveActionType}`);\n}\n\n/**\n * @internal\n */\nexport const keyRotationTransformations = {\n  propertiesToGenerated: function (\n    parameters: KeyRotationPolicyProperties,\n  ): Partial<GeneratedPolicy> {\n    const policy: GeneratedPolicy = {\n      attributes: {\n        expiryTime: parameters.expiresIn,\n      },\n      lifetimeActions: parameters.lifetimeActions?.map((action) => {\n        const generatedAction: LifetimeActions = {\n          action: { type: action.action },\n          trigger: {},\n        };\n\n        if (action.timeAfterCreate) {\n          generatedAction.trigger!.timeAfterCreate = action.timeAfterCreate;\n        }\n\n        if (action.timeBeforeExpiry) {\n          generatedAction.trigger!.timeBeforeExpiry = action.timeBeforeExpiry;\n        }\n\n        return generatedAction;\n      }),\n    };\n    return policy;\n  },\n  generatedToPublic(generated: GeneratedPolicy): KeyRotationPolicy {\n    const policy: KeyRotationPolicy = {\n      id: generated.id,\n      createdOn: generated.attributes?.created,\n      updatedOn: generated.attributes?.updated,\n      expiresIn: generated.attributes?.expiryTime,\n      lifetimeActions: generated.lifetimeActions?.map((action) => {\n        return {\n          action: getNormalizedActionType(action.action!.type!),\n          timeAfterCreate: action.trigger?.timeAfterCreate,\n          timeBeforeExpiry: action.trigger?.timeBeforeExpiry,\n        };\n      }),\n    };\n    return policy;\n  },\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}