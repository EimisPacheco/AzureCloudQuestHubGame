{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\nimport '../styles/DifficultyButtons.css';\nimport '../styles/AWSArchitectureGame.css';\nimport ReactConfetti from 'react-confetti';\nimport { useWindowSize } from 'react-use';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\nconst isValidArchitecture = data => {\n  if (!data || !Array.isArray(data.services) || !Array.isArray(data.connections)) {\n    console.warn(\"⚠️ Invalid JSON structure: Missing 'services' or 'connections'. Retrying...\");\n    return false;\n  }\n  const requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n  const serviceNames = data.services.map(service => typeof service === 'string' ? service : service === null || service === void 0 ? void 0 : service.name);\n  if (!requiredMissingServices.every(ms => serviceNames.includes(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing.`);\n    return false;\n  }\n  const connectionNodes = new Set();\n  data.connections.forEach(conn => {\n    connectionNodes.add(conn.from);\n    connectionNodes.add(conn.to);\n  });\n  if (!requiredMissingServices.every(ms => connectionNodes.has(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing from the connections.`);\n    return false;\n  }\n  return true;\n};\nconst validateJSONStructure = (json, difficulty) => {\n  let requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n  if (difficulty === 'INTERMEDIATE') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5'];\n  } else if (difficulty === 'ADVANCED') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5', 'missing_6', 'missing_7'];\n  }\n  return requiredMissingServices.every(service => json.missingServices.includes(service));\n};\nconst getMaxPossibleScore = difficulty => {\n  switch (difficulty) {\n    case 'INTERMEDIATE':\n      return 25;\n    // 5 questions * 5 points\n    case 'ADVANCED':\n      return 35;\n    // 7 questions * 5 points\n    default:\n      // BEGINNER\n      return 15;\n    // 3 questions * 5 points\n  }\n};\nconst AWSArchitectureGame = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [architecture, setArchitecture] = useState(null);\n  const [architectureInfo, setArchitectureInfo] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [difficulty, setDifficulty] = useState('BEGINNER');\n  const [score, setScore] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [feedback, setFeedback] = useState({\n    isCorrect: false,\n    message: '',\n    points: 0\n  });\n  const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n  const [questionStartTime, setQuestionStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const {\n    width,\n    height\n  } = useWindowSize();\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showFireworks, setShowFireworks] = useState(false);\n  const [showSadFace, setShowSadFace] = useState(false);\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(TouchSensor));\n  const getServiceIcon = serviceName => {\n    if (!serviceName) {\n      console.error('No service name provided to getServiceIcon');\n      return null;\n    }\n    if (serviceName.toLowerCase().includes('missing')) {\n      console.log('Loading missing service icon locally:', '/aws-icons/missing.svg');\n      return '/aws-icons/missing.svg';\n    }\n    const cleanedServiceName = serviceName.toLowerCase().replace(/^(amazon|aws)\\s+/, '').replace(/\\s+/g, '-');\n    const potentialS3Url = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/Arch_${cleanedServiceName}_64.svg`;\n    console.log(`🔍 Attempting to load icon for \"${serviceName}\" from: ${potentialS3Url}`);\n    const resolvedIcon = getCachedServiceIcon(serviceName);\n    if (resolvedIcon) {\n      console.log(`✅ Successfully resolved icon for \"${serviceName}\": ${resolvedIcon}`);\n      return resolvedIcon;\n    }\n    console.warn(`❌ Icon not found for \"${serviceName}\" at attempted path: ${potentialS3Url}`);\n    return '/aws-icons/default.svg';\n  };\n  const loadNextArchitecture = useCallback(async () => {\n    var _data$missingServices;\n    setScore(0); // Reset score when loading new architecture\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    let attempt = 0;\n    let isValid = false;\n    let data = null;\n    let maxAttempts = 7;\n    while (!isValid && attempt < maxAttempts) {\n      try {\n        console.log(`🔄 Attempt ${attempt + 1}: Fetching architecture data...`);\n        const response = await fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            difficulty\n          })\n        });\n        if (response.status === 503) {\n          console.warn(\"⚠️ Received 503 error. Retrying in 3 seconds...\");\n          attempt++;\n          await new Promise(resolve => setTimeout(resolve, 3000));\n          continue;\n        }\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        data = await response.json();\n        console.log('Raw AI Response:', JSON.stringify(data, null, 2));\n        console.log(\"📥 Received AI Response:\", JSON.stringify(data, null, 2));\n        isValid = isValidArchitecture(data);\n        if (!isValid) {\n          console.warn(`⛔ Invalid JSON structure. Retrying in 3 seconds...`);\n          await new Promise(resolve => setTimeout(resolve, 3000));\n        } else {\n          console.log(\"✅ Valid architecture received, updating state...\");\n          break;\n        }\n      } catch (error) {\n        console.error(\"❌ Failed to load architecture:\", error);\n        if (attempt >= maxAttempts - 1) {\n          setError(error.message);\n          setIsLoading(false);\n          return;\n        }\n        await new Promise(resolve => setTimeout(resolve, 3000)); // Wait 3 seconds before retrying\n      }\n      attempt++;\n    }\n    if (!isValid) {\n      console.error(\"❌ Maximum retries reached. Unable to get valid JSON.\");\n      setError(\"Failed to fetch a valid architecture after multiple attempts.\");\n      setIsLoading(false);\n      return;\n    }\n    const transformedServices = data.services.map(serviceName => ({\n      id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n      name: serviceName,\n      icon: getServiceIcon(serviceName)\n    }));\n    setArchitecture({\n      services: transformedServices,\n      connections: data.connections\n    });\n    if (((_data$missingServices = data.missingServices) === null || _data$missingServices === void 0 ? void 0 : _data$missingServices.length) > 0) {\n      const currentMissingService = data.missingServices[0];\n      setCurrentQuestion({\n        text: currentMissingService.question,\n        optimizationFocus: currentMissingService.optimizationFocus,\n        options: currentMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getServiceIcon(opt.service)\n        }))\n      });\n    }\n    setArchitectureInfo({\n      name: data.architecture.name,\n      description: data.architecture.description,\n      missingServices: data.missingServices\n    });\n    setCurrentMissingServiceIndex(0);\n    setShowFeedback(false);\n    setQuestionStartTime(Date.now());\n    setElapsedTime(0);\n    setIsLoading(false);\n  }, [difficulty]);\n  const handleServiceSelection = selectedService => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n    const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n    const correctOption = currentMissingService.options.find(opt => opt.isCorrect);\n    const optimalOption = currentMissingService.options.find(opt => opt.isOptimal);\n    if (selectedOption) {\n      setShowFeedback(true);\n      if (selectedOption.isCorrect) {\n        // Calculate points based on whether it's optimal or just correct\n        const points = selectedOption.isOptimal ? 5 : 2;\n        setScore(prevScore => {\n          const newScore = prevScore + points;\n          // Check if we've reached the maximum possible score for current difficulty\n          if (newScore === getMaxPossibleScore(difficulty)) {\n            setShowFireworks(true);\n            setTimeout(() => setShowFireworks(false), 5000);\n          }\n          return newScore;\n        });\n        if (selectedOption.isOptimal) {\n          setShowConfetti(true);\n          setTimeout(() => setShowConfetti(false), 2000);\n        }\n        setFeedback({\n          isCorrect: true,\n          message: selectedOption.explanation,\n          points: points,\n          isOptimal: selectedOption.isOptimal,\n          optimalSolution: !selectedOption.isOptimal ? optimalOption.service : null,\n          optimalExplanation: !selectedOption.isOptimal ? optimalOption.explanation : null\n        });\n      } else {\n        setShowSadFace(true);\n        setTimeout(() => setShowSadFace(false), 4000);\n        setFeedback({\n          isCorrect: false,\n          message: `<div class=\"feedback-explanation\">\n              <p>${selectedOption.explanation}</p>\n              <div class=\"correct-answer-wrapper\">\n                <p class=\"correct-answer-section\">\n                  <span style=\"color: lime; font-weight: bold;\">The correct answer was: </span>\n                  <strong>${correctOption.service}</strong>. ${correctOption.explanation}\n                </p>\n              </div>\n            </div>`,\n          points: 0,\n          correctAnswer: correctOption.service\n        });\n      }\n    }\n  };\n  const handleNext = () => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    setShowFeedback(false);\n    if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n      const nextIndex = currentMissingServiceIndex + 1;\n      setCurrentMissingServiceIndex(nextIndex);\n      const nextMissingService = architectureInfo.missingServices[nextIndex];\n      setCurrentQuestion({\n        text: nextMissingService.question,\n        optimizationFocus: nextMissingService.optimizationFocus,\n        options: nextMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getServiceIcon(opt.service)\n        }))\n      });\n      setQuestionStartTime(Date.now());\n      setElapsedTime(0);\n    }\n  };\n  const handleDifficultyChange = level => {\n    setDifficulty(level);\n  };\n  useEffect(() => {\n    if (currentQuestion && !questionStartTime) {\n      setQuestionStartTime(Date.now());\n    }\n    const timer = setInterval(() => {\n      if (questionStartTime && !showFeedback) {\n        const elapsed = Math.floor((Date.now() - questionStartTime) / 1000);\n        setElapsedTime(elapsed);\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [currentQuestion, questionStartTime, showFeedback]);\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      children: [showConfetti && /*#__PURE__*/_jsxDEV(ReactConfetti, {\n        width: width,\n        height: height,\n        recycle: false,\n        numberOfPieces: 200\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 13\n      }, this), showFireworks && /*#__PURE__*/_jsxDEV(ReactConfetti, {\n        width: width,\n        height: height,\n        recycle: true,\n        numberOfPieces: 500,\n        colors: ['#FFD700', '#FF0000', '#00FF00', '#0000FF', '#FF00FF']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: (architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.name) || 'AWS Architecture Challenge'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score\",\n              children: [\"Score: \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"complexity\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"complexity-icon\",\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, this), difficulty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 17\n            }, this), currentQuestion && !showFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `timer ${elapsedTime > 60 ? 'danger' : elapsedTime > 30 ? 'warning' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timer-icon\",\n                children: \"\\u23F1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 21\n              }, this), Math.floor(elapsedTime / 60), \":\", (elapsedTime % 60).toString().padStart(2, '0')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 366,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-architecture-button\",\n            onClick: loadNextArchitecture,\n            disabled: isLoading,\n            children: isLoading ? 'Loading...' : 'New Architecture'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 375,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this), architectureInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"architecture-description\",\n          children: architectureInfo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 34\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(AWSArchitectureDisplay, {\n            architecture: architecture,\n            currentQuestion: currentQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 390,\n            columnNumber: 17\n          }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"question-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"highlight\",\n                children: \"Question:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 23\n              }, this), \" \", currentQuestion.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"optimization-focus-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"highlight\",\n                children: \"Optimization Focus:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 23\n              }, this), \" \", currentQuestion.optimizationFocus]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 21\n            }, this), showFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `feedback-modal ${feedback.isCorrect ? feedback.isOptimal ? 'correct optimal' : 'correct sub-optimal' : 'incorrect'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-content\",\n                children: [feedback.isCorrect ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [\"\\uD83C\\uDF89 Correct! +\", feedback.points, \" points\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: feedback.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 31\n                  }, this), feedback.isOptimal ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"optimal-bonus\",\n                    children: \"\\uD83C\\uDF1F Optimal Solution!\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 414,\n                    columnNumber: 33\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"sub-optimal-feedback\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"While correct, there's a more optimal solution:\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 417,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: feedback.optimalSolution\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 418,\n                        columnNumber: 38\n                      }, this), \": \", feedback.optimalExplanation]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 418,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: \"\\u274C Not quite right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 424,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    dangerouslySetInnerHTML: {\n                      __html: feedback.message\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 425,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: handleNext,\n                  className: \"next-button\",\n                  children: \"Next Question\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 27\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-status\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices ? `Service ${currentMissingServiceIndex + 1} of ${architectureInfo.missingServices.length}` : 'Loading...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 439,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-selection\",\n          children: ['BEGINNER', 'INTERMEDIATE', 'ADVANCED'].map(level => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `difficulty-button ${difficulty === level ? 'active' : ''}`,\n            onClick: () => handleDifficultyChange(level),\n            children: level.charAt(0) + level.slice(1).toLowerCase()\n          }, level, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 448,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 337,\n    columnNumber: 7\n  }, this);\n};\n_s(AWSArchitectureGame, \"sxDKDnXSe6YjuST7B97uTlL3iEQ=\", false, function () {\n  return [useWindowSize, useSensors, useSensor, useSensor];\n});\n_c = AWSArchitectureGame;\nexport default AWSArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureGame\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","DndContext","useSensor","useSensors","PointerSensor","TouchSensor","DndProvider","HTML5Backend","AWSArchitectureDisplay","DraggableService","getCachedServiceIcon","SERVICE_MAPPINGS","ReactConfetti","useWindowSize","jsxDEV","_jsxDEV","Fragment","_Fragment","S3_BUCKET_URL","ICONS_BASE_PATH","API_URL","isValidArchitecture","data","Array","isArray","services","connections","console","warn","requiredMissingServices","serviceNames","map","service","name","every","ms","includes","join","connectionNodes","Set","forEach","conn","add","from","to","has","validateJSONStructure","json","difficulty","missingServices","getMaxPossibleScore","AWSArchitectureGame","_s","isLoading","setIsLoading","error","setError","architecture","setArchitecture","architectureInfo","setArchitectureInfo","currentQuestion","setCurrentQuestion","setDifficulty","score","setScore","showFeedback","setShowFeedback","feedback","setFeedback","isCorrect","message","points","currentMissingServiceIndex","setCurrentMissingServiceIndex","questionStartTime","setQuestionStartTime","elapsedTime","setElapsedTime","width","height","showConfetti","setShowConfetti","showFireworks","setShowFireworks","showSadFace","setShowSadFace","sensors","activationConstraint","distance","getServiceIcon","serviceName","toLowerCase","log","cleanedServiceName","replace","potentialS3Url","resolvedIcon","loadNextArchitecture","_data$missingServices","attempt","isValid","maxAttempts","response","fetch","method","headers","body","JSON","stringify","status","Promise","resolve","setTimeout","ok","Error","transformedServices","id","icon","length","currentMissingService","text","question","optimizationFocus","options","opt","isOptimal","explanation","rating","description","Date","now","handleServiceSelection","selectedService","selectedOption","find","correctOption","optimalOption","prevScore","newScore","optimalSolution","optimalExplanation","correctAnswer","handleNext","nextIndex","nextMissingService","handleDifficultyChange","level","timer","setInterval","elapsed","Math","floor","clearInterval","backend","children","recycle","numberOfPieces","fileName","_jsxFileName","lineNumber","columnNumber","colors","className","toString","padStart","onClick","disabled","dangerouslySetInnerHTML","__html","charAt","slice","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\nimport '../styles/DifficultyButtons.css';\nimport '../styles/AWSArchitectureGame.css';\nimport ReactConfetti from 'react-confetti';\nimport { useWindowSize } from 'react-use';\n\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n\nconst isValidArchitecture = (data) => {\n  if (!data || !Array.isArray(data.services) || !Array.isArray(data.connections)) {\n    console.warn(\"⚠️ Invalid JSON structure: Missing 'services' or 'connections'. Retrying...\");\n    return false;\n  }\n\n  const requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n\n  const serviceNames = data.services.map(service => \n    typeof service === 'string' ? service : service?.name\n  );\n\n  if (!requiredMissingServices.every(ms => serviceNames.includes(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing.`);\n    return false;\n  }\n\n  const connectionNodes = new Set();\n  data.connections.forEach(conn => {\n    connectionNodes.add(conn.from);\n    connectionNodes.add(conn.to);\n  });\n\n  if (!requiredMissingServices.every(ms => connectionNodes.has(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing from the connections.`);\n    return false;\n  }\n\n  return true;\n};\n\nconst validateJSONStructure = (json, difficulty) => {\n  let requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n\n  if (difficulty === 'INTERMEDIATE') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5'];\n  } else if (difficulty === 'ADVANCED') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5', 'missing_6', 'missing_7'];\n  }\n\n  return requiredMissingServices.every(service => json.missingServices.includes(service));\n};\n\nconst getMaxPossibleScore = (difficulty) => {\n  switch(difficulty) {\n    case 'INTERMEDIATE':\n      return 25; // 5 questions * 5 points\n    case 'ADVANCED':\n      return 35; // 7 questions * 5 points\n    default: // BEGINNER\n      return 15; // 3 questions * 5 points\n  }\n};\n\nconst AWSArchitectureGame = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [architecture, setArchitecture] = useState(null);\n    const [architectureInfo, setArchitectureInfo] = useState(null);\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [difficulty, setDifficulty] = useState('BEGINNER');\n    const [score, setScore] = useState(0); \n    const [showFeedback, setShowFeedback] = useState(false);\n    const [feedback, setFeedback] = useState({ isCorrect: false, message: '', points: 0 });\n    const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n    const [questionStartTime, setQuestionStartTime] = useState(null);\n    const [elapsedTime, setElapsedTime] = useState(0);\n    const { width, height } = useWindowSize();\n    const [showConfetti, setShowConfetti] = useState(false);\n    const [showFireworks, setShowFireworks] = useState(false);\n    const [showSadFace, setShowSadFace] = useState(false);\n\n    const sensors = useSensors(\n      useSensor(PointerSensor, {\n        activationConstraint: {\n          distance: 8,\n        },\n      }),\n      useSensor(TouchSensor)\n    );\n\n    const getServiceIcon = (serviceName) => {\n      if (!serviceName) {\n        console.error('No service name provided to getServiceIcon');\n        return null;\n      }\n\n      if (serviceName.toLowerCase().includes('missing')) {\n        console.log('Loading missing service icon locally:', '/aws-icons/missing.svg');\n        return '/aws-icons/missing.svg';\n      }\n\n      const cleanedServiceName = serviceName\n        .toLowerCase()\n        .replace(/^(amazon|aws)\\s+/, '')\n        .replace(/\\s+/g, '-');\n        \n      const potentialS3Url = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/Arch_${cleanedServiceName}_64.svg`;\n      console.log(`🔍 Attempting to load icon for \"${serviceName}\" from: ${potentialS3Url}`);\n\n      const resolvedIcon = getCachedServiceIcon(serviceName);\n      \n      if (resolvedIcon) {\n        console.log(`✅ Successfully resolved icon for \"${serviceName}\": ${resolvedIcon}`);\n        return resolvedIcon;\n      }\n\n      console.warn(`❌ Icon not found for \"${serviceName}\" at attempted path: ${potentialS3Url}`);\n      return '/aws-icons/default.svg';\n    };\n\n    const loadNextArchitecture = useCallback(async () => {\n      setScore(0); // Reset score when loading new architecture\n      if (isLoading) return;\n      setIsLoading(true);\n      setError(null);\n\n      let attempt = 0;\n      let isValid = false;\n      let data = null;\n      let maxAttempts = 7;\n\n      while (!isValid && attempt < maxAttempts) {\n        try {\n          console.log(`🔄 Attempt ${attempt + 1}: Fetching architecture data...`);\n          const response = await fetch(API_URL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ difficulty })\n          });\n\n          if (response.status === 503) {\n            console.warn(\"⚠️ Received 503 error. Retrying in 3 seconds...\");\n            attempt++;\n            await new Promise(resolve => setTimeout(resolve, 3000));\n            continue;\n          }\n\n          if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n\n          data = await response.json();\n          console.log('Raw AI Response:', JSON.stringify(data, null, 2));\n          console.log(\"📥 Received AI Response:\", JSON.stringify(data, null, 2));\n\n          isValid = isValidArchitecture(data);\n\n          if (!isValid) {\n            console.warn(`⛔ Invalid JSON structure. Retrying in 3 seconds...`);\n            await new Promise(resolve => setTimeout(resolve, 3000));\n          } else {\n            console.log(\"✅ Valid architecture received, updating state...\");\n            break;\n          }\n        } catch (error) {\n          console.error(\"❌ Failed to load architecture:\", error);\n          if (attempt >= maxAttempts - 1) {\n            setError(error.message);\n            setIsLoading(false);\n            return;\n          }\n          await new Promise(resolve => setTimeout(resolve, 3000)); // Wait 3 seconds before retrying\n        }\n\n        attempt++;\n      }\n\n      if (!isValid) {\n        console.error(\"❌ Maximum retries reached. Unable to get valid JSON.\");\n        setError(\"Failed to fetch a valid architecture after multiple attempts.\");\n        setIsLoading(false);\n        return;\n      }\n\n      const transformedServices = data.services.map(serviceName => ({\n        id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n        name: serviceName,\n        icon: getServiceIcon(serviceName)\n      }));\n\n      setArchitecture({\n        services: transformedServices,\n        connections: data.connections\n      });\n\n      if (data.missingServices?.length > 0) {\n        const currentMissingService = data.missingServices[0];\n        setCurrentQuestion({\n          text: currentMissingService.question,\n          optimizationFocus: currentMissingService.optimizationFocus,\n          options: currentMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getServiceIcon(opt.service)\n          }))\n        });\n      }\n\n      setArchitectureInfo({\n        name: data.architecture.name,\n        description: data.architecture.description,\n        missingServices: data.missingServices\n      });\n\n      setCurrentMissingServiceIndex(0);\n      setShowFeedback(false);\n      setQuestionStartTime(Date.now());\n      setElapsedTime(0);\n      setIsLoading(false);\n    }, [difficulty]);\n\n    const handleServiceSelection = (selectedService) => {\n      if (!architectureInfo?.missingServices) return;\n      \n      const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n      const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n      const correctOption = currentMissingService.options.find(opt => opt.isCorrect);\n      const optimalOption = currentMissingService.options.find(opt => opt.isOptimal);\n\n      if (selectedOption) {\n        setShowFeedback(true);\n        if (selectedOption.isCorrect) {\n          // Calculate points based on whether it's optimal or just correct\n          const points = selectedOption.isOptimal ? 5 : 2;\n          \n          setScore(prevScore => {\n            const newScore = prevScore + points;\n            // Check if we've reached the maximum possible score for current difficulty\n            if (newScore === getMaxPossibleScore(difficulty)) {\n              setShowFireworks(true);\n              setTimeout(() => setShowFireworks(false), 5000);\n            }\n            return newScore;\n          });\n          \n          if (selectedOption.isOptimal) {\n            setShowConfetti(true);\n            setTimeout(() => setShowConfetti(false), 2000);\n          }\n\n          setFeedback({\n            isCorrect: true,\n            message: selectedOption.explanation,\n            points: points,\n            isOptimal: selectedOption.isOptimal,\n            optimalSolution: !selectedOption.isOptimal ? optimalOption.service : null,\n            optimalExplanation: !selectedOption.isOptimal ? optimalOption.explanation : null\n          });\n        } else {\n          setShowSadFace(true);\n          setTimeout(() => setShowSadFace(false), 4000);\n\n          setFeedback({\n            isCorrect: false,\n            message: `<div class=\"feedback-explanation\">\n              <p>${selectedOption.explanation}</p>\n              <div class=\"correct-answer-wrapper\">\n                <p class=\"correct-answer-section\">\n                  <span style=\"color: lime; font-weight: bold;\">The correct answer was: </span>\n                  <strong>${correctOption.service}</strong>. ${correctOption.explanation}\n                </p>\n              </div>\n            </div>`,\n            points: 0,\n            correctAnswer: correctOption.service\n          });\n        }\n      }\n    };\n\n    const handleNext = () => {\n      if (!architectureInfo?.missingServices) return;\n      \n      setShowFeedback(false);\n      if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n        const nextIndex = currentMissingServiceIndex + 1;\n        setCurrentMissingServiceIndex(nextIndex);\n        \n        const nextMissingService = architectureInfo.missingServices[nextIndex];\n        setCurrentQuestion({\n          text: nextMissingService.question,\n          optimizationFocus: nextMissingService.optimizationFocus,\n          options: nextMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getServiceIcon(opt.service)\n          }))\n        });\n        setQuestionStartTime(Date.now());\n        setElapsedTime(0);\n      }\n    };\n\n    const handleDifficultyChange = (level) => {\n      setDifficulty(level);\n    };\n\n    useEffect(() => {\n      if (currentQuestion && !questionStartTime) {\n        setQuestionStartTime(Date.now());\n      }\n\n      const timer = setInterval(() => {\n        if (questionStartTime && !showFeedback) {\n          const elapsed = Math.floor((Date.now() - questionStartTime) / 1000);\n          setElapsedTime(elapsed);\n        }\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }, [currentQuestion, questionStartTime, showFeedback]);\n\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <DndContext sensors={sensors}>\n          {showConfetti && (\n            <ReactConfetti\n              width={width}\n              height={height}\n              recycle={false}\n              numberOfPieces={200}\n            />\n          )}\n          {showFireworks && (\n            <ReactConfetti\n              width={width}\n              height={height}\n              recycle={true}\n              numberOfPieces={500}\n              colors={['#FFD700', '#FF0000', '#00FF00', '#0000FF', '#FF00FF']}\n            />\n          )}\n          <div className=\"game-container\">\n            <div className=\"game-header\">\n              <h2>{architectureInfo?.name || 'AWS Architecture Challenge'}</h2>\n              <div className=\"game-stats\">\n                <div className=\"score\">Score: {score}</div>\n                <div className=\"complexity\">\n                  <span className=\"complexity-icon\">🎯</span>\n                  {difficulty}\n                </div>\n                {currentQuestion && !showFeedback && (\n                  <div className={`timer ${\n                    elapsedTime > 60 ? 'danger' : \n                    elapsedTime > 30 ? 'warning' : ''\n                  }`}>\n                    <span className=\"timer-icon\">⏱️</span>\n                    {Math.floor(elapsedTime / 60)}:{(elapsedTime % 60).toString().padStart(2, '0')}\n                  </div>\n                )}\n              </div>\n              <button \n                className=\"new-architecture-button\"\n                onClick={loadNextArchitecture}\n                disabled={isLoading}\n              >\n                {isLoading ? 'Loading...' : 'New Architecture'}\n              </button>\n            </div>\n            \n            {architectureInfo && <p className=\"architecture-description\">{architectureInfo.description}</p>}\n            \n            {error ? (\n              <div className=\"error-message\">{error}</div>\n            ) : (\n              <>\n                <AWSArchitectureDisplay \n                  architecture={architecture}\n                  currentQuestion={currentQuestion}\n                />\n                \n                {currentQuestion && (\n                  <div className=\"question-container\">\n                    <h3 className=\"question-label\">\n                      <span className=\"highlight\">Question:</span> {currentQuestion.text}\n                    </h3>\n                    <p className=\"optimization-focus-label\">\n                      <span className=\"highlight\">Optimization Focus:</span> {currentQuestion.optimizationFocus}\n                    </p>\n                    \n                    {showFeedback && (\n                      <div className={`feedback-modal ${feedback.isCorrect ? \n                        (feedback.isOptimal ? 'correct optimal' : 'correct sub-optimal') \n                        : 'incorrect'}`}>\n                        <div className=\"feedback-content\">\n                          {feedback.isCorrect ? (\n                            <>\n                              <h3>🎉 Correct! +{feedback.points} points</h3>\n                              <p>{feedback.message}</p>\n                              {feedback.isOptimal ? (\n                                <span className=\"optimal-bonus\">🌟 Optimal Solution!</span>\n                              ) : (\n                                <div className=\"sub-optimal-feedback\">\n                                  <p>While correct, there's a more optimal solution:</p>\n                                  <p><strong>{feedback.optimalSolution}</strong>: {feedback.optimalExplanation}</p>\n                                </div>\n                              )}\n                            </>\n                          ) : (\n                            <>\n                              <h3>❌ Not quite right</h3>\n                              <div dangerouslySetInnerHTML={{ __html: feedback.message }} />\n                            </>\n                          )}\n                          <button onClick={handleNext} className=\"next-button\">\n                            Next Question\n                          </button>\n                        </div>\n                      </div>\n                    )}\n                  </div>\n                )}\n              </>\n            )}\n            \n            <div className=\"game-status\">\n              <div className=\"progress\">\n                {architectureInfo?.missingServices ? \n                  `Service ${currentMissingServiceIndex + 1} of ${architectureInfo.missingServices.length}` :\n                  'Loading...'\n                }\n              </div>\n            </div>\n\n            <div className=\"difficulty-selection\">\n              {['BEGINNER', 'INTERMEDIATE', 'ADVANCED'].map((level) => (\n                <button\n                  key={level}\n                  className={`difficulty-button ${difficulty === level ? 'active' : ''}`}\n                  onClick={() => handleDifficultyChange(level)}\n                >\n                  {level.charAt(0) + level.slice(1).toLowerCase()}\n                </button>\n              ))}\n            </div>\n          </div>\n        </DndContext>\n      </DndProvider>\n    );\n};\n\nexport default AWSArchitectureGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}