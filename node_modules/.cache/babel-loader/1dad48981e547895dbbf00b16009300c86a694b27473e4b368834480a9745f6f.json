{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game copy 20- copy 2/src/components/GameCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AWS_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Constants at the top of the file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.us-east-1.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst S3_ROCKET_PATH = `${S3_BUCKET_URL}/games/rocket`;\nconst DEFAULT_ROCKET = `${S3_ROCKET_PATH}/rocket1.png`;\nconst GameCanvas = () => {\n  _s();\n  // First, declare all state\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const saved = localStorage.getItem('selectedRocket');\n    return saved || DEFAULT_ROCKET;\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({\n    x: 375,\n    y: 550\n  });\n\n  // Get random categories for instructions only once at game start\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AWS_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 2);\n    };\n    return getRandomCategories().map(category => ({\n      text: `Shoot the ${category.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ')} icons!`,\n      category: AWS_ICON_CATEGORIES[category]\n    }));\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => path.includes(instruction.category)).map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name\n      }));\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs and other setup code\n  const canvasRef = useRef(null);\n\n  // We'll keep arrays for icons, bullets, and feedback in refs to avoid\n  // re-rendering the whole component every time they update.\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n\n  // Add state to track image loading status\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const rocketImage = useRef(new Image());\n  const fireballImage = useRef(new Image());\n\n  // Update the image loading effect\n  useEffect(() => {\n    let loadedImages = 0;\n    const totalImages = 2;\n    let mounted = true;\n    const handleImageLoad = () => {\n      if (!mounted) return;\n      loadedImages++;\n      console.log('Image loaded successfully:', loadedImages);\n      if (loadedImages === totalImages) {\n        setImagesLoaded(true);\n      }\n    };\n    const handleImageError = e => {\n      console.error('Error loading image:', e.target.src);\n      if (e.target === fireballImage.current) {\n        const backupFireballUrl = `${S3_BUCKET_URL}/games/bullet/fireball.png`;\n        console.log('Attempting to load backup fireball:', backupFireballUrl);\n        e.target.src = backupFireballUrl;\n      }\n    };\n\n    // Initialize images\n    rocketImage.current = new Image();\n    fireballImage.current = new Image();\n\n    // Set crossOrigin attribute for both images BEFORE setting the src\n    rocketImage.current.crossOrigin = \"anonymous\";\n    fireballImage.current.crossOrigin = \"anonymous\";\n\n    // Add event listeners\n    rocketImage.current.onload = handleImageLoad;\n    rocketImage.current.onerror = handleImageError;\n    fireballImage.current.onload = handleImageLoad;\n    fireballImage.current.onerror = handleImageError;\n\n    // Set sources\n    console.log('Loading rocket image:', selectedRocket);\n    rocketImage.current.src = selectedRocket;\n    fireballImage.current.src = `${S3_BUCKET_URL}/games/bullet/fireball.png`;\n\n    // Start game loop only when images are loaded\n    if (imagesLoaded) {\n      const animationId = requestAnimationFrame(gameLoop);\n      return () => {\n        cancelAnimationFrame(animationId);\n      };\n    }\n    return () => {\n      mounted = false;\n      if (rocketImage.current) {\n        rocketImage.current.onload = null;\n        rocketImage.current.onerror = null;\n      }\n      if (fireballImage.current) {\n        fireballImage.current.onload = null;\n        fireballImage.current.onerror = null;\n      }\n    };\n  }, [selectedRocket, imagesLoaded]);\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25,\n    // center of an 800px width minus half the gun width\n    y: 800 - 100,\n    // Adjust this value to move the rocket closer to the bottom\n    width: 120,\n    height: 120\n  });\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    return Math.floor(Math.random() * (canvas.width - 50));\n  };\n\n  // Modify loadIcons to handle image loading properly\n  const loadIcons = () => {\n    iconsRef.current = [];\n    const positions = [];\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    // Get all icons for current category\n    const categoryIcons = iconTypes[currentCategory];\n    const otherCategoryIcons = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => !path.includes(currentCategory)).map(([name, path]) => ({\n      path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n      name: name\n    }));\n    const selectedCategoryIcons = categoryIcons.length <= 4 ? [...categoryIcons] : shuffleAndSlice(categoryIcons, 4);\n    const selectedOtherIcons = shuffleAndSlice(otherCategoryIcons, 6);\n    const createIcon = (iconInfo, x, type) => {\n      return new Promise(resolve => {\n        const iconImage = new Image();\n        iconImage.crossOrigin = \"anonymous\";\n        iconImage.onload = () => {\n          iconsRef.current.push({\n            x,\n            y: -50,\n            type,\n            name: iconInfo.name,\n            image: iconImage,\n            hit: false\n          });\n          resolve();\n        };\n        iconImage.onerror = () => {\n          console.error('Failed to load icon:', iconInfo.path);\n          resolve();\n        };\n        iconImage.src = iconInfo.path;\n      });\n    };\n    const loadAllIcons = async () => {\n      const promises = [];\n\n      // Load category icons\n      selectedCategoryIcons.forEach(iconInfo => {\n        let x = getRandomX();\n        while (positions.some(pos => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n        promises.push(createIcon(iconInfo, x, currentCategory));\n      });\n\n      // Load other icons\n      selectedOtherIcons.forEach(iconInfo => {\n        let x = getRandomX();\n        while (positions.some(pos => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n        promises.push(createIcon(iconInfo, x, 'other'));\n      });\n      await Promise.all(promises);\n    };\n    loadAllIcons();\n  };\n\n  // Helper function to shuffle array and get n unique items\n  const shuffleAndSlice = (array, n) => {\n    const shuffled = [...array].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, Math.min(n, shuffled.length));\n  };\n\n  // Show feedback (checkmark or X) and points after a shot\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now()\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    const currentCategory = instructions[currentInstructionIndex].category;\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter(bullet => {\n        if (bullet.x > icon.x && bullet.x < icon.x + 50 && bullet.y > icon.y && bullet.y < icon.y + 50) {\n          icon.hit = true;\n          if (icon.type === currentCategory) {\n            const heightPercentage = 1 - icon.y / canvas.height;\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            setScore(prev => {\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore(prev => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n    if (iconsRef.current.length === 0 && timeLeft > 0) {\n      playSound('levelup');\n      setCurrentInstructionIndex(prev => (prev + 1) % instructions.length);\n      loadIcons();\n    }\n  };\n\n  // The main game loop, which draws everything on the canvas\n  const gameLoop = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Only draw if images are loaded\n    if (imagesLoaded) {\n      // Draw rocket\n      if (rocketImage.current && rocketImage.current.complete && rocketImage.current.naturalWidth !== 0) {\n        const {\n          x: gunX,\n          y: gunY,\n          width,\n          height\n        } = gunRef.current;\n        try {\n          ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n        } catch (error) {\n          console.error('Error drawing rocket:', error);\n        }\n      }\n\n      // Draw icons\n      iconsRef.current.forEach(icon => {\n        if (!icon.hit && icon.image && icon.image.complete && icon.image.naturalWidth !== 0) {\n          try {\n            ctx.drawImage(icon.image, icon.x, icon.y, 50, 50);\n            icon.y += 0.3;\n          } catch (error) {\n            console.error('Error drawing icon:', error);\n          }\n        }\n      });\n\n      // Draw bullets\n      if (fireballImage.current && fireballImage.current.complete && fireballImage.current.naturalWidth !== 0) {\n        bulletsRef.current.forEach(bullet => {\n          try {\n            ctx.drawImage(fireballImage.current, bullet.x, bullet.y, 20, 20);\n            bullet.y -= 5;\n          } catch (error) {\n            console.error('Error drawing bullet:', error);\n          }\n        });\n      }\n\n      // Update game state\n      checkCollisions();\n\n      // Remove off-screen bullets\n      bulletsRef.current = bulletsRef.current.filter(b => b.y > 0);\n\n      // Remove off-screen icons\n      iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n      if (iconsRef.current.length === 0 && timeLeft > 0) {\n        setCurrentInstructionIndex(prev => (prev + 1) % instructions.length);\n        loadIcons();\n      }\n    }\n    requestAnimationFrame(gameLoop);\n  };\n\n  // Add sound references with error handling\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Initialize sounds with error handling\n  useEffect(() => {\n    const soundFiles = {\n      shoot: `${S3_BUCKET_URL}/games/sounds/pistol_sound.mp3`,\n      correct: `${S3_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n      incorrect: `${S3_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n      levelup: `${S3_BUCKET_URL}/games/sounds/levelup.mp3`\n    };\n\n    // Create a safe audio player that won't break if files are missing\n    const createSafeAudio = path => {\n      const audio = new Audio();\n      return new Promise(resolve => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n\n        // Set timeout in case the file takes too long to load\n        setTimeout(() => resolve(null), 2000);\n        audio.src = path;\n      });\n    };\n\n    // Load all sound files with error handling\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n    loadSounds();\n\n    // Set initial volume\n    return () => {\n      // Cleanup sounds on unmount\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  // Safe play function\n  const playSound = soundName => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Add a mute toggle button to the UI\n  const [isMuted, setIsMuted] = useState(false);\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !isMuted;\n      }\n    });\n  };\n\n  // Add new state and refs for particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n\n  // Add state to track if we've already handled game over\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  // Add state to track if game should start\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Particle class\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size; // Store initial size\n    }\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      // Calculate size based on lifetime instead of continuous subtraction\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n    draw(ctx) {\n      if (this.size <= 0) return; // Don't draw if size is 0 or negative\n\n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Function to create explosion effect\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled, gameStarted]);\n\n  // Handle game over\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    setGameOver(true);\n    setGameOverHandled(true);\n    const newScore = {\n      name: playerName,\n      score\n    };\n    const newHighScores = [...highScores, newScore].sort((a, b) => b.score - a.score).slice(0, 5);\n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  // Modify the canvas setup effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return; // Guard clause for when canvas isn't ready\n\n    canvas.width = 1200;\n    canvas.height = 800;\n    const ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n\n    // Only start the game loop and load icons when both canvas and images are ready\n    if (imagesLoaded) {\n      loadIcons();\n      const animationId = requestAnimationFrame(gameLoop);\n      return () => cancelAnimationFrame(animationId);\n    }\n  }, [imagesLoaded]); // Add imagesLoaded as a dependency\n\n  // Second effect for event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ROCKET_WIDTH = 50;\n    const FIXED_ROCKET_Y = 550;\n    const handleMouseMove = e => {\n      const rect = canvas.getBoundingClientRect();\n\n      // Calculate new X position\n      let newX = e.clientX - rect.left - gunRef.current.width / 2;\n\n      // Add boundary checks\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n\n      // Update gun position\n      gunRef.current.x = newX;\n    };\n    const handleCanvasClick = () => {\n      if (gameStarted && timeLeft > 0) {\n        playSound('shoot');\n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20\n        });\n      }\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted]);\n\n  // Clear both name and rocket selection when component mounts\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  // Add state for modal visibility\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  // Update the rocket options with proper S3 paths\n  const rocketOptions = [{\n    id: `${S3_ROCKET_PATH}/rocket1.png`,\n    name: 'Modern Rocket'\n  }, {\n    id: `${S3_ROCKET_PATH}/rocket2.png`,\n    name: 'Power Rocket'\n  }, {\n    id: `${S3_ROCKET_PATH}/rocket3.png`,\n    name: 'Stealth Rocket'\n  }, {\n    id: `${S3_ROCKET_PATH}/rocket4.png`,\n    name: 'Classic Rocket'\n  }];\n\n  // Update the handleRocketSelect function\n  const handleRocketSelect = rocketId => {\n    console.log('Selecting rocket:', rocketId);\n\n    // Create a new image to test loading\n    const testImage = new Image();\n    testImage.onload = () => {\n      console.log('Rocket image pre-load successful');\n      setSelectedRocket(rocketId);\n      localStorage.setItem('selectedRocket', rocketId);\n      setShowRocketModal(false);\n      setGameStarted(true);\n    };\n    testImage.onerror = error => {\n      console.error('Error pre-loading rocket image:', error);\n      // Fallback to default rocket\n      setSelectedRocket(DEFAULT_ROCKET);\n      localStorage.setItem('selectedRocket', DEFAULT_ROCKET);\n    };\n    testImage.src = rocketId;\n  };\n\n  // Add state for cheerleader messages\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  // Add cheerleader messages for different situations\n  const cheerleaderMessages = {\n    goodShot: [\"Great shot! You're an AWS Pro! 🌟\", \"Amazing cloud skills! Keep it up! 🎯\", \"You're on fire in the cloud! 🔥\", \"That's how AWS experts do it! 👏\"],\n    combo: [\"Cloud combo! 🎮\", \"You're scaling infinitely! ⚡\", \"What an AWS streak! 🌈\"],\n    timeWarning: [\"30 seconds left - you're highly available! ⏰\", \"Time for the final deployment! 💪\", \"Make every compute unit count! ⭐\"],\n    encouragement: [\"You've got this, cloud warrior! 🚀\", \"Keep going! You're AWS certified material! 🌟\", \"I believe in your cloud powers! 💫\", \"Show them your AWS expertise! 💪\"],\n    highScore: [\"New high score! You're going serverless! 🏆\", \"You're breaking cloud records! 🎖️\", \"Legendary AWS performance! 👑\"]\n  };\n\n  // Function to show a random message from a category\n  const showCheerleaderMessage = category => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n\n    // Hide message after 3 seconds\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  // Add periodic encouragement\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  // Add time warning messages\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  // Add this function near other handlers (around line 440)\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowNameModal(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameCanvas-game-title\",\n      children: \"AWS Cloud Shooter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 715,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-canvas-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"gameCanvas-game-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 717,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-instruction-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-player-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-player-name\",\n            children: [\"Player: \", playerName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-score-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"alien\",\n              children: \"\\uD83D\\uDC7E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 15\n            }, this), ' ', \"Score: \", score, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"joystick\",\n              children: \"\\uD83D\\uDD79\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 15\n            }, this), soundsLoaded && Object.values(sounds.current).some(sound => sound) && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gameCanvas-sound-toggle\",\n              onClick: toggleMute,\n              \"aria-label\": \"Toggle sound\",\n              children: isMuted ? '🔇' : '🔊'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 731,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 721,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-timer-display\",\n          children: [\"Time: \", timeLeft, \"s\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-score-explanation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"How to Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 747,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Hit correct icon: +5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Height bonus: up to +20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Wrong hit: -5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Tip: Shoot icons as high as possible!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 748,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 746,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-high-scores\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"High Scores\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 757,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: highScores.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"gameCanvas-high-score-name\",\n                children: [entry.name, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 761,\n                columnNumber: 17\n              }, this), \" \", entry.score]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 15\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 758,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-mission-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"gameCanvas-mission-title\",\n            children: \"Current Mission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 768,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-mission-text\",\n            children: instructions[currentInstructionIndex].text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 772,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 767,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 720,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 716,\n      columnNumber: 7\n    }, this), showRocketModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rocket-selection-modal\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Select Your Rocket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 781,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rocket-options\",\n        children: rocketOptions.map(rocket => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`,\n          onClick: () => handleRocketSelect(rocket.id),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: rocket.id // rocket.id now contains the full S3 URL\n            ,\n            alt: rocket.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 789,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: rocket.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 793,\n            columnNumber: 17\n          }, this)]\n        }, rocket.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 784,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 782,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 780,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Over!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 802,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 801,\n      columnNumber: 9\n    }, this), showCheerMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-cheerleader-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheerleader-character\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"icons/cheerleader.png\",\n          alt: \"Cheerleader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 812,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 811,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheer-message\",\n        children: cheerMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 814,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 810,\n      columnNumber: 9\n    }, this), showNameModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to AWS Cloud Shooter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your name to start the game:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 824,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempPlayerName,\n            onChange: e => {\n              setTempPlayerName(e.target.value);\n              setNameError('');\n            },\n            placeholder: \"Your name\",\n            className: \"gameCanvas-name-input\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 826,\n            columnNumber: 15\n          }, this), nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-name-error\",\n            children: nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 837,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"gameCanvas-start-button\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 838,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 825,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 821,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 714,\n    columnNumber: 5\n  }, this);\n};\n_s(GameCanvas, \"7kNZ0AIn+9KB3DhffFWjsDXf8l0=\");\n_c = GameCanvas;\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","AWS_ICON_CATEGORIES","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","S3_BUCKET_URL","ICONS_BASE_PATH","S3_ROCKET_PATH","DEFAULT_ROCKET","GameCanvas","_s","timeLeft","setTimeLeft","score","setScore","currentInstructionIndex","setCurrentInstructionIndex","selectedRocket","setSelectedRocket","saved","localStorage","getItem","showNameModal","setShowNameModal","tempPlayerName","setTempPlayerName","nameError","setNameError","playerName","setPlayerName","savedName","rocketPosition","setRocketPosition","x","y","instructions","getRandomCategories","categories","Object","keys","shuffled","sort","Math","random","slice","map","category","text","split","word","charAt","toUpperCase","toLowerCase","join","iconTypes","reduce","acc","instruction","categoryServices","entries","filter","_","path","includes","name","canvasRef","iconsRef","bulletsRef","feedbacksRef","imagesLoaded","setImagesLoaded","rocketImage","Image","fireballImage","loadedImages","totalImages","mounted","handleImageLoad","console","log","handleImageError","e","error","target","src","current","backupFireballUrl","crossOrigin","onload","onerror","animationId","requestAnimationFrame","gameLoop","cancelAnimationFrame","gunRef","width","height","getRandomX","canvas","floor","loadIcons","positions","currentCategory","categoryIcons","otherCategoryIcons","selectedCategoryIcons","length","shuffleAndSlice","selectedOtherIcons","createIcon","iconInfo","type","Promise","resolve","iconImage","push","image","hit","loadAllIcons","promises","forEach","some","pos","abs","all","array","n","min","showFeedback","isCorrect","points","iconName","time","Date","now","checkCollisions","bullets","icons","icon","iconIndex","bullet","heightPercentage","heightBonus","prev","max","highScores","s","showCheerleaderMessage","playSound","createExplosion","splice","ctx","getContext","clearRect","complete","naturalWidth","gunX","gunY","drawImage","b","sounds","soundsLoaded","setSoundsLoaded","soundFiles","shoot","correct","incorrect","levelup","createSafeAudio","audio","Audio","addEventListener","warn","setTimeout","loadSounds","loadedSounds","key","values","sound","pause","soundName","isMuted","currentTime","volume","play","catch","err","setIsMuted","toggleMute","muted","setHighScores","JSON","parse","gameOver","setGameOver","particlesRef","gameOverHandled","setGameOverHandled","gameStarted","setGameStarted","Particle","constructor","color","size","speedX","speedY","lifetime","initialSize","update","draw","fillStyle","globalAlpha","beginPath","arc","PI","fill","i","timer","setInterval","clearInterval","handleGameOver","newScore","newHighScores","a","setItem","stringify","imageSmoothingEnabled","ROCKET_WIDTH","FIXED_ROCKET_Y","handleMouseMove","rect","getBoundingClientRect","newX","clientX","left","handleCanvasClick","removeEventListener","removeItem","showRocketModal","setShowRocketModal","rocketOptions","id","handleRocketSelect","rocketId","testImage","cheerMessage","setCheerMessage","showCheerMessage","setShowCheerMessage","cheerleaderMessages","goodShot","combo","timeWarning","encouragement","highScore","messages","randomMessage","encouragementInterval","handleNameSubmit","preventDefault","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","role","onClick","entry","index","rocket","alt","window","location","reload","onSubmit","value","onChange","placeholder","autoFocus","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game copy 20- copy 2/src/components/GameCanvas.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AWS_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\n\n// Constants at the top of the file\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.us-east-1.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst S3_ROCKET_PATH = `${S3_BUCKET_URL}/games/rocket`;\nconst DEFAULT_ROCKET = `${S3_ROCKET_PATH}/rocket1.png`;\n\nconst GameCanvas = () => {\n  // First, declare all state\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const saved = localStorage.getItem('selectedRocket');\n    return saved || DEFAULT_ROCKET;\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({ x: 375, y: 550 });\n\n  // Get random categories for instructions only once at game start\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AWS_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      return shuffled.slice(0, 2);\n    };\n\n    return getRandomCategories().map(category => ({\n      text: `Shoot the ${category.split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ')} icons!`,\n      category: AWS_ICON_CATEGORIES[category]\n    }));\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS)\n        .filter(([_, path]) => path.includes(instruction.category))\n        .map(([name, path]) => ({\n          path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n          name: name\n        }));\n\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs and other setup code\n  const canvasRef = useRef(null);\n\n  // We'll keep arrays for icons, bullets, and feedback in refs to avoid\n  // re-rendering the whole component every time they update.\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n\n  // Add state to track image loading status\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n  const rocketImage = useRef(new Image());\n  const fireballImage = useRef(new Image());\n\n  // Update the image loading effect\n  useEffect(() => {\n    let loadedImages = 0;\n    const totalImages = 2;\n    let mounted = true;\n\n    const handleImageLoad = () => {\n      if (!mounted) return;\n      loadedImages++;\n      console.log('Image loaded successfully:', loadedImages);\n      if (loadedImages === totalImages) {\n        setImagesLoaded(true);\n      }\n    };\n\n    const handleImageError = (e) => {\n      console.error('Error loading image:', e.target.src);\n      if (e.target === fireballImage.current) {\n        const backupFireballUrl = `${S3_BUCKET_URL}/games/bullet/fireball.png`;\n        console.log('Attempting to load backup fireball:', backupFireballUrl);\n        e.target.src = backupFireballUrl;\n      }\n    };\n\n    // Initialize images\n    rocketImage.current = new Image();\n    fireballImage.current = new Image();\n\n    // Set crossOrigin attribute for both images BEFORE setting the src\n    rocketImage.current.crossOrigin = \"anonymous\";\n    fireballImage.current.crossOrigin = \"anonymous\";\n\n    // Add event listeners\n    rocketImage.current.onload = handleImageLoad;\n    rocketImage.current.onerror = handleImageError;\n    fireballImage.current.onload = handleImageLoad;\n    fireballImage.current.onerror = handleImageError;\n\n    // Set sources\n    console.log('Loading rocket image:', selectedRocket);\n    rocketImage.current.src = selectedRocket;\n    fireballImage.current.src = `${S3_BUCKET_URL}/games/bullet/fireball.png`;\n\n    // Start game loop only when images are loaded\n    if (imagesLoaded) {\n      const animationId = requestAnimationFrame(gameLoop);\n      return () => {\n        cancelAnimationFrame(animationId);\n      };\n    }\n\n    return () => {\n      mounted = false;\n      if (rocketImage.current) {\n        rocketImage.current.onload = null;\n        rocketImage.current.onerror = null;\n      }\n      if (fireballImage.current) {\n        fireballImage.current.onload = null;\n        fireballImage.current.onerror = null;\n      }\n    };\n  }, [selectedRocket, imagesLoaded]);\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25, // center of an 800px width minus half the gun width\n    y: 800 - 100, // Adjust this value to move the rocket closer to the bottom\n    width: 120,\n    height: 120,\n  });\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    return Math.floor(Math.random() * (canvas.width - 50));\n  };\n\n  // Modify loadIcons to handle image loading properly\n  const loadIcons = () => {\n    iconsRef.current = [];\n    const positions = [];\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    // Get all icons for current category\n    const categoryIcons = iconTypes[currentCategory];\n    const otherCategoryIcons = Object.entries(SERVICE_MAPPINGS)\n      .filter(([_, path]) => !path.includes(currentCategory))\n      .map(([name, path]) => ({\n        path: `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${path}`,\n        name: name\n      }));\n\n    const selectedCategoryIcons = categoryIcons.length <= 4 \n      ? [...categoryIcons]\n      : shuffleAndSlice(categoryIcons, 4);\n\n    const selectedOtherIcons = shuffleAndSlice(otherCategoryIcons, 6);\n\n    const createIcon = (iconInfo, x, type) => {\n      return new Promise((resolve) => {\n        const iconImage = new Image();\n        iconImage.crossOrigin = \"anonymous\";\n        iconImage.onload = () => {\n          iconsRef.current.push({\n            x,\n            y: -50,\n            type,\n            name: iconInfo.name,\n            image: iconImage,\n            hit: false,\n          });\n          resolve();\n        };\n        iconImage.onerror = () => {\n          console.error('Failed to load icon:', iconInfo.path);\n          resolve();\n        };\n        iconImage.src = iconInfo.path;\n      });\n    };\n\n    const loadAllIcons = async () => {\n      const promises = [];\n\n      // Load category icons\n      selectedCategoryIcons.forEach((iconInfo) => {\n        let x = getRandomX();\n        while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n        promises.push(createIcon(iconInfo, x, currentCategory));\n      });\n\n      // Load other icons\n      selectedOtherIcons.forEach((iconInfo) => {\n        let x = getRandomX();\n        while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n          x = getRandomX();\n        }\n        positions.push(x);\n        promises.push(createIcon(iconInfo, x, 'other'));\n      });\n\n      await Promise.all(promises);\n    };\n\n    loadAllIcons();\n  };\n\n  // Helper function to shuffle array and get n unique items\n  const shuffleAndSlice = (array, n) => {\n    const shuffled = [...array].sort(() => 0.5 - Math.random());\n    return shuffled.slice(0, Math.min(n, shuffled.length));\n  };\n\n  // Show feedback (checkmark or X) and points after a shot\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now(),\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    const currentCategory = instructions[currentInstructionIndex].category;\n\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter((bullet) => {\n        if (\n          bullet.x > icon.x &&\n          bullet.x < icon.x + 50 &&\n          bullet.y > icon.y &&\n          bullet.y < icon.y + 50\n        ) {\n          icon.hit = true;\n\n          if (icon.type === currentCategory) {\n            const heightPercentage = 1 - (icon.y / canvas.height);\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            \n            setScore((prev) => {\n              if (prev + points > Math.max(...highScores.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore((prev) => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n\n    if (iconsRef.current.length === 0 && timeLeft > 0) {\n      playSound('levelup');\n      setCurrentInstructionIndex((prev) => (prev + 1) % instructions.length);\n      loadIcons();\n    }\n  };\n\n  // The main game loop, which draws everything on the canvas\n  const gameLoop = () => {\n    const canvas = canvasRef.current;\n    if (!canvas) return;\n    \n    const ctx = canvas.getContext('2d');\n    if (!ctx) return;\n\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n    // Only draw if images are loaded\n    if (imagesLoaded) {\n      // Draw rocket\n      if (rocketImage.current && rocketImage.current.complete && rocketImage.current.naturalWidth !== 0) {\n        const { x: gunX, y: gunY, width, height } = gunRef.current;\n        try {\n          ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n        } catch (error) {\n          console.error('Error drawing rocket:', error);\n        }\n      }\n\n      // Draw icons\n      iconsRef.current.forEach((icon) => {\n        if (!icon.hit && icon.image && icon.image.complete && icon.image.naturalWidth !== 0) {\n          try {\n            ctx.drawImage(icon.image, icon.x, icon.y, 50, 50);\n            icon.y += 0.3;\n          } catch (error) {\n            console.error('Error drawing icon:', error);\n          }\n        }\n      });\n\n      // Draw bullets\n      if (fireballImage.current && fireballImage.current.complete && fireballImage.current.naturalWidth !== 0) {\n        bulletsRef.current.forEach((bullet) => {\n          try {\n            ctx.drawImage(fireballImage.current, bullet.x, bullet.y, 20, 20);\n            bullet.y -= 5;\n          } catch (error) {\n            console.error('Error drawing bullet:', error);\n          }\n        });\n      }\n\n      // Update game state\n      checkCollisions();\n      \n      // Remove off-screen bullets\n      bulletsRef.current = bulletsRef.current.filter((b) => b.y > 0);\n      \n      // Remove off-screen icons\n      iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n      \n      if (iconsRef.current.length === 0 && timeLeft > 0) {\n        setCurrentInstructionIndex((prev) => (prev + 1) % instructions.length);\n        loadIcons();\n      }\n    }\n\n    requestAnimationFrame(gameLoop);\n  };\n\n  // Add sound references with error handling\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Initialize sounds with error handling\n  useEffect(() => {\n    const soundFiles = {\n      shoot:  `${S3_BUCKET_URL}/games/sounds/pistol_sound.mp3`,\n      correct: `${S3_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n      incorrect:`${S3_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n      levelup: `${S3_BUCKET_URL}/games/sounds/levelup.mp3`\n    };\n\n    // Create a safe audio player that won't break if files are missing\n    const createSafeAudio = (path) => {\n      const audio = new Audio();\n      \n      return new Promise((resolve) => {\n        audio.addEventListener('error', () => {\n          console.warn(`Sound file not found: ${path}`);\n          resolve(null);\n        });\n\n        audio.addEventListener('canplaythrough', () => {\n          resolve(audio);\n        });\n\n        // Set timeout in case the file takes too long to load\n        setTimeout(() => resolve(null), 2000);\n\n        audio.src = path;\n      });\n    };\n\n    // Load all sound files with error handling\n    const loadSounds = async () => {\n      const loadedSounds = {};\n      \n      for (const [key, path] of Object.entries(soundFiles)) {\n        loadedSounds[key] = await createSafeAudio(path);\n      }\n\n      sounds.current = loadedSounds;\n      setSoundsLoaded(true);\n    };\n\n    loadSounds();\n\n    // Set initial volume\n    return () => {\n      // Cleanup sounds on unmount\n      Object.values(sounds.current).forEach(sound => {\n        if (sound) {\n          sound.pause();\n          sound.src = '';\n        }\n      });\n    };\n  }, []);\n\n  // Safe play function\n  const playSound = (soundName) => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  };\n\n  // Add a mute toggle button to the UI\n  const [isMuted, setIsMuted] = useState(false);\n\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !isMuted;\n      }\n    });\n  };\n\n  // Add new state and refs for particles and timer\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n\n  // Add state to track if we've already handled game over\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  // Add state to track if game should start\n  const [gameStarted, setGameStarted] = useState(false);\n\n  // Particle class\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size; // Store initial size\n    }\n\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      // Calculate size based on lifetime instead of continuous subtraction\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n\n    draw(ctx) {\n      if (this.size <= 0) return; // Don't draw if size is 0 or negative\n      \n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  // Function to create explosion effect\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  // Timer effect\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n\n      return () => clearInterval(timer);\n    } else if (timeLeft === 0 && !gameOverHandled) {\n      handleGameOver();\n    }\n  }, [timeLeft, gameOver, gameOverHandled, gameStarted]);\n\n  // Handle game over\n  const handleGameOver = () => {\n    if (gameOverHandled) return;\n    \n    setGameOver(true);\n    setGameOverHandled(true);\n    \n    const newScore = { name: playerName, score };\n    const newHighScores = [...highScores, newScore]\n      .sort((a, b) => b.score - a.score)\n      .slice(0, 5);\n    \n    setHighScores(newHighScores);\n    localStorage.setItem('highScores', JSON.stringify(newHighScores));\n  };\n\n  // Modify the canvas setup effect\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    if (!canvas) return; // Guard clause for when canvas isn't ready\n    \n    canvas.width = 1200;\n    canvas.height = 800;\n    \n    const ctx = canvas.getContext('2d');\n    ctx.imageSmoothingEnabled = true;\n\n    // Only start the game loop and load icons when both canvas and images are ready\n    if (imagesLoaded) {\n      loadIcons();\n      const animationId = requestAnimationFrame(gameLoop);\n      return () => cancelAnimationFrame(animationId);\n    }\n  }, [imagesLoaded]); // Add imagesLoaded as a dependency\n\n  // Second effect for event listeners\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    \n    const ROCKET_WIDTH = 50;\n    const FIXED_ROCKET_Y = 550;\n\n    const handleMouseMove = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      \n      // Calculate new X position\n      let newX = e.clientX - rect.left - (gunRef.current.width / 2);\n      \n      // Add boundary checks\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n      \n      // Update gun position\n      gunRef.current.x = newX;\n    };\n\n    const handleCanvasClick = () => {\n      if (gameStarted && timeLeft > 0) {\n        playSound('shoot');\n        \n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20,\n        });\n      }\n    };\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted]);\n\n  // Clear both name and rocket selection when component mounts\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  // Add state for modal visibility\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  // Update the rocket options with proper S3 paths\n  const rocketOptions = [\n    { id: `${S3_ROCKET_PATH}/rocket1.png`, name: 'Modern Rocket' },\n    { id: `${S3_ROCKET_PATH}/rocket2.png`, name: 'Power Rocket' },\n    { id: `${S3_ROCKET_PATH}/rocket3.png`, name: 'Stealth Rocket' },\n    { id: `${S3_ROCKET_PATH}/rocket4.png`, name: 'Classic Rocket' },\n  ];\n\n  // Update the handleRocketSelect function\n  const handleRocketSelect = (rocketId) => {\n    console.log('Selecting rocket:', rocketId);\n    \n    // Create a new image to test loading\n    const testImage = new Image();\n    testImage.onload = () => {\n      console.log('Rocket image pre-load successful');\n      setSelectedRocket(rocketId);\n      localStorage.setItem('selectedRocket', rocketId);\n      setShowRocketModal(false);\n      setGameStarted(true);\n    };\n    \n    testImage.onerror = (error) => {\n      console.error('Error pre-loading rocket image:', error);\n      // Fallback to default rocket\n      setSelectedRocket(DEFAULT_ROCKET);\n      localStorage.setItem('selectedRocket', DEFAULT_ROCKET);\n    };\n    \n    testImage.src = rocketId;\n  };\n\n  // Add state for cheerleader messages\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  // Add cheerleader messages for different situations\n  const cheerleaderMessages = {\n    goodShot: [\n      \"Great shot! You're an AWS Pro! 🌟\",\n      \"Amazing cloud skills! Keep it up! 🎯\",\n      \"You're on fire in the cloud! 🔥\",\n      \"That's how AWS experts do it! 👏\",\n    ],\n    combo: [\n      \"Cloud combo! 🎮\",\n      \"You're scaling infinitely! ⚡\",\n      \"What an AWS streak! 🌈\",\n    ],\n    timeWarning: [\n      \"30 seconds left - you're highly available! ⏰\",\n      \"Time for the final deployment! 💪\",\n      \"Make every compute unit count! ⭐\",\n    ],\n    encouragement: [\n      \"You've got this, cloud warrior! 🚀\",\n      \"Keep going! You're AWS certified material! 🌟\",\n      \"I believe in your cloud powers! 💫\",\n      \"Show them your AWS expertise! 💪\",\n    ],\n    highScore: [\n      \"New high score! You're going serverless! 🏆\",\n      \"You're breaking cloud records! 🎖️\",\n      \"Legendary AWS performance! 👑\",\n    ]\n  };\n\n  // Function to show a random message from a category\n  const showCheerleaderMessage = (category) => {\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n    \n    // Hide message after 3 seconds\n    setTimeout(() => {\n      setShowCheerMessage(false);\n    }, 3000);\n  };\n\n  // Add periodic encouragement\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  // Add time warning messages\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  // Add this function near other handlers (around line 440)\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    localStorage.setItem('playerName', tempPlayerName.trim());\n    setShowNameModal(false);\n  };\n\n  return (\n    <div className=\"gameCanvas-container\">\n      <h1 className=\"gameCanvas-game-title\">AWS Cloud Shooter</h1>\n      <div className=\"gameCanvas-game-content\">\n        <div className=\"gameCanvas-canvas-wrapper\">\n          <canvas ref={canvasRef} className=\"gameCanvas-game-canvas\" />\n        </div>\n        <div className=\"gameCanvas-instruction-panel\">\n          <div className=\"gameCanvas-player-info\">\n            <div className=\"gameCanvas-player-name\">\n              Player: {playerName}\n            </div>\n            <div className=\"gameCanvas-score-display\">\n              <span role=\"img\" aria-label=\"alien\">👾</span>{' '}\n              Score: {score}{' '}\n              <span role=\"img\" aria-label=\"joystick\">🕹️</span>\n              \n              {soundsLoaded && Object.values(sounds.current).some(sound => sound) && (\n                <button \n                  className=\"gameCanvas-sound-toggle\"\n                  onClick={toggleMute}\n                  aria-label=\"Toggle sound\"\n                >\n                  {isMuted ? '🔇' : '🔊'}\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"gameCanvas-timer-display\">\n            Time: {timeLeft}s\n          </div>\n\n          <div className=\"gameCanvas-score-explanation\">\n            <h4>How to Score:</h4>\n            <ul>\n            <li>• Hit correct icon: +5 points</li>\n            <li>• Height bonus: up to +20</li>\n            <li>• Wrong hit: -5 points</li>\n            <li>• Tip: Shoot icons as high as possible!</li>\n            </ul>\n          </div>\n\n          <div className=\"gameCanvas-high-scores\">\n          <h4>High Scores</h4>\n          <ul>\n            {highScores.map((entry, index) => (\n              <li key={index}>\n                <span className=\"gameCanvas-high-score-name\">{entry.name}:</span> {entry.score}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n          <div className=\"gameCanvas-mission-container\">\n            <h3 className=\"gameCanvas-mission-title\">\n              Current Mission\n            </h3>\n            \n            <div className=\"gameCanvas-mission-text\">\n              {instructions[currentInstructionIndex].text}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showRocketModal && (\n        <div className=\"rocket-selection-modal\">\n          <h2>Select Your Rocket</h2>\n          <div className=\"rocket-options\">\n            {rocketOptions.map((rocket) => (\n              <div\n                key={rocket.id}\n                className={`rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`}\n                onClick={() => handleRocketSelect(rocket.id)}\n              >\n                <img \n                  src={rocket.id}  // rocket.id now contains the full S3 URL\n                  alt={rocket.name}\n                />\n                <span>{rocket.name}</span>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {gameOver && (\n        <div className=\"gameCanvas-game-over\">\n          <h3>Game Over!</h3>\n          <button onClick={() => window.location.reload()}>\n            Play Again\n          </button>\n        </div>\n      )}\n\n      {showCheerMessage && (\n        <div className=\"gameCanvas-cheerleader-container\">\n          <div className=\"gameCanvas-cheerleader-character\">\n            <img src=\"icons/cheerleader.png\" alt=\"Cheerleader\" />\n          </div>\n          <div className=\"gameCanvas-cheer-message\">\n            {cheerMessage}\n          </div>\n        </div>\n      )}\n\n      {showNameModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-modal\">\n            <h2>Welcome to AWS Cloud Shooter!</h2>\n            <p>Enter your name to start the game:</p>\n            <form onSubmit={handleNameSubmit}>\n              <input\n                type=\"text\"\n                value={tempPlayerName}\n                onChange={(e) => {\n                  setTempPlayerName(e.target.value);\n                  setNameError('');\n                }}\n                placeholder=\"Your name\"\n                className=\"gameCanvas-name-input\"\n                autoFocus\n              />\n              {nameError && <div className=\"gameCanvas-name-error\">{nameError}</div>}\n              <button type=\"submit\" className=\"gameCanvas-start-button\">\n                Start Game\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default GameCanvas;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}