{"ast":null,"code":"import { hashObject } from \"../../utils/hashObject\";\n/** @hidden */\nexport class OrderedDistinctEndpointComponent {\n  constructor(executionContext) {\n    this.executionContext = executionContext;\n  }\n  hasMoreResults() {\n    return this.executionContext.hasMoreResults();\n  }\n  async fetchMore(diagnosticNode) {\n    const buffer = [];\n    const response = await this.executionContext.fetchMore(diagnosticNode);\n    if (response === undefined || response.result === undefined) {\n      return {\n        result: undefined,\n        headers: response.headers\n      };\n    }\n    for (const item of response.result) {\n      if (item) {\n        const hashedResult = await hashObject(item);\n        if (hashedResult !== this.hashedLastResult) {\n          buffer.push(item);\n          this.hashedLastResult = hashedResult;\n        }\n      }\n    }\n    return {\n      result: buffer,\n      headers: response.headers\n    };\n  }\n}","map":{"version":3,"names":["hashObject","OrderedDistinctEndpointComponent","constructor","executionContext","hasMoreResults","fetchMore","diagnosticNode","buffer","response","undefined","result","headers","item","hashedResult","hashedLastResult","push"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /node_modules/@azure/cosmos/src/queryExecutionContext/EndpointComponent/OrderedDistinctEndpointComponent.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport type { Response } from \"../../request\";\nimport type { ExecutionContext } from \"../ExecutionContext\";\nimport { hashObject } from \"../../utils/hashObject\";\nimport type { DiagnosticNodeInternal } from \"../../diagnostics/DiagnosticNodeInternal\";\n\n/** @hidden */\nexport class OrderedDistinctEndpointComponent implements ExecutionContext {\n  private hashedLastResult: string;\n  constructor(private executionContext: ExecutionContext) {}\n\n  public hasMoreResults(): boolean {\n    return this.executionContext.hasMoreResults();\n  }\n\n  public async fetchMore(diagnosticNode?: DiagnosticNodeInternal): Promise<Response<any>> {\n    const buffer: any[] = [];\n    const response = await this.executionContext.fetchMore(diagnosticNode);\n    if (response === undefined || response.result === undefined) {\n      return { result: undefined, headers: response.headers };\n    }\n    for (const item of response.result) {\n      if (item) {\n        const hashedResult = await hashObject(item);\n        if (hashedResult !== this.hashedLastResult) {\n          buffer.push(item);\n          this.hashedLastResult = hashedResult;\n        }\n      }\n    }\n    return { result: buffer, headers: response.headers };\n  }\n}\n"],"mappings":"AAIA,SAASA,UAAU,QAAQ,wBAAwB;AAGnD;AACA,OAAM,MAAOC,gCAAgC;EAE3CC,YAAoBC,gBAAkC;IAAlC,KAAAA,gBAAgB,GAAhBA,gBAAgB;EAAqB;EAElDC,cAAcA,CAAA;IACnB,OAAO,IAAI,CAACD,gBAAgB,CAACC,cAAc,EAAE;EAC/C;EAEO,MAAMC,SAASA,CAACC,cAAuC;IAC5D,MAAMC,MAAM,GAAU,EAAE;IACxB,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACL,gBAAgB,CAACE,SAAS,CAACC,cAAc,CAAC;IACtE,IAAIE,QAAQ,KAAKC,SAAS,IAAID,QAAQ,CAACE,MAAM,KAAKD,SAAS,EAAE;MAC3D,OAAO;QAAEC,MAAM,EAAED,SAAS;QAAEE,OAAO,EAAEH,QAAQ,CAACG;MAAO,CAAE;IACzD;IACA,KAAK,MAAMC,IAAI,IAAIJ,QAAQ,CAACE,MAAM,EAAE;MAClC,IAAIE,IAAI,EAAE;QACR,MAAMC,YAAY,GAAG,MAAMb,UAAU,CAACY,IAAI,CAAC;QAC3C,IAAIC,YAAY,KAAK,IAAI,CAACC,gBAAgB,EAAE;UAC1CP,MAAM,CAACQ,IAAI,CAACH,IAAI,CAAC;UACjB,IAAI,CAACE,gBAAgB,GAAGD,YAAY;QACtC;MACF;IACF;IACA,OAAO;MAAEH,MAAM,EAAEH,MAAM;MAAEI,OAAO,EAAEH,QAAQ,CAACG;IAAO,CAAE;EACtD","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}