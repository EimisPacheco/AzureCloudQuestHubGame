{"ast":null,"code":"export const ACHIEVEMENTS = {\n  BEGINNER: {\n    id: 'beginner_complete',\n    title: 'AWS Rookie',\n    description: 'Complete 5 beginner architectures',\n    threshold: 5,\n    icon: '🌟'\n  },\n  PERFECT_STREAK: {\n    id: 'perfect_streak',\n    title: 'Perfect Architect',\n    description: 'Get 10 correct answers in a row',\n    threshold: 10,\n    icon: '🏆'\n  }\n  // Add more achievements...\n};\nclass AchievementSystem {\n  constructor() {\n    this.achievements = new Set();\n    this.listeners = new Set();\n  }\n  checkAchievement(type, value) {\n    const achievement = ACHIEVEMENTS[type];\n    if (achievement && value >= achievement.threshold && !this.achievements.has(achievement.id)) {\n      this.unlockAchievement(achievement);\n    }\n  }\n  unlockAchievement(achievement) {\n    this.achievements.add(achievement.id);\n    this.notifyListeners(achievement);\n    soundManager.play('achievement');\n  }\n  addListener(listener) {\n    this.listeners.add(listener);\n  }\n  removeListener(listener) {\n    this.listeners.delete(listener);\n  }\n  notifyListeners(achievement) {\n    this.listeners.forEach(listener => listener(achievement));\n  }\n}\nexport const achievementSystem = new AchievementSystem();","map":{"version":3,"names":["ACHIEVEMENTS","BEGINNER","id","title","description","threshold","icon","PERFECT_STREAK","AchievementSystem","constructor","achievements","Set","listeners","checkAchievement","type","value","achievement","has","unlockAchievement","add","notifyListeners","soundManager","play","addListener","listener","removeListener","delete","forEach","achievementSystem"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/src/services/AchievementSystem.js"],"sourcesContent":["export const ACHIEVEMENTS = {\n  BEGINNER: {\n    id: 'beginner_complete',\n    title: 'AWS Rookie',\n    description: 'Complete 5 beginner architectures',\n    threshold: 5,\n    icon: '🌟'\n  },\n  PERFECT_STREAK: {\n    id: 'perfect_streak',\n    title: 'Perfect Architect',\n    description: 'Get 10 correct answers in a row',\n    threshold: 10,\n    icon: '🏆'\n  }\n  // Add more achievements...\n};\n\nclass AchievementSystem {\n  constructor() {\n    this.achievements = new Set();\n    this.listeners = new Set();\n  }\n\n  checkAchievement(type, value) {\n    const achievement = ACHIEVEMENTS[type];\n    if (achievement && value >= achievement.threshold && !this.achievements.has(achievement.id)) {\n      this.unlockAchievement(achievement);\n    }\n  }\n\n  unlockAchievement(achievement) {\n    this.achievements.add(achievement.id);\n    this.notifyListeners(achievement);\n    soundManager.play('achievement');\n  }\n\n  addListener(listener) {\n    this.listeners.add(listener);\n  }\n\n  removeListener(listener) {\n    this.listeners.delete(listener);\n  }\n\n  notifyListeners(achievement) {\n    this.listeners.forEach(listener => listener(achievement));\n  }\n}\n\nexport const achievementSystem = new AchievementSystem(); "],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG;EAC1BC,QAAQ,EAAE;IACRC,EAAE,EAAE,mBAAmB;IACvBC,KAAK,EAAE,YAAY;IACnBC,WAAW,EAAE,mCAAmC;IAChDC,SAAS,EAAE,CAAC;IACZC,IAAI,EAAE;EACR,CAAC;EACDC,cAAc,EAAE;IACdL,EAAE,EAAE,gBAAgB;IACpBC,KAAK,EAAE,mBAAmB;IAC1BC,WAAW,EAAE,iCAAiC;IAC9CC,SAAS,EAAE,EAAE;IACbC,IAAI,EAAE;EACR;EACA;AACF,CAAC;AAED,MAAME,iBAAiB,CAAC;EACtBC,WAAWA,CAAA,EAAG;IACZ,IAAI,CAACC,YAAY,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC7B,IAAI,CAACC,SAAS,GAAG,IAAID,GAAG,CAAC,CAAC;EAC5B;EAEAE,gBAAgBA,CAACC,IAAI,EAAEC,KAAK,EAAE;IAC5B,MAAMC,WAAW,GAAGhB,YAAY,CAACc,IAAI,CAAC;IACtC,IAAIE,WAAW,IAAID,KAAK,IAAIC,WAAW,CAACX,SAAS,IAAI,CAAC,IAAI,CAACK,YAAY,CAACO,GAAG,CAACD,WAAW,CAACd,EAAE,CAAC,EAAE;MAC3F,IAAI,CAACgB,iBAAiB,CAACF,WAAW,CAAC;IACrC;EACF;EAEAE,iBAAiBA,CAACF,WAAW,EAAE;IAC7B,IAAI,CAACN,YAAY,CAACS,GAAG,CAACH,WAAW,CAACd,EAAE,CAAC;IACrC,IAAI,CAACkB,eAAe,CAACJ,WAAW,CAAC;IACjCK,YAAY,CAACC,IAAI,CAAC,aAAa,CAAC;EAClC;EAEAC,WAAWA,CAACC,QAAQ,EAAE;IACpB,IAAI,CAACZ,SAAS,CAACO,GAAG,CAACK,QAAQ,CAAC;EAC9B;EAEAC,cAAcA,CAACD,QAAQ,EAAE;IACvB,IAAI,CAACZ,SAAS,CAACc,MAAM,CAACF,QAAQ,CAAC;EACjC;EAEAJ,eAAeA,CAACJ,WAAW,EAAE;IAC3B,IAAI,CAACJ,SAAS,CAACe,OAAO,CAACH,QAAQ,IAAIA,QAAQ,CAACR,WAAW,CAAC,CAAC;EAC3D;AACF;AAEA,OAAO,MAAMY,iBAAiB,GAAG,IAAIpB,iBAAiB,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}