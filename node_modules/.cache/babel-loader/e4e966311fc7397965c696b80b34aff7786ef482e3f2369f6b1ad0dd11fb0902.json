{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst AWSArchitectureGame = () => {\n  _s();\n  var _architectureInfo$mis, _currentQuestion$opti;\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [architecture, setArchitecture] = useState(null);\n  const [architectureInfo, setArchitectureInfo] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [serviceOptions, setServiceOptions] = useState([]);\n  const [difficulty] = useState('BEGINNER');\n  const [score, setScore] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [feedback, setFeedback] = useState({\n    isCorrect: false,\n    message: '',\n    points: 0\n  });\n  const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n  const API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(TouchSensor));\n  const S3_ICONS_PATH = `${S3_BUCKET_URL}${ICONS_BASE_PATH}`;\n  const getServiceIcon = serviceName => {\n    const iconPath = `${S3_ICONS_PATH}/${serviceName.toLowerCase().replace(/\\s+/g, '-')}.svg`;\n    return iconPath;\n  };\n  const loadNextArchitecture = useCallback(async () => {\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    console.log('S3 Bucket URL:', S3_BUCKET_URL);\n    console.log('Icons Base Path:', ICONS_BASE_PATH);\n    console.log('Full Icons Path:', S3_ICONS_PATH);\n    try {\n      var _data$missingServices, _data$missingServices2;\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          difficulty\n        })\n      });\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      console.log('Raw AI Response:', JSON.stringify(data, null, 2));\n      setArchitectureInfo({\n        name: data.architecture.name,\n        description: data.architecture.description,\n        missingServices: data.missingServices\n      });\n\n      // Log missing services count\n      console.log('Total Missing Services:', (_data$missingServices = data.missingServices) === null || _data$missingServices === void 0 ? void 0 : _data$missingServices.length);\n      console.log('Current Missing Service Index:', currentMissingServiceIndex);\n\n      // Transform services with S3 icons\n      const transformedServices = data.services.map(serviceName => {\n        const iconUrl = serviceName.toLowerCase().includes('missing') ? `${S3_BUCKET_URL}/aws-icons/missing.svg` : getServiceIcon(serviceName);\n        console.log(`Service: ${serviceName}, Icon URL:`, iconUrl);\n        return {\n          id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n          name: serviceName,\n          icon: iconUrl\n        };\n      });\n\n      // Set initial question\n      if (((_data$missingServices2 = data.missingServices) === null || _data$missingServices2 === void 0 ? void 0 : _data$missingServices2.length) > 0) {\n        setCurrentQuestion({\n          text: data.missingServices[0].question,\n          optimizationFocus: data.missingServices[0].optimizationFocus,\n          options: data.missingServices[0].options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getServiceIcon(opt.service)\n          }))\n        });\n      }\n      setArchitecture({\n        services: transformedServices,\n        connections: data.connections\n      });\n    } catch (error) {\n      console.error('Failed to load architecture:', error);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_URL, difficulty, isLoading, currentMissingServiceIndex]);\n  const handleServiceSelection = selectedService => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n    const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n    if (selectedOption) {\n      setShowFeedback(true);\n      if (selectedOption.isCorrect) {\n        const points = selectedOption.rating;\n        setScore(prevScore => prevScore + points);\n        setFeedback({\n          isCorrect: true,\n          message: selectedOption.explanation,\n          points: points,\n          isOptimal: selectedOption.isOptimal\n        });\n      } else {\n        setFeedback({\n          isCorrect: false,\n          message: selectedOption.explanation,\n          points: 0\n        });\n      }\n    }\n  };\n  const handleNext = () => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    setShowFeedback(false);\n    if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n      const nextIndex = currentMissingServiceIndex + 1;\n      setCurrentMissingServiceIndex(nextIndex);\n      const nextMissingService = architectureInfo.missingServices[nextIndex];\n      setCurrentQuestion({\n        text: nextMissingService.question,\n        optimizationFocus: nextMissingService.optimizationFocus,\n        options: nextMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getCachedServiceIcon(opt.service)\n        }))\n      });\n    }\n  };\n\n  // Update service options with proper icon resolution\n  useEffect(() => {\n    if (currentQuestion !== null && currentQuestion !== void 0 && currentQuestion.options) {\n      const updatedOptions = currentQuestion.options.map(option => ({\n        ...option,\n        icon: getCachedServiceIcon(option.service)\n      }));\n      setServiceOptions(updatedOptions);\n    }\n  }, [currentQuestion]);\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: (architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.name) || 'AWS Architecture Challenge'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-architecture-button\",\n          onClick: loadNextArchitecture,\n          disabled: isLoading,\n          children: isLoading ? 'Loading...' : 'New Architecture'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), architectureInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"architecture-description\",\n        children: architectureInfo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 32\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AWSArchitectureDisplay, {\n          architecture: architecture,\n          currentQuestion: currentQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question: \", currentQuestion.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Optimization Focus: \", currentQuestion.optimizationFocus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 19\n          }, this), showFeedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedback-content\",\n              children: [feedback.isCorrect ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"\\uD83C\\uDF89 Correct! +\", feedback.points, \" points\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 29\n                }, this), feedback.isOptimal && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\uD83C\\uDF1F Perfect choice! This is the optimal solution.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"\\u274C Not quite right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: feedback.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 25\n              }, this), currentMissingServiceIndex < (architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis = architectureInfo.missingServices) === null || _architectureInfo$mis === void 0 ? void 0 : _architectureInfo$mis.length) - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"next-button\",\n                onClick: handleNext,\n                children: \"Next Service\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"service-options\",\n            children: (_currentQuestion$opti = currentQuestion.options) === null || _currentQuestion$opti === void 0 ? void 0 : _currentQuestion$opti.map((option, index) => /*#__PURE__*/_jsxDEV(DraggableService, {\n              service: option,\n              onClick: () => handleServiceSelection(option.name)\n            }, `${option.id}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-status\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices ? `Service ${currentMissingServiceIndex + 1} of ${architectureInfo.missingServices.length}` : 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 185,\n    columnNumber: 7\n  }, this);\n};\n_s(AWSArchitectureGame, \"wblwfB0dGRuKnWBN3ApBATOXnSE=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c = AWSArchitectureGame;\nexport default AWSArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureGame\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","DndContext","useSensor","useSensors","PointerSensor","TouchSensor","AWSArchitectureDisplay","DraggableService","DndProvider","HTML5Backend","getCachedServiceIcon","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","Fragment","_Fragment","S3_BUCKET_URL","ICONS_BASE_PATH","AWSArchitectureGame","_s","_architectureInfo$mis","_currentQuestion$opti","isLoading","setIsLoading","error","setError","architecture","setArchitecture","architectureInfo","setArchitectureInfo","currentQuestion","setCurrentQuestion","serviceOptions","setServiceOptions","difficulty","score","setScore","showFeedback","setShowFeedback","feedback","setFeedback","isCorrect","message","points","currentMissingServiceIndex","setCurrentMissingServiceIndex","API_URL","sensors","activationConstraint","distance","S3_ICONS_PATH","getServiceIcon","serviceName","iconPath","toLowerCase","replace","loadNextArchitecture","console","log","_data$missingServices","_data$missingServices2","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","name","description","missingServices","length","transformedServices","services","map","iconUrl","includes","id","icon","text","question","optimizationFocus","options","opt","service","isOptimal","explanation","rating","connections","handleServiceSelection","selectedService","currentMissingService","selectedOption","find","prevScore","handleNext","nextIndex","nextMissingService","updatedOptions","option","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","index","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\n\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\n\nconst AWSArchitectureGame = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [architecture, setArchitecture] = useState(null);\n    const [architectureInfo, setArchitectureInfo] = useState(null);\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [serviceOptions, setServiceOptions] = useState([]);\n    const [difficulty] = useState('BEGINNER');\n    const [score, setScore] = useState(0); \n    const [showFeedback, setShowFeedback] = useState(false);\n    const [feedback, setFeedback] = useState({ isCorrect: false, message: '', points: 0 });\n    const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n  \n    const API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n\n    const sensors = useSensors(\n      useSensor(PointerSensor, {\n        activationConstraint: {\n          distance: 8,\n        },\n      }),\n      useSensor(TouchSensor)\n    );\n\n    const S3_ICONS_PATH = `${S3_BUCKET_URL}${ICONS_BASE_PATH}`;\n\n    const getServiceIcon = (serviceName) => {\n      const iconPath = `${S3_ICONS_PATH}/${serviceName.toLowerCase().replace(/\\s+/g, '-')}.svg`;\n      return iconPath;\n    };\n\n    const loadNextArchitecture = useCallback(async () => {\n      if (isLoading) return;\n      setIsLoading(true);\n      setError(null);\n      \n      console.log('S3 Bucket URL:', S3_BUCKET_URL);\n      console.log('Icons Base Path:', ICONS_BASE_PATH);\n      console.log('Full Icons Path:', S3_ICONS_PATH);\n      \n      try {\n        const response = await fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({ difficulty })\n        });\n\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        \n        const data = await response.json();\n        console.log('Raw AI Response:', JSON.stringify(data, null, 2));\n        \n        setArchitectureInfo({\n          name: data.architecture.name,\n          description: data.architecture.description,\n          missingServices: data.missingServices\n        });\n\n        // Log missing services count\n        console.log('Total Missing Services:', data.missingServices?.length);\n        console.log('Current Missing Service Index:', currentMissingServiceIndex);\n\n        // Transform services with S3 icons\n        const transformedServices = data.services.map(serviceName => {\n          const iconUrl = serviceName.toLowerCase().includes('missing') ? \n            `${S3_BUCKET_URL}/aws-icons/missing.svg` : \n            getServiceIcon(serviceName);\n          \n          console.log(`Service: ${serviceName}, Icon URL:`, iconUrl);\n          \n          return {\n            id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n            name: serviceName,\n            icon: iconUrl\n          };\n        });\n\n        // Set initial question\n        if (data.missingServices?.length > 0) {\n          setCurrentQuestion({\n            text: data.missingServices[0].question,\n            optimizationFocus: data.missingServices[0].optimizationFocus,\n            options: data.missingServices[0].options.map(opt => ({\n              id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n              name: opt.service,\n              isCorrect: opt.isCorrect,\n              isOptimal: opt.isOptimal,\n              explanation: opt.explanation,\n              rating: opt.rating,\n              icon: getServiceIcon(opt.service)\n            }))\n          });\n        }\n\n        setArchitecture({\n          services: transformedServices,\n          connections: data.connections\n        });\n\n      } catch (error) {\n        console.error('Failed to load architecture:', error);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }, [API_URL, difficulty, isLoading, currentMissingServiceIndex]);\n\n    const handleServiceSelection = (selectedService) => {\n      if (!architectureInfo?.missingServices) return;\n      \n      const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n      const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n\n      if (selectedOption) {\n        setShowFeedback(true);\n        if (selectedOption.isCorrect) {\n          const points = selectedOption.rating;\n          setScore(prevScore => prevScore + points);\n          setFeedback({\n            isCorrect: true,\n            message: selectedOption.explanation,\n            points: points,\n            isOptimal: selectedOption.isOptimal\n          });\n        } else {\n          setFeedback({\n            isCorrect: false,\n            message: selectedOption.explanation,\n            points: 0\n          });\n        }\n      }\n    };\n\n    const handleNext = () => {\n      if (!architectureInfo?.missingServices) return;\n      \n      setShowFeedback(false);\n      if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n        const nextIndex = currentMissingServiceIndex + 1;\n        setCurrentMissingServiceIndex(nextIndex);\n        \n        const nextMissingService = architectureInfo.missingServices[nextIndex];\n        setCurrentQuestion({\n          text: nextMissingService.question,\n          optimizationFocus: nextMissingService.optimizationFocus,\n          options: nextMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getCachedServiceIcon(opt.service)\n          }))\n        });\n      }\n    };\n\n    // Update service options with proper icon resolution\n    useEffect(() => {\n      if (currentQuestion?.options) {\n        const updatedOptions = currentQuestion.options.map(option => ({\n          ...option,\n          icon: getCachedServiceIcon(option.service)\n        }));\n        setServiceOptions(updatedOptions);\n      }\n    }, [currentQuestion]);\n\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <div className=\"game-container\">\n          <div className=\"game-header\">\n            <h2>{architectureInfo?.name || 'AWS Architecture Challenge'}</h2>\n            <div className=\"score\">Score: {score}</div>\n            <button \n              className=\"new-architecture-button\"\n              onClick={loadNextArchitecture}\n              disabled={isLoading}\n            >\n              {isLoading ? 'Loading...' : 'New Architecture'}\n            </button>\n          </div>\n          \n          {architectureInfo && <p className=\"architecture-description\">{architectureInfo.description}</p>}\n          \n          {error ? (\n            <div className=\"error-message\">{error}</div>\n          ) : (\n            <>\n              <AWSArchitectureDisplay \n                architecture={architecture}\n                currentQuestion={currentQuestion}\n              />\n              \n              {currentQuestion && (\n                <div className=\"question-container\">\n                  <h3>Question: {currentQuestion.text}</h3>\n                  <p>Optimization Focus: {currentQuestion.optimizationFocus}</p>\n                  \n                  {showFeedback ? (\n                    <div className={`feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'}`}>\n                      <div className=\"feedback-content\">\n                        {feedback.isCorrect ? (\n                          <>\n                            <h3>🎉 Correct! +{feedback.points} points</h3>\n                            {feedback.isOptimal && <p>🌟 Perfect choice! This is the optimal solution.</p>}\n                          </>\n                        ) : (\n                          <h3>❌ Not quite right</h3>\n                        )}\n                        <p>{feedback.message}</p>\n                        \n                        {currentMissingServiceIndex < (architectureInfo?.missingServices?.length - 1) && (\n                          <button \n                            className=\"next-button\"\n                            onClick={handleNext}\n                          >\n                            Next Service\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"service-options\">\n                      {currentQuestion.options?.map((option, index) => (\n                        <DraggableService\n                          key={`${option.id}-${index}`}\n                          service={option}\n                          onClick={() => handleServiceSelection(option.name)}\n                        />\n                      ))}\n                    </div>\n                  )}\n                </div>\n              )}\n            </>\n          )}\n          \n          <div className=\"game-status\">\n            <div className=\"progress\">\n              {architectureInfo?.missingServices ? \n                `Service ${currentMissingServiceIndex + 1} of ${architectureInfo.missingServices.length}` :\n                'Loading...'\n              }\n            </div>\n          </div>\n        </div>\n      </DndProvider>\n    );\n};\n\nexport default AWSArchitectureGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}