{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/AzureArchitectureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport DraggableService from './DraggableService';\nimport { getServiceIcon } from '../services/IconResolver';\nimport '../styles/DifficultyButtons.css';\nimport '../styles/AzureArchitectureGame.css';\nimport ReactConfetti from 'react-confetti';\nimport { useWindowSize } from 'react-use';\nimport AzureArchitectureDisplay from './AzureArchitectureDisplay';\nimport { translateText } from '../services/TranslationService';\nimport LanguageSelector from './LanguageSelector';\n\n// Default translations\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultTranslations = {\n  gameTitle: 'Azure Architecture Challenge',\n  score: 'Score',\n  loading: 'Loading...',\n  newArchitecture: 'New Architecture',\n  question: 'Question',\n  optimizationFocus: 'Optimization Focus',\n  correctPoints: 'Correct! +{points} points',\n  perfectChoice: 'Perfect choice! This is the optimal solution.',\n  notOptimal: 'This answer is correct but not the best option according to the Optimization Focus.',\n  optimalAnswer: 'The optimal answer is:',\n  notCorrect: 'Not quite right',\n  nextService: 'Next Service ({current} of {total})',\n  learnAndHaveFun: 'Learn and have fun!',\n  service: 'Service {current} of {total}',\n  beginner: 'Beginner',\n  intermediate: 'Intermediate',\n  advanced: 'Advanced'\n};\nconst API_URL = process.env.REACT_APP_FUNCTION_URL;\nconst FUNCTION_KEY = process.env.REACT_APP_AZURE_FUNCTION_KEY;\nconst isValidArchitecture = data => {\n  if (!data || !Array.isArray(data.services) || !Array.isArray(data.connections)) {\n    console.warn(\"‚ö†Ô∏è Invalid JSON structure: Missing 'services' or 'connections'. Retrying...\");\n    return false;\n  }\n  const requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n  const serviceNames = data.services.map(service => typeof service === 'string' ? service : service === null || service === void 0 ? void 0 : service.name);\n  if (!requiredMissingServices.every(ms => serviceNames.includes(ms))) {\n    console.warn(`‚ö†Ô∏è JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing.`);\n    return false;\n  }\n  const connectionNodes = new Set();\n  data.connections.forEach(conn => {\n    connectionNodes.add(conn.from);\n    connectionNodes.add(conn.to);\n  });\n  if (!requiredMissingServices.every(ms => connectionNodes.has(ms))) {\n    console.warn(`‚ö†Ô∏è JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing from the connections.`);\n    return false;\n  }\n  return true;\n};\nconst validateJSONStructure = (json, difficulty) => {\n  let requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n  if (difficulty === 'INTERMEDIATE') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5'];\n  } else if (difficulty === 'ADVANCED') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5', 'missing_6', 'missing_7'];\n  }\n  return requiredMissingServices.every(service => json.missingServices.includes(service));\n};\nconst getMaxPossibleScore = difficulty => {\n  switch (difficulty) {\n    case 'INTERMEDIATE':\n      return 25;\n    // 5 questions * 5 points\n    case 'ADVANCED':\n      return 35;\n    // 7 questions * 5 points\n    default:\n      // BEGINNER\n      return 15;\n    // 3 questions * 5 points\n  }\n};\nconst AzureArchitectureGame = () => {\n  _s();\n  var _architectureInfo$mis, _architectureInfo$mis2, _architectureInfo$mis3;\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [architecture, setArchitecture] = useState(null);\n  const [architectureInfo, setArchitectureInfo] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [difficulty, setDifficulty] = useState('BEGINNER');\n  const [score, setScore] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [feedback, setFeedback] = useState({\n    isCorrect: false,\n    message: '',\n    points: 0\n  });\n  const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n  const [questionStartTime, setQuestionStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const {\n    width,\n    height\n  } = useWindowSize();\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showFireworks, setShowFireworks] = useState(false);\n  const [showSadFace, setShowSadFace] = useState(false);\n  const [allQuestionsAnswered, setAllQuestionsAnswered] = useState(false);\n\n  // Add translation state\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n  const [translations, setTranslations] = useState(defaultTranslations);\n\n  // Add state for translated dynamic content\n  const [translatedQuestion, setTranslatedQuestion] = useState('');\n  const [translatedOptimizationFocus, setTranslatedOptimizationFocus] = useState('');\n  const [translatedDescription, setTranslatedDescription] = useState('');\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(TouchSensor));\n\n  // Handle language change\n  const handleLanguageChange = async newLanguage => {\n    setCurrentLanguage(newLanguage);\n    if (newLanguage === 'en') {\n      setTranslations(defaultTranslations);\n      // Reset to original content for English\n      setTranslatedQuestion((currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.text) || '');\n      setTranslatedOptimizationFocus((currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.optimizationFocus) || '');\n      setTranslatedDescription((architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.description) || '');\n      return;\n    }\n    try {\n      // Translate all UI text\n      const translationPromises = Object.entries(defaultTranslations).map(async ([key, value]) => {\n        const translatedValue = await translateText(value, newLanguage);\n        return [key, translatedValue];\n      });\n      const translatedEntries = await Promise.all(translationPromises);\n      const newTranslations = Object.fromEntries(translatedEntries);\n      setTranslations(newTranslations);\n\n      // Also translate dynamic content\n      if (currentQuestion !== null && currentQuestion !== void 0 && currentQuestion.text) {\n        const translatedText = await translateText(currentQuestion.text, newLanguage);\n        setTranslatedQuestion(translatedText);\n      }\n      if (currentQuestion !== null && currentQuestion !== void 0 && currentQuestion.optimizationFocus) {\n        const translatedFocus = await translateText(currentQuestion.optimizationFocus, newLanguage);\n        setTranslatedOptimizationFocus(translatedFocus);\n      }\n      if (architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.description) {\n        const translatedDesc = await translateText(architectureInfo.description, newLanguage);\n        setTranslatedDescription(translatedDesc);\n      }\n    } catch (error) {\n      console.error('Translation error:', error);\n    }\n  };\n  const loadNextArchitecture = useCallback(async () => {\n    var _data$missingServices;\n    if (!FUNCTION_KEY) {\n      setError(\"Azure Function key is not configured\");\n      setIsLoading(false);\n      return;\n    }\n    setScore(0); // Reset score when loading new architecture\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    let attempt = 0;\n    let isValid = false;\n    let data = null;\n    let maxAttempts = 7;\n    while (!isValid && attempt < maxAttempts) {\n      try {\n        console.log(`üîÑ Attempt ${attempt + 1}: Fetching architecture data...`);\n        const response = await fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-functions-key': FUNCTION_KEY\n          },\n          body: JSON.stringify({\n            difficulty\n          })\n        });\n        if (response.status === 503) {\n          console.warn(\"‚ö†Ô∏è Received 503 error. Retrying in 3 seconds...\");\n          attempt++;\n          await new Promise(resolve => setTimeout(resolve, 3000));\n          continue;\n        }\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        data = await response.json();\n        console.log('Raw AI Response:', JSON.stringify(data, null, 2));\n        console.log(\"üì• Received AI Response:\", JSON.stringify(data, null, 2));\n        isValid = isValidArchitecture(data);\n        if (!isValid) {\n          console.warn(`‚õî Invalid JSON structure. Retrying in 3 seconds...`);\n          await new Promise(resolve => setTimeout(resolve, 3000));\n        } else {\n          console.log(\"‚úÖ Valid architecture received, updating state...\");\n          break;\n        }\n      } catch (error) {\n        console.error(\"‚ùå Failed to load architecture:\", error);\n        if (attempt >= maxAttempts - 1) {\n          setError(error.message);\n          setIsLoading(false);\n          return;\n        }\n        await new Promise(resolve => setTimeout(resolve, 3000)); // Wait 3 seconds before retrying\n      }\n      attempt++;\n    }\n    if (!isValid) {\n      console.error(\"‚ùå Maximum retries reached. Unable to get valid JSON.\");\n      setError(\"Failed to fetch a valid architecture after multiple attempts.\");\n      setIsLoading(false);\n      return;\n    }\n    const transformedServices = data.services.map(serviceName => ({\n      id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n      name: serviceName,\n      icon: getServiceIcon(serviceName)\n    }));\n    setArchitecture({\n      services: transformedServices,\n      connections: data.connections\n    });\n    if (((_data$missingServices = data.missingServices) === null || _data$missingServices === void 0 ? void 0 : _data$missingServices.length) > 0) {\n      const currentMissingService = data.missingServices[0];\n      setCurrentQuestion({\n        text: currentMissingService.question,\n        optimizationFocus: currentMissingService.optimizationFocus,\n        options: currentMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getServiceIcon(opt.service)\n        }))\n      });\n    }\n    setArchitectureInfo({\n      name: data.architecture.name,\n      description: data.architecture.description,\n      missingServices: data.missingServices\n    });\n    setCurrentMissingServiceIndex(0);\n    setShowFeedback(false);\n    setQuestionStartTime(Date.now());\n    setElapsedTime(0);\n    setIsLoading(false);\n  }, [difficulty]);\n  const handleServiceSelection = selectedService => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n    const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n    const correctOption = currentMissingService.options.find(opt => opt.isCorrect);\n    const optimalOption = currentMissingService.options.find(opt => opt.isOptimal);\n    if (selectedOption) {\n      setShowFeedback(true);\n      if (selectedOption.isCorrect) {\n        // Calculate points based on whether it's optimal or just correct\n        const points = selectedOption.isOptimal ? 5 : 2;\n        setScore(prevScore => {\n          const newScore = prevScore + points;\n          // Check if we've reached the maximum possible score for current difficulty\n          if (newScore === getMaxPossibleScore(difficulty)) {\n            setShowFireworks(true);\n            setTimeout(() => setShowFireworks(false), 5000);\n          }\n          return newScore;\n        });\n        if (selectedOption.isOptimal) {\n          setShowConfetti(true);\n          setTimeout(() => setShowConfetti(false), 2000);\n        }\n        setFeedback({\n          isCorrect: true,\n          message: selectedOption.explanation,\n          points: points,\n          isOptimal: selectedOption.isOptimal,\n          optimalSolution: !selectedOption.isOptimal ? optimalOption.service : null,\n          optimalExplanation: !selectedOption.isOptimal ? optimalOption.explanation : null\n        });\n      } else {\n        setShowSadFace(true);\n        setTimeout(() => setShowSadFace(false), 4000);\n        setFeedback({\n          isCorrect: false,\n          message: `<div class=\"feedback-explanation\">\n              <p>${selectedOption.explanation}</p>\n              <div class=\"correct-answer-wrapper\">\n                <p class=\"correct-answer-section\">\n                  <span style=\"color: lime; font-weight: bold;\">The correct answer was: </span>\n                  <strong>${correctOption.service}</strong>. ${correctOption.explanation}\n                </p>\n              </div>\n            </div>`,\n          points: 0,\n          correctAnswer: correctOption.service\n        });\n      }\n    }\n  };\n  const handleNext = () => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    setShowFeedback(false);\n    if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n      const nextIndex = currentMissingServiceIndex + 1;\n      setCurrentMissingServiceIndex(nextIndex);\n      const nextMissingService = architectureInfo.missingServices[nextIndex];\n      setCurrentQuestion({\n        text: nextMissingService.question,\n        optimizationFocus: nextMissingService.optimizationFocus,\n        options: nextMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getServiceIcon(opt.service)\n        }))\n      });\n      setQuestionStartTime(Date.now());\n      setElapsedTime(0);\n    }\n  };\n  const handleDifficultyChange = level => {\n    setDifficulty(level);\n  };\n  useEffect(() => {\n    if (currentQuestion && !questionStartTime) {\n      setQuestionStartTime(Date.now());\n    }\n    const timer = setInterval(() => {\n      if (questionStartTime && !showFeedback) {\n        const elapsed = Math.floor((Date.now() - questionStartTime) / 1000);\n        setElapsedTime(elapsed);\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [currentQuestion, questionStartTime, showFeedback]);\n\n  // Add useEffect to translate dynamic content when it changes\n  useEffect(() => {\n    if (currentLanguage !== 'en') {\n      // Translate question when it changes\n      if (currentQuestion !== null && currentQuestion !== void 0 && currentQuestion.text) {\n        translateText(currentQuestion.text, currentLanguage).then(translated => setTranslatedQuestion(translated)).catch(error => console.error('Translation error:', error));\n      }\n\n      // Translate optimization focus when it changes\n      if (currentQuestion !== null && currentQuestion !== void 0 && currentQuestion.optimizationFocus) {\n        translateText(currentQuestion.optimizationFocus, currentLanguage).then(translated => setTranslatedOptimizationFocus(translated)).catch(error => console.error('Translation error:', error));\n      }\n\n      // Translate architecture description when it changes\n      if (architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.description) {\n        translateText(architectureInfo.description, currentLanguage).then(translated => setTranslatedDescription(translated)).catch(error => console.error('Translation error:', error));\n      }\n    } else {\n      // For English, use original text\n      setTranslatedQuestion((currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.text) || '');\n      setTranslatedOptimizationFocus((currentQuestion === null || currentQuestion === void 0 ? void 0 : currentQuestion.optimizationFocus) || '');\n      setTranslatedDescription((architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.description) || '');\n    }\n  }, [currentQuestion, architectureInfo, currentLanguage]);\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"game-title\",\n            children: translations.gameTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 428,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score\",\n              children: [translations.score, \": \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 430,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"complexity\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"complexity-icon\",\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 19\n              }, this), translations[difficulty.toLowerCase()]]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 17\n            }, this), currentQuestion && !showFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `timer ${elapsedTime > 60 ? 'danger' : elapsedTime > 30 ? 'warning' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timer-icon\",\n                children: \"\\u23F1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 440,\n                columnNumber: 21\n              }, this), Math.floor(elapsedTime / 60), \":\", (elapsedTime % 60).toString().padStart(2, '0')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 429,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"architecture-controls\",\n            style: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              marginBottom: '15px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: loadNextArchitecture,\n              className: \"new-architecture-button\",\n              disabled: isLoading,\n              style: {\n                backgroundColor: 'rgba(0, 255, 255, 0.1)',\n                border: '2px solid #00ffff',\n                borderRadius: '5px',\n                color: '#00ffff',\n                padding: '10px 20px',\n                cursor: isLoading ? 'not-allowed' : 'pointer',\n                fontFamily: 'Orbitron, sans-serif',\n                transition: 'all 0.3s ease'\n              },\n              children: isLoading ? translations.loading : translations.newArchitecture\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                backgroundColor: 'rgba(0, 255, 255, 0.1)',\n                border: '2px solid #00ffff',\n                borderRadius: '5px',\n                padding: '2px 5px'\n              },\n              children: /*#__PURE__*/_jsxDEV(LanguageSelector, {\n                currentLanguage: currentLanguage,\n                onLanguageChange: handleLanguageChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 445,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 427,\n          columnNumber: 13\n        }, this), architectureInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"architecture-description\",\n          children: currentLanguage === 'en' ? architectureInfo.description : translatedDescription\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 34\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 488,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(AzureArchitectureDisplay, {\n            architecture: architecture,\n            currentQuestion: currentQuestion,\n            currentLanguage: currentLanguage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 491,\n            columnNumber: 17\n          }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"question-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"highlight\",\n                children: [translations.question, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 23\n              }, this), ' ', currentLanguage === 'en' ? currentQuestion.text : translatedQuestion]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"optimization-focus-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"highlight\",\n                children: [translations.optimizationFocus, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 23\n              }, this), ' ', currentLanguage === 'en' ? currentQuestion.optimizationFocus : translatedOptimizationFocus]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 503,\n              columnNumber: 21\n            }, this), showFeedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'} ${feedback.isOptimal ? 'optimal' : ''}`,\n              children: [showSadFace && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"sad-face-overlay\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  role: \"img\",\n                  \"aria-label\": \"sad face\",\n                  className: \"sad-face\",\n                  children: \"\\uD83D\\uDE22\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-content\",\n                children: [feedback.isCorrect ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [\"\\uD83C\\uDF89 \", translations.correctPoints.replace('{points}', feedback.points)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 518,\n                    columnNumber: 31\n                  }, this), feedback.isOptimal ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: [\"\\uD83C\\uDF1F \", translations.perfectChoice]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 33\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"\\u26A0\\uFE0F \", translations.notOptimal]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 523,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: 'green'\n                        },\n                        children: translations.optimalAnswer\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 524,\n                        columnNumber: 38\n                      }, this), \" \", feedback.optimalSolution, \".\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 524,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"\\u274C \", translations.notCorrect]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  dangerouslySetInnerHTML: {\n                    __html: feedback.message\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 531,\n                  columnNumber: 27\n                }, this), currentMissingServiceIndex < (architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis = architectureInfo.missingServices) === null || _architectureInfo$mis === void 0 ? void 0 : _architectureInfo$mis.length) - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"next-button\",\n                  onClick: handleNext,\n                  children: translations.nextService.replace('{current}', currentMissingServiceIndex + 2).replace('{total}', architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis2 = architectureInfo.missingServices) === null || _architectureInfo$mis2 === void 0 ? void 0 : _architectureInfo$mis2.length)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 534,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 515,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 509,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"service-options\",\n              children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(DraggableService, {\n                service: option,\n                onClick: () => handleServiceSelection(option.name)\n              }, `${option.id}-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 548,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 546,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 498,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-status\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices ? translations.service.replace('{current}', currentMissingServiceIndex + 1).replace('{total}', architectureInfo.missingServices.length) : translations.learnAndHaveFun\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 562,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 561,\n          columnNumber: 13\n        }, this), (!(architecture !== null && architecture !== void 0 && architecture.services) || currentMissingServiceIndex === (architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis3 = architectureInfo.missingServices) === null || _architectureInfo$mis3 === void 0 ? void 0 : _architectureInfo$mis3.length) - 1 && showFeedback) && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-selection\",\n          children: ['BEGINNER', 'INTERMEDIATE', 'ADVANCED'].map(level => /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `difficulty-button ${difficulty === level ? 'active' : ''}`,\n            onClick: () => handleDifficultyChange(level),\n            children: translations[level.toLowerCase()]\n          }, level, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 587,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"center\", {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"https://hackthon-backend-files-ep-2024.s3.us-east-1.amazonaws.com/amazon-icons-set/Architecture-Service-Icons_06072024/AWSArchitectureApp.webp\",\n          alt: \"Loading...\",\n          style: {\n            width: '1200px',\n            height: '900px',\n            verticalAlign: 'middle',\n            display: 'inline-block',\n            borderRadius: '50px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 588,\n        columnNumber: 11\n      }, this), showConfetti && /*#__PURE__*/_jsxDEV(ReactConfetti, {\n        width: width,\n        height: height,\n        recycle: false,\n        numberOfPieces: 200,\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          pointerEvents: 'none',\n          zIndex: 'var(--z-index-confetti)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 602,\n        columnNumber: 13\n      }, this), showFireworks && /*#__PURE__*/_jsxDEV(ReactConfetti, {\n        width: width,\n        height: height,\n        recycle: true,\n        numberOfPieces: 500,\n        colors: ['#FFD700', '#FF0000', '#00FF00', '#0000FF', '#FF00FF'],\n        style: {\n          position: 'fixed',\n          top: 0,\n          left: 0,\n          pointerEvents: 'none',\n          zIndex: 'var(--z-index-confetti)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 617,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 424,\n    columnNumber: 7\n  }, this);\n};\n_s(AzureArchitectureGame, \"fFp2IGFQtd7TEOtLnUMAPXLGAls=\", false, function () {\n  return [useWindowSize, useSensors, useSensor, useSensor];\n});\n_c = AzureArchitectureGame;\nexport default AzureArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AzureArchitectureGame\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","DndContext","useSensor","useSensors","PointerSensor","TouchSensor","DndProvider","HTML5Backend","DraggableService","getServiceIcon","ReactConfetti","useWindowSize","AzureArchitectureDisplay","translateText","LanguageSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultTranslations","gameTitle","score","loading","newArchitecture","question","optimizationFocus","correctPoints","perfectChoice","notOptimal","optimalAnswer","notCorrect","nextService","learnAndHaveFun","service","beginner","intermediate","advanced","API_URL","process","env","REACT_APP_FUNCTION_URL","FUNCTION_KEY","REACT_APP_AZURE_FUNCTION_KEY","isValidArchitecture","data","Array","isArray","services","connections","console","warn","requiredMissingServices","serviceNames","map","name","every","ms","includes","join","connectionNodes","Set","forEach","conn","add","from","to","has","validateJSONStructure","json","difficulty","missingServices","getMaxPossibleScore","AzureArchitectureGame","_s","_architectureInfo$mis","_architectureInfo$mis2","_architectureInfo$mis3","isLoading","setIsLoading","error","setError","architecture","setArchitecture","architectureInfo","setArchitectureInfo","currentQuestion","setCurrentQuestion","setDifficulty","setScore","showFeedback","setShowFeedback","feedback","setFeedback","isCorrect","message","points","currentMissingServiceIndex","setCurrentMissingServiceIndex","questionStartTime","setQuestionStartTime","elapsedTime","setElapsedTime","width","height","showConfetti","setShowConfetti","showFireworks","setShowFireworks","showSadFace","setShowSadFace","allQuestionsAnswered","setAllQuestionsAnswered","currentLanguage","setCurrentLanguage","translations","setTranslations","translatedQuestion","setTranslatedQuestion","translatedOptimizationFocus","setTranslatedOptimizationFocus","translatedDescription","setTranslatedDescription","sensors","activationConstraint","distance","handleLanguageChange","newLanguage","text","description","translationPromises","Object","entries","key","value","translatedValue","translatedEntries","Promise","all","newTranslations","fromEntries","translatedText","translatedFocus","translatedDesc","loadNextArchitecture","_data$missingServices","attempt","isValid","maxAttempts","log","response","fetch","method","headers","body","JSON","stringify","status","resolve","setTimeout","ok","Error","transformedServices","serviceName","id","toLowerCase","replace","icon","length","currentMissingService","options","opt","isOptimal","explanation","rating","Date","now","handleServiceSelection","selectedService","selectedOption","find","correctOption","optimalOption","prevScore","newScore","optimalSolution","optimalExplanation","correctAnswer","handleNext","nextIndex","nextMissingService","handleDifficultyChange","level","timer","setInterval","elapsed","Math","floor","clearInterval","then","translated","catch","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","toString","padStart","style","display","justifyContent","alignItems","marginBottom","onClick","disabled","backgroundColor","border","borderRadius","color","padding","cursor","fontFamily","transition","onLanguageChange","role","dangerouslySetInnerHTML","__html","option","index","src","alt","verticalAlign","recycle","numberOfPieces","position","top","left","pointerEvents","zIndex","colors","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/AzureArchitectureGame.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport DraggableService from './DraggableService';\nimport { getServiceIcon } from '../services/IconResolver';\nimport '../styles/DifficultyButtons.css';\nimport '../styles/AzureArchitectureGame.css';\nimport ReactConfetti from 'react-confetti';\nimport { useWindowSize } from 'react-use';\nimport AzureArchitectureDisplay from './AzureArchitectureDisplay';\nimport { translateText } from '../services/TranslationService';\nimport LanguageSelector from './LanguageSelector';\n\n// Default translations\nconst defaultTranslations = {\n  gameTitle: 'Azure Architecture Challenge',\n  score: 'Score',\n  loading: 'Loading...',\n  newArchitecture: 'New Architecture',\n  question: 'Question',\n  optimizationFocus: 'Optimization Focus',\n  correctPoints: 'Correct! +{points} points',\n  perfectChoice: 'Perfect choice! This is the optimal solution.',\n  notOptimal: 'This answer is correct but not the best option according to the Optimization Focus.',\n  optimalAnswer: 'The optimal answer is:',\n  notCorrect: 'Not quite right',\n  nextService: 'Next Service ({current} of {total})',\n  learnAndHaveFun: 'Learn and have fun!',\n  service: 'Service {current} of {total}',\n  beginner: 'Beginner',\n  intermediate: 'Intermediate',\n  advanced: 'Advanced'\n};\n\nconst API_URL = process.env.REACT_APP_FUNCTION_URL;\nconst FUNCTION_KEY = process.env.REACT_APP_AZURE_FUNCTION_KEY;\n\nconst isValidArchitecture = (data) => {\n  if (!data || !Array.isArray(data.services) || !Array.isArray(data.connections)) {\n    console.warn(\"‚ö†Ô∏è Invalid JSON structure: Missing 'services' or 'connections'. Retrying...\");\n    return false;\n  }\n\n  const requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n\n  const serviceNames = data.services.map(service => \n    typeof service === 'string' ? service : service?.name\n  );\n\n  if (!requiredMissingServices.every(ms => serviceNames.includes(ms))) {\n    console.warn(`‚ö†Ô∏è JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing.`);\n    return false;\n  }\n\n  const connectionNodes = new Set();\n  data.connections.forEach(conn => {\n    connectionNodes.add(conn.from);\n    connectionNodes.add(conn.to);\n  });\n\n  if (!requiredMissingServices.every(ms => connectionNodes.has(ms))) {\n    console.warn(`‚ö†Ô∏è JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing from the connections.`);\n    return false;\n  }\n\n  return true;\n};\n\nconst validateJSONStructure = (json, difficulty) => {\n  let requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n\n  if (difficulty === 'INTERMEDIATE') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5'];\n  } else if (difficulty === 'ADVANCED') {\n    requiredMissingServices = ['missing_1', 'missing_2', 'missing_3', 'missing_4', 'missing_5', 'missing_6', 'missing_7'];\n  }\n\n  return requiredMissingServices.every(service => json.missingServices.includes(service));\n};\n\nconst getMaxPossibleScore = (difficulty) => {\n  switch(difficulty) {\n    case 'INTERMEDIATE':\n      return 25; // 5 questions * 5 points\n    case 'ADVANCED':\n      return 35; // 7 questions * 5 points\n    default: // BEGINNER\n      return 15; // 3 questions * 5 points\n  }\n};\n\nconst AzureArchitectureGame = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [architecture, setArchitecture] = useState(null);\n    const [architectureInfo, setArchitectureInfo] = useState(null);\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [difficulty, setDifficulty] = useState('BEGINNER');\n    const [score, setScore] = useState(0); \n    const [showFeedback, setShowFeedback] = useState(false);\n    const [feedback, setFeedback] = useState({ isCorrect: false, message: '', points: 0 });\n    const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n    const [questionStartTime, setQuestionStartTime] = useState(null);\n    const [elapsedTime, setElapsedTime] = useState(0);\n    const { width, height } = useWindowSize();\n    const [showConfetti, setShowConfetti] = useState(false);\n    const [showFireworks, setShowFireworks] = useState(false);\n    const [showSadFace, setShowSadFace] = useState(false);\n    const [allQuestionsAnswered, setAllQuestionsAnswered] = useState(false);\n    \n    // Add translation state\n    const [currentLanguage, setCurrentLanguage] = useState('en');\n    const [translations, setTranslations] = useState(defaultTranslations);\n\n    // Add state for translated dynamic content\n    const [translatedQuestion, setTranslatedQuestion] = useState('');\n    const [translatedOptimizationFocus, setTranslatedOptimizationFocus] = useState('');\n    const [translatedDescription, setTranslatedDescription] = useState('');\n\n    const sensors = useSensors(\n      useSensor(PointerSensor, {\n        activationConstraint: {\n          distance: 8,\n        },\n      }),\n      useSensor(TouchSensor)\n    );\n    \n    // Handle language change\n    const handleLanguageChange = async (newLanguage) => {\n      setCurrentLanguage(newLanguage);\n      \n      if (newLanguage === 'en') {\n        setTranslations(defaultTranslations);\n        // Reset to original content for English\n        setTranslatedQuestion(currentQuestion?.text || '');\n        setTranslatedOptimizationFocus(currentQuestion?.optimizationFocus || '');\n        setTranslatedDescription(architectureInfo?.description || '');\n        return;\n      }\n      \n      try {\n        // Translate all UI text\n        const translationPromises = Object.entries(defaultTranslations).map(async ([key, value]) => {\n          const translatedValue = await translateText(value, newLanguage);\n          return [key, translatedValue];\n        });\n        \n        const translatedEntries = await Promise.all(translationPromises);\n        const newTranslations = Object.fromEntries(translatedEntries);\n        \n        setTranslations(newTranslations);\n        \n        // Also translate dynamic content\n        if (currentQuestion?.text) {\n          const translatedText = await translateText(currentQuestion.text, newLanguage);\n          setTranslatedQuestion(translatedText);\n        }\n        \n        if (currentQuestion?.optimizationFocus) {\n          const translatedFocus = await translateText(currentQuestion.optimizationFocus, newLanguage);\n          setTranslatedOptimizationFocus(translatedFocus);\n        }\n        \n        if (architectureInfo?.description) {\n          const translatedDesc = await translateText(architectureInfo.description, newLanguage);\n          setTranslatedDescription(translatedDesc);\n        }\n      } catch (error) {\n        console.error('Translation error:', error);\n      }\n    };\n\n    const loadNextArchitecture = useCallback(async () => {\n      if (!FUNCTION_KEY) {\n        setError(\"Azure Function key is not configured\");\n        setIsLoading(false);\n        return;\n      }\n      \n      setScore(0); // Reset score when loading new architecture\n      if (isLoading) return;\n      setIsLoading(true);\n      setError(null);\n\n      let attempt = 0;\n      let isValid = false;\n      let data = null;\n      let maxAttempts = 7;\n\n      while (!isValid && attempt < maxAttempts) {\n        try {\n          console.log(`üîÑ Attempt ${attempt + 1}: Fetching architecture data...`);\n          const response = await fetch(API_URL, {\n            method: 'POST',\n            headers: { \n              'Content-Type': 'application/json',\n              'x-functions-key': FUNCTION_KEY\n            },\n            body: JSON.stringify({ difficulty })\n          });\n\n          if (response.status === 503) {\n            console.warn(\"‚ö†Ô∏è Received 503 error. Retrying in 3 seconds...\");\n            attempt++;\n            await new Promise(resolve => setTimeout(resolve, 3000));\n            continue;\n          }\n\n          if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n\n          data = await response.json();\n          console.log('Raw AI Response:', JSON.stringify(data, null, 2));\n          console.log(\"üì• Received AI Response:\", JSON.stringify(data, null, 2));\n\n          isValid = isValidArchitecture(data);\n\n          if (!isValid) {\n            console.warn(`‚õî Invalid JSON structure. Retrying in 3 seconds...`);\n            await new Promise(resolve => setTimeout(resolve, 3000));\n          } else {\n            console.log(\"‚úÖ Valid architecture received, updating state...\");\n            break;\n          }\n        } catch (error) {\n          console.error(\"‚ùå Failed to load architecture:\", error);\n          if (attempt >= maxAttempts - 1) {\n            setError(error.message);\n            setIsLoading(false);\n            return;\n          }\n          await new Promise(resolve => setTimeout(resolve, 3000)); // Wait 3 seconds before retrying\n        }\n\n        attempt++;\n      }\n\n      if (!isValid) {\n        console.error(\"‚ùå Maximum retries reached. Unable to get valid JSON.\");\n        setError(\"Failed to fetch a valid architecture after multiple attempts.\");\n        setIsLoading(false);\n        return;\n      }\n\n      const transformedServices = data.services.map(serviceName => ({\n        id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n        name: serviceName,\n        icon: getServiceIcon(serviceName)\n      }));\n\n      setArchitecture({\n        services: transformedServices,\n        connections: data.connections\n      });\n\n      if (data.missingServices?.length > 0) {\n        const currentMissingService = data.missingServices[0];\n        setCurrentQuestion({\n          text: currentMissingService.question,\n          optimizationFocus: currentMissingService.optimizationFocus,\n          options: currentMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getServiceIcon(opt.service)\n          }))\n        });\n      }\n\n      setArchitectureInfo({\n        name: data.architecture.name,\n        description: data.architecture.description,\n        missingServices: data.missingServices\n      });\n\n      setCurrentMissingServiceIndex(0);\n      setShowFeedback(false);\n      setQuestionStartTime(Date.now());\n      setElapsedTime(0);\n      setIsLoading(false);\n    }, [difficulty]);\n\n    const handleServiceSelection = (selectedService) => {\n      if (!architectureInfo?.missingServices) return;\n      \n      const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n      const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n      const correctOption = currentMissingService.options.find(opt => opt.isCorrect);\n      const optimalOption = currentMissingService.options.find(opt => opt.isOptimal);\n\n      if (selectedOption) {\n        setShowFeedback(true);\n        if (selectedOption.isCorrect) {\n          // Calculate points based on whether it's optimal or just correct\n          const points = selectedOption.isOptimal ? 5 : 2;\n          \n          setScore(prevScore => {\n            const newScore = prevScore + points;\n            // Check if we've reached the maximum possible score for current difficulty\n            if (newScore === getMaxPossibleScore(difficulty)) {\n              setShowFireworks(true);\n              setTimeout(() => setShowFireworks(false), 5000);\n            }\n            return newScore;\n          });\n          \n          if (selectedOption.isOptimal) {\n            setShowConfetti(true);\n            setTimeout(() => setShowConfetti(false), 2000);\n          }\n\n          setFeedback({\n            isCorrect: true,\n            message: selectedOption.explanation,\n            points: points,\n            isOptimal: selectedOption.isOptimal,\n            optimalSolution: !selectedOption.isOptimal ? optimalOption.service : null,\n            optimalExplanation: !selectedOption.isOptimal ? optimalOption.explanation : null\n          });\n        } else {\n          setShowSadFace(true);\n          setTimeout(() => setShowSadFace(false), 4000);\n\n          setFeedback({\n            isCorrect: false,\n            message: `<div class=\"feedback-explanation\">\n              <p>${selectedOption.explanation}</p>\n              <div class=\"correct-answer-wrapper\">\n                <p class=\"correct-answer-section\">\n                  <span style=\"color: lime; font-weight: bold;\">The correct answer was: </span>\n                  <strong>${correctOption.service}</strong>. ${correctOption.explanation}\n                </p>\n              </div>\n            </div>`,\n            points: 0,\n            correctAnswer: correctOption.service\n          });\n        }\n      }\n    };\n\n    const handleNext = () => {\n      if (!architectureInfo?.missingServices) return;\n      \n      setShowFeedback(false);\n      if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n        const nextIndex = currentMissingServiceIndex + 1;\n        setCurrentMissingServiceIndex(nextIndex);\n        \n        const nextMissingService = architectureInfo.missingServices[nextIndex];\n        setCurrentQuestion({\n          text: nextMissingService.question,\n          optimizationFocus: nextMissingService.optimizationFocus,\n          options: nextMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getServiceIcon(opt.service)\n          }))\n        });\n        setQuestionStartTime(Date.now());\n        setElapsedTime(0);\n      }\n    };\n\n    const handleDifficultyChange = (level) => {\n      setDifficulty(level);\n    };\n\n    useEffect(() => {\n      if (currentQuestion && !questionStartTime) {\n        setQuestionStartTime(Date.now());\n      }\n\n      const timer = setInterval(() => {\n        if (questionStartTime && !showFeedback) {\n          const elapsed = Math.floor((Date.now() - questionStartTime) / 1000);\n          setElapsedTime(elapsed);\n        }\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }, [currentQuestion, questionStartTime, showFeedback]);\n\n    // Add useEffect to translate dynamic content when it changes\n    useEffect(() => {\n      if (currentLanguage !== 'en') {\n        // Translate question when it changes\n        if (currentQuestion?.text) {\n          translateText(currentQuestion.text, currentLanguage)\n            .then(translated => setTranslatedQuestion(translated))\n            .catch(error => console.error('Translation error:', error));\n        }\n        \n        // Translate optimization focus when it changes\n        if (currentQuestion?.optimizationFocus) {\n          translateText(currentQuestion.optimizationFocus, currentLanguage)\n            .then(translated => setTranslatedOptimizationFocus(translated))\n            .catch(error => console.error('Translation error:', error));\n        }\n        \n        // Translate architecture description when it changes\n        if (architectureInfo?.description) {\n          translateText(architectureInfo.description, currentLanguage)\n            .then(translated => setTranslatedDescription(translated))\n            .catch(error => console.error('Translation error:', error));\n        }\n      } else {\n        // For English, use original text\n        setTranslatedQuestion(currentQuestion?.text || '');\n        setTranslatedOptimizationFocus(currentQuestion?.optimizationFocus || '');\n        setTranslatedDescription(architectureInfo?.description || '');\n      }\n    }, [currentQuestion, architectureInfo, currentLanguage]);\n\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <DndContext sensors={sensors}>\n          <div className=\"game-container\">\n            <div className=\"game-header\">\n              <h2 className=\"game-title\">{translations.gameTitle}</h2>\n              <div className=\"game-stats\">\n                <div className=\"score\">{translations.score}: {score}</div>\n                <div className=\"complexity\">\n                  <span className=\"complexity-icon\">üéØ</span>\n                  {translations[difficulty.toLowerCase()]}\n                </div>\n                {currentQuestion && !showFeedback && (\n                  <div className={`timer ${\n                    elapsedTime > 60 ? 'danger' : \n                    elapsedTime > 30 ? 'warning' : ''\n                  }`}>\n                    <span className=\"timer-icon\">‚è±Ô∏è</span>\n                    {Math.floor(elapsedTime / 60)}:{(elapsedTime % 60).toString().padStart(2, '0')}\n                  </div>\n                )}\n              </div>\n              <div className=\"architecture-controls\" style={{ \n                display: 'flex', \n                justifyContent: 'space-between',\n                alignItems: 'center',\n                marginBottom: '15px'\n              }}>\n                <button\n                  onClick={loadNextArchitecture}\n                  className=\"new-architecture-button\"\n                  disabled={isLoading}\n                  style={{\n                    backgroundColor: 'rgba(0, 255, 255, 0.1)',\n                    border: '2px solid #00ffff',\n                    borderRadius: '5px',\n                    color: '#00ffff',\n                    padding: '10px 20px',\n                    cursor: isLoading ? 'not-allowed' : 'pointer',\n                    fontFamily: 'Orbitron, sans-serif',\n                    transition: 'all 0.3s ease'\n                  }}\n                >\n                  {isLoading ? translations.loading : translations.newArchitecture}\n                </button>\n                \n                <div style={{ \n                  backgroundColor: 'rgba(0, 255, 255, 0.1)', \n                  border: '2px solid #00ffff',\n                  borderRadius: '5px',\n                  padding: '2px 5px'\n                }}>\n                  <LanguageSelector \n                    currentLanguage={currentLanguage}\n                    onLanguageChange={handleLanguageChange}\n                  />\n                </div>\n              </div>\n            </div>\n            \n            {architectureInfo && <p className=\"architecture-description\">\n              {currentLanguage === 'en' ? architectureInfo.description : translatedDescription}\n            </p>}\n            \n            {error ? (\n              <div className=\"error-message\">{error}</div>\n            ) : (\n              <>\n                <AzureArchitectureDisplay \n                  architecture={architecture}\n                  currentQuestion={currentQuestion}\n                  currentLanguage={currentLanguage}\n                />\n                \n                {currentQuestion && (\n                  <div className=\"question-container\">\n                    <h3 className=\"question-label\">\n                      <span className=\"highlight\">{translations.question}:</span>{' '}\n                      {currentLanguage === 'en' ? currentQuestion.text : translatedQuestion}\n                    </h3>\n                    <p className=\"optimization-focus-label\">\n                      <span className=\"highlight\">{translations.optimizationFocus}:</span>{' '}\n                      {currentLanguage === 'en' ? currentQuestion.optimizationFocus : translatedOptimizationFocus}\n                    </p>\n                    \n                    {showFeedback ? (\n                      <div className={`feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'} ${feedback.isOptimal ? 'optimal' : ''}`}>\n                        {showSadFace && (\n                          <div className=\"sad-face-overlay\">\n                            <span role=\"img\" aria-label=\"sad face\" className=\"sad-face\">üò¢</span>\n                          </div>\n                        )}\n                        <div className=\"feedback-content\">\n                          {feedback.isCorrect ? (\n                            <>\n                              <h3>üéâ {translations.correctPoints.replace('{points}', feedback.points)}</h3>\n                              {feedback.isOptimal ? (\n                                <p>üåü {translations.perfectChoice}</p>\n                              ) : (\n                                <>\n                                  <p>‚ö†Ô∏è {translations.notOptimal}</p>\n                                  <p><span style={{ color: 'green' }}>{translations.optimalAnswer}</span> {feedback.optimalSolution}.</p>\n                                </>\n                              )}\n                            </>\n                          ) : (\n                            <h3>‚ùå {translations.notCorrect}</h3>\n                          )}\n                          <p dangerouslySetInnerHTML={{ __html: feedback.message }}></p>\n                          \n                          {currentMissingServiceIndex < (architectureInfo?.missingServices?.length - 1) && (\n                            <button \n                              className=\"next-button\"\n                              onClick={handleNext}\n                            >\n                              {translations.nextService\n                                .replace('{current}', currentMissingServiceIndex + 2)\n                                .replace('{total}', architectureInfo?.missingServices?.length)}\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"service-options\">\n                        {currentQuestion.options.map((option, index) => (\n                          <DraggableService\n                            key={`${option.id}-${index}`}\n                            service={option}\n                            onClick={() => handleServiceSelection(option.name)}\n                          />\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                )}\n              </>\n            )}\n            \n            <div className=\"game-status\">\n              <div className=\"progress\">\n                {architectureInfo?.missingServices ? \n                  translations.service\n                    .replace('{current}', currentMissingServiceIndex + 1)\n                    .replace('{total}', architectureInfo.missingServices.length) :\n                  translations.learnAndHaveFun\n                }\n              </div>\n            </div>\n\n            {(!architecture?.services || \n             (currentMissingServiceIndex === architectureInfo?.missingServices?.length - 1 && showFeedback)) && (\n              <div className=\"difficulty-selection\">\n                {['BEGINNER', 'INTERMEDIATE', 'ADVANCED'].map((level) => (\n                  <button\n                    key={level}\n                    className={`difficulty-button ${difficulty === level ? 'active' : ''}`}\n                    onClick={() => handleDifficultyChange(level)}\n                  >\n                    {translations[level.toLowerCase()]}\n                  </button>\n                ))}\n              </div>\n            )}\n          </div>\n          <br></br>\n          <center>\n            <img \n              src=\"https://hackthon-backend-files-ep-2024.s3.us-east-1.amazonaws.com/amazon-icons-set/Architecture-Service-Icons_06072024/AWSArchitectureApp.webp\"\n              alt=\"Loading...\" \n              style={{ \n                width: '1200px',\n                height: '900px',\n                verticalAlign: 'middle',\n                display: 'inline-block',\n                borderRadius: '50px'\n              }} \n            />\n          </center>\n          {showConfetti && (\n            <ReactConfetti\n              width={width}\n              height={height}\n              recycle={false}\n              numberOfPieces={200}\n              style={{ \n                position: 'fixed',\n                top: 0,\n                left: 0,\n                pointerEvents: 'none',\n                zIndex: 'var(--z-index-confetti)'\n              }} \n            />\n          )}\n          {showFireworks && (\n            <ReactConfetti\n              width={width}\n              height={height}\n              recycle={true}\n              numberOfPieces={500}\n              colors={['#FFD700', '#FF0000', '#00FF00', '#0000FF', '#FF00FF']}\n              style={{ \n                position: 'fixed',\n                top: 0,\n                left: 0,\n                pointerEvents: 'none',\n                zIndex: 'var(--z-index-confetti)'\n              }}\n            />\n          )}\n        </DndContext>\n      </DndProvider>\n    );\n};\n\nexport default AzureArchitectureGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}