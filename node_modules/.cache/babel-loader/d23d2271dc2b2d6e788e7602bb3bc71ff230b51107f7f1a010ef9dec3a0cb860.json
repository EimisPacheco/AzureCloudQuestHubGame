{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\nconst isValidArchitecture = data => {\n  if (!data || !Array.isArray(data.services) || !Array.isArray(data.connections)) {\n    console.warn(\"⚠️ Invalid JSON structure: Missing 'services' or 'connections'. Retrying...\");\n    return false;\n  }\n  const requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n  const serviceNames = data.services.map(service => typeof service === 'string' ? service : service === null || service === void 0 ? void 0 : service.name);\n  if (!requiredMissingServices.every(ms => serviceNames.includes(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing.`);\n    return false;\n  }\n  const connectionNodes = new Set();\n  data.connections.forEach(conn => {\n    connectionNodes.add(conn.from);\n    connectionNodes.add(conn.to);\n  });\n  if (!requiredMissingServices.every(ms => connectionNodes.has(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing from the connections.`);\n    return false;\n  }\n  return true;\n};\nconst AWSArchitectureGame = () => {\n  _s();\n  var _architectureInfo$mis, _architectureInfo$mis2;\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [architecture, setArchitecture] = useState(null);\n  const [architectureInfo, setArchitectureInfo] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [difficulty, setDifficulty] = useState('BEGINNER');\n  const [score, setScore] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [feedback, setFeedback] = useState({\n    isCorrect: false,\n    message: '',\n    points: 0\n  });\n  const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n  const [questionStartTime, setQuestionStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(TouchSensor));\n  const getServiceIcon = serviceName => {\n    if (!serviceName) {\n      console.error('No service name provided to getServiceIcon');\n      return null;\n    }\n    if (serviceName.toLowerCase().includes('missing')) {\n      console.log('Loading missing service icon locally:', '/aws-icons/missing.svg');\n      return '/aws-icons/missing.svg';\n    }\n    const cleanedServiceName = serviceName.toLowerCase().replace(/^(amazon|aws)\\s+/, '').replace(/\\s+/g, '-');\n    const potentialS3Url = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/Arch_${cleanedServiceName}_64.svg`;\n    console.log(`🔍 Attempting to load icon for \"${serviceName}\" from: ${potentialS3Url}`);\n    const resolvedIcon = getCachedServiceIcon(serviceName);\n    if (resolvedIcon) {\n      console.log(`✅ Successfully resolved icon for \"${serviceName}\": ${resolvedIcon}`);\n      return resolvedIcon;\n    }\n    console.warn(`❌ Icon not found for \"${serviceName}\" at attempted path: ${potentialS3Url}`);\n    return '/aws-icons/default.svg';\n  };\n  const loadNextArchitecture = useCallback(async () => {\n    var _data$missingServices;\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    let attempt = 0;\n    let isValid = false;\n    let data = null;\n    let maxAttempts = 7; // 5 attempts for invalid JSON + 2 extra for 503 errors\n\n    while (!isValid && attempt < maxAttempts) {\n      try {\n        console.log(`🔄 Attempt ${attempt + 1}: Fetching architecture data...`);\n        const response = await fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            difficulty\n          })\n        });\n        if (response.status === 503) {\n          console.warn(\"⚠️ Received 503 error. Retrying...\");\n          attempt++;\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second before retrying\n          continue;\n        }\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        data = await response.json();\n        console.log(\"📥 Received AI Response:\", JSON.stringify(data, null, 2));\n        isValid = isValidArchitecture(data);\n        if (!isValid) {\n          console.warn(`⛔ Invalid JSON structure. Retrying request...`);\n        } else {\n          console.log(\"✅ Valid architecture received, updating state...\");\n          break;\n        }\n      } catch (error) {\n        console.error(\"❌ Failed to load architecture:\", error);\n        if (attempt >= maxAttempts - 1) {\n          setError(error.message);\n          setIsLoading(false);\n          return;\n        }\n      }\n      attempt++;\n    }\n    if (!isValid) {\n      console.error(\"❌ Maximum retries reached. Unable to get valid JSON.\");\n      setError(\"Failed to fetch a valid architecture after multiple attempts.\");\n      setIsLoading(false);\n      return;\n    }\n    const transformedServices = data.services.map(serviceName => ({\n      id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n      name: serviceName,\n      icon: getServiceIcon(serviceName)\n    }));\n    setArchitecture({\n      services: transformedServices,\n      connections: data.connections\n    });\n    if (((_data$missingServices = data.missingServices) === null || _data$missingServices === void 0 ? void 0 : _data$missingServices.length) > 0) {\n      const currentMissingService = data.missingServices[0];\n      setCurrentQuestion({\n        text: currentMissingService.question,\n        optimizationFocus: currentMissingService.optimizationFocus,\n        options: currentMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getServiceIcon(opt.service)\n        }))\n      });\n    }\n    setArchitectureInfo({\n      name: data.architecture.name,\n      description: data.architecture.description,\n      missingServices: data.missingServices\n    });\n    setCurrentMissingServiceIndex(0);\n    setShowFeedback(false);\n    setQuestionStartTime(Date.now());\n    setElapsedTime(0);\n    setIsLoading(false);\n  }, [difficulty]);\n  const handleServiceSelection = selectedService => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n    const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n    if (selectedOption) {\n      setShowFeedback(true);\n      if (selectedOption.isCorrect) {\n        const points = selectedOption.rating;\n        setScore(prevScore => prevScore + points);\n        setFeedback({\n          isCorrect: true,\n          message: selectedOption.explanation,\n          points: points,\n          isOptimal: selectedOption.isOptimal\n        });\n      } else {\n        const correctOption = currentMissingService.options.find(opt => opt.isCorrect);\n        setFeedback({\n          isCorrect: false,\n          message: `${selectedOption.explanation} <span style={{ color: 'green' }}>The correct answer is: ${correctOption.service}.</span> ${correctOption.explanation}`,\n          points: 0\n        });\n      }\n    }\n  };\n  const handleNext = () => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    setShowFeedback(false);\n    if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n      const nextIndex = currentMissingServiceIndex + 1;\n      setCurrentMissingServiceIndex(nextIndex);\n      const nextMissingService = architectureInfo.missingServices[nextIndex];\n      setCurrentQuestion({\n        text: nextMissingService.question,\n        optimizationFocus: nextMissingService.optimizationFocus,\n        options: nextMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getServiceIcon(opt.service)\n        }))\n      });\n      setQuestionStartTime(Date.now());\n      setElapsedTime(0);\n    }\n  };\n  const handleDifficultyChange = level => {\n    setDifficulty(level);\n  };\n  useEffect(() => {\n    if (currentQuestion && !questionStartTime) {\n      setQuestionStartTime(Date.now());\n    }\n    const timer = setInterval(() => {\n      if (questionStartTime && !showFeedback) {\n        const elapsed = Math.floor((Date.now() - questionStartTime) / 1000);\n        setElapsedTime(elapsed);\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [currentQuestion, questionStartTime, showFeedback]);\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: (architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.name) || 'AWS Architecture Challenge'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score\",\n              children: [\"Score: \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"complexity\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"complexity-icon\",\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this), difficulty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 17\n            }, this), currentQuestion && !showFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `timer ${elapsedTime > 60 ? 'danger' : elapsedTime > 30 ? 'warning' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timer-icon\",\n                children: \"\\u23F1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 21\n              }, this), Math.floor(elapsedTime / 60), \":\", (elapsedTime % 60).toString().padStart(2, '0')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-architecture-button\",\n            onClick: loadNextArchitecture,\n            disabled: isLoading,\n            children: isLoading ? 'Loading...' : 'New Architecture'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 13\n        }, this), architectureInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"architecture-description\",\n          children: architectureInfo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 34\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(AWSArchitectureDisplay, {\n            architecture: architecture,\n            currentQuestion: currentQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 17\n          }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"question-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"highlight\",\n                children: \"Question:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 23\n              }, this), \" \", currentQuestion.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"optimization-focus-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"highlight\",\n                children: \"Optimization Focus:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 23\n              }, this), \" \", currentQuestion.optimizationFocus]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 21\n            }, this), showFeedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `feedback-modal ${feedback.isCorrect ? feedback.isOptimal ? 'correct' : 'correct-but-not-optimal' : 'incorrect'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-content\",\n                children: [feedback.isCorrect ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [\"\\uD83C\\uDF89 Correct! +\", feedback.points, \" points\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 328,\n                    columnNumber: 31\n                  }, this), feedback.isOptimal ? /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"\\uD83C\\uDF1F Perfect choice! This is the optimal solution.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 33\n                  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: \"\\u26A0\\uFE0F This answer is correct but not the best option according to the Optimization Focus.\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 333,\n                      columnNumber: 35\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        style: {\n                          color: 'green'\n                        },\n                        children: \"The optimal answer is:\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 334,\n                        columnNumber: 38\n                      }, this), \" \", architectureInfo.missingServices[currentMissingServiceIndex].options.find(opt => opt.isOptimal).service, \".\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 334,\n                      columnNumber: 35\n                    }, this)]\n                  }, void 0, true)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"\\u274C Not quite right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  dangerouslySetInnerHTML: {\n                    __html: feedback.message\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 27\n                }, this), currentMissingServiceIndex < (architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis = architectureInfo.missingServices) === null || _architectureInfo$mis === void 0 ? void 0 : _architectureInfo$mis.length) - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"next-button\",\n                  onClick: handleNext,\n                  children: [\"Next Service (\", currentMissingServiceIndex + 2, \" of \", architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis2 = architectureInfo.missingServices) === null || _architectureInfo$mis2 === void 0 ? void 0 : _architectureInfo$mis2.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"service-options\",\n              children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(DraggableService, {\n                service: option,\n                onClick: () => handleServiceSelection(option.name)\n              }, `${option.id}-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 356,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 354,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-status\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices ? `Service ${currentMissingServiceIndex + 1} of ${architectureInfo.missingServices.length}` : 'Loading...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 369,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"difficulty-selection\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDifficultyChange('BEGINNER'),\n            children: \"Beginner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDifficultyChange('INTERMEDIATE'),\n            children: \"Intermediate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDifficultyChange('ADVANCED'),\n            children: \"Advanced\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 381,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 378,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 7\n  }, this);\n};\n_s(AWSArchitectureGame, \"+iqUA0kDXLcr8TM1qmqGDulC6bU=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c = AWSArchitectureGame;\nexport default AWSArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureGame\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","DndContext","useSensor","useSensors","PointerSensor","TouchSensor","DndProvider","HTML5Backend","AWSArchitectureDisplay","DraggableService","getCachedServiceIcon","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","Fragment","_Fragment","S3_BUCKET_URL","ICONS_BASE_PATH","API_URL","isValidArchitecture","data","Array","isArray","services","connections","console","warn","requiredMissingServices","serviceNames","map","service","name","every","ms","includes","join","connectionNodes","Set","forEach","conn","add","from","to","has","AWSArchitectureGame","_s","_architectureInfo$mis","_architectureInfo$mis2","isLoading","setIsLoading","error","setError","architecture","setArchitecture","architectureInfo","setArchitectureInfo","currentQuestion","setCurrentQuestion","difficulty","setDifficulty","score","setScore","showFeedback","setShowFeedback","feedback","setFeedback","isCorrect","message","points","currentMissingServiceIndex","setCurrentMissingServiceIndex","questionStartTime","setQuestionStartTime","elapsedTime","setElapsedTime","sensors","activationConstraint","distance","getServiceIcon","serviceName","toLowerCase","log","cleanedServiceName","replace","potentialS3Url","resolvedIcon","loadNextArchitecture","_data$missingServices","attempt","isValid","maxAttempts","response","fetch","method","headers","body","JSON","stringify","status","Promise","resolve","setTimeout","ok","Error","json","transformedServices","id","icon","missingServices","length","currentMissingService","text","question","optimizationFocus","options","opt","isOptimal","explanation","rating","description","Date","now","handleServiceSelection","selectedService","selectedOption","find","prevScore","correctOption","handleNext","nextIndex","nextMissingService","handleDifficultyChange","level","timer","setInterval","elapsed","Math","floor","clearInterval","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","toString","padStart","onClick","disabled","style","color","dangerouslySetInnerHTML","__html","option","index","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\n\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n\nconst isValidArchitecture = (data) => {\n  if (!data || !Array.isArray(data.services) || !Array.isArray(data.connections)) {\n    console.warn(\"⚠️ Invalid JSON structure: Missing 'services' or 'connections'. Retrying...\");\n    return false;\n  }\n\n  const requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n\n  const serviceNames = data.services.map(service => \n    typeof service === 'string' ? service : service?.name\n  );\n\n  if (!requiredMissingServices.every(ms => serviceNames.includes(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing.`);\n    return false;\n  }\n\n  const connectionNodes = new Set();\n  data.connections.forEach(conn => {\n    connectionNodes.add(conn.from);\n    connectionNodes.add(conn.to);\n  });\n\n  if (!requiredMissingServices.every(ms => connectionNodes.has(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing from the connections.`);\n    return false;\n  }\n\n  return true;\n};\n\nconst AWSArchitectureGame = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [architecture, setArchitecture] = useState(null);\n    const [architectureInfo, setArchitectureInfo] = useState(null);\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [difficulty, setDifficulty] = useState('BEGINNER');\n    const [score, setScore] = useState(0); \n    const [showFeedback, setShowFeedback] = useState(false);\n    const [feedback, setFeedback] = useState({ isCorrect: false, message: '', points: 0 });\n    const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n    const [questionStartTime, setQuestionStartTime] = useState(null);\n    const [elapsedTime, setElapsedTime] = useState(0);\n\n    const sensors = useSensors(\n      useSensor(PointerSensor, {\n        activationConstraint: {\n          distance: 8,\n        },\n      }),\n      useSensor(TouchSensor)\n    );\n\n    const getServiceIcon = (serviceName) => {\n      if (!serviceName) {\n        console.error('No service name provided to getServiceIcon');\n        return null;\n      }\n\n      if (serviceName.toLowerCase().includes('missing')) {\n        console.log('Loading missing service icon locally:', '/aws-icons/missing.svg');\n        return '/aws-icons/missing.svg';\n      }\n\n      const cleanedServiceName = serviceName\n        .toLowerCase()\n        .replace(/^(amazon|aws)\\s+/, '')\n        .replace(/\\s+/g, '-');\n        \n      const potentialS3Url = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/Arch_${cleanedServiceName}_64.svg`;\n      console.log(`🔍 Attempting to load icon for \"${serviceName}\" from: ${potentialS3Url}`);\n\n      const resolvedIcon = getCachedServiceIcon(serviceName);\n      \n      if (resolvedIcon) {\n        console.log(`✅ Successfully resolved icon for \"${serviceName}\": ${resolvedIcon}`);\n        return resolvedIcon;\n      }\n\n      console.warn(`❌ Icon not found for \"${serviceName}\" at attempted path: ${potentialS3Url}`);\n      return '/aws-icons/default.svg';\n    };\n\n    const loadNextArchitecture = useCallback(async () => {\n      if (isLoading) return;\n      setIsLoading(true);\n      setError(null);\n\n      let attempt = 0;\n      let isValid = false;\n      let data = null;\n      let maxAttempts = 7; // 5 attempts for invalid JSON + 2 extra for 503 errors\n\n      while (!isValid && attempt < maxAttempts) {\n        try {\n          console.log(`🔄 Attempt ${attempt + 1}: Fetching architecture data...`);\n          const response = await fetch(API_URL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ difficulty })\n          });\n\n          if (response.status === 503) {\n            console.warn(\"⚠️ Received 503 error. Retrying...\");\n            attempt++;\n            await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second before retrying\n            continue;\n          }\n\n          if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n\n          data = await response.json();\n          console.log(\"📥 Received AI Response:\", JSON.stringify(data, null, 2));\n\n          isValid = isValidArchitecture(data);\n\n          if (!isValid) {\n            console.warn(`⛔ Invalid JSON structure. Retrying request...`);\n          } else {\n            console.log(\"✅ Valid architecture received, updating state...\");\n            break;\n          }\n        } catch (error) {\n          console.error(\"❌ Failed to load architecture:\", error);\n          if (attempt >= maxAttempts - 1) {\n            setError(error.message);\n            setIsLoading(false);\n            return;\n          }\n        }\n\n        attempt++;\n      }\n\n      if (!isValid) {\n        console.error(\"❌ Maximum retries reached. Unable to get valid JSON.\");\n        setError(\"Failed to fetch a valid architecture after multiple attempts.\");\n        setIsLoading(false);\n        return;\n      }\n\n      const transformedServices = data.services.map(serviceName => ({\n        id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n        name: serviceName,\n        icon: getServiceIcon(serviceName)\n      }));\n\n      setArchitecture({\n        services: transformedServices,\n        connections: data.connections\n      });\n\n      if (data.missingServices?.length > 0) {\n        const currentMissingService = data.missingServices[0];\n        setCurrentQuestion({\n          text: currentMissingService.question,\n          optimizationFocus: currentMissingService.optimizationFocus,\n          options: currentMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getServiceIcon(opt.service)\n          }))\n        });\n      }\n\n      setArchitectureInfo({\n        name: data.architecture.name,\n        description: data.architecture.description,\n        missingServices: data.missingServices\n      });\n\n      setCurrentMissingServiceIndex(0);\n      setShowFeedback(false);\n      setQuestionStartTime(Date.now());\n      setElapsedTime(0);\n      setIsLoading(false);\n    }, [difficulty]);\n\n    const handleServiceSelection = (selectedService) => {\n      if (!architectureInfo?.missingServices) return;\n      \n      const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n      const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n\n      if (selectedOption) {\n        setShowFeedback(true);\n        if (selectedOption.isCorrect) {\n          const points = selectedOption.rating;\n          setScore(prevScore => prevScore + points);\n          setFeedback({\n            isCorrect: true,\n            message: selectedOption.explanation,\n            points: points,\n            isOptimal: selectedOption.isOptimal\n          });\n        } else {\n          const correctOption = currentMissingService.options.find(opt => opt.isCorrect);\n          setFeedback({\n            isCorrect: false,\n            message: `${selectedOption.explanation} <span style={{ color: 'green' }}>The correct answer is: ${correctOption.service}.</span> ${correctOption.explanation}`,\n            points: 0\n          });\n        }\n      }\n    };\n\n    const handleNext = () => {\n      if (!architectureInfo?.missingServices) return;\n      \n      setShowFeedback(false);\n      if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n        const nextIndex = currentMissingServiceIndex + 1;\n        setCurrentMissingServiceIndex(nextIndex);\n        \n        const nextMissingService = architectureInfo.missingServices[nextIndex];\n        setCurrentQuestion({\n          text: nextMissingService.question,\n          optimizationFocus: nextMissingService.optimizationFocus,\n          options: nextMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getServiceIcon(opt.service)\n          }))\n        });\n        setQuestionStartTime(Date.now());\n        setElapsedTime(0);\n      }\n    };\n\n    const handleDifficultyChange = (level) => {\n      setDifficulty(level);\n    };\n\n    useEffect(() => {\n      if (currentQuestion && !questionStartTime) {\n        setQuestionStartTime(Date.now());\n      }\n\n      const timer = setInterval(() => {\n        if (questionStartTime && !showFeedback) {\n          const elapsed = Math.floor((Date.now() - questionStartTime) / 1000);\n          setElapsedTime(elapsed);\n        }\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }, [currentQuestion, questionStartTime, showFeedback]);\n\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <DndContext sensors={sensors}>\n          <div className=\"game-container\">\n            <div className=\"game-header\">\n              <h2>{architectureInfo?.name || 'AWS Architecture Challenge'}</h2>\n              <div className=\"game-stats\">\n                <div className=\"score\">Score: {score}</div>\n                <div className=\"complexity\">\n                  <span className=\"complexity-icon\">🎯</span>\n                  {difficulty}\n                </div>\n                {currentQuestion && !showFeedback && (\n                  <div className={`timer ${\n                    elapsedTime > 60 ? 'danger' : \n                    elapsedTime > 30 ? 'warning' : ''\n                  }`}>\n                    <span className=\"timer-icon\">⏱️</span>\n                    {Math.floor(elapsedTime / 60)}:{(elapsedTime % 60).toString().padStart(2, '0')}\n                  </div>\n                )}\n              </div>\n              <button \n                className=\"new-architecture-button\"\n                onClick={loadNextArchitecture}\n                disabled={isLoading}\n              >\n                {isLoading ? 'Loading...' : 'New Architecture'}\n              </button>\n            </div>\n            \n            {architectureInfo && <p className=\"architecture-description\">{architectureInfo.description}</p>}\n            \n            {error ? (\n              <div className=\"error-message\">{error}</div>\n            ) : (\n              <>\n                <AWSArchitectureDisplay \n                  architecture={architecture}\n                  currentQuestion={currentQuestion}\n                />\n                \n                {currentQuestion && (\n                  <div className=\"question-container\">\n                    <h3 className=\"question-label\">\n                      <span className=\"highlight\">Question:</span> {currentQuestion.text}\n                    </h3>\n                    <p className=\"optimization-focus-label\">\n                      <span className=\"highlight\">Optimization Focus:</span> {currentQuestion.optimizationFocus}\n                    </p>\n                    \n                    {showFeedback ? (\n                      <div className={`feedback-modal ${\n                        feedback.isCorrect ? (feedback.isOptimal ? 'correct' : 'correct-but-not-optimal') : 'incorrect'\n                      }`}>\n                        <div className=\"feedback-content\">\n                          {feedback.isCorrect ? (\n                            <>\n                              <h3>🎉 Correct! +{feedback.points} points</h3>\n                              {feedback.isOptimal ? (\n                                <p>🌟 Perfect choice! This is the optimal solution.</p>\n                              ) : (\n                                <>\n                                  <p>⚠️ This answer is correct but not the best option according to the Optimization Focus.</p>\n                                  <p><span style={{ color: 'green' }}>The optimal answer is:</span> {architectureInfo.missingServices[currentMissingServiceIndex].options.find(opt => opt.isOptimal).service}.</p>\n                                </>\n                              )}\n                            </>\n                          ) : (\n                            <h3>❌ Not quite right</h3>\n                          )}\n                          <p dangerouslySetInnerHTML={{ __html: feedback.message }}></p>\n                          \n                          {currentMissingServiceIndex < (architectureInfo?.missingServices?.length - 1) && (\n                            <button \n                              className=\"next-button\"\n                              onClick={handleNext}\n                            >\n                              Next Service ({currentMissingServiceIndex + 2} of {architectureInfo?.missingServices?.length})\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"service-options\">\n                        {currentQuestion.options.map((option, index) => (\n                          <DraggableService\n                            key={`${option.id}-${index}`}\n                            service={option}\n                            onClick={() => handleServiceSelection(option.name)}\n                          />\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                )}\n              </>\n            )}\n            \n            <div className=\"game-status\">\n              <div className=\"progress\">\n                {architectureInfo?.missingServices ? \n                  `Service ${currentMissingServiceIndex + 1} of ${architectureInfo.missingServices.length}` :\n                  'Loading...'\n                }\n              </div>\n            </div>\n\n            <div className=\"difficulty-selection\">\n              <button onClick={() => handleDifficultyChange('BEGINNER')}>Beginner</button>\n              <button onClick={() => handleDifficultyChange('INTERMEDIATE')}>Intermediate</button>\n              <button onClick={() => handleDifficultyChange('ADVANCED')}>Advanced</button>\n            </div>\n          </div>\n        </DndContext>\n      </DndProvider>\n    );\n};\n\nexport default AWSArchitectureGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}