{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\nconst isValidArchitecture = data => {\n  if (!data || !Array.isArray(data.services) || !Array.isArray(data.connections)) {\n    console.warn(\"⚠️ Invalid JSON structure: Missing 'services' or 'connections'. Retrying...\");\n    return false;\n  }\n  const requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n  const serviceNames = data.services.map(service => typeof service === 'string' ? service : service === null || service === void 0 ? void 0 : service.name);\n  if (!requiredMissingServices.every(ms => serviceNames.includes(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing.`);\n    return false;\n  }\n  const connectionNodes = new Set();\n  data.connections.forEach(conn => {\n    connectionNodes.add(conn.from);\n    connectionNodes.add(conn.to);\n  });\n  if (!requiredMissingServices.every(ms => connectionNodes.has(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing from the connections.`);\n    return false;\n  }\n  return true;\n};\nconst AWSArchitectureGame = () => {\n  _s();\n  var _architectureInfo$mis, _architectureInfo$mis2;\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [architecture, setArchitecture] = useState(null);\n  const [architectureInfo, setArchitectureInfo] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [difficulty] = useState('BEGINNER');\n  const [score, setScore] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [feedback, setFeedback] = useState({\n    isCorrect: false,\n    message: '',\n    points: 0\n  });\n  const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n  const [questionStartTime, setQuestionStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(TouchSensor));\n  const getServiceIcon = serviceName => {\n    if (!serviceName) {\n      console.error('No service name provided to getServiceIcon');\n      return null;\n    }\n    if (serviceName.toLowerCase().includes('missing')) {\n      console.log('Loading missing service icon locally:', '/aws-icons/missing.svg');\n      return '/aws-icons/missing.svg';\n    }\n    const cleanedServiceName = serviceName.toLowerCase().replace(/^(amazon|aws)\\s+/, '').replace(/\\s+/g, '-');\n    const potentialS3Url = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/Arch_${cleanedServiceName}_64.svg`;\n    console.log(`🔍 Attempting to load icon for \"${serviceName}\" from: ${potentialS3Url}`);\n    const resolvedIcon = getCachedServiceIcon(serviceName);\n    if (resolvedIcon) {\n      console.log(`✅ Successfully resolved icon for \"${serviceName}\": ${resolvedIcon}`);\n      return resolvedIcon;\n    }\n    console.warn(`❌ Icon not found for \"${serviceName}\" at attempted path: ${potentialS3Url}`);\n    return '/aws-icons/default.svg';\n  };\n  const loadNextArchitecture = useCallback(async () => {\n    var _data$missingServices;\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    let attempt = 0;\n    let isValid = false;\n    let data = null;\n    let maxAttempts = 7; // 5 attempts for invalid JSON + 2 extra for 503 errors\n\n    while (!isValid && attempt < maxAttempts) {\n      try {\n        console.log(`🔄 Attempt ${attempt + 1}: Fetching architecture data...`);\n        const response = await fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            difficulty\n          })\n        });\n        if (response.status === 503) {\n          console.warn(\"⚠️ Received 503 error. Retrying...\");\n          attempt++;\n          await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second before retrying\n          continue;\n        }\n        if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n        data = await response.json();\n        console.log(\"📥 Received AI Response:\", JSON.stringify(data, null, 2));\n        isValid = isValidArchitecture(data);\n        if (!isValid) {\n          console.warn(`⛔ Invalid JSON structure. Retrying request...`);\n        } else {\n          console.log(\"✅ Valid architecture received, updating state...\");\n          break;\n        }\n      } catch (error) {\n        console.error(\"❌ Failed to load architecture:\", error);\n        if (attempt >= maxAttempts - 1) {\n          setError(error.message);\n          setIsLoading(false);\n          return;\n        }\n      }\n      attempt++;\n    }\n    if (!isValid) {\n      console.error(\"❌ Maximum retries reached. Unable to get valid JSON.\");\n      setError(\"Failed to fetch a valid architecture after multiple attempts.\");\n      setIsLoading(false);\n      return;\n    }\n    const transformedServices = data.services.map(serviceName => ({\n      id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n      name: serviceName,\n      icon: getServiceIcon(serviceName)\n    }));\n    setArchitecture({\n      services: transformedServices,\n      connections: data.connections\n    });\n    if (((_data$missingServices = data.missingServices) === null || _data$missingServices === void 0 ? void 0 : _data$missingServices.length) > 0) {\n      const currentMissingService = data.missingServices[0];\n      setCurrentQuestion({\n        text: currentMissingService.question,\n        optimizationFocus: currentMissingService.optimizationFocus,\n        options: currentMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getServiceIcon(opt.service)\n        }))\n      });\n    }\n    setArchitectureInfo({\n      name: data.architecture.name,\n      description: data.architecture.description,\n      missingServices: data.missingServices\n    });\n    setCurrentMissingServiceIndex(0);\n    setShowFeedback(false);\n    setQuestionStartTime(Date.now());\n    setElapsedTime(0);\n    setIsLoading(false);\n  }, [difficulty]);\n  const handleServiceSelection = selectedService => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n    const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n    if (selectedOption) {\n      setShowFeedback(true);\n      if (selectedOption.isCorrect) {\n        const points = selectedOption.rating;\n        setScore(prevScore => prevScore + points);\n        setFeedback({\n          isCorrect: true,\n          message: selectedOption.explanation,\n          points: points,\n          isOptimal: selectedOption.isOptimal\n        });\n      } else {\n        setFeedback({\n          isCorrect: false,\n          message: selectedOption.explanation,\n          points: 0\n        });\n      }\n    }\n  };\n  const handleNext = () => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    setShowFeedback(false);\n    if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n      const nextIndex = currentMissingServiceIndex + 1;\n      setCurrentMissingServiceIndex(nextIndex);\n      const nextMissingService = architectureInfo.missingServices[nextIndex];\n      setCurrentQuestion({\n        text: nextMissingService.question,\n        optimizationFocus: nextMissingService.optimizationFocus,\n        options: nextMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getServiceIcon(opt.service)\n        }))\n      });\n      setQuestionStartTime(Date.now());\n      setElapsedTime(0);\n    }\n  };\n  useEffect(() => {\n    if (currentQuestion && !questionStartTime) {\n      setQuestionStartTime(Date.now());\n    }\n    const timer = setInterval(() => {\n      if (questionStartTime && !showFeedback) {\n        const elapsed = Math.floor((Date.now() - questionStartTime) / 1000);\n        setElapsedTime(elapsed);\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [currentQuestion, questionStartTime, showFeedback]);\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(DndContext, {\n      sensors: sensors,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: (architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.name) || 'AWS Architecture Challenge'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"game-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"score\",\n              children: [\"Score: \", score]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"complexity\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"complexity-icon\",\n                children: \"\\uD83C\\uDFAF\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 19\n              }, this), difficulty]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 17\n            }, this), currentQuestion && !showFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `timer ${elapsedTime > 60 ? 'danger' : elapsedTime > 30 ? 'warning' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"timer-icon\",\n                children: \"\\u23F1\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 21\n              }, this), Math.floor(elapsedTime / 60), \":\", (elapsedTime % 60).toString().padStart(2, '0')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"new-architecture-button\",\n            onClick: loadNextArchitecture,\n            disabled: isLoading,\n            children: isLoading ? 'Loading...' : 'New Architecture'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this), architectureInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"architecture-description\",\n          children: architectureInfo.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 34\n        }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(AWSArchitectureDisplay, {\n            architecture: architecture,\n            currentQuestion: currentQuestion\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 302,\n            columnNumber: 17\n          }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Question: \", currentQuestion.text]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Optimization Focus: \", currentQuestion.optimizationFocus]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 21\n            }, this), showFeedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"feedback-content\",\n                children: [feedback.isCorrect ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                    children: [\"\\uD83C\\uDF89 Correct! +\", feedback.points, \" points\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 317,\n                    columnNumber: 31\n                  }, this), feedback.isOptimal && /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: \"\\uD83C\\uDF1F Perfect choice! This is the optimal solution.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 318,\n                    columnNumber: 54\n                  }, this)]\n                }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: \"\\u274C Not quite right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: feedback.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 27\n                }, this), currentMissingServiceIndex < (architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis = architectureInfo.missingServices) === null || _architectureInfo$mis === void 0 ? void 0 : _architectureInfo$mis.length) - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"next-button\",\n                  onClick: handleNext,\n                  children: [\"Next Service (\", currentMissingServiceIndex + 2, \" of \", architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis2 = architectureInfo.missingServices) === null || _architectureInfo$mis2 === void 0 ? void 0 : _architectureInfo$mis2.length, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"service-options\",\n              children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(DraggableService, {\n                service: option,\n                onClick: () => handleServiceSelection(option.name)\n              }, `${option.id}-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 338,\n                columnNumber: 27\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 336,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-status\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress\",\n            children: architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices ? `Service ${currentMissingServiceIndex + 1} of ${architectureInfo.missingServices.length}` : 'Loading...'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 266,\n    columnNumber: 7\n  }, this);\n};\n_s(AWSArchitectureGame, \"KPMhKTbRMHOYVvmeJHJVZpg7bxk=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c = AWSArchitectureGame;\nexport default AWSArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureGame\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","DndContext","useSensor","useSensors","PointerSensor","TouchSensor","DndProvider","HTML5Backend","AWSArchitectureDisplay","DraggableService","getCachedServiceIcon","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","Fragment","_Fragment","S3_BUCKET_URL","ICONS_BASE_PATH","API_URL","isValidArchitecture","data","Array","isArray","services","connections","console","warn","requiredMissingServices","serviceNames","map","service","name","every","ms","includes","join","connectionNodes","Set","forEach","conn","add","from","to","has","AWSArchitectureGame","_s","_architectureInfo$mis","_architectureInfo$mis2","isLoading","setIsLoading","error","setError","architecture","setArchitecture","architectureInfo","setArchitectureInfo","currentQuestion","setCurrentQuestion","difficulty","score","setScore","showFeedback","setShowFeedback","feedback","setFeedback","isCorrect","message","points","currentMissingServiceIndex","setCurrentMissingServiceIndex","questionStartTime","setQuestionStartTime","elapsedTime","setElapsedTime","sensors","activationConstraint","distance","getServiceIcon","serviceName","toLowerCase","log","cleanedServiceName","replace","potentialS3Url","resolvedIcon","loadNextArchitecture","_data$missingServices","attempt","isValid","maxAttempts","response","fetch","method","headers","body","JSON","stringify","status","Promise","resolve","setTimeout","ok","Error","json","transformedServices","id","icon","missingServices","length","currentMissingService","text","question","optimizationFocus","options","opt","isOptimal","explanation","rating","description","Date","now","handleServiceSelection","selectedService","selectedOption","find","prevScore","handleNext","nextIndex","nextMissingService","timer","setInterval","elapsed","Math","floor","clearInterval","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","toString","padStart","onClick","disabled","option","index","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\n\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n\nconst isValidArchitecture = (data) => {\n  if (!data || !Array.isArray(data.services) || !Array.isArray(data.connections)) {\n    console.warn(\"⚠️ Invalid JSON structure: Missing 'services' or 'connections'. Retrying...\");\n    return false;\n  }\n\n  const requiredMissingServices = ['missing_1', 'missing_2', 'missing_3'];\n\n  const serviceNames = data.services.map(service => \n    typeof service === 'string' ? service : service?.name\n  );\n\n  if (!requiredMissingServices.every(ms => serviceNames.includes(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing.`);\n    return false;\n  }\n\n  const connectionNodes = new Set();\n  data.connections.forEach(conn => {\n    connectionNodes.add(conn.from);\n    connectionNodes.add(conn.to);\n  });\n\n  if (!requiredMissingServices.every(ms => connectionNodes.has(ms))) {\n    console.warn(`⚠️ JSON is invalid: One or more missing services (${requiredMissingServices.join(', ')}) are missing from the connections.`);\n    return false;\n  }\n\n  return true;\n};\n\nconst AWSArchitectureGame = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [architecture, setArchitecture] = useState(null);\n    const [architectureInfo, setArchitectureInfo] = useState(null);\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [difficulty] = useState('BEGINNER');\n    const [score, setScore] = useState(0); \n    const [showFeedback, setShowFeedback] = useState(false);\n    const [feedback, setFeedback] = useState({ isCorrect: false, message: '', points: 0 });\n    const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n    const [questionStartTime, setQuestionStartTime] = useState(null);\n    const [elapsedTime, setElapsedTime] = useState(0);\n\n    const sensors = useSensors(\n      useSensor(PointerSensor, {\n        activationConstraint: {\n          distance: 8,\n        },\n      }),\n      useSensor(TouchSensor)\n    );\n\n    const getServiceIcon = (serviceName) => {\n      if (!serviceName) {\n        console.error('No service name provided to getServiceIcon');\n        return null;\n      }\n\n      if (serviceName.toLowerCase().includes('missing')) {\n        console.log('Loading missing service icon locally:', '/aws-icons/missing.svg');\n        return '/aws-icons/missing.svg';\n      }\n\n      const cleanedServiceName = serviceName\n        .toLowerCase()\n        .replace(/^(amazon|aws)\\s+/, '')\n        .replace(/\\s+/g, '-');\n        \n      const potentialS3Url = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/Arch_${cleanedServiceName}_64.svg`;\n      console.log(`🔍 Attempting to load icon for \"${serviceName}\" from: ${potentialS3Url}`);\n\n      const resolvedIcon = getCachedServiceIcon(serviceName);\n      \n      if (resolvedIcon) {\n        console.log(`✅ Successfully resolved icon for \"${serviceName}\": ${resolvedIcon}`);\n        return resolvedIcon;\n      }\n\n      console.warn(`❌ Icon not found for \"${serviceName}\" at attempted path: ${potentialS3Url}`);\n      return '/aws-icons/default.svg';\n    };\n\n    const loadNextArchitecture = useCallback(async () => {\n      if (isLoading) return;\n      setIsLoading(true);\n      setError(null);\n\n      let attempt = 0;\n      let isValid = false;\n      let data = null;\n      let maxAttempts = 7; // 5 attempts for invalid JSON + 2 extra for 503 errors\n\n      while (!isValid && attempt < maxAttempts) {\n        try {\n          console.log(`🔄 Attempt ${attempt + 1}: Fetching architecture data...`);\n          const response = await fetch(API_URL, {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({ difficulty })\n          });\n\n          if (response.status === 503) {\n            console.warn(\"⚠️ Received 503 error. Retrying...\");\n            attempt++;\n            await new Promise(resolve => setTimeout(resolve, 1000)); // Wait 1 second before retrying\n            continue;\n          }\n\n          if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n\n          data = await response.json();\n          console.log(\"📥 Received AI Response:\", JSON.stringify(data, null, 2));\n\n          isValid = isValidArchitecture(data);\n\n          if (!isValid) {\n            console.warn(`⛔ Invalid JSON structure. Retrying request...`);\n          } else {\n            console.log(\"✅ Valid architecture received, updating state...\");\n            break;\n          }\n        } catch (error) {\n          console.error(\"❌ Failed to load architecture:\", error);\n          if (attempt >= maxAttempts - 1) {\n            setError(error.message);\n            setIsLoading(false);\n            return;\n          }\n        }\n\n        attempt++;\n      }\n\n      if (!isValid) {\n        console.error(\"❌ Maximum retries reached. Unable to get valid JSON.\");\n        setError(\"Failed to fetch a valid architecture after multiple attempts.\");\n        setIsLoading(false);\n        return;\n      }\n\n      const transformedServices = data.services.map(serviceName => ({\n        id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n        name: serviceName,\n        icon: getServiceIcon(serviceName)\n      }));\n\n      setArchitecture({\n        services: transformedServices,\n        connections: data.connections\n      });\n\n      if (data.missingServices?.length > 0) {\n        const currentMissingService = data.missingServices[0];\n        setCurrentQuestion({\n          text: currentMissingService.question,\n          optimizationFocus: currentMissingService.optimizationFocus,\n          options: currentMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getServiceIcon(opt.service)\n          }))\n        });\n      }\n\n      setArchitectureInfo({\n        name: data.architecture.name,\n        description: data.architecture.description,\n        missingServices: data.missingServices\n      });\n\n      setCurrentMissingServiceIndex(0);\n      setShowFeedback(false);\n      setQuestionStartTime(Date.now());\n      setElapsedTime(0);\n      setIsLoading(false);\n    }, [difficulty]);\n\n    const handleServiceSelection = (selectedService) => {\n      if (!architectureInfo?.missingServices) return;\n      \n      const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n      const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n\n      if (selectedOption) {\n        setShowFeedback(true);\n        if (selectedOption.isCorrect) {\n          const points = selectedOption.rating;\n          setScore(prevScore => prevScore + points);\n          setFeedback({\n            isCorrect: true,\n            message: selectedOption.explanation,\n            points: points,\n            isOptimal: selectedOption.isOptimal\n          });\n        } else {\n          setFeedback({\n            isCorrect: false,\n            message: selectedOption.explanation,\n            points: 0\n          });\n        }\n      }\n    };\n\n    const handleNext = () => {\n      if (!architectureInfo?.missingServices) return;\n      \n      setShowFeedback(false);\n      if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n        const nextIndex = currentMissingServiceIndex + 1;\n        setCurrentMissingServiceIndex(nextIndex);\n        \n        const nextMissingService = architectureInfo.missingServices[nextIndex];\n        setCurrentQuestion({\n          text: nextMissingService.question,\n          optimizationFocus: nextMissingService.optimizationFocus,\n          options: nextMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getServiceIcon(opt.service)\n          }))\n        });\n        setQuestionStartTime(Date.now());\n        setElapsedTime(0);\n      }\n    };\n\n    useEffect(() => {\n      if (currentQuestion && !questionStartTime) {\n        setQuestionStartTime(Date.now());\n      }\n\n      const timer = setInterval(() => {\n        if (questionStartTime && !showFeedback) {\n          const elapsed = Math.floor((Date.now() - questionStartTime) / 1000);\n          setElapsedTime(elapsed);\n        }\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }, [currentQuestion, questionStartTime, showFeedback]);\n\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <DndContext sensors={sensors}>\n          <div className=\"game-container\">\n            <div className=\"game-header\">\n              <h2>{architectureInfo?.name || 'AWS Architecture Challenge'}</h2>\n              <div className=\"game-stats\">\n                <div className=\"score\">Score: {score}</div>\n                <div className=\"complexity\">\n                  <span className=\"complexity-icon\">🎯</span>\n                  {difficulty}\n                </div>\n                {currentQuestion && !showFeedback && (\n                  <div className={`timer ${\n                    elapsedTime > 60 ? 'danger' : \n                    elapsedTime > 30 ? 'warning' : ''\n                  }`}>\n                    <span className=\"timer-icon\">⏱️</span>\n                    {Math.floor(elapsedTime / 60)}:{(elapsedTime % 60).toString().padStart(2, '0')}\n                  </div>\n                )}\n              </div>\n              <button \n                className=\"new-architecture-button\"\n                onClick={loadNextArchitecture}\n                disabled={isLoading}\n              >\n                {isLoading ? 'Loading...' : 'New Architecture'}\n              </button>\n            </div>\n            \n            {architectureInfo && <p className=\"architecture-description\">{architectureInfo.description}</p>}\n            \n            {error ? (\n              <div className=\"error-message\">{error}</div>\n            ) : (\n              <>\n                <AWSArchitectureDisplay \n                  architecture={architecture}\n                  currentQuestion={currentQuestion}\n                />\n                \n                {currentQuestion && (\n                  <div className=\"question-container\">\n                    <h3>Question: {currentQuestion.text}</h3>\n                    <p>Optimization Focus: {currentQuestion.optimizationFocus}</p>\n                    \n                    {showFeedback ? (\n                      <div className={`feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'}`}>\n                        <div className=\"feedback-content\">\n                          {feedback.isCorrect ? (\n                            <>\n                              <h3>🎉 Correct! +{feedback.points} points</h3>\n                              {feedback.isOptimal && <p>🌟 Perfect choice! This is the optimal solution.</p>}\n                            </>\n                          ) : (\n                            <h3>❌ Not quite right</h3>\n                          )}\n                          <p>{feedback.message}</p>\n                          \n                          {currentMissingServiceIndex < (architectureInfo?.missingServices?.length - 1) && (\n                            <button \n                              className=\"next-button\"\n                              onClick={handleNext}\n                            >\n                              Next Service ({currentMissingServiceIndex + 2} of {architectureInfo?.missingServices?.length})\n                            </button>\n                          )}\n                        </div>\n                      </div>\n                    ) : (\n                      <div className=\"service-options\">\n                        {currentQuestion.options.map((option, index) => (\n                          <DraggableService\n                            key={`${option.id}-${index}`}\n                            service={option}\n                            onClick={() => handleServiceSelection(option.name)}\n                          />\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                )}\n              </>\n            )}\n            \n            <div className=\"game-status\">\n              <div className=\"progress\">\n                {architectureInfo?.missingServices ? \n                  `Service ${currentMissingServiceIndex + 1} of ${architectureInfo.missingServices.length}` :\n                  'Loading...'\n                }\n              </div>\n            </div>\n          </div>\n        </DndContext>\n      </DndProvider>\n    );\n};\n\nexport default AWSArchitectureGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}