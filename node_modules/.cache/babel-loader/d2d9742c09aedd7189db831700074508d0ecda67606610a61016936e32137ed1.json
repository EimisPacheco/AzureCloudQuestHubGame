{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { DataEncryptionKey } from \"./DataEncryptionKey\";\n/**\n * A wrapper class around `DataEncryptionKey` that stores it in a protected form.\n * The `ProtectedDataEncryptionKey` class extends `DataEncryptionKey` and holds both the raw key and its encrypted form.\n * It also includes information about the `KeyEncryptionKey` used to encrypt the data encryption key.\n * @hidden\n */\nexport class ProtectedDataEncryptionKey extends DataEncryptionKey {\n  constructor(name, keyEncryptionKey, rawKey, encryptedKey) {\n    super(rawKey, name);\n    this.name = name;\n    this.keyEncryptionKey = keyEncryptionKey;\n    this.encryptedValue = encryptedKey;\n  }\n}","map":{"version":3,"names":["DataEncryptionKey","ProtectedDataEncryptionKey","constructor","name","keyEncryptionKey","rawKey","encryptedKey","encryptedValue"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /node_modules/@azure/cosmos/src/encryption/EncryptionKey/ProtectedDataEncryptionKey.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport { DataEncryptionKey } from \"./DataEncryptionKey\";\nimport type { KeyEncryptionKey } from \"../KeyEncryptionKey\";\n\n/**\n * A wrapper class around `DataEncryptionKey` that stores it in a protected form.\n * The `ProtectedDataEncryptionKey` class extends `DataEncryptionKey` and holds both the raw key and its encrypted form.\n * It also includes information about the `KeyEncryptionKey` used to encrypt the data encryption key.\n * @hidden\n */\nexport class ProtectedDataEncryptionKey extends DataEncryptionKey {\n  public keyEncryptionKey: KeyEncryptionKey;\n\n  public encryptedValue: Buffer;\n\n  public name: string;\n\n  public constructor(\n    name: string,\n    keyEncryptionKey: KeyEncryptionKey,\n    rawKey: Buffer,\n    encryptedKey: Buffer,\n  ) {\n    super(rawKey, name);\n    this.name = name;\n    this.keyEncryptionKey = keyEncryptionKey;\n    this.encryptedValue = encryptedKey;\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA,SAASA,iBAAiB,QAAQ,qBAAqB;AAGvD;;;;;;AAMA,OAAM,MAAOC,0BAA2B,SAAQD,iBAAiB;EAO/DE,YACEC,IAAY,EACZC,gBAAkC,EAClCC,MAAc,EACdC,YAAoB;IAEpB,KAAK,CAACD,MAAM,EAAEF,IAAI,CAAC;IACnB,IAAI,CAACA,IAAI,GAAGA,IAAI;IAChB,IAAI,CAACC,gBAAgB,GAAGA,gBAAgB;IACxC,IAAI,CAACG,cAAc,GAAGD,YAAY;EACpC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}