{"ast":null,"code":"// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\nimport { RecoverDeletedKeyPollOperation } from \"./operation.js\";\nimport { KeyVaultKeyPoller } from \"../keyVaultKeyPoller.js\";\n/**\n * Class that deletes a poller that waits until a key finishes being deleted\n */\nexport class RecoverDeletedKeyPoller extends KeyVaultKeyPoller {\n  constructor(options) {\n    const {\n      vaultUrl,\n      client,\n      name,\n      operationOptions,\n      intervalInMs = 2000,\n      resumeFrom\n    } = options;\n    let state;\n    if (resumeFrom) {\n      state = JSON.parse(resumeFrom).state;\n    }\n    const operation = new RecoverDeletedKeyPollOperation(Object.assign(Object.assign({}, state), {\n      name\n    }), vaultUrl, client, operationOptions);\n    super(operation);\n    this.intervalInMs = intervalInMs;\n  }\n}","map":{"version":3,"names":["RecoverDeletedKeyPollOperation","KeyVaultKeyPoller","RecoverDeletedKeyPoller","constructor","options","vaultUrl","client","name","operationOptions","intervalInMs","resumeFrom","state","JSON","parse","operation","Object","assign"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /node_modules/@azure/keyvault-keys/src/lro/recover/poller.ts"],"sourcesContent":["// Copyright (c) Microsoft Corporation.\n// Licensed under the MIT License.\n\nimport {\n  RecoverDeletedKeyPollOperation,\n  RecoverDeletedKeyPollOperationState,\n} from \"./operation.js\";\nimport { KeyVaultKey } from \"../../keysModels.js\";\nimport { KeyVaultKeyPoller, KeyVaultKeyPollerOptions } from \"../keyVaultKeyPoller.js\";\n\n/**\n * Class that deletes a poller that waits until a key finishes being deleted\n */\nexport class RecoverDeletedKeyPoller extends KeyVaultKeyPoller<\n  RecoverDeletedKeyPollOperationState,\n  KeyVaultKey\n> {\n  constructor(options: KeyVaultKeyPollerOptions) {\n    const { vaultUrl, client, name, operationOptions, intervalInMs = 2000, resumeFrom } = options;\n\n    let state: RecoverDeletedKeyPollOperationState | undefined;\n\n    if (resumeFrom) {\n      state = JSON.parse(resumeFrom).state;\n    }\n\n    const operation = new RecoverDeletedKeyPollOperation(\n      {\n        ...state,\n        name,\n      },\n      vaultUrl,\n      client,\n      operationOptions,\n    );\n\n    super(operation);\n\n    this.intervalInMs = intervalInMs;\n  }\n}\n"],"mappings":"AAAA;AACA;AAEA,SACEA,8BAA8B,QAEzB,gBAAgB;AAEvB,SAASC,iBAAiB,QAAkC,yBAAyB;AAErF;;;AAGA,OAAM,MAAOC,uBAAwB,SAAQD,iBAG5C;EACCE,YAAYC,OAAiC;IAC3C,MAAM;MAAEC,QAAQ;MAAEC,MAAM;MAAEC,IAAI;MAAEC,gBAAgB;MAAEC,YAAY,GAAG,IAAI;MAAEC;IAAU,CAAE,GAAGN,OAAO;IAE7F,IAAIO,KAAsD;IAE1D,IAAID,UAAU,EAAE;MACdC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACH,UAAU,CAAC,CAACC,KAAK;IACtC;IAEA,MAAMG,SAAS,GAAG,IAAId,8BAA8B,CAAAe,MAAA,CAAAC,MAAA,CAAAD,MAAA,CAAAC,MAAA,KAE7CL,KAAK;MACRJ;IAAI,IAENF,QAAQ,EACRC,MAAM,EACNE,gBAAgB,CACjB;IAED,KAAK,CAACM,SAAS,CAAC;IAEhB,IAAI,CAACL,YAAY,GAAGA,YAAY;EAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}