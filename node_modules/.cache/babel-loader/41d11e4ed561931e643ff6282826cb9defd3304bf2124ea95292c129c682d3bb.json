{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/LanguageSelector.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SUPPORTED_LANGUAGES = [{\n  code: 'en',\n  name: 'English'\n}, {\n  code: 'es',\n  name: 'Spanish'\n}, {\n  code: 'fr',\n  name: 'French'\n}, {\n  code: 'de',\n  name: 'German'\n}, {\n  code: 'ja',\n  name: 'Japanese'\n}\n// Add more languages as needed\n];\nconst LanguageSelector = ({\n  currentLanguage,\n  onLanguageChange\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"select\", {\n    value: currentLanguage,\n    onChange: e => onLanguageChange(e.target.value),\n    className: \"language-selector\",\n    children: SUPPORTED_LANGUAGES.map(lang => /*#__PURE__*/_jsxDEV(\"option\", {\n      value: lang.code,\n      children: lang.name\n    }, lang.code, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_c = LanguageSelector;\nexport default LanguageSelector;\nvar _c;\n$RefreshReg$(_c, \"LanguageSelector\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","SUPPORTED_LANGUAGES","code","name","LanguageSelector","currentLanguage","onLanguageChange","value","onChange","e","target","className","children","map","lang","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/LanguageSelector.jsx"],"sourcesContent":["import React from 'react';\n\nconst SUPPORTED_LANGUAGES = [\n  { code: 'en', name: 'English' },\n  { code: 'es', name: 'Spanish' },\n  { code: 'fr', name: 'French' },\n  { code: 'de', name: 'German' },\n  { code: 'ja', name: 'Japanese' },\n  // Add more languages as needed\n];\n\nconst LanguageSelector = ({ currentLanguage, onLanguageChange }) => {\n  return (\n    <select \n      value={currentLanguage} \n      onChange={(e) => onLanguageChange(e.target.value)}\n      className=\"language-selector\"\n    >\n      {SUPPORTED_LANGUAGES.map(lang => (\n        <option key={lang.code} value={lang.code}>\n          {lang.name}\n        </option>\n      ))}\n    </select>\n  );\n};\n\nexport default LanguageSelector; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,mBAAmB,GAAG,CAC1B;EAAEC,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAU,CAAC,EAC/B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAS,CAAC,EAC9B;EAAED,IAAI,EAAE,IAAI;EAAEC,IAAI,EAAE;AAAW;AAC/B;AAAA,CACD;AAED,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,eAAe;EAAEC;AAAiB,CAAC,KAAK;EAClE,oBACEN,OAAA;IACEO,KAAK,EAAEF,eAAgB;IACvBG,QAAQ,EAAGC,CAAC,IAAKH,gBAAgB,CAACG,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;IAClDI,SAAS,EAAC,mBAAmB;IAAAC,QAAA,EAE5BX,mBAAmB,CAACY,GAAG,CAACC,IAAI,iBAC3Bd,OAAA;MAAwBO,KAAK,EAAEO,IAAI,CAACZ,IAAK;MAAAU,QAAA,EACtCE,IAAI,CAACX;IAAI,GADCW,IAAI,CAACZ,IAAI;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEd,CACT;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AAACC,EAAA,GAdIf,gBAAgB;AAgBtB,eAAeA,gBAAgB;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}