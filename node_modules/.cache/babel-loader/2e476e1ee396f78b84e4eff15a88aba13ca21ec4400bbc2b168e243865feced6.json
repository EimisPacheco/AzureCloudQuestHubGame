{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/GameCanvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AZURE_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\nimport CosmosDBService from '../services/CosmosDBService';\nimport PropTypes from 'prop-types';\n\n// Add these constants from IconResolver.js\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AZURE_BUCKET_URL = process.env.REACT_APP_AZURE_BUCKET_URL;\nconst ICONS_BASE_PATH = process.env.REACT_APP_ICONS_BASE_PATH;\nconst AZURE_ROCKET_PATH = `${AZURE_BUCKET_URL}/games/rocket`;\nconst DEFAULT_ROCKET = `${AZURE_ROCKET_PATH}/rocket1.png`;\nconst FIREBALL_PATH = `${AZURE_BUCKET_URL}/games/bullet/fireball.png`;\n\n// Add this at the top to log environment variables\nconsole.log(\"Environment Variables:\", {\n  AZURE_BUCKET_URL,\n  ICONS_BASE_PATH\n});\nconst GameCanvas = ({\n  onScoreUpdate,\n  onPlayerNameChange,\n  onGameOver,\n  leaderboard,\n  fetchLeaderboard\n}) => {\n  _s();\n  // First, declare all state\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameInitialized, setGameInitialized] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const savedRocket = localStorage.getItem('selectedRocket');\n    return savedRocket || null;\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({\n    x: 375,\n    y: 550\n  });\n\n  // Modify the instructions state initialization\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AZURE_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      // Get all categories instead of just one\n      return shuffled.map(category => {\n        const displayName = category.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');\n        return {\n          text: `Shoot the ${displayName} icons!`,\n          category: AZURE_ICON_CATEGORIES[category],\n          displayName: displayName\n        };\n      });\n    };\n    return getRandomCategories();\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => path.includes(instruction.category)).map(([name, path]) => ({\n        path: `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${path}`,\n        name: name\n      }));\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs\n  const gameLoopRef = useRef(null);\n  const canvasRef = useRef(null);\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n  const rocketImage = useRef(new Image());\n  const gameStateRef = useRef({\n    iconsCount: 0,\n    bulletsCount: 0,\n    timeLeft: 60,\n    score: 0,\n    changingCategory: false\n  });\n  const fireballImage = new Image();\n  fireballImage.src = FIREBALL_PATH;\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25,\n    y: 900 - 100,\n    width: 120,\n    height: 120\n  });\n\n  // Add image loading state\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n\n  // Update image loading logic\n  useEffect(() => {\n    const loadImages = async () => {\n      // Load rocket image\n      rocketImage.current = new Image();\n      rocketImage.current.src = selectedRocket || DEFAULT_ROCKET;\n      await new Promise(resolve => {\n        rocketImage.current.onload = resolve;\n        rocketImage.current.onerror = () => {\n          console.error('Failed to load rocket image');\n          resolve();\n        };\n      });\n\n      // Load bullet image\n      const bulletImage = new Image();\n      bulletImage.src = FIREBALL_PATH;\n      await new Promise(resolve => {\n        bulletImage.onload = resolve;\n        bulletImage.onerror = () => {\n          console.error('Failed to load bullet image');\n          resolve();\n        };\n      });\n      setImagesLoaded(true);\n    };\n    loadImages();\n  }, [selectedRocket]);\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    return Math.floor(Math.random() * (canvas.width - 50));\n  };\n\n  // Add this state at the top with other states\n  const [currentMission, setCurrentMission] = useState({\n    category: '',\n    displayName: '',\n    targetIcons: [],\n    text: ''\n  });\n\n  // Add a state for empty icons\n  const [iconsEmpty, setIconsEmpty] = useState(false);\n\n  // Single function to handle mission updates\n  const updateGameMission = (isInitial = false) => {\n    const categories = Object.keys(AZURE_ICON_CATEGORIES);\n    const shuffled = [...categories].sort(() => 0.5 - Math.random());\n    const selectedCategory = shuffled[0];\n    const displayName = selectedCategory.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');\n    const newMission = {\n      category: AZURE_ICON_CATEGORIES[selectedCategory],\n      displayName: displayName,\n      targetIcons: [],\n      text: `Shoot the ${displayName} icons!`\n    };\n\n    // Play level up sound when changing category (except initial load)\n    if (!isInitial) {\n      playSound('achievement');\n    }\n\n    // Add logging here to see what we're looking for\n    console.log('üîç Looking for icons in category:', newMission.category);\n    console.log('üìÇ Full SERVICE_MAPPINGS paths:', Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => path.includes(newMission.category)).map(([name, path]) => ({\n      name,\n      fullPath: `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${path}`,\n      relativePath: path\n    })));\n    const categoryIcons = Object.entries(SERVICE_MAPPINGS).filter(([_, path]) => path.includes(newMission.category)).map(([name]) => name);\n    if (categoryIcons.length === 0) {\n      console.error('‚ùå No icons found for category:', newMission.category);\n      console.error('üîç Searched in SERVICE_MAPPINGS:', SERVICE_MAPPINGS);\n      console.error('üéØ Looking for category path:', newMission.category);\n      return;\n    }\n    while (newMission.targetIcons.length < 4) {\n      const availableIcons = categoryIcons.filter(icon => newMission.targetIcons.filter(target => target === icon).length < 2);\n      if (availableIcons.length === 0) {\n        newMission.targetIcons.push(newMission.targetIcons[0]);\n      } else {\n        const randomIcon = availableIcons[Math.floor(Math.random() * availableIcons.length)];\n        newMission.targetIcons.push(randomIcon);\n      }\n    }\n    setCurrentMission(newMission);\n    console.log(`\\n${isInitial ? 'üéÆ INITIAL' : 'üîÑ CHANGING'} MISSION`);\n    console.log(`Selected Category: ${newMission.displayName}`);\n    console.log('Selected Target Icons:', newMission.targetIcons);\n    generateNewIcons(newMission.category, newMission.targetIcons);\n    if (!isInitial) {\n      setIconsEmpty(false);\n    }\n  };\n\n  // Add to rocket options to log rocket paths\n  const rocketOptions = [{\n    id: `${AZURE_ROCKET_PATH}/rocket1.png`,\n    name: 'Modern Rocket'\n  }, {\n    id: `${AZURE_ROCKET_PATH}/rocket2.png`,\n    name: 'Power Rocket'\n  }, {\n    id: `${AZURE_ROCKET_PATH}/rocket3.png`,\n    name: 'Stealth Rocket'\n  }, {\n    id: `${AZURE_ROCKET_PATH}/rocket4.png`,\n    name: 'Classic Rocket'\n  }];\n\n  // Log rocket paths when component loads\n  useEffect(() => {\n    console.log(\"Rocket paths:\", rocketOptions.map(rocket => rocket.id));\n    console.log(\"AZURE_ROCKET_PATH:\", AZURE_ROCKET_PATH);\n  }, []);\n\n  // Modify handleRocketSelect to add better logging\n  const handleRocketSelect = rocketId => {\n    console.log(\"üöÄ Rocket selected:\", rocketId);\n    setSelectedRocket(rocketId);\n    localStorage.setItem('selectedRocket', rocketId);\n    console.log(\"Setting rocket image source to:\", rocketId);\n    rocketImage.current.src = rocketId;\n\n    // Debug any errors with image loading\n    rocketImage.current.onerror = e => {\n      console.error(\"‚ùå ERROR LOADING ROCKET IMAGE:\", e);\n      console.error(\"Failed URL:\", rocketId);\n    };\n    setShowRocketModal(false);\n    setGameStarted(true);\n    setGameInitialized(true);\n    console.log(\"Starting game mission...\");\n    try {\n      updateGameMission(true);\n    } catch (error) {\n      console.error(\"‚ùå ERROR STARTING MISSION:\", error);\n    }\n  };\n\n  // Use effect for when icons reach bottom\n  useEffect(() => {\n    if (!iconsEmpty || !gameStarted || !timeLeft) return;\n    updateGameMission(false);\n  }, [iconsEmpty, gameStarted, timeLeft]);\n\n  // Separate useEffect for game loop\n  useEffect(() => {\n    if (!gameInitialized || !canvasRef.current) return;\n    console.log(\"Starting game loop\");\n    const gameLoopId = requestAnimationFrame(gameLoop);\n    return () => {\n      console.log(\"Cleaning up game loop\");\n      cancelAnimationFrame(gameLoopId);\n    };\n  }, [gameInitialized]);\n\n  // Separate useEffect for initial mission\n  useEffect(() => {\n    if (!gameInitialized || !currentMission.category) return;\n    console.log(\"Setting up initial mission\");\n    generateNewIcons(currentMission.category, currentMission.targetIcons);\n  }, [gameInitialized, currentMission.category]);\n\n  // Show feedback\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now()\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter(bullet => {\n        if (bullet.x > icon.x && bullet.x < icon.x + 50 && bullet.y > icon.y && bullet.y < icon.y + 50) {\n          icon.hit = true;\n\n          // Check if this is a target icon\n          const isCorrectIcon = icon.isTarget;\n          if (isCorrectIcon) {\n            const heightPercentage = 1 - icon.y / canvas.height;\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            setScore(prev => {\n              if (prev + points > Math.max(...leaderboard.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore(prev => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n  };\n\n  // The main game loop\n  const gameLoop = useCallback(() => {\n    if (!canvasRef.current || !imagesLoaded) return;\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Update game state ref silently\n    gameStateRef.current = {\n      iconsCount: iconsRef.current.length,\n      bulletsCount: bulletsRef.current.length,\n      timeLeft: timeLeft,\n      score: score\n    };\n    if (gameStarted) {\n      // Draw the rocket (gun)\n      const {\n        x: gunX,\n        y: gunY,\n        width,\n        height\n      } = gunRef.current;\n      ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n\n      // Draw icons\n      iconsRef.current.forEach(icon => {\n        if (!icon.hit) {\n          ctx.save();\n          const radius = 10;\n          const x = icon.x;\n          const y = icon.y;\n          const width = 50;\n          const height = 50;\n          ctx.beginPath();\n          ctx.moveTo(x + radius, y);\n          ctx.lineTo(x + width - radius, y);\n          ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n          ctx.lineTo(x + width, y + height - radius);\n          ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n          ctx.lineTo(x + radius, y + height);\n          ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n          ctx.lineTo(x, y + radius);\n          ctx.quadraticCurveTo(x, y, x + radius, y);\n          ctx.closePath();\n          ctx.clip();\n          ctx.drawImage(icon.image, x, y, width, height);\n          ctx.restore();\n          icon.y += 0.7;\n        }\n      });\n\n      // Filter icons off-screen\n      iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n\n      // Check for empty icons and generate new category\n      if (iconsRef.current.length === 0 && !iconsEmpty) {\n        setIconsEmpty(true);\n      }\n\n      // Draw bullets\n      bulletsRef.current.forEach(bullet => {\n        ctx.drawImage(fireballImage, bullet.x, bullet.y, 20, 20);\n        bullet.y -= 5;\n      });\n      bulletsRef.current = bulletsRef.current.filter(b => b.y > 0);\n\n      // Draw feedback\n      const now = Date.now();\n      feedbacksRef.current = feedbacksRef.current.filter(feedback => {\n        const elapsed = now - feedback.time;\n        if (elapsed < 3000) {\n          ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n          ctx.shadowBlur = 4;\n          ctx.fillStyle = feedback.isCorrect ? '#4CAF50' : '#F44336';\n          ctx.font = 'bold 28px Arial';\n\n          // Points text\n          const pointsText = feedback.points > 0 ? `+${feedback.points}` : `${feedback.points}`;\n          ctx.fillText(pointsText, feedback.x + 10, feedback.y - 20);\n\n          // Icon name\n          ctx.font = '16px Arial';\n          ctx.fillText(feedback.name, feedback.x + 60, feedback.y + 25);\n\n          // Checkmark or X\n          ctx.font = 'bold 55px Arial';\n          ctx.fillText(feedback.isCorrect ? '‚úî' : '‚úò', feedback.x + 10, feedback.y + 30);\n          ctx.shadowBlur = 0;\n          return true;\n        }\n        return false;\n      });\n      checkCollisions();\n\n      // Update and draw particles\n      particlesRef.current = particlesRef.current.filter(particle => {\n        if (particle.lifetime > 0 && particle.size > 0) {\n          particle.update();\n          particle.draw(ctx);\n          return true;\n        }\n        return false;\n      });\n    }\n\n    // Only request next frame if game is still running\n    if (gameStarted && !gameOver) {\n      requestAnimationFrame(gameLoop);\n    }\n  }, [imagesLoaded, gameStarted, timeLeft, score, iconsEmpty, gameOver, playSound]);\n\n  // Sounds\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Ensure sound files are defined correctly using AZURE_BUCKET_URL\n  const soundFiles = {\n    shoot: `${AZURE_BUCKET_URL}/games/sounds/pistol_sound.mp3`,\n    correct: `${AZURE_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n    incorrect: `${AZURE_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n    hover: `${AZURE_BUCKET_URL}/games/sounds/hover.mp3`,\n    achievement: `${AZURE_BUCKET_URL}/games/sounds/levelup.mp3`\n  };\n  const createSafeAudio = async path => {\n    const audio = new Audio();\n    return new Promise(resolve => {\n      audio.addEventListener('error', () => {\n        console.warn(`Sound file not found: ${path}`);\n        resolve(null);\n      });\n      audio.addEventListener('canplaythrough', () => {\n        resolve(audio);\n      });\n      setTimeout(() => resolve(null), 2000);\n      audio.src = path;\n    });\n  };\n\n  // Load sounds\n  useEffect(() => {\n    const loadSounds = async () => {\n      const soundPromises = Object.entries(soundFiles).map(async ([name, path]) => {\n        try {\n          const audio = await createSafeAudio(path);\n          return [name, audio];\n        } catch (error) {\n          console.error(`Failed to load sound ${name}:`, error);\n          return [name, null];\n        }\n      });\n      try {\n        const loadedSounds = await Promise.all(soundPromises);\n        const soundsMap = Object.fromEntries(loadedSounds);\n        sounds.current = soundsMap;\n        const hasLoadedSounds = Object.values(soundsMap).some(sound => sound !== null);\n        setSoundsLoaded(hasLoadedSounds);\n        if (hasLoadedSounds) {\n          console.log('üîä Sounds loaded successfully');\n        } else {\n          console.warn('‚ö†Ô∏è No sounds could be loaded');\n        }\n      } catch (error) {\n        console.error('Failed to load sounds:', error);\n      }\n    };\n    loadSounds();\n  }, [createSafeAudio]);\n  const [isMuted, setIsMuted] = useState(false);\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !sound.muted;\n      }\n    });\n  };\n\n  // Ensure playSound function is working\n  const playSound = useCallback(soundName => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  }, [isMuted]);\n\n  // Particles and timer\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n  useEffect(() => {\n    return () => {\n      setGameStarted(false);\n      setShowRocketModal(true);\n    };\n  }, []);\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size;\n    }\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n    draw(ctx) {\n      if (this.size <= 0) return;\n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1 && !gameOverHandled) {\n            clearInterval(timer);\n            handleGameOver();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [timeLeft, gameOver, gameStarted, gameOverHandled]);\n  const handleGameOver = async () => {\n    if (gameOverHandled) return;\n    setGameOver(true);\n    setGameOverHandled(true);\n\n    // Clear the game loop\n    if (gameLoopRef.current) {\n      clearInterval(gameLoopRef.current);\n      gameLoopRef.current = null;\n    }\n\n    // Only save score if we have a valid player name and score\n    if (playerName && score > 0 && onGameOver) {\n      try {\n        await onGameOver(); // Let parent handle score saving\n        // Fetch updated leaderboard after saving score\n        if (fetchLeaderboard) {\n          await fetchLeaderboard();\n        }\n      } catch (error) {\n        console.error('Failed to save score:', error);\n      }\n    }\n  };\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const handleMouseMove = e => {\n      const rect = canvas.getBoundingClientRect();\n      let newX = e.clientX - rect.left - gunRef.current.width / 2;\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n      gunRef.current.x = newX;\n    };\n    const handleCanvasClick = () => {\n      if (gameStarted && timeLeft > 0 && !gameOver) {\n        playSound('shoot');\n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20\n        });\n      }\n    };\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted, timeLeft, gameOver, playSound]);\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n  const [showRocketModal, setShowRocketModal] = useState(true);\n  const cheerleaderMessages = {\n    goodShot: [\"Great shot! You're an Azure Pro! üåü\", \"Amazing cloud skills! Keep it up! üéØ\", \"You're on fire in the cloud! üî•\", \"That's how Azure experts do it! üëè\"],\n    combo: [\"Cloud combo! üéÆ\", \"You're scaling infinitely! ‚ö°\", \"What an Azure streak! üåà\"],\n    timeWarning: [\"30 seconds left - you're highly available! ‚è∞\", \"Time for the final deployment! üí™\", \"Make every compute unit count! ‚≠ê\"],\n    encouragement: [\"You've got this, cloud warrior! üöÄ\", \"Keep going! You're Azure certified material! \", \"I believe in your cloud powers! üí´\", \"Show them your Azure expertise! üí™\"],\n    highScore: [\"New high score! You're going serverless! üèÜ\", \"You're breaking cloud records! üéñÔ∏è\", \"Legendary Azure performance! üëë\"]\n  };\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n  const showCheerleaderMessage = category => {\n    if (!cheerleaderMessages[category]) {\n      console.warn('Invalid cheerleader message category:', category);\n      return;\n    }\n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    console.log('Showing cheerleader message:', randomMessage); // Debug log\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n\n    // Clear the message after delay\n    setTimeout(() => {\n      setShowCheerMessage(false);\n      setCheerMessage('');\n    }, 3000);\n  };\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    const name = tempPlayerName.trim();\n    setPlayerName(name);\n    if (onPlayerNameChange) {\n      onPlayerNameChange(name);\n    }\n    setShowNameModal(false);\n    setShowRocketModal(true);\n  };\n\n  // Ensure generateNewIcons handles missing icons gracefully\n  const generateNewIcons = (category, targetIcons) => {\n    console.log('\\n==== GENERATING NEW ICONS ====');\n    console.log('Current Category:', category);\n    console.log('Target Icons:', targetIcons);\n    if (!targetIcons || targetIcons.length !== 4) {\n      console.error('‚ùå Invalid target icons count:', targetIcons === null || targetIcons === void 0 ? void 0 : targetIcons.length);\n      return;\n    }\n    iconsRef.current = [];\n    const positions = [];\n\n    // Get ALL possible distractor icons\n    const otherIcons = Object.entries(SERVICE_MAPPINGS).filter(([name, path]) => {\n      const isCurrentCategory = path.includes(category);\n      const isTargetIcon = targetIcons.includes(name);\n      return !isCurrentCategory && !isTargetIcon;\n    }).map(([name, path]) => ({\n      path: `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${path}`,\n      name: name,\n      category: path.split('/')[1]\n    }));\n\n    // Always select exactly 6 distractor icons\n    const selectedOtherIcons = [...otherIcons].sort(() => 0.5 - Math.random()).slice(0, 6);\n    if (selectedOtherIcons.length < 6) {\n      console.error('‚ùå Not enough distractor icons:', selectedOtherIcons.length);\n      selectedOtherIcons.forEach(icon => console.log('Missing Icon URL:', icon.path));\n      return;\n    }\n\n    // Combine all icons (4 targets + 6 distractors = 10 total)\n    const gameIcons = [...targetIcons.map(name => ({\n      path: `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${SERVICE_MAPPINGS[name]}`,\n      name: name,\n      category: category,\n      isTarget: true\n    })), ...selectedOtherIcons.map(icon => ({\n      ...icon,\n      isTarget: false\n    }))];\n    console.log('\\nAdding Icons to Game:');\n    console.log('Total Icons:', gameIcons.length);\n    console.log('Target Icons:', gameIcons.filter(icon => icon.isTarget).map(icon => icon.name));\n    console.log('Distractor Icons:', gameIcons.filter(icon => !icon.isTarget).map(icon => icon.name));\n\n    // Add all icons to the game\n    gameIcons.forEach(iconInfo => {\n      let x = getRandomX();\n      while (positions.some(pos => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: iconInfo.category,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false,\n        isTarget: iconInfo.isTarget\n      });\n    });\n    console.log('\\nIcons Generated Successfully');\n    console.log('============================\\n');\n\n    // Add this near the top of the function\n    console.log(\"Icon path example:\", `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${Object.values(SERVICE_MAPPINGS)[0]}`);\n  };\n\n  // Mission Display component with null check\n  const MissionDisplay = () => {\n    if (!currentMission.text) return null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-mission-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"gameCanvas-mission-title\",\n        children: \"Current Mission\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 854,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-mission-text\",\n        children: currentMission.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 857,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 853,\n      columnNumber: 7\n    }, this);\n  };\n\n  // Add console logs to track state changes\n  useEffect(() => {\n    console.log('Mission Updated:', currentMission);\n  }, [currentMission]);\n  useEffect(() => {\n    console.log('Game Started:', gameStarted);\n  }, [gameStarted]);\n\n  // Add this after the canvas ref declaration\n  useEffect(() => {\n    if (canvasRef.current) {\n      canvasRef.current.width = 1200; // Match the CSS width\n      canvasRef.current.height = 900; // Match the CSS height\n    }\n  }, []);\n\n  // Add this function to retrieve the nickname\n  const getNickname = () => {\n    return localStorage.getItem('userNickname') || playerName || 'Anonymous';\n  };\n\n  // Update handleStartGame function\n  const handleStartGame = () => {\n    setShowWelcome(false);\n    setGameStarted(true);\n    setGameOver(false);\n    setScore(0);\n    if (onPlayerNameChange) {\n      onPlayerNameChange(playerName);\n    }\n    // Fetch leaderboard only when game starts\n    if (fetchLeaderboard) {\n      fetchLeaderboard();\n    }\n    startGame();\n  };\n\n  // Update score display section to use CosmosDB leaderboard\n  const renderHighScores = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-high-scores\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"HIGH SCORES\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 905,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: leaderboard.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [entry.nickname, \":\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 909,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: entry.score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 910,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 908,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 906,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 904,\n    columnNumber: 5\n  }, this);\n\n  // Update score tracking to ensure parent component has current score\n  useEffect(() => {\n    if (onScoreUpdate && score > 0) {\n      onScoreUpdate(score);\n    }\n  }, [score, onScoreUpdate]);\n\n  // Update the game loop initialization\n  const startGame = () => {\n    if (gameLoopRef.current) {\n      clearInterval(gameLoopRef.current);\n    }\n    setGameStarted(true);\n    setGameOver(false);\n    setScore(0);\n    setTimeLeft(60);\n\n    // Start the game loop\n    gameLoopRef.current = setInterval(() => {\n      updateGame();\n      drawGame();\n    }, 1000 / 60); // 60 FPS\n  };\n\n  // Add cleanup for game loop\n  useEffect(() => {\n    return () => {\n      if (gameLoopRef.current) {\n        clearInterval(gameLoopRef.current);\n        gameLoopRef.current = null;\n      }\n    };\n  }, []);\n\n  // Ensure drawImage is called only if the image is loaded\n  const drawGame = () => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Check if the rocket image is loaded before drawing\n    if (rocketImage.current.complete && rocketImage.current.naturalHeight !== 0) {\n      ctx.drawImage(rocketImage.current, rocketPosition.x, rocketPosition.y);\n    } else {\n      console.warn(\"Rocket image not loaded, skipping drawImage\");\n    }\n\n    // Rest of your drawing logic...\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameCanvas-game-title\",\n      style: {\n        '--azure-icon': `url(${process.env.PUBLIC_URL}/azure-icons/Microsoft_Azure_Cyan.svg)`\n      },\n      children: \"ZURE CLOUD SHOOTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 969,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-canvas-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: canvasRef,\n          className: \"gameCanvas-game-canvas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 977,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 976,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-instruction-panel\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-player-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-player-name\",\n            children: [\"PLAYER: \", playerName]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 981,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 980,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-score-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-score-display\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"alien\",\n              children: \"\\uD83D\\uDC7E\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 15\n            }, this), \" Score: \", score, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              role: \"img\",\n              \"aria-label\": \"joystick\",\n              children: \"\\uD83D\\uDD79\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 76\n            }, this), soundsLoaded && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"gameCanvas-sound-toggle\",\n              onClick: toggleMute,\n              \"aria-label\": \"Toggle sound\",\n              style: {\n                marginLeft: '8px',\n                display: 'inline-block'\n              },\n              children: isMuted ? 'üîá' : 'üîä'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 990,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-timer-box\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-timer-display\",\n            children: [\"TIME: \", timeLeft, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1003,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1002,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-score-explanation\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"How to Score:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1009,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Hit correct icon: +5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1011,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Height bonus: up to +20\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1012,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Wrong hit: -5 points\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1013,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2022 Tip: Shoot icons as high as possible!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1014,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1010,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1008,\n          columnNumber: 11\n        }, this), renderHighScores(), currentMission.text && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-mission-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"gameCanvas-mission-title\",\n            children: \"Current Mission\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1022,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-mission-text\",\n            children: currentMission.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1025,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1021,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 979,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 975,\n      columnNumber: 7\n    }, this), showRocketModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-rocket-selection-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Choose Your Rocket\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1036,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-rocket-grid\",\n          children: rocketOptions.map(rocket => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `gameCanvas-rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`,\n            onClick: () => handleRocketSelect(rocket.id),\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: rocket.id,\n              alt: rocket.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1044,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: rocket.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1048,\n              columnNumber: 19\n            }, this)]\n          }, rocket.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1039,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1037,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1035,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1034,\n      columnNumber: 9\n    }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Time's Up!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1058,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => window.location.reload(),\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1059,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1057,\n      columnNumber: 9\n    }, this), showCheerMessage && cheerMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-cheerleader-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheerleader-character\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/utilities/cheerleader.png`,\n          alt: \"Cheerleader\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1068,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1067,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-cheer-message\",\n        style: {\n          backgroundColor: 'rgba(0, 255, 255, 0.1)',\n          border: '2px solid #00ffff',\n          borderRadius: '10px',\n          padding: '15px',\n          color: '#00ffff',\n          fontSize: '1.2em',\n          textAlign: 'center',\n          minWidth: '200px',\n          maxWidth: '400px',\n          margin: '10px',\n          boxShadow: '0 0 10px rgba(0, 255, 255, 0.3)',\n          zIndex: 1000\n        },\n        children: cheerMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1073,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1066,\n      columnNumber: 9\n    }, this), showNameModal && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Welcome to Azure Cloud Shooter!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1095,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Enter your name to start the game:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1096,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempPlayerName,\n            onChange: e => {\n              setTempPlayerName(e.target.value);\n              setNameError('');\n            },\n            placeholder: \"Your name\",\n            className: \"gameCanvas-name-input\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1098,\n            columnNumber: 15\n          }, this), nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-name-error\",\n            children: nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"gameCanvas-start-button\",\n            children: \"Start Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1097,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1094,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1093,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 968,\n    columnNumber: 5\n  }, this);\n};\n\n// Add prop types\n_s(GameCanvas, \"ikOuEW2vs8HPBQkpf6RRo5nossk=\");\n_c = GameCanvas;\nGameCanvas.propTypes = {\n  onScoreUpdate: PropTypes.func,\n  onPlayerNameChange: PropTypes.func,\n  onGameOver: PropTypes.func,\n  leaderboard: PropTypes.array,\n  fetchLeaderboard: PropTypes.func\n};\nexport default GameCanvas;\nvar _c;\n$RefreshReg$(_c, \"GameCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","useCallback","AZURE_ICON_CATEGORIES","SERVICE_MAPPINGS","CosmosDBService","PropTypes","jsxDEV","_jsxDEV","AZURE_BUCKET_URL","process","env","REACT_APP_AZURE_BUCKET_URL","ICONS_BASE_PATH","REACT_APP_ICONS_BASE_PATH","AZURE_ROCKET_PATH","DEFAULT_ROCKET","FIREBALL_PATH","console","log","GameCanvas","onScoreUpdate","onPlayerNameChange","onGameOver","leaderboard","fetchLeaderboard","_s","gameStarted","setGameStarted","gameInitialized","setGameInitialized","timeLeft","setTimeLeft","score","setScore","currentInstructionIndex","setCurrentInstructionIndex","selectedRocket","setSelectedRocket","savedRocket","localStorage","getItem","showNameModal","setShowNameModal","tempPlayerName","setTempPlayerName","nameError","setNameError","playerName","setPlayerName","savedName","rocketPosition","setRocketPosition","x","y","instructions","getRandomCategories","categories","Object","keys","shuffled","sort","Math","random","map","category","displayName","split","word","charAt","toUpperCase","slice","toLowerCase","join","text","iconTypes","reduce","acc","instruction","categoryServices","entries","filter","_","path","includes","name","gameLoopRef","canvasRef","iconsRef","bulletsRef","feedbacksRef","rocketImage","Image","gameStateRef","iconsCount","bulletsCount","changingCategory","fireballImage","src","gunRef","width","height","imagesLoaded","setImagesLoaded","loadImages","current","Promise","resolve","onload","onerror","error","bulletImage","getRandomX","canvas","floor","currentMission","setCurrentMission","targetIcons","iconsEmpty","setIconsEmpty","updateGameMission","isInitial","selectedCategory","newMission","playSound","fullPath","relativePath","categoryIcons","length","availableIcons","icon","target","push","randomIcon","generateNewIcons","rocketOptions","id","rocket","handleRocketSelect","rocketId","setItem","e","setShowRocketModal","gameLoopId","requestAnimationFrame","gameLoop","cancelAnimationFrame","showFeedback","isCorrect","points","iconName","time","Date","now","checkCollisions","bullets","icons","forEach","iconIndex","bullet","hit","isCorrectIcon","isTarget","heightPercentage","heightBonus","prev","max","s","showCheerleaderMessage","createExplosion","splice","ctx","getContext","clearRect","gunX","gunY","drawImage","save","radius","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","clip","image","restore","b","feedback","elapsed","shadowColor","shadowBlur","fillStyle","font","pointsText","fillText","particlesRef","particle","lifetime","size","update","draw","gameOver","sounds","soundsLoaded","setSoundsLoaded","soundFiles","shoot","correct","incorrect","hover","achievement","createSafeAudio","audio","Audio","addEventListener","warn","setTimeout","loadSounds","soundPromises","loadedSounds","all","soundsMap","fromEntries","hasLoadedSounds","values","some","sound","isMuted","setIsMuted","toggleMute","muted","soundName","currentTime","volume","play","catch","err","setGameOver","gameOverHandled","setGameOverHandled","Particle","constructor","color","speedX","speedY","initialSize","globalAlpha","arc","PI","fill","i","timer","setInterval","clearInterval","handleGameOver","handleMouseMove","rect","getBoundingClientRect","newX","clientX","left","min","handleCanvasClick","removeEventListener","removeItem","showRocketModal","cheerleaderMessages","goodShot","combo","timeWarning","encouragement","highScore","cheerMessage","setCheerMessage","showCheerMessage","setShowCheerMessage","messages","randomMessage","encouragementInterval","handleNameSubmit","preventDefault","trim","positions","otherIcons","isCurrentCategory","isTargetIcon","selectedOtherIcons","gameIcons","iconInfo","pos","abs","iconImage","type","MissionDisplay","className","children","fileName","_jsxFileName","lineNumber","columnNumber","getNickname","handleStartGame","setShowWelcome","startGame","renderHighScores","entry","index","nickname","updateGame","drawGame","complete","naturalHeight","style","PUBLIC_URL","ref","role","onClick","marginLeft","display","alt","window","location","reload","backgroundColor","border","borderRadius","padding","fontSize","textAlign","minWidth","maxWidth","margin","boxShadow","zIndex","onSubmit","value","onChange","placeholder","autoFocus","_c","propTypes","func","array","$RefreshReg$"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/GameCanvas.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState, useCallback } from 'react';\nimport '../styles/GameCanvas.css';\nimport { AZURE_ICON_CATEGORIES, SERVICE_MAPPINGS } from '../services/IconResolver';\nimport CosmosDBService from '../services/CosmosDBService';\nimport PropTypes from 'prop-types';\n\n// Add these constants from IconResolver.js\nconst AZURE_BUCKET_URL = process.env.REACT_APP_AZURE_BUCKET_URL;\nconst ICONS_BASE_PATH = process.env.REACT_APP_ICONS_BASE_PATH;\nconst AZURE_ROCKET_PATH = `${AZURE_BUCKET_URL}/games/rocket`;\nconst DEFAULT_ROCKET = `${AZURE_ROCKET_PATH}/rocket1.png`;\nconst FIREBALL_PATH = `${AZURE_BUCKET_URL}/games/bullet/fireball.png`;\n\n// Add this at the top to log environment variables\nconsole.log(\"Environment Variables:\", {\n  AZURE_BUCKET_URL,\n  ICONS_BASE_PATH\n});\n\nconst GameCanvas = ({ onScoreUpdate, onPlayerNameChange, onGameOver, leaderboard, fetchLeaderboard }) => {\n  // First, declare all state\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameInitialized, setGameInitialized] = useState(false);\n  const [timeLeft, setTimeLeft] = useState(60);\n  const [score, setScore] = useState(0);\n  const [currentInstructionIndex, setCurrentInstructionIndex] = useState(0);\n  const [selectedRocket, setSelectedRocket] = useState(() => {\n    const savedRocket = localStorage.getItem('selectedRocket');\n    return savedRocket || null;\n  });\n  const [showNameModal, setShowNameModal] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState(() => {\n    const savedName = localStorage.getItem('playerName');\n    return savedName || '';\n  });\n  const [rocketPosition, setRocketPosition] = useState({ x: 375, y: 550 });\n\n  // Modify the instructions state initialization\n  const [instructions] = useState(() => {\n    const getRandomCategories = () => {\n      const categories = Object.keys(AZURE_ICON_CATEGORIES);\n      const shuffled = [...categories].sort(() => 0.5 - Math.random());\n      // Get all categories instead of just one\n      return shuffled.map(category => {\n        const displayName = category.split('_')\n          .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n          .join(' ');\n        \n        return {\n          text: `Shoot the ${displayName} icons!`,\n          category: AZURE_ICON_CATEGORIES[category],\n          displayName: displayName\n        };\n      });\n    };\n\n    return getRandomCategories();\n  });\n\n  // Generate iconTypes based on the selected categories\n  const [iconTypes] = useState(() => {\n    return instructions.reduce((acc, instruction) => {\n      const categoryServices = Object.entries(SERVICE_MAPPINGS)\n        .filter(([_, path]) => path.includes(instruction.category))\n        .map(([name, path]) => ({\n          path: `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${path}`,\n          name: name\n        }));\n\n      acc[instruction.category] = categoryServices;\n      return acc;\n    }, {});\n  });\n\n  // Then declare refs\n  const gameLoopRef = useRef(null);\n  const canvasRef = useRef(null);\n  const iconsRef = useRef([]);\n  const bulletsRef = useRef([]);\n  const feedbacksRef = useRef([]);\n  const rocketImage = useRef(new Image());\n  const gameStateRef = useRef({\n    iconsCount: 0,\n    bulletsCount: 0,\n    timeLeft: 60,\n    score: 0,\n    changingCategory: false\n  });\n  const fireballImage = new Image();\n  fireballImage.src = FIREBALL_PATH;\n\n  // Gun info\n  const gunRef = useRef({\n    x: 400 - 25,\n    y: 900 - 100,\n    width: 120,\n    height: 120,\n  });\n\n  // Add image loading state\n  const [imagesLoaded, setImagesLoaded] = useState(false);\n\n  // Update image loading logic\n  useEffect(() => {\n    const loadImages = async () => {\n      // Load rocket image\n      rocketImage.current = new Image();\n      rocketImage.current.src = selectedRocket || DEFAULT_ROCKET;\n      \n      await new Promise((resolve) => {\n        rocketImage.current.onload = resolve;\n        rocketImage.current.onerror = () => {\n          console.error('Failed to load rocket image');\n          resolve();\n        };\n      });\n\n      // Load bullet image\n      const bulletImage = new Image();\n      bulletImage.src = FIREBALL_PATH;\n      \n      await new Promise((resolve) => {\n        bulletImage.onload = resolve;\n        bulletImage.onerror = () => {\n          console.error('Failed to load bullet image');\n          resolve();\n        };\n      });\n\n      setImagesLoaded(true);\n    };\n\n    loadImages();\n  }, [selectedRocket]);\n\n  // Function to get random X\n  const getRandomX = () => {\n    const canvas = canvasRef.current;\n    return Math.floor(Math.random() * (canvas.width - 50));\n  };\n\n  // Add this state at the top with other states\n  const [currentMission, setCurrentMission] = useState({\n    category: '',\n    displayName: '',\n    targetIcons: [],\n    text: ''\n  });\n\n  // Add a state for empty icons\n  const [iconsEmpty, setIconsEmpty] = useState(false);\n\n  // Single function to handle mission updates\n  const updateGameMission = (isInitial = false) => {\n    const categories = Object.keys(AZURE_ICON_CATEGORIES);\n    const shuffled = [...categories].sort(() => 0.5 - Math.random());\n    const selectedCategory = shuffled[0];\n    const displayName = selectedCategory.split('_')\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n      .join(' ');\n\n    const newMission = {\n      category: AZURE_ICON_CATEGORIES[selectedCategory],\n      displayName: displayName,\n      targetIcons: [],\n      text: `Shoot the ${displayName} icons!`\n    };\n\n    // Play level up sound when changing category (except initial load)\n    if (!isInitial) {\n      playSound('achievement');\n    }\n\n    // Add logging here to see what we're looking for\n    console.log('üîç Looking for icons in category:', newMission.category);\n    console.log('üìÇ Full SERVICE_MAPPINGS paths:', Object.entries(SERVICE_MAPPINGS)\n      .filter(([_, path]) => path.includes(newMission.category))\n      .map(([name, path]) => ({\n        name,\n        fullPath: `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${path}`,\n        relativePath: path\n      }))\n    );\n\n    const categoryIcons = Object.entries(SERVICE_MAPPINGS)\n      .filter(([_, path]) => path.includes(newMission.category))\n      .map(([name]) => name);\n    \n    if (categoryIcons.length === 0) {\n      console.error('‚ùå No icons found for category:', newMission.category);\n      console.error('üîç Searched in SERVICE_MAPPINGS:', SERVICE_MAPPINGS);\n      console.error('üéØ Looking for category path:', newMission.category);\n      return;\n    }\n\n    while (newMission.targetIcons.length < 4) {\n      const availableIcons = categoryIcons.filter(icon => \n        newMission.targetIcons.filter(target => target === icon).length < 2\n      );\n      \n      if (availableIcons.length === 0) {\n        newMission.targetIcons.push(newMission.targetIcons[0]);\n      } else {\n        const randomIcon = availableIcons[Math.floor(Math.random() * availableIcons.length)];\n        newMission.targetIcons.push(randomIcon);\n      }\n    }\n\n    setCurrentMission(newMission);\n    console.log(`\\n${isInitial ? 'üéÆ INITIAL' : 'üîÑ CHANGING'} MISSION`);\n    console.log(`Selected Category: ${newMission.displayName}`);\n    console.log('Selected Target Icons:', newMission.targetIcons);\n    \n    generateNewIcons(newMission.category, newMission.targetIcons);\n    if (!isInitial) {\n      setIconsEmpty(false);\n    }\n  };\n\n  // Add to rocket options to log rocket paths\n  const rocketOptions = [\n    { id: `${AZURE_ROCKET_PATH}/rocket1.png`, name: 'Modern Rocket' },\n    { id: `${AZURE_ROCKET_PATH}/rocket2.png`, name: 'Power Rocket' },\n    { id: `${AZURE_ROCKET_PATH}/rocket3.png`, name: 'Stealth Rocket' },\n    { id: `${AZURE_ROCKET_PATH}/rocket4.png`, name: 'Classic Rocket' },\n  ];\n\n  // Log rocket paths when component loads\n  useEffect(() => {\n    console.log(\"Rocket paths:\", rocketOptions.map(rocket => rocket.id));\n    console.log(\"AZURE_ROCKET_PATH:\", AZURE_ROCKET_PATH);\n  }, []);\n\n  // Modify handleRocketSelect to add better logging\n  const handleRocketSelect = (rocketId) => {\n    console.log(\"üöÄ Rocket selected:\", rocketId);\n    setSelectedRocket(rocketId);\n    localStorage.setItem('selectedRocket', rocketId);\n    \n    console.log(\"Setting rocket image source to:\", rocketId);\n    rocketImage.current.src = rocketId;\n    \n    // Debug any errors with image loading\n    rocketImage.current.onerror = (e) => {\n      console.error(\"‚ùå ERROR LOADING ROCKET IMAGE:\", e);\n      console.error(\"Failed URL:\", rocketId);\n    };\n    \n    setShowRocketModal(false);\n    setGameStarted(true);\n    setGameInitialized(true);\n    \n    console.log(\"Starting game mission...\");\n    try {\n      updateGameMission(true);\n    } catch (error) {\n      console.error(\"‚ùå ERROR STARTING MISSION:\", error);\n    }\n  };\n\n  // Use effect for when icons reach bottom\n  useEffect(() => {\n    if (!iconsEmpty || !gameStarted || !timeLeft) return;\n    updateGameMission(false);\n  }, [iconsEmpty, gameStarted, timeLeft]);\n\n  // Separate useEffect for game loop\n  useEffect(() => {\n    if (!gameInitialized || !canvasRef.current) return;\n\n    console.log(\"Starting game loop\");\n    const gameLoopId = requestAnimationFrame(gameLoop);\n\n    return () => {\n      console.log(\"Cleaning up game loop\");\n      cancelAnimationFrame(gameLoopId);\n    };\n  }, [gameInitialized]);\n\n  // Separate useEffect for initial mission\n  useEffect(() => {\n    if (!gameInitialized || !currentMission.category) return;\n\n    console.log(\"Setting up initial mission\");\n    generateNewIcons(currentMission.category, currentMission.targetIcons);\n  }, [gameInitialized, currentMission.category]);\n\n  // Show feedback\n  const showFeedback = (x, y, isCorrect, points, iconName) => {\n    feedbacksRef.current.push({\n      x,\n      y,\n      isCorrect,\n      points,\n      name: iconName,\n      time: Date.now(),\n    });\n  };\n\n  // Check collisions and update score\n  const checkCollisions = () => {\n    const bullets = bulletsRef.current;\n    const icons = iconsRef.current;\n    const canvas = canvasRef.current;\n\n    icons.forEach((icon, iconIndex) => {\n      bulletsRef.current = bulletsRef.current.filter((bullet) => {\n        if (\n          bullet.x > icon.x &&\n          bullet.x < icon.x + 50 &&\n          bullet.y > icon.y &&\n          bullet.y < icon.y + 50\n        ) {\n          icon.hit = true;\n\n          // Check if this is a target icon\n          const isCorrectIcon = icon.isTarget;\n\n          if (isCorrectIcon) {\n            const heightPercentage = 1 - (icon.y / canvas.height);\n            const heightBonus = Math.floor(heightPercentage * 20);\n            const points = 5 + heightBonus;\n            \n            setScore((prev) => {\n              if (prev + points > Math.max(...leaderboard.map(s => s.score))) {\n                showCheerleaderMessage('highScore');\n              } else if (heightBonus > 15) {\n                showCheerleaderMessage('goodShot');\n              }\n              return prev + points;\n            });\n            showFeedback(icon.x, icon.y, true, points, icon.name);\n            playSound('correct');\n            createExplosion(icon.x + 25, icon.y + 25, '#4CAF50');\n          } else {\n            setScore((prev) => prev - 5);\n            showFeedback(icon.x, icon.y, false, -5, icon.name);\n            playSound('incorrect');\n          }\n\n          icons.splice(iconIndex, 1);\n          return false;\n        }\n        return true;\n      });\n    });\n  };\n\n  // The main game loop\n  const gameLoop = useCallback(() => {\n    if (!canvasRef.current || !imagesLoaded) return;\n\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Update game state ref silently\n    gameStateRef.current = {\n      iconsCount: iconsRef.current.length,\n      bulletsCount: bulletsRef.current.length,\n      timeLeft: timeLeft,\n      score: score\n    };\n\n    if (gameStarted) {\n      // Draw the rocket (gun)\n      const { x: gunX, y: gunY, width, height } = gunRef.current;\n      ctx.drawImage(rocketImage.current, gunX, gunY, width, height);\n\n      // Draw icons\n      iconsRef.current.forEach((icon) => {\n        if (!icon.hit) {\n          ctx.save();\n          const radius = 10;\n          const x = icon.x;\n          const y = icon.y;\n          const width = 50;\n          const height = 50;\n          \n          ctx.beginPath();\n          ctx.moveTo(x + radius, y);\n          ctx.lineTo(x + width - radius, y);\n          ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n          ctx.lineTo(x + width, y + height - radius);\n          ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n          ctx.lineTo(x + radius, y + height);\n          ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n          ctx.lineTo(x, y + radius);\n          ctx.quadraticCurveTo(x, y, x + radius, y);\n          ctx.closePath();\n          ctx.clip();\n          \n          ctx.drawImage(icon.image, x, y, width, height);\n          ctx.restore();\n          \n          icon.y += 0.7; \n        }\n      });\n\n      // Filter icons off-screen\n      iconsRef.current = iconsRef.current.filter(icon => icon.y < canvas.height);\n\n      // Check for empty icons and generate new category\n      if (iconsRef.current.length === 0 && !iconsEmpty) {\n        setIconsEmpty(true);\n      }\n\n      // Draw bullets\n      bulletsRef.current.forEach((bullet) => {\n        ctx.drawImage(fireballImage, bullet.x, bullet.y, 20, 20);\n        bullet.y -= 5;\n      });\n      bulletsRef.current = bulletsRef.current.filter((b) => b.y > 0);\n\n      // Draw feedback\n      const now = Date.now();\n      feedbacksRef.current = feedbacksRef.current.filter((feedback) => {\n        const elapsed = now - feedback.time;\n        if (elapsed < 3000) {\n          ctx.shadowColor = 'rgba(0, 0, 0, 0.5)';\n          ctx.shadowBlur = 4;\n          ctx.fillStyle = feedback.isCorrect ? '#4CAF50' : '#F44336';\n          ctx.font = 'bold 28px Arial';\n\n          // Points text\n          const pointsText = feedback.points > 0 ? `+${feedback.points}` : `${feedback.points}`;\n          ctx.fillText(pointsText, feedback.x + 10, feedback.y - 20);\n\n          // Icon name\n          ctx.font = '16px Arial';\n          ctx.fillText(feedback.name, feedback.x + 60, feedback.y + 25);\n\n          // Checkmark or X\n          ctx.font = 'bold 55px Arial';\n          ctx.fillText(feedback.isCorrect ? '‚úî' : '‚úò', feedback.x + 10, feedback.y + 30);\n\n          ctx.shadowBlur = 0;\n          return true;\n        }\n        return false;\n      });\n\n      checkCollisions();\n\n      // Update and draw particles\n      particlesRef.current = particlesRef.current.filter(particle => {\n        if (particle.lifetime > 0 && particle.size > 0) {\n          particle.update();\n          particle.draw(ctx);\n          return true;\n        }\n        return false;\n      });\n    }\n\n    // Only request next frame if game is still running\n    if (gameStarted && !gameOver) {\n      requestAnimationFrame(gameLoop);\n    }\n  }, [imagesLoaded, gameStarted, timeLeft, score, iconsEmpty, gameOver, playSound]);\n\n  // Sounds\n  const sounds = useRef({});\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n\n  // Ensure sound files are defined correctly using AZURE_BUCKET_URL\n  const soundFiles = {\n    shoot: `${AZURE_BUCKET_URL}/games/sounds/pistol_sound.mp3`,\n    correct: `${AZURE_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n    incorrect: `${AZURE_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n    hover: `${AZURE_BUCKET_URL}/games/sounds/hover.mp3`,\n    achievement: `${AZURE_BUCKET_URL}/games/sounds/levelup.mp3`\n  };\n\n  const createSafeAudio = async (path) => {\n    const audio = new Audio();\n    return new Promise((resolve) => {\n      audio.addEventListener('error', () => {\n        console.warn(`Sound file not found: ${path}`);\n        resolve(null);\n      });\n      audio.addEventListener('canplaythrough', () => {\n        resolve(audio);\n      });\n      setTimeout(() => resolve(null), 2000);\n      audio.src = path;\n    });\n  };\n\n  // Load sounds\n  useEffect(() => {\n    const loadSounds = async () => {\n      const soundPromises = Object.entries(soundFiles).map(async ([name, path]) => {\n        try {\n          const audio = await createSafeAudio(path);\n          return [name, audio];\n        } catch (error) {\n          console.error(`Failed to load sound ${name}:`, error);\n          return [name, null];\n        }\n      });\n\n      try {\n        const loadedSounds = await Promise.all(soundPromises);\n        const soundsMap = Object.fromEntries(loadedSounds);\n        sounds.current = soundsMap;\n        \n        const hasLoadedSounds = Object.values(soundsMap).some(sound => sound !== null);\n        setSoundsLoaded(hasLoadedSounds);\n        \n        if (hasLoadedSounds) {\n          console.log('üîä Sounds loaded successfully');\n        } else {\n          console.warn('‚ö†Ô∏è No sounds could be loaded');\n        }\n      } catch (error) {\n        console.error('Failed to load sounds:', error);\n      }\n    };\n\n    loadSounds();\n  }, [createSafeAudio]);\n\n  const [isMuted, setIsMuted] = useState(false);\n  const toggleMute = () => {\n    setIsMuted(!isMuted);\n    Object.values(sounds.current).forEach(sound => {\n      if (sound) {\n        sound.muted = !sound.muted;\n      }\n    });\n  };\n\n  // Ensure playSound function is working\n  const playSound = useCallback((soundName) => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  }, [isMuted]);\n\n  // Particles and timer\n  const [gameOver, setGameOver] = useState(false);\n  const particlesRef = useRef([]);\n  const [gameOverHandled, setGameOverHandled] = useState(false);\n\n  useEffect(() => {\n    return () => {\n      setGameStarted(false);\n      setShowRocketModal(true);\n    };\n  }, []);\n\n  class Particle {\n    constructor(x, y, color) {\n      this.x = x;\n      this.y = y;\n      this.color = color;\n      this.size = Math.random() * 3 + 2;\n      this.speedX = Math.random() * 6 - 3;\n      this.speedY = Math.random() * 6 - 3;\n      this.lifetime = 1;\n      this.initialSize = this.size;\n    }\n    update() {\n      this.x += this.speedX;\n      this.y += this.speedY;\n      this.lifetime -= 0.02;\n      this.size = Math.max(0, this.initialSize * this.lifetime);\n    }\n    draw(ctx) {\n      if (this.size <= 0) return;\n      ctx.fillStyle = this.color;\n      ctx.globalAlpha = this.lifetime;\n      ctx.beginPath();\n      ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n      ctx.fill();\n      ctx.globalAlpha = 1;\n    }\n  }\n\n  const createExplosion = (x, y, color) => {\n    for (let i = 0; i < 20; i++) {\n      particlesRef.current.push(new Particle(x, y, color));\n    }\n  };\n\n  useEffect(() => {\n    if (gameStarted && !gameOver && timeLeft > 0) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => {\n          if (prev <= 1 && !gameOverHandled) {\n            clearInterval(timer);\n            handleGameOver();\n            return 0;\n          }\n          return prev - 1;\n        });\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }\n  }, [timeLeft, gameOver, gameStarted, gameOverHandled]);\n\n  const handleGameOver = async () => {\n    if (gameOverHandled) return;\n    \n    setGameOver(true);\n    setGameOverHandled(true);\n\n    // Clear the game loop\n    if (gameLoopRef.current) {\n      clearInterval(gameLoopRef.current);\n      gameLoopRef.current = null;\n    }\n\n    // Only save score if we have a valid player name and score\n    if (playerName && score > 0 && onGameOver) {\n      try {\n        await onGameOver(); // Let parent handle score saving\n        // Fetch updated leaderboard after saving score\n        if (fetchLeaderboard) {\n          await fetchLeaderboard();\n        }\n      } catch (error) {\n        console.error('Failed to save score:', error);\n      }\n    }\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const handleMouseMove = (e) => {\n      const rect = canvas.getBoundingClientRect();\n      let newX = e.clientX - rect.left - (gunRef.current.width / 2);\n      newX = Math.max(-30, Math.min(newX, canvas.width - gunRef.current.width + 30));\n      gunRef.current.x = newX;\n    };\n\n    const handleCanvasClick = () => {\n      if (gameStarted && timeLeft > 0 && !gameOver) {\n        playSound('shoot');\n        bulletsRef.current.push({\n          x: gunRef.current.x + gunRef.current.width / 2 - 10,\n          y: gunRef.current.y - 20,\n        });\n      }\n    };\n\n    canvas.addEventListener('mousemove', handleMouseMove);\n    canvas.addEventListener('click', handleCanvasClick);\n\n    return () => {\n      canvas.removeEventListener('mousemove', handleMouseMove);\n      canvas.removeEventListener('click', handleCanvasClick);\n    };\n  }, [gameStarted, timeLeft, gameOver, playSound]);\n\n  useEffect(() => {\n    localStorage.removeItem('playerName');\n    localStorage.removeItem('selectedRocket');\n  }, []);\n\n  const [showRocketModal, setShowRocketModal] = useState(true);\n\n  const cheerleaderMessages = {\n    goodShot: [\n      \"Great shot! You're an Azure Pro! üåü\",\n      \"Amazing cloud skills! Keep it up! üéØ\",\n      \"You're on fire in the cloud! üî•\",\n      \"That's how Azure experts do it! üëè\",\n    ],\n    combo: [\n      \"Cloud combo! üéÆ\",\n      \"You're scaling infinitely! ‚ö°\",\n      \"What an Azure streak! üåà\",\n    ],\n    timeWarning: [\n      \"30 seconds left - you're highly available! ‚è∞\",\n      \"Time for the final deployment! üí™\",\n      \"Make every compute unit count! ‚≠ê\",\n    ],\n    encouragement: [\n      \"You've got this, cloud warrior! üöÄ\",\n      \"Keep going! You're Azure certified material! \",\n      \"I believe in your cloud powers! üí´\",\n      \"Show them your Azure expertise! üí™\",\n    ],\n    highScore: [\n      \"New high score! You're going serverless! üèÜ\",\n      \"You're breaking cloud records! üéñÔ∏è\",\n      \"Legendary Azure performance! üëë\",\n    ]\n  };\n\n  const [cheerMessage, setCheerMessage] = useState('');\n  const [showCheerMessage, setShowCheerMessage] = useState(false);\n\n  const showCheerleaderMessage = (category) => {\n    if (!cheerleaderMessages[category]) {\n      console.warn('Invalid cheerleader message category:', category);\n      return;\n    }\n    \n    const messages = cheerleaderMessages[category];\n    const randomMessage = messages[Math.floor(Math.random() * messages.length)];\n    console.log('Showing cheerleader message:', randomMessage); // Debug log\n    setCheerMessage(randomMessage);\n    setShowCheerMessage(true);\n    \n    // Clear the message after delay\n    setTimeout(() => {\n      setShowCheerMessage(false);\n      setCheerMessage('');\n    }, 3000);\n  };\n\n  useEffect(() => {\n    const encouragementInterval = setInterval(() => {\n      if (timeLeft > 0 && Math.random() < 0.3) {\n        showCheerleaderMessage('encouragement');\n      }\n    }, 10000);\n    return () => clearInterval(encouragementInterval);\n  }, [timeLeft]);\n\n  useEffect(() => {\n    if (timeLeft === 30) {\n      showCheerleaderMessage('timeWarning');\n    }\n  }, [timeLeft]);\n\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    const name = tempPlayerName.trim();\n    setPlayerName(name);\n    if (onPlayerNameChange) {\n      onPlayerNameChange(name);\n    }\n    setShowNameModal(false);\n    setShowRocketModal(true);\n  };\n\n  // Ensure generateNewIcons handles missing icons gracefully\n  const generateNewIcons = (category, targetIcons) => {\n    console.log('\\n==== GENERATING NEW ICONS ====');\n    console.log('Current Category:', category);\n    console.log('Target Icons:', targetIcons);\n    \n    if (!targetIcons || targetIcons.length !== 4) {\n      console.error('‚ùå Invalid target icons count:', targetIcons?.length);\n      return;\n    }\n    \n    iconsRef.current = [];\n    const positions = [];\n    \n    // Get ALL possible distractor icons\n    const otherIcons = Object.entries(SERVICE_MAPPINGS)\n      .filter(([name, path]) => {\n        const isCurrentCategory = path.includes(category);\n        const isTargetIcon = targetIcons.includes(name);\n        return !isCurrentCategory && !isTargetIcon;\n      })\n      .map(([name, path]) => ({\n        path: `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${path}`,\n        name: name,\n        category: path.split('/')[1]\n      }));\n\n    // Always select exactly 6 distractor icons\n    const selectedOtherIcons = [...otherIcons]\n      .sort(() => 0.5 - Math.random())\n      .slice(0, 6);\n\n    if (selectedOtherIcons.length < 6) {\n      console.error('‚ùå Not enough distractor icons:', selectedOtherIcons.length);\n      selectedOtherIcons.forEach(icon => console.log('Missing Icon URL:', icon.path));\n      return;\n    }\n\n    // Combine all icons (4 targets + 6 distractors = 10 total)\n    const gameIcons = [\n      ...targetIcons.map(name => ({\n        path: `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${SERVICE_MAPPINGS[name]}`,\n        name: name,\n        category: category,\n        isTarget: true\n      })),\n      ...selectedOtherIcons.map(icon => ({\n        ...icon,\n        isTarget: false\n      }))\n    ];\n\n    console.log('\\nAdding Icons to Game:');\n    console.log('Total Icons:', gameIcons.length);\n    console.log('Target Icons:', gameIcons.filter(icon => icon.isTarget).map(icon => icon.name));\n    console.log('Distractor Icons:', gameIcons.filter(icon => !icon.isTarget).map(icon => icon.name));\n\n    // Add all icons to the game\n    gameIcons.forEach((iconInfo) => {\n      let x = getRandomX();\n      while (positions.some((pos) => Math.abs(pos - x) < 50)) {\n        x = getRandomX();\n      }\n      positions.push(x);\n\n      const iconImage = new Image();\n      iconImage.src = iconInfo.path;\n\n      iconsRef.current.push({\n        x,\n        y: -50,\n        type: iconInfo.category,\n        name: iconInfo.name,\n        image: iconImage,\n        hit: false,\n        isTarget: iconInfo.isTarget\n      });\n    });\n\n    console.log('\\nIcons Generated Successfully');\n    console.log('============================\\n');\n\n    // Add this near the top of the function\n    console.log(\"Icon path example:\", \n      `${AZURE_BUCKET_URL}${ICONS_BASE_PATH}${Object.values(SERVICE_MAPPINGS)[0]}`);\n  };\n\n  // Mission Display component with null check\n  const MissionDisplay = () => {\n    if (!currentMission.text) return null;\n    \n    return (\n      <div className=\"gameCanvas-mission-container\">\n        <h3 className=\"gameCanvas-mission-title\">\n          Current Mission\n        </h3>\n        <div className=\"gameCanvas-mission-text\">\n          {currentMission.text}\n        </div>\n      </div>\n    );\n  };\n\n  // Add console logs to track state changes\n  useEffect(() => {\n    console.log('Mission Updated:', currentMission);\n  }, [currentMission]);\n\n  useEffect(() => {\n    console.log('Game Started:', gameStarted);\n  }, [gameStarted]);\n\n  // Add this after the canvas ref declaration\n  useEffect(() => {\n    if (canvasRef.current) {\n      canvasRef.current.width = 1200;  // Match the CSS width\n      canvasRef.current.height = 900;  // Match the CSS height\n    }\n  }, []);\n\n  // Add this function to retrieve the nickname\n  const getNickname = () => {\n    return localStorage.getItem('userNickname') || playerName || 'Anonymous';\n  };\n\n  // Update handleStartGame function\n  const handleStartGame = () => {\n    setShowWelcome(false);\n    setGameStarted(true);\n    setGameOver(false);\n    setScore(0);\n    if (onPlayerNameChange) {\n      onPlayerNameChange(playerName);\n    }\n    // Fetch leaderboard only when game starts\n    if (fetchLeaderboard) {\n      fetchLeaderboard();\n    }\n    startGame();\n  };\n\n  // Update score display section to use CosmosDB leaderboard\n  const renderHighScores = () => (\n    <div className=\"gameCanvas-high-scores\">\n      <h3>HIGH SCORES</h3>\n      <ul>\n        {leaderboard.map((entry, index) => (\n          <li key={index}>\n            <span>{entry.nickname}:</span>\n            <span>{entry.score}</span>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n\n  // Update score tracking to ensure parent component has current score\n  useEffect(() => {\n    if (onScoreUpdate && score > 0) {\n      onScoreUpdate(score);\n    }\n  }, [score, onScoreUpdate]);\n\n  // Update the game loop initialization\n  const startGame = () => {\n    if (gameLoopRef.current) {\n      clearInterval(gameLoopRef.current);\n    }\n\n    setGameStarted(true);\n    setGameOver(false);\n    setScore(0);\n    setTimeLeft(60);\n    \n    // Start the game loop\n    gameLoopRef.current = setInterval(() => {\n      updateGame();\n      drawGame();\n    }, 1000 / 60); // 60 FPS\n  };\n\n  // Add cleanup for game loop\n  useEffect(() => {\n    return () => {\n      if (gameLoopRef.current) {\n        clearInterval(gameLoopRef.current);\n        gameLoopRef.current = null;\n      }\n    };\n  }, []);\n\n  // Ensure drawImage is called only if the image is loaded\n  const drawGame = () => {\n    const ctx = canvasRef.current.getContext('2d');\n    ctx.clearRect(0, 0, canvasRef.current.width, canvasRef.current.height);\n\n    // Check if the rocket image is loaded before drawing\n    if (rocketImage.current.complete && rocketImage.current.naturalHeight !== 0) {\n      ctx.drawImage(rocketImage.current, rocketPosition.x, rocketPosition.y);\n    } else {\n      console.warn(\"Rocket image not loaded, skipping drawImage\");\n    }\n\n    // Rest of your drawing logic...\n  };\n\n  return (\n    <div className=\"gameCanvas-container\">\n      <h1 \n        className=\"gameCanvas-game-title\"\n        style={{ '--azure-icon': `url(${process.env.PUBLIC_URL}/azure-icons/Microsoft_Azure_Cyan.svg)` }}\n      >\n        ZURE CLOUD SHOOTER\n      </h1>\n      <div className=\"gameCanvas-game-content\">\n        <div className=\"gameCanvas-canvas-wrapper\">\n          <canvas ref={canvasRef} className=\"gameCanvas-game-canvas\" />\n        </div>\n        <div className=\"gameCanvas-instruction-panel\">\n          <div className=\"gameCanvas-player-box\">\n            <div className=\"gameCanvas-player-name\">\n              PLAYER: {playerName}\n            </div>\n          </div>\n\n          <div className=\"gameCanvas-score-box\">\n            <div className=\"gameCanvas-score-display\">\n              <span role=\"img\" aria-label=\"alien\">üëæ</span> Score: {score} <span role=\"img\" aria-label=\"joystick\">üïπÔ∏è</span>\n              {soundsLoaded && (\n                <button \n                  className=\"gameCanvas-sound-toggle\"\n                  onClick={toggleMute}\n                  aria-label=\"Toggle sound\"\n                  style={{ marginLeft: '8px', display: 'inline-block' }}\n                >\n                  {isMuted ? 'üîá' : 'üîä'}\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"gameCanvas-timer-box\">\n            <div className=\"gameCanvas-timer-display\">\n              TIME: {timeLeft}s\n            </div>\n          </div>\n\n          <div className=\"gameCanvas-score-explanation\">\n            <h4>How to Score:</h4>\n            <ul>\n              <li>‚Ä¢ Hit correct icon: +5 points</li>\n              <li>‚Ä¢ Height bonus: up to +20</li>\n              <li>‚Ä¢ Wrong hit: -5 points</li>\n              <li>‚Ä¢ Tip: Shoot icons as high as possible!</li>\n            </ul>\n          </div>\n\n          {renderHighScores()}\n\n          {currentMission.text && (\n            <div className=\"gameCanvas-mission-container\">\n              <h3 className=\"gameCanvas-mission-title\">\n                Current Mission\n              </h3>\n              <div className=\"gameCanvas-mission-text\">\n                {currentMission.text}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {showRocketModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-rocket-selection-modal\">\n            <h2>Choose Your Rocket</h2>\n            <div className=\"gameCanvas-rocket-grid\">\n              {rocketOptions.map((rocket) => (\n                <div \n                  key={rocket.id} \n                  className={`gameCanvas-rocket-option ${selectedRocket === rocket.id ? 'selected' : ''}`}\n                  onClick={() => handleRocketSelect(rocket.id)}\n                >\n                  <img \n                    src={rocket.id} \n                    alt={rocket.name}\n                  />\n                  <p>{rocket.name}</p>\n                </div>\n              ))}\n            </div>\n          </div>\n        </div>\n      )}\n\n      {gameOver && (\n        <div className=\"gameCanvas-game-over\">\n          <h3>Time's Up!</h3>\n          <button onClick={() => window.location.reload()}>\n            Play Again\n          </button>\n        </div>\n      )}\n\n      {showCheerMessage && cheerMessage && (\n        <div className=\"gameCanvas-cheerleader-container\">\n          <div className=\"gameCanvas-cheerleader-character\">\n            <img \n              src={`${process.env.REACT_APP_AZURE_BUCKET_URL}/games/utilities/cheerleader.png`} \n              alt=\"Cheerleader\" \n            />\n          </div>\n          <div className=\"gameCanvas-cheer-message\" style={{\n            backgroundColor: 'rgba(0, 255, 255, 0.1)',\n            border: '2px solid #00ffff',\n            borderRadius: '10px',\n            padding: '15px',\n            color: '#00ffff',\n            fontSize: '1.2em',\n            textAlign: 'center',\n            minWidth: '200px',\n            maxWidth: '400px',\n            margin: '10px',\n            boxShadow: '0 0 10px rgba(0, 255, 255, 0.3)',\n            zIndex: 1000\n          }}>\n            {cheerMessage}\n          </div>\n        </div>\n      )}\n\n      {showNameModal && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-modal\">\n            <h2>Welcome to Azure Cloud Shooter!</h2>\n            <p>Enter your name to start the game:</p>\n            <form onSubmit={handleNameSubmit}>\n              <input\n                type=\"text\"\n                value={tempPlayerName}\n                onChange={(e) => {\n                  setTempPlayerName(e.target.value);\n                  setNameError('');\n                }}\n                placeholder=\"Your name\"\n                className=\"gameCanvas-name-input\"\n                autoFocus\n              />\n              {nameError && <div className=\"gameCanvas-name-error\">{nameError}</div>}\n              <button type=\"submit\" className=\"gameCanvas-start-button\">\n                Start Game\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Add prop types\nGameCanvas.propTypes = {\n  onScoreUpdate: PropTypes.func,\n  onPlayerNameChange: PropTypes.func,\n  onGameOver: PropTypes.func,\n  leaderboard: PropTypes.array,\n  fetchLeaderboard: PropTypes.func\n};\n\nexport default GameCanvas;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AACvE,OAAO,0BAA0B;AACjC,SAASC,qBAAqB,EAAEC,gBAAgB,QAAQ,0BAA0B;AAClF,OAAOC,eAAe,MAAM,6BAA6B;AACzD,OAAOC,SAAS,MAAM,YAAY;;AAElC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B;AAC/D,MAAMC,eAAe,GAAGH,OAAO,CAACC,GAAG,CAACG,yBAAyB;AAC7D,MAAMC,iBAAiB,GAAG,GAAGN,gBAAgB,eAAe;AAC5D,MAAMO,cAAc,GAAG,GAAGD,iBAAiB,cAAc;AACzD,MAAME,aAAa,GAAG,GAAGR,gBAAgB,4BAA4B;;AAErE;AACAS,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE;EACpCV,gBAAgB;EAChBI;AACF,CAAC,CAAC;AAEF,MAAMO,UAAU,GAAGA,CAAC;EAAEC,aAAa;EAAEC,kBAAkB;EAAEC,UAAU;EAAEC,WAAW;EAAEC;AAAiB,CAAC,KAAK;EAAAC,EAAA;EACvG;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC4B,eAAe,EAAEC,kBAAkB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgC,KAAK,EAAEC,QAAQ,CAAC,GAAGjC,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACkC,uBAAuB,EAAEC,0BAA0B,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EACzE,MAAM,CAACoC,cAAc,EAAEC,iBAAiB,CAAC,GAAGrC,QAAQ,CAAC,MAAM;IACzD,MAAMsC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;IAC1D,OAAOF,WAAW,IAAI,IAAI;EAC5B,CAAC,CAAC;EACF,MAAM,CAACG,aAAa,EAAEC,gBAAgB,CAAC,GAAG1C,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC2C,cAAc,EAAEC,iBAAiB,CAAC,GAAG5C,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAAC6C,SAAS,EAAEC,YAAY,CAAC,GAAG9C,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAAC+C,UAAU,EAAEC,aAAa,CAAC,GAAGhD,QAAQ,CAAC,MAAM;IACjD,MAAMiD,SAAS,GAAGV,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACpD,OAAOS,SAAS,IAAI,EAAE;EACxB,CAAC,CAAC;EACF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGnD,QAAQ,CAAC;IAAEoD,CAAC,EAAE,GAAG;IAAEC,CAAC,EAAE;EAAI,CAAC,CAAC;;EAExE;EACA,MAAM,CAACC,YAAY,CAAC,GAAGtD,QAAQ,CAAC,MAAM;IACpC,MAAMuD,mBAAmB,GAAGA,CAAA,KAAM;MAChC,MAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACxD,qBAAqB,CAAC;MACrD,MAAMyD,QAAQ,GAAG,CAAC,GAAGH,UAAU,CAAC,CAACI,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;MAChE;MACA,OAAOH,QAAQ,CAACI,GAAG,CAACC,QAAQ,IAAI;QAC9B,MAAMC,WAAW,GAAGD,QAAQ,CAACE,KAAK,CAAC,GAAG,CAAC,CACpCH,GAAG,CAACI,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CACvEC,IAAI,CAAC,GAAG,CAAC;QAEZ,OAAO;UACLC,IAAI,EAAE,aAAaR,WAAW,SAAS;UACvCD,QAAQ,EAAE9D,qBAAqB,CAAC8D,QAAQ,CAAC;UACzCC,WAAW,EAAEA;QACf,CAAC;MACH,CAAC,CAAC;IACJ,CAAC;IAED,OAAOV,mBAAmB,CAAC,CAAC;EAC9B,CAAC,CAAC;;EAEF;EACA,MAAM,CAACmB,SAAS,CAAC,GAAG1E,QAAQ,CAAC,MAAM;IACjC,OAAOsD,YAAY,CAACqB,MAAM,CAAC,CAACC,GAAG,EAAEC,WAAW,KAAK;MAC/C,MAAMC,gBAAgB,GAAGrB,MAAM,CAACsB,OAAO,CAAC5E,gBAAgB,CAAC,CACtD6E,MAAM,CAAC,CAAC,CAACC,CAAC,EAAEC,IAAI,CAAC,KAAKA,IAAI,CAACC,QAAQ,CAACN,WAAW,CAACb,QAAQ,CAAC,CAAC,CAC1DD,GAAG,CAAC,CAAC,CAACqB,IAAI,EAAEF,IAAI,CAAC,MAAM;QACtBA,IAAI,EAAE,GAAG1E,gBAAgB,GAAGI,eAAe,GAAGsE,IAAI,EAAE;QACpDE,IAAI,EAAEA;MACR,CAAC,CAAC,CAAC;MAELR,GAAG,CAACC,WAAW,CAACb,QAAQ,CAAC,GAAGc,gBAAgB;MAC5C,OAAOF,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACR,CAAC,CAAC;;EAEF;EACA,MAAMS,WAAW,GAAGtF,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMuF,SAAS,GAAGvF,MAAM,CAAC,IAAI,CAAC;EAC9B,MAAMwF,QAAQ,GAAGxF,MAAM,CAAC,EAAE,CAAC;EAC3B,MAAMyF,UAAU,GAAGzF,MAAM,CAAC,EAAE,CAAC;EAC7B,MAAM0F,YAAY,GAAG1F,MAAM,CAAC,EAAE,CAAC;EAC/B,MAAM2F,WAAW,GAAG3F,MAAM,CAAC,IAAI4F,KAAK,CAAC,CAAC,CAAC;EACvC,MAAMC,YAAY,GAAG7F,MAAM,CAAC;IAC1B8F,UAAU,EAAE,CAAC;IACbC,YAAY,EAAE,CAAC;IACfhE,QAAQ,EAAE,EAAE;IACZE,KAAK,EAAE,CAAC;IACR+D,gBAAgB,EAAE;EACpB,CAAC,CAAC;EACF,MAAMC,aAAa,GAAG,IAAIL,KAAK,CAAC,CAAC;EACjCK,aAAa,CAACC,GAAG,GAAGjF,aAAa;;EAEjC;EACA,MAAMkF,MAAM,GAAGnG,MAAM,CAAC;IACpBqD,CAAC,EAAE,GAAG,GAAG,EAAE;IACXC,CAAC,EAAE,GAAG,GAAG,GAAG;IACZ8C,KAAK,EAAE,GAAG;IACVC,MAAM,EAAE;EACV,CAAC,CAAC;;EAEF;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGtG,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACAF,SAAS,CAAC,MAAM;IACd,MAAMyG,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B;MACAb,WAAW,CAACc,OAAO,GAAG,IAAIb,KAAK,CAAC,CAAC;MACjCD,WAAW,CAACc,OAAO,CAACP,GAAG,GAAG7D,cAAc,IAAIrB,cAAc;MAE1D,MAAM,IAAI0F,OAAO,CAAEC,OAAO,IAAK;QAC7BhB,WAAW,CAACc,OAAO,CAACG,MAAM,GAAGD,OAAO;QACpChB,WAAW,CAACc,OAAO,CAACI,OAAO,GAAG,MAAM;UAClC3F,OAAO,CAAC4F,KAAK,CAAC,6BAA6B,CAAC;UAC5CH,OAAO,CAAC,CAAC;QACX,CAAC;MACH,CAAC,CAAC;;MAEF;MACA,MAAMI,WAAW,GAAG,IAAInB,KAAK,CAAC,CAAC;MAC/BmB,WAAW,CAACb,GAAG,GAAGjF,aAAa;MAE/B,MAAM,IAAIyF,OAAO,CAAEC,OAAO,IAAK;QAC7BI,WAAW,CAACH,MAAM,GAAGD,OAAO;QAC5BI,WAAW,CAACF,OAAO,GAAG,MAAM;UAC1B3F,OAAO,CAAC4F,KAAK,CAAC,6BAA6B,CAAC;UAC5CH,OAAO,CAAC,CAAC;QACX,CAAC;MACH,CAAC,CAAC;MAEFJ,eAAe,CAAC,IAAI,CAAC;IACvB,CAAC;IAEDC,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACnE,cAAc,CAAC,CAAC;;EAEpB;EACA,MAAM2E,UAAU,GAAGA,CAAA,KAAM;IACvB,MAAMC,MAAM,GAAG1B,SAAS,CAACkB,OAAO;IAChC,OAAO3C,IAAI,CAACoD,KAAK,CAACpD,IAAI,CAACC,MAAM,CAAC,CAAC,IAAIkD,MAAM,CAACb,KAAK,GAAG,EAAE,CAAC,CAAC;EACxD,CAAC;;EAED;EACA,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGnH,QAAQ,CAAC;IACnDgE,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAE,EAAE;IACfmD,WAAW,EAAE,EAAE;IACf3C,IAAI,EAAE;EACR,CAAC,CAAC;;EAEF;EACA,MAAM,CAAC4C,UAAU,EAAEC,aAAa,CAAC,GAAGtH,QAAQ,CAAC,KAAK,CAAC;;EAEnD;EACA,MAAMuH,iBAAiB,GAAGA,CAACC,SAAS,GAAG,KAAK,KAAK;IAC/C,MAAMhE,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACxD,qBAAqB,CAAC;IACrD,MAAMyD,QAAQ,GAAG,CAAC,GAAGH,UAAU,CAAC,CAACI,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC;IAChE,MAAM2D,gBAAgB,GAAG9D,QAAQ,CAAC,CAAC,CAAC;IACpC,MAAMM,WAAW,GAAGwD,gBAAgB,CAACvD,KAAK,CAAC,GAAG,CAAC,CAC5CH,GAAG,CAACI,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CACvEC,IAAI,CAAC,GAAG,CAAC;IAEZ,MAAMkD,UAAU,GAAG;MACjB1D,QAAQ,EAAE9D,qBAAqB,CAACuH,gBAAgB,CAAC;MACjDxD,WAAW,EAAEA,WAAW;MACxBmD,WAAW,EAAE,EAAE;MACf3C,IAAI,EAAE,aAAaR,WAAW;IAChC,CAAC;;IAED;IACA,IAAI,CAACuD,SAAS,EAAE;MACdG,SAAS,CAAC,aAAa,CAAC;IAC1B;;IAEA;IACA1G,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEwG,UAAU,CAAC1D,QAAQ,CAAC;IACrE/C,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEuC,MAAM,CAACsB,OAAO,CAAC5E,gBAAgB,CAAC,CAC5E6E,MAAM,CAAC,CAAC,CAACC,CAAC,EAAEC,IAAI,CAAC,KAAKA,IAAI,CAACC,QAAQ,CAACuC,UAAU,CAAC1D,QAAQ,CAAC,CAAC,CACzDD,GAAG,CAAC,CAAC,CAACqB,IAAI,EAAEF,IAAI,CAAC,MAAM;MACtBE,IAAI;MACJwC,QAAQ,EAAE,GAAGpH,gBAAgB,GAAGI,eAAe,GAAGsE,IAAI,EAAE;MACxD2C,YAAY,EAAE3C;IAChB,CAAC,CAAC,CACJ,CAAC;IAED,MAAM4C,aAAa,GAAGrE,MAAM,CAACsB,OAAO,CAAC5E,gBAAgB,CAAC,CACnD6E,MAAM,CAAC,CAAC,CAACC,CAAC,EAAEC,IAAI,CAAC,KAAKA,IAAI,CAACC,QAAQ,CAACuC,UAAU,CAAC1D,QAAQ,CAAC,CAAC,CACzDD,GAAG,CAAC,CAAC,CAACqB,IAAI,CAAC,KAAKA,IAAI,CAAC;IAExB,IAAI0C,aAAa,CAACC,MAAM,KAAK,CAAC,EAAE;MAC9B9G,OAAO,CAAC4F,KAAK,CAAC,gCAAgC,EAAEa,UAAU,CAAC1D,QAAQ,CAAC;MACpE/C,OAAO,CAAC4F,KAAK,CAAC,kCAAkC,EAAE1G,gBAAgB,CAAC;MACnEc,OAAO,CAAC4F,KAAK,CAAC,+BAA+B,EAAEa,UAAU,CAAC1D,QAAQ,CAAC;MACnE;IACF;IAEA,OAAO0D,UAAU,CAACN,WAAW,CAACW,MAAM,GAAG,CAAC,EAAE;MACxC,MAAMC,cAAc,GAAGF,aAAa,CAAC9C,MAAM,CAACiD,IAAI,IAC9CP,UAAU,CAACN,WAAW,CAACpC,MAAM,CAACkD,MAAM,IAAIA,MAAM,KAAKD,IAAI,CAAC,CAACF,MAAM,GAAG,CACpE,CAAC;MAED,IAAIC,cAAc,CAACD,MAAM,KAAK,CAAC,EAAE;QAC/BL,UAAU,CAACN,WAAW,CAACe,IAAI,CAACT,UAAU,CAACN,WAAW,CAAC,CAAC,CAAC,CAAC;MACxD,CAAC,MAAM;QACL,MAAMgB,UAAU,GAAGJ,cAAc,CAACnE,IAAI,CAACoD,KAAK,CAACpD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGkE,cAAc,CAACD,MAAM,CAAC,CAAC;QACpFL,UAAU,CAACN,WAAW,CAACe,IAAI,CAACC,UAAU,CAAC;MACzC;IACF;IAEAjB,iBAAiB,CAACO,UAAU,CAAC;IAC7BzG,OAAO,CAACC,GAAG,CAAC,KAAKsG,SAAS,GAAG,YAAY,GAAG,aAAa,UAAU,CAAC;IACpEvG,OAAO,CAACC,GAAG,CAAC,sBAAsBwG,UAAU,CAACzD,WAAW,EAAE,CAAC;IAC3DhD,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEwG,UAAU,CAACN,WAAW,CAAC;IAE7DiB,gBAAgB,CAACX,UAAU,CAAC1D,QAAQ,EAAE0D,UAAU,CAACN,WAAW,CAAC;IAC7D,IAAI,CAACI,SAAS,EAAE;MACdF,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;;EAED;EACA,MAAMgB,aAAa,GAAG,CACpB;IAAEC,EAAE,EAAE,GAAGzH,iBAAiB,cAAc;IAAEsE,IAAI,EAAE;EAAgB,CAAC,EACjE;IAAEmD,EAAE,EAAE,GAAGzH,iBAAiB,cAAc;IAAEsE,IAAI,EAAE;EAAe,CAAC,EAChE;IAAEmD,EAAE,EAAE,GAAGzH,iBAAiB,cAAc;IAAEsE,IAAI,EAAE;EAAiB,CAAC,EAClE;IAAEmD,EAAE,EAAE,GAAGzH,iBAAiB,cAAc;IAAEsE,IAAI,EAAE;EAAiB,CAAC,CACnE;;EAED;EACAtF,SAAS,CAAC,MAAM;IACdmB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEoH,aAAa,CAACvE,GAAG,CAACyE,MAAM,IAAIA,MAAM,CAACD,EAAE,CAAC,CAAC;IACpEtH,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,iBAAiB,CAAC;EACtD,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM2H,kBAAkB,GAAIC,QAAQ,IAAK;IACvCzH,OAAO,CAACC,GAAG,CAAC,qBAAqB,EAAEwH,QAAQ,CAAC;IAC5CrG,iBAAiB,CAACqG,QAAQ,CAAC;IAC3BnG,YAAY,CAACoG,OAAO,CAAC,gBAAgB,EAAED,QAAQ,CAAC;IAEhDzH,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEwH,QAAQ,CAAC;IACxDhD,WAAW,CAACc,OAAO,CAACP,GAAG,GAAGyC,QAAQ;;IAElC;IACAhD,WAAW,CAACc,OAAO,CAACI,OAAO,GAAIgC,CAAC,IAAK;MACnC3H,OAAO,CAAC4F,KAAK,CAAC,+BAA+B,EAAE+B,CAAC,CAAC;MACjD3H,OAAO,CAAC4F,KAAK,CAAC,aAAa,EAAE6B,QAAQ,CAAC;IACxC,CAAC;IAEDG,kBAAkB,CAAC,KAAK,CAAC;IACzBlH,cAAc,CAAC,IAAI,CAAC;IACpBE,kBAAkB,CAAC,IAAI,CAAC;IAExBZ,OAAO,CAACC,GAAG,CAAC,0BAA0B,CAAC;IACvC,IAAI;MACFqG,iBAAiB,CAAC,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOV,KAAK,EAAE;MACd5F,OAAO,CAAC4F,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;;EAED;EACA/G,SAAS,CAAC,MAAM;IACd,IAAI,CAACuH,UAAU,IAAI,CAAC3F,WAAW,IAAI,CAACI,QAAQ,EAAE;IAC9CyF,iBAAiB,CAAC,KAAK,CAAC;EAC1B,CAAC,EAAE,CAACF,UAAU,EAAE3F,WAAW,EAAEI,QAAQ,CAAC,CAAC;;EAEvC;EACAhC,SAAS,CAAC,MAAM;IACd,IAAI,CAAC8B,eAAe,IAAI,CAAC0D,SAAS,CAACkB,OAAO,EAAE;IAE5CvF,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;IACjC,MAAM4H,UAAU,GAAGC,qBAAqB,CAACC,QAAQ,CAAC;IAElD,OAAO,MAAM;MACX/H,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;MACpC+H,oBAAoB,CAACH,UAAU,CAAC;IAClC,CAAC;EACH,CAAC,EAAE,CAAClH,eAAe,CAAC,CAAC;;EAErB;EACA9B,SAAS,CAAC,MAAM;IACd,IAAI,CAAC8B,eAAe,IAAI,CAACsF,cAAc,CAAClD,QAAQ,EAAE;IAElD/C,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;IACzCmH,gBAAgB,CAACnB,cAAc,CAAClD,QAAQ,EAAEkD,cAAc,CAACE,WAAW,CAAC;EACvE,CAAC,EAAE,CAACxF,eAAe,EAAEsF,cAAc,CAAClD,QAAQ,CAAC,CAAC;;EAE9C;EACA,MAAMkF,YAAY,GAAGA,CAAC9F,CAAC,EAAEC,CAAC,EAAE8F,SAAS,EAAEC,MAAM,EAAEC,QAAQ,KAAK;IAC1D5D,YAAY,CAACe,OAAO,CAAC2B,IAAI,CAAC;MACxB/E,CAAC;MACDC,CAAC;MACD8F,SAAS;MACTC,MAAM;MACNhE,IAAI,EAAEiE,QAAQ;MACdC,IAAI,EAAEC,IAAI,CAACC,GAAG,CAAC;IACjB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,MAAMC,OAAO,GAAGlE,UAAU,CAACgB,OAAO;IAClC,MAAMmD,KAAK,GAAGpE,QAAQ,CAACiB,OAAO;IAC9B,MAAMQ,MAAM,GAAG1B,SAAS,CAACkB,OAAO;IAEhCmD,KAAK,CAACC,OAAO,CAAC,CAAC3B,IAAI,EAAE4B,SAAS,KAAK;MACjCrE,UAAU,CAACgB,OAAO,GAAGhB,UAAU,CAACgB,OAAO,CAACxB,MAAM,CAAE8E,MAAM,IAAK;QACzD,IACEA,MAAM,CAAC1G,CAAC,GAAG6E,IAAI,CAAC7E,CAAC,IACjB0G,MAAM,CAAC1G,CAAC,GAAG6E,IAAI,CAAC7E,CAAC,GAAG,EAAE,IACtB0G,MAAM,CAACzG,CAAC,GAAG4E,IAAI,CAAC5E,CAAC,IACjByG,MAAM,CAACzG,CAAC,GAAG4E,IAAI,CAAC5E,CAAC,GAAG,EAAE,EACtB;UACA4E,IAAI,CAAC8B,GAAG,GAAG,IAAI;;UAEf;UACA,MAAMC,aAAa,GAAG/B,IAAI,CAACgC,QAAQ;UAEnC,IAAID,aAAa,EAAE;YACjB,MAAME,gBAAgB,GAAG,CAAC,GAAIjC,IAAI,CAAC5E,CAAC,GAAG2D,MAAM,CAACZ,MAAO;YACrD,MAAM+D,WAAW,GAAGtG,IAAI,CAACoD,KAAK,CAACiD,gBAAgB,GAAG,EAAE,CAAC;YACrD,MAAMd,MAAM,GAAG,CAAC,GAAGe,WAAW;YAE9BlI,QAAQ,CAAEmI,IAAI,IAAK;cACjB,IAAIA,IAAI,GAAGhB,MAAM,GAAGvF,IAAI,CAACwG,GAAG,CAAC,GAAG9I,WAAW,CAACwC,GAAG,CAACuG,CAAC,IAAIA,CAAC,CAACtI,KAAK,CAAC,CAAC,EAAE;gBAC9DuI,sBAAsB,CAAC,WAAW,CAAC;cACrC,CAAC,MAAM,IAAIJ,WAAW,GAAG,EAAE,EAAE;gBAC3BI,sBAAsB,CAAC,UAAU,CAAC;cACpC;cACA,OAAOH,IAAI,GAAGhB,MAAM;YACtB,CAAC,CAAC;YACFF,YAAY,CAACjB,IAAI,CAAC7E,CAAC,EAAE6E,IAAI,CAAC5E,CAAC,EAAE,IAAI,EAAE+F,MAAM,EAAEnB,IAAI,CAAC7C,IAAI,CAAC;YACrDuC,SAAS,CAAC,SAAS,CAAC;YACpB6C,eAAe,CAACvC,IAAI,CAAC7E,CAAC,GAAG,EAAE,EAAE6E,IAAI,CAAC5E,CAAC,GAAG,EAAE,EAAE,SAAS,CAAC;UACtD,CAAC,MAAM;YACLpB,QAAQ,CAAEmI,IAAI,IAAKA,IAAI,GAAG,CAAC,CAAC;YAC5BlB,YAAY,CAACjB,IAAI,CAAC7E,CAAC,EAAE6E,IAAI,CAAC5E,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,EAAE4E,IAAI,CAAC7C,IAAI,CAAC;YAClDuC,SAAS,CAAC,WAAW,CAAC;UACxB;UAEAgC,KAAK,CAACc,MAAM,CAACZ,SAAS,EAAE,CAAC,CAAC;UAC1B,OAAO,KAAK;QACd;QACA,OAAO,IAAI;MACb,CAAC,CAAC;IACJ,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMb,QAAQ,GAAG/I,WAAW,CAAC,MAAM;IACjC,IAAI,CAACqF,SAAS,CAACkB,OAAO,IAAI,CAACH,YAAY,EAAE;IAEzC,MAAMqE,GAAG,GAAGpF,SAAS,CAACkB,OAAO,CAACmE,UAAU,CAAC,IAAI,CAAC;IAC9CD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEtF,SAAS,CAACkB,OAAO,CAACL,KAAK,EAAEb,SAAS,CAACkB,OAAO,CAACJ,MAAM,CAAC;;IAEtE;IACAR,YAAY,CAACY,OAAO,GAAG;MACrBX,UAAU,EAAEN,QAAQ,CAACiB,OAAO,CAACuB,MAAM;MACnCjC,YAAY,EAAEN,UAAU,CAACgB,OAAO,CAACuB,MAAM;MACvCjG,QAAQ,EAAEA,QAAQ;MAClBE,KAAK,EAAEA;IACT,CAAC;IAED,IAAIN,WAAW,EAAE;MACf;MACA,MAAM;QAAE0B,CAAC,EAAEyH,IAAI;QAAExH,CAAC,EAAEyH,IAAI;QAAE3E,KAAK;QAAEC;MAAO,CAAC,GAAGF,MAAM,CAACM,OAAO;MAC1DkE,GAAG,CAACK,SAAS,CAACrF,WAAW,CAACc,OAAO,EAAEqE,IAAI,EAAEC,IAAI,EAAE3E,KAAK,EAAEC,MAAM,CAAC;;MAE7D;MACAb,QAAQ,CAACiB,OAAO,CAACoD,OAAO,CAAE3B,IAAI,IAAK;QACjC,IAAI,CAACA,IAAI,CAAC8B,GAAG,EAAE;UACbW,GAAG,CAACM,IAAI,CAAC,CAAC;UACV,MAAMC,MAAM,GAAG,EAAE;UACjB,MAAM7H,CAAC,GAAG6E,IAAI,CAAC7E,CAAC;UAChB,MAAMC,CAAC,GAAG4E,IAAI,CAAC5E,CAAC;UAChB,MAAM8C,KAAK,GAAG,EAAE;UAChB,MAAMC,MAAM,GAAG,EAAE;UAEjBsE,GAAG,CAACQ,SAAS,CAAC,CAAC;UACfR,GAAG,CAACS,MAAM,CAAC/H,CAAC,GAAG6H,MAAM,EAAE5H,CAAC,CAAC;UACzBqH,GAAG,CAACU,MAAM,CAAChI,CAAC,GAAG+C,KAAK,GAAG8E,MAAM,EAAE5H,CAAC,CAAC;UACjCqH,GAAG,CAACW,gBAAgB,CAACjI,CAAC,GAAG+C,KAAK,EAAE9C,CAAC,EAAED,CAAC,GAAG+C,KAAK,EAAE9C,CAAC,GAAG4H,MAAM,CAAC;UACzDP,GAAG,CAACU,MAAM,CAAChI,CAAC,GAAG+C,KAAK,EAAE9C,CAAC,GAAG+C,MAAM,GAAG6E,MAAM,CAAC;UAC1CP,GAAG,CAACW,gBAAgB,CAACjI,CAAC,GAAG+C,KAAK,EAAE9C,CAAC,GAAG+C,MAAM,EAAEhD,CAAC,GAAG+C,KAAK,GAAG8E,MAAM,EAAE5H,CAAC,GAAG+C,MAAM,CAAC;UAC3EsE,GAAG,CAACU,MAAM,CAAChI,CAAC,GAAG6H,MAAM,EAAE5H,CAAC,GAAG+C,MAAM,CAAC;UAClCsE,GAAG,CAACW,gBAAgB,CAACjI,CAAC,EAAEC,CAAC,GAAG+C,MAAM,EAAEhD,CAAC,EAAEC,CAAC,GAAG+C,MAAM,GAAG6E,MAAM,CAAC;UAC3DP,GAAG,CAACU,MAAM,CAAChI,CAAC,EAAEC,CAAC,GAAG4H,MAAM,CAAC;UACzBP,GAAG,CAACW,gBAAgB,CAACjI,CAAC,EAAEC,CAAC,EAAED,CAAC,GAAG6H,MAAM,EAAE5H,CAAC,CAAC;UACzCqH,GAAG,CAACY,SAAS,CAAC,CAAC;UACfZ,GAAG,CAACa,IAAI,CAAC,CAAC;UAEVb,GAAG,CAACK,SAAS,CAAC9C,IAAI,CAACuD,KAAK,EAAEpI,CAAC,EAAEC,CAAC,EAAE8C,KAAK,EAAEC,MAAM,CAAC;UAC9CsE,GAAG,CAACe,OAAO,CAAC,CAAC;UAEbxD,IAAI,CAAC5E,CAAC,IAAI,GAAG;QACf;MACF,CAAC,CAAC;;MAEF;MACAkC,QAAQ,CAACiB,OAAO,GAAGjB,QAAQ,CAACiB,OAAO,CAACxB,MAAM,CAACiD,IAAI,IAAIA,IAAI,CAAC5E,CAAC,GAAG2D,MAAM,CAACZ,MAAM,CAAC;;MAE1E;MACA,IAAIb,QAAQ,CAACiB,OAAO,CAACuB,MAAM,KAAK,CAAC,IAAI,CAACV,UAAU,EAAE;QAChDC,aAAa,CAAC,IAAI,CAAC;MACrB;;MAEA;MACA9B,UAAU,CAACgB,OAAO,CAACoD,OAAO,CAAEE,MAAM,IAAK;QACrCY,GAAG,CAACK,SAAS,CAAC/E,aAAa,EAAE8D,MAAM,CAAC1G,CAAC,EAAE0G,MAAM,CAACzG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;QACxDyG,MAAM,CAACzG,CAAC,IAAI,CAAC;MACf,CAAC,CAAC;MACFmC,UAAU,CAACgB,OAAO,GAAGhB,UAAU,CAACgB,OAAO,CAACxB,MAAM,CAAE0G,CAAC,IAAKA,CAAC,CAACrI,CAAC,GAAG,CAAC,CAAC;;MAE9D;MACA,MAAMmG,GAAG,GAAGD,IAAI,CAACC,GAAG,CAAC,CAAC;MACtB/D,YAAY,CAACe,OAAO,GAAGf,YAAY,CAACe,OAAO,CAACxB,MAAM,CAAE2G,QAAQ,IAAK;QAC/D,MAAMC,OAAO,GAAGpC,GAAG,GAAGmC,QAAQ,CAACrC,IAAI;QACnC,IAAIsC,OAAO,GAAG,IAAI,EAAE;UAClBlB,GAAG,CAACmB,WAAW,GAAG,oBAAoB;UACtCnB,GAAG,CAACoB,UAAU,GAAG,CAAC;UAClBpB,GAAG,CAACqB,SAAS,GAAGJ,QAAQ,CAACxC,SAAS,GAAG,SAAS,GAAG,SAAS;UAC1DuB,GAAG,CAACsB,IAAI,GAAG,iBAAiB;;UAE5B;UACA,MAAMC,UAAU,GAAGN,QAAQ,CAACvC,MAAM,GAAG,CAAC,GAAG,IAAIuC,QAAQ,CAACvC,MAAM,EAAE,GAAG,GAAGuC,QAAQ,CAACvC,MAAM,EAAE;UACrFsB,GAAG,CAACwB,QAAQ,CAACD,UAAU,EAAEN,QAAQ,CAACvI,CAAC,GAAG,EAAE,EAAEuI,QAAQ,CAACtI,CAAC,GAAG,EAAE,CAAC;;UAE1D;UACAqH,GAAG,CAACsB,IAAI,GAAG,YAAY;UACvBtB,GAAG,CAACwB,QAAQ,CAACP,QAAQ,CAACvG,IAAI,EAAEuG,QAAQ,CAACvI,CAAC,GAAG,EAAE,EAAEuI,QAAQ,CAACtI,CAAC,GAAG,EAAE,CAAC;;UAE7D;UACAqH,GAAG,CAACsB,IAAI,GAAG,iBAAiB;UAC5BtB,GAAG,CAACwB,QAAQ,CAACP,QAAQ,CAACxC,SAAS,GAAG,GAAG,GAAG,GAAG,EAAEwC,QAAQ,CAACvI,CAAC,GAAG,EAAE,EAAEuI,QAAQ,CAACtI,CAAC,GAAG,EAAE,CAAC;UAE9EqH,GAAG,CAACoB,UAAU,GAAG,CAAC;UAClB,OAAO,IAAI;QACb;QACA,OAAO,KAAK;MACd,CAAC,CAAC;MAEFrC,eAAe,CAAC,CAAC;;MAEjB;MACA0C,YAAY,CAAC3F,OAAO,GAAG2F,YAAY,CAAC3F,OAAO,CAACxB,MAAM,CAACoH,QAAQ,IAAI;QAC7D,IAAIA,QAAQ,CAACC,QAAQ,GAAG,CAAC,IAAID,QAAQ,CAACE,IAAI,GAAG,CAAC,EAAE;UAC9CF,QAAQ,CAACG,MAAM,CAAC,CAAC;UACjBH,QAAQ,CAACI,IAAI,CAAC9B,GAAG,CAAC;UAClB,OAAO,IAAI;QACb;QACA,OAAO,KAAK;MACd,CAAC,CAAC;IACJ;;IAEA;IACA,IAAIhJ,WAAW,IAAI,CAAC+K,QAAQ,EAAE;MAC5B1D,qBAAqB,CAACC,QAAQ,CAAC;IACjC;EACF,CAAC,EAAE,CAAC3C,YAAY,EAAE3E,WAAW,EAAEI,QAAQ,EAAEE,KAAK,EAAEqF,UAAU,EAAEoF,QAAQ,EAAE9E,SAAS,CAAC,CAAC;;EAEjF;EACA,MAAM+E,MAAM,GAAG3M,MAAM,CAAC,CAAC,CAAC,CAAC;EACzB,MAAM,CAAC4M,YAAY,EAAEC,eAAe,CAAC,GAAG5M,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACA,MAAM6M,UAAU,GAAG;IACjBC,KAAK,EAAE,GAAGtM,gBAAgB,gCAAgC;IAC1DuM,OAAO,EAAE,GAAGvM,gBAAgB,iCAAiC;IAC7DwM,SAAS,EAAE,GAAGxM,gBAAgB,mCAAmC;IACjEyM,KAAK,EAAE,GAAGzM,gBAAgB,yBAAyB;IACnD0M,WAAW,EAAE,GAAG1M,gBAAgB;EAClC,CAAC;EAED,MAAM2M,eAAe,GAAG,MAAOjI,IAAI,IAAK;IACtC,MAAMkI,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;IACzB,OAAO,IAAI5G,OAAO,CAAEC,OAAO,IAAK;MAC9B0G,KAAK,CAACE,gBAAgB,CAAC,OAAO,EAAE,MAAM;QACpCrM,OAAO,CAACsM,IAAI,CAAC,yBAAyBrI,IAAI,EAAE,CAAC;QAC7CwB,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,CAAC;MACF0G,KAAK,CAACE,gBAAgB,CAAC,gBAAgB,EAAE,MAAM;QAC7C5G,OAAO,CAAC0G,KAAK,CAAC;MAChB,CAAC,CAAC;MACFI,UAAU,CAAC,MAAM9G,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC;MACrC0G,KAAK,CAACnH,GAAG,GAAGf,IAAI;IAClB,CAAC,CAAC;EACJ,CAAC;;EAED;EACApF,SAAS,CAAC,MAAM;IACd,MAAM2N,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,aAAa,GAAGjK,MAAM,CAACsB,OAAO,CAAC8H,UAAU,CAAC,CAAC9I,GAAG,CAAC,OAAO,CAACqB,IAAI,EAAEF,IAAI,CAAC,KAAK;QAC3E,IAAI;UACF,MAAMkI,KAAK,GAAG,MAAMD,eAAe,CAACjI,IAAI,CAAC;UACzC,OAAO,CAACE,IAAI,EAAEgI,KAAK,CAAC;QACtB,CAAC,CAAC,OAAOvG,KAAK,EAAE;UACd5F,OAAO,CAAC4F,KAAK,CAAC,wBAAwBzB,IAAI,GAAG,EAAEyB,KAAK,CAAC;UACrD,OAAO,CAACzB,IAAI,EAAE,IAAI,CAAC;QACrB;MACF,CAAC,CAAC;MAEF,IAAI;QACF,MAAMuI,YAAY,GAAG,MAAMlH,OAAO,CAACmH,GAAG,CAACF,aAAa,CAAC;QACrD,MAAMG,SAAS,GAAGpK,MAAM,CAACqK,WAAW,CAACH,YAAY,CAAC;QAClDjB,MAAM,CAAClG,OAAO,GAAGqH,SAAS;QAE1B,MAAME,eAAe,GAAGtK,MAAM,CAACuK,MAAM,CAACH,SAAS,CAAC,CAACI,IAAI,CAACC,KAAK,IAAIA,KAAK,KAAK,IAAI,CAAC;QAC9EtB,eAAe,CAACmB,eAAe,CAAC;QAEhC,IAAIA,eAAe,EAAE;UACnB9M,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;QAC9C,CAAC,MAAM;UACLD,OAAO,CAACsM,IAAI,CAAC,8BAA8B,CAAC;QAC9C;MACF,CAAC,CAAC,OAAO1G,KAAK,EAAE;QACd5F,OAAO,CAAC4F,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAED4G,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACN,eAAe,CAAC,CAAC;EAErB,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGpO,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMqO,UAAU,GAAGA,CAAA,KAAM;IACvBD,UAAU,CAAC,CAACD,OAAO,CAAC;IACpB1K,MAAM,CAACuK,MAAM,CAACtB,MAAM,CAAClG,OAAO,CAAC,CAACoD,OAAO,CAACsE,KAAK,IAAI;MAC7C,IAAIA,KAAK,EAAE;QACTA,KAAK,CAACI,KAAK,GAAG,CAACJ,KAAK,CAACI,KAAK;MAC5B;IACF,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAM3G,SAAS,GAAG1H,WAAW,CAAEsO,SAAS,IAAK;IAC3C,MAAML,KAAK,GAAGxB,MAAM,CAAClG,OAAO,CAAC+H,SAAS,CAAC;IACvC,IAAIL,KAAK,IAAI,CAACC,OAAO,EAAE;MACrB,IAAI;QACFD,KAAK,CAACM,WAAW,GAAG,CAAC;QACrBN,KAAK,CAACO,MAAM,GAAG,GAAG;QAClBP,KAAK,CAACQ,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;UACxB3N,OAAO,CAACsM,IAAI,CAAC,uBAAuBgB,SAAS,GAAG,EAAEK,GAAG,CAAC;QACxD,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOA,GAAG,EAAE;QACZ3N,OAAO,CAACsM,IAAI,CAAC,oBAAoBgB,SAAS,GAAG,EAAEK,GAAG,CAAC;MACrD;IACF;EACF,CAAC,EAAE,CAACT,OAAO,CAAC,CAAC;;EAEb;EACA,MAAM,CAAC1B,QAAQ,EAAEoC,WAAW,CAAC,GAAG7O,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAMmM,YAAY,GAAGpM,MAAM,CAAC,EAAE,CAAC;EAC/B,MAAM,CAAC+O,eAAe,EAAEC,kBAAkB,CAAC,GAAG/O,QAAQ,CAAC,KAAK,CAAC;EAE7DF,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX6B,cAAc,CAAC,KAAK,CAAC;MACrBkH,kBAAkB,CAAC,IAAI,CAAC;IAC1B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMmG,QAAQ,CAAC;IACbC,WAAWA,CAAC7L,CAAC,EAAEC,CAAC,EAAE6L,KAAK,EAAE;MACvB,IAAI,CAAC9L,CAAC,GAAGA,CAAC;MACV,IAAI,CAACC,CAAC,GAAGA,CAAC;MACV,IAAI,CAAC6L,KAAK,GAAGA,KAAK;MAClB,IAAI,CAAC5C,IAAI,GAAGzI,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;MACjC,IAAI,CAACqL,MAAM,GAAGtL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;MACnC,IAAI,CAACsL,MAAM,GAAGvL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC;MACnC,IAAI,CAACuI,QAAQ,GAAG,CAAC;MACjB,IAAI,CAACgD,WAAW,GAAG,IAAI,CAAC/C,IAAI;IAC9B;IACAC,MAAMA,CAAA,EAAG;MACP,IAAI,CAACnJ,CAAC,IAAI,IAAI,CAAC+L,MAAM;MACrB,IAAI,CAAC9L,CAAC,IAAI,IAAI,CAAC+L,MAAM;MACrB,IAAI,CAAC/C,QAAQ,IAAI,IAAI;MACrB,IAAI,CAACC,IAAI,GAAGzI,IAAI,CAACwG,GAAG,CAAC,CAAC,EAAE,IAAI,CAACgF,WAAW,GAAG,IAAI,CAAChD,QAAQ,CAAC;IAC3D;IACAG,IAAIA,CAAC9B,GAAG,EAAE;MACR,IAAI,IAAI,CAAC4B,IAAI,IAAI,CAAC,EAAE;MACpB5B,GAAG,CAACqB,SAAS,GAAG,IAAI,CAACmD,KAAK;MAC1BxE,GAAG,CAAC4E,WAAW,GAAG,IAAI,CAACjD,QAAQ;MAC/B3B,GAAG,CAACQ,SAAS,CAAC,CAAC;MACfR,GAAG,CAAC6E,GAAG,CAAC,IAAI,CAACnM,CAAC,EAAE,IAAI,CAACC,CAAC,EAAE,IAAI,CAACiJ,IAAI,EAAE,CAAC,EAAEzI,IAAI,CAAC2L,EAAE,GAAG,CAAC,CAAC;MAClD9E,GAAG,CAAC+E,IAAI,CAAC,CAAC;MACV/E,GAAG,CAAC4E,WAAW,GAAG,CAAC;IACrB;EACF;EAEA,MAAM9E,eAAe,GAAGA,CAACpH,CAAC,EAAEC,CAAC,EAAE6L,KAAK,KAAK;IACvC,KAAK,IAAIQ,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,EAAE,EAAEA,CAAC,EAAE,EAAE;MAC3BvD,YAAY,CAAC3F,OAAO,CAAC2B,IAAI,CAAC,IAAI6G,QAAQ,CAAC5L,CAAC,EAAEC,CAAC,EAAE6L,KAAK,CAAC,CAAC;IACtD;EACF,CAAC;EAEDpP,SAAS,CAAC,MAAM;IACd,IAAI4B,WAAW,IAAI,CAAC+K,QAAQ,IAAI3K,QAAQ,GAAG,CAAC,EAAE;MAC5C,MAAM6N,KAAK,GAAGC,WAAW,CAAC,MAAM;QAC9B7N,WAAW,CAACqI,IAAI,IAAI;UAClB,IAAIA,IAAI,IAAI,CAAC,IAAI,CAAC0E,eAAe,EAAE;YACjCe,aAAa,CAACF,KAAK,CAAC;YACpBG,cAAc,CAAC,CAAC;YAChB,OAAO,CAAC;UACV;UACA,OAAO1F,IAAI,GAAG,CAAC;QACjB,CAAC,CAAC;MACJ,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAMyF,aAAa,CAACF,KAAK,CAAC;IACnC;EACF,CAAC,EAAE,CAAC7N,QAAQ,EAAE2K,QAAQ,EAAE/K,WAAW,EAAEoN,eAAe,CAAC,CAAC;EAEtD,MAAMgB,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAIhB,eAAe,EAAE;IAErBD,WAAW,CAAC,IAAI,CAAC;IACjBE,kBAAkB,CAAC,IAAI,CAAC;;IAExB;IACA,IAAI1J,WAAW,CAACmB,OAAO,EAAE;MACvBqJ,aAAa,CAACxK,WAAW,CAACmB,OAAO,CAAC;MAClCnB,WAAW,CAACmB,OAAO,GAAG,IAAI;IAC5B;;IAEA;IACA,IAAIzD,UAAU,IAAIf,KAAK,GAAG,CAAC,IAAIV,UAAU,EAAE;MACzC,IAAI;QACF,MAAMA,UAAU,CAAC,CAAC,CAAC,CAAC;QACpB;QACA,IAAIE,gBAAgB,EAAE;UACpB,MAAMA,gBAAgB,CAAC,CAAC;QAC1B;MACF,CAAC,CAAC,OAAOqF,KAAK,EAAE;QACd5F,OAAO,CAAC4F,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF;EACF,CAAC;EAED/G,SAAS,CAAC,MAAM;IACd,MAAMkH,MAAM,GAAG1B,SAAS,CAACkB,OAAO;IAChC,MAAMuJ,eAAe,GAAInH,CAAC,IAAK;MAC7B,MAAMoH,IAAI,GAAGhJ,MAAM,CAACiJ,qBAAqB,CAAC,CAAC;MAC3C,IAAIC,IAAI,GAAGtH,CAAC,CAACuH,OAAO,GAAGH,IAAI,CAACI,IAAI,GAAIlK,MAAM,CAACM,OAAO,CAACL,KAAK,GAAG,CAAE;MAC7D+J,IAAI,GAAGrM,IAAI,CAACwG,GAAG,CAAC,CAAC,EAAE,EAAExG,IAAI,CAACwM,GAAG,CAACH,IAAI,EAAElJ,MAAM,CAACb,KAAK,GAAGD,MAAM,CAACM,OAAO,CAACL,KAAK,GAAG,EAAE,CAAC,CAAC;MAC9ED,MAAM,CAACM,OAAO,CAACpD,CAAC,GAAG8M,IAAI;IACzB,CAAC;IAED,MAAMI,iBAAiB,GAAGA,CAAA,KAAM;MAC9B,IAAI5O,WAAW,IAAII,QAAQ,GAAG,CAAC,IAAI,CAAC2K,QAAQ,EAAE;QAC5C9E,SAAS,CAAC,OAAO,CAAC;QAClBnC,UAAU,CAACgB,OAAO,CAAC2B,IAAI,CAAC;UACtB/E,CAAC,EAAE8C,MAAM,CAACM,OAAO,CAACpD,CAAC,GAAG8C,MAAM,CAACM,OAAO,CAACL,KAAK,GAAG,CAAC,GAAG,EAAE;UACnD9C,CAAC,EAAE6C,MAAM,CAACM,OAAO,CAACnD,CAAC,GAAG;QACxB,CAAC,CAAC;MACJ;IACF,CAAC;IAED2D,MAAM,CAACsG,gBAAgB,CAAC,WAAW,EAAEyC,eAAe,CAAC;IACrD/I,MAAM,CAACsG,gBAAgB,CAAC,OAAO,EAAEgD,iBAAiB,CAAC;IAEnD,OAAO,MAAM;MACXtJ,MAAM,CAACuJ,mBAAmB,CAAC,WAAW,EAAER,eAAe,CAAC;MACxD/I,MAAM,CAACuJ,mBAAmB,CAAC,OAAO,EAAED,iBAAiB,CAAC;IACxD,CAAC;EACH,CAAC,EAAE,CAAC5O,WAAW,EAAEI,QAAQ,EAAE2K,QAAQ,EAAE9E,SAAS,CAAC,CAAC;EAEhD7H,SAAS,CAAC,MAAM;IACdyC,YAAY,CAACiO,UAAU,CAAC,YAAY,CAAC;IACrCjO,YAAY,CAACiO,UAAU,CAAC,gBAAgB,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACC,eAAe,EAAE5H,kBAAkB,CAAC,GAAG7I,QAAQ,CAAC,IAAI,CAAC;EAE5D,MAAM0Q,mBAAmB,GAAG;IAC1BC,QAAQ,EAAE,CACR,qCAAqC,EACrC,sCAAsC,EACtC,iCAAiC,EACjC,oCAAoC,CACrC;IACDC,KAAK,EAAE,CACL,iBAAiB,EACjB,8BAA8B,EAC9B,0BAA0B,CAC3B;IACDC,WAAW,EAAE,CACX,8CAA8C,EAC9C,mCAAmC,EACnC,kCAAkC,CACnC;IACDC,aAAa,EAAE,CACb,oCAAoC,EACpC,+CAA+C,EAC/C,oCAAoC,EACpC,oCAAoC,CACrC;IACDC,SAAS,EAAE,CACT,6CAA6C,EAC7C,oCAAoC,EACpC,iCAAiC;EAErC,CAAC;EAED,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGjR,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACkR,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnR,QAAQ,CAAC,KAAK,CAAC;EAE/D,MAAMuK,sBAAsB,GAAIvG,QAAQ,IAAK;IAC3C,IAAI,CAAC0M,mBAAmB,CAAC1M,QAAQ,CAAC,EAAE;MAClC/C,OAAO,CAACsM,IAAI,CAAC,uCAAuC,EAAEvJ,QAAQ,CAAC;MAC/D;IACF;IAEA,MAAMoN,QAAQ,GAAGV,mBAAmB,CAAC1M,QAAQ,CAAC;IAC9C,MAAMqN,aAAa,GAAGD,QAAQ,CAACvN,IAAI,CAACoD,KAAK,CAACpD,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGsN,QAAQ,CAACrJ,MAAM,CAAC,CAAC;IAC3E9G,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEmQ,aAAa,CAAC,CAAC,CAAC;IAC5DJ,eAAe,CAACI,aAAa,CAAC;IAC9BF,mBAAmB,CAAC,IAAI,CAAC;;IAEzB;IACA3D,UAAU,CAAC,MAAM;MACf2D,mBAAmB,CAAC,KAAK,CAAC;MAC1BF,eAAe,CAAC,EAAE,CAAC;IACrB,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAEDnR,SAAS,CAAC,MAAM;IACd,MAAMwR,qBAAqB,GAAG1B,WAAW,CAAC,MAAM;MAC9C,IAAI9N,QAAQ,GAAG,CAAC,IAAI+B,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,EAAE;QACvCyG,sBAAsB,CAAC,eAAe,CAAC;MACzC;IACF,CAAC,EAAE,KAAK,CAAC;IACT,OAAO,MAAMsF,aAAa,CAACyB,qBAAqB,CAAC;EACnD,CAAC,EAAE,CAACxP,QAAQ,CAAC,CAAC;EAEdhC,SAAS,CAAC,MAAM;IACd,IAAIgC,QAAQ,KAAK,EAAE,EAAE;MACnByI,sBAAsB,CAAC,aAAa,CAAC;IACvC;EACF,CAAC,EAAE,CAACzI,QAAQ,CAAC,CAAC;EAEd,MAAMyP,gBAAgB,GAAI3I,CAAC,IAAK;IAC9BA,CAAC,CAAC4I,cAAc,CAAC,CAAC;IAClB,IAAI7O,cAAc,CAAC8O,IAAI,CAAC,CAAC,CAAC1J,MAAM,GAAG,CAAC,EAAE;MACpCjF,YAAY,CAAC,yCAAyC,CAAC;MACvD;IACF;IACA,IAAIH,cAAc,CAAC8O,IAAI,CAAC,CAAC,CAAC1J,MAAM,GAAG,EAAE,EAAE;MACrCjF,YAAY,CAAC,sCAAsC,CAAC;MACpD;IACF;IACA,MAAMsC,IAAI,GAAGzC,cAAc,CAAC8O,IAAI,CAAC,CAAC;IAClCzO,aAAa,CAACoC,IAAI,CAAC;IACnB,IAAI/D,kBAAkB,EAAE;MACtBA,kBAAkB,CAAC+D,IAAI,CAAC;IAC1B;IACA1C,gBAAgB,CAAC,KAAK,CAAC;IACvBmG,kBAAkB,CAAC,IAAI,CAAC;EAC1B,CAAC;;EAED;EACA,MAAMR,gBAAgB,GAAGA,CAACrE,QAAQ,EAAEoD,WAAW,KAAK;IAClDnG,OAAO,CAACC,GAAG,CAAC,kCAAkC,CAAC;IAC/CD,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE8C,QAAQ,CAAC;IAC1C/C,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEkG,WAAW,CAAC;IAEzC,IAAI,CAACA,WAAW,IAAIA,WAAW,CAACW,MAAM,KAAK,CAAC,EAAE;MAC5C9G,OAAO,CAAC4F,KAAK,CAAC,+BAA+B,EAAEO,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEW,MAAM,CAAC;MACnE;IACF;IAEAxC,QAAQ,CAACiB,OAAO,GAAG,EAAE;IACrB,MAAMkL,SAAS,GAAG,EAAE;;IAEpB;IACA,MAAMC,UAAU,GAAGlO,MAAM,CAACsB,OAAO,CAAC5E,gBAAgB,CAAC,CAChD6E,MAAM,CAAC,CAAC,CAACI,IAAI,EAAEF,IAAI,CAAC,KAAK;MACxB,MAAM0M,iBAAiB,GAAG1M,IAAI,CAACC,QAAQ,CAACnB,QAAQ,CAAC;MACjD,MAAM6N,YAAY,GAAGzK,WAAW,CAACjC,QAAQ,CAACC,IAAI,CAAC;MAC/C,OAAO,CAACwM,iBAAiB,IAAI,CAACC,YAAY;IAC5C,CAAC,CAAC,CACD9N,GAAG,CAAC,CAAC,CAACqB,IAAI,EAAEF,IAAI,CAAC,MAAM;MACtBA,IAAI,EAAE,GAAG1E,gBAAgB,GAAGI,eAAe,GAAGsE,IAAI,EAAE;MACpDE,IAAI,EAAEA,IAAI;MACVpB,QAAQ,EAAEkB,IAAI,CAAChB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;IAC7B,CAAC,CAAC,CAAC;;IAEL;IACA,MAAM4N,kBAAkB,GAAG,CAAC,GAAGH,UAAU,CAAC,CACvC/N,IAAI,CAAC,MAAM,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAC/BQ,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;IAEd,IAAIwN,kBAAkB,CAAC/J,MAAM,GAAG,CAAC,EAAE;MACjC9G,OAAO,CAAC4F,KAAK,CAAC,gCAAgC,EAAEiL,kBAAkB,CAAC/J,MAAM,CAAC;MAC1E+J,kBAAkB,CAAClI,OAAO,CAAC3B,IAAI,IAAIhH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE+G,IAAI,CAAC/C,IAAI,CAAC,CAAC;MAC/E;IACF;;IAEA;IACA,MAAM6M,SAAS,GAAG,CAChB,GAAG3K,WAAW,CAACrD,GAAG,CAACqB,IAAI,KAAK;MAC1BF,IAAI,EAAE,GAAG1E,gBAAgB,GAAGI,eAAe,GAAGT,gBAAgB,CAACiF,IAAI,CAAC,EAAE;MACtEA,IAAI,EAAEA,IAAI;MACVpB,QAAQ,EAAEA,QAAQ;MAClBiG,QAAQ,EAAE;IACZ,CAAC,CAAC,CAAC,EACH,GAAG6H,kBAAkB,CAAC/N,GAAG,CAACkE,IAAI,KAAK;MACjC,GAAGA,IAAI;MACPgC,QAAQ,EAAE;IACZ,CAAC,CAAC,CAAC,CACJ;IAEDhJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtCD,OAAO,CAACC,GAAG,CAAC,cAAc,EAAE6Q,SAAS,CAAChK,MAAM,CAAC;IAC7C9G,OAAO,CAACC,GAAG,CAAC,eAAe,EAAE6Q,SAAS,CAAC/M,MAAM,CAACiD,IAAI,IAAIA,IAAI,CAACgC,QAAQ,CAAC,CAAClG,GAAG,CAACkE,IAAI,IAAIA,IAAI,CAAC7C,IAAI,CAAC,CAAC;IAC5FnE,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAE6Q,SAAS,CAAC/M,MAAM,CAACiD,IAAI,IAAI,CAACA,IAAI,CAACgC,QAAQ,CAAC,CAAClG,GAAG,CAACkE,IAAI,IAAIA,IAAI,CAAC7C,IAAI,CAAC,CAAC;;IAEjG;IACA2M,SAAS,CAACnI,OAAO,CAAEoI,QAAQ,IAAK;MAC9B,IAAI5O,CAAC,GAAG2D,UAAU,CAAC,CAAC;MACpB,OAAO2K,SAAS,CAACzD,IAAI,CAAEgE,GAAG,IAAKpO,IAAI,CAACqO,GAAG,CAACD,GAAG,GAAG7O,CAAC,CAAC,GAAG,EAAE,CAAC,EAAE;QACtDA,CAAC,GAAG2D,UAAU,CAAC,CAAC;MAClB;MACA2K,SAAS,CAACvJ,IAAI,CAAC/E,CAAC,CAAC;MAEjB,MAAM+O,SAAS,GAAG,IAAIxM,KAAK,CAAC,CAAC;MAC7BwM,SAAS,CAAClM,GAAG,GAAG+L,QAAQ,CAAC9M,IAAI;MAE7BK,QAAQ,CAACiB,OAAO,CAAC2B,IAAI,CAAC;QACpB/E,CAAC;QACDC,CAAC,EAAE,CAAC,EAAE;QACN+O,IAAI,EAAEJ,QAAQ,CAAChO,QAAQ;QACvBoB,IAAI,EAAE4M,QAAQ,CAAC5M,IAAI;QACnBoG,KAAK,EAAE2G,SAAS;QAChBpI,GAAG,EAAE,KAAK;QACVE,QAAQ,EAAE+H,QAAQ,CAAC/H;MACrB,CAAC,CAAC;IACJ,CAAC,CAAC;IAEFhJ,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;IAC7CD,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;;IAE7C;IACAD,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAC9B,GAAGV,gBAAgB,GAAGI,eAAe,GAAG6C,MAAM,CAACuK,MAAM,CAAC7N,gBAAgB,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACjF,CAAC;;EAED;EACA,MAAMkS,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACnL,cAAc,CAACzC,IAAI,EAAE,OAAO,IAAI;IAErC,oBACElE,OAAA;MAAK+R,SAAS,EAAC,8BAA8B;MAAAC,QAAA,gBAC3ChS,OAAA;QAAI+R,SAAS,EAAC,0BAA0B;QAAAC,QAAA,EAAC;MAEzC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACLpS,OAAA;QAAK+R,SAAS,EAAC,yBAAyB;QAAAC,QAAA,EACrCrL,cAAc,CAACzC;MAAI;QAAA+N,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;;EAED;EACA7S,SAAS,CAAC,MAAM;IACdmB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEgG,cAAc,CAAC;EACjD,CAAC,EAAE,CAACA,cAAc,CAAC,CAAC;EAEpBpH,SAAS,CAAC,MAAM;IACdmB,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEQ,WAAW,CAAC;EAC3C,CAAC,EAAE,CAACA,WAAW,CAAC,CAAC;;EAEjB;EACA5B,SAAS,CAAC,MAAM;IACd,IAAIwF,SAAS,CAACkB,OAAO,EAAE;MACrBlB,SAAS,CAACkB,OAAO,CAACL,KAAK,GAAG,IAAI,CAAC,CAAE;MACjCb,SAAS,CAACkB,OAAO,CAACJ,MAAM,GAAG,GAAG,CAAC,CAAE;IACnC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMwM,WAAW,GAAGA,CAAA,KAAM;IACxB,OAAOrQ,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAIO,UAAU,IAAI,WAAW;EAC1E,CAAC;;EAED;EACA,MAAM8P,eAAe,GAAGA,CAAA,KAAM;IAC5BC,cAAc,CAAC,KAAK,CAAC;IACrBnR,cAAc,CAAC,IAAI,CAAC;IACpBkN,WAAW,CAAC,KAAK,CAAC;IAClB5M,QAAQ,CAAC,CAAC,CAAC;IACX,IAAIZ,kBAAkB,EAAE;MACtBA,kBAAkB,CAAC0B,UAAU,CAAC;IAChC;IACA;IACA,IAAIvB,gBAAgB,EAAE;MACpBA,gBAAgB,CAAC,CAAC;IACpB;IACAuR,SAAS,CAAC,CAAC;EACb,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAGA,CAAA,kBACvBzS,OAAA;IAAK+R,SAAS,EAAC,wBAAwB;IAAAC,QAAA,gBACrChS,OAAA;MAAAgS,QAAA,EAAI;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACpBpS,OAAA;MAAAgS,QAAA,EACGhR,WAAW,CAACwC,GAAG,CAAC,CAACkP,KAAK,EAAEC,KAAK,kBAC5B3S,OAAA;QAAAgS,QAAA,gBACEhS,OAAA;UAAAgS,QAAA,GAAOU,KAAK,CAACE,QAAQ,EAAC,GAAC;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC,eAC9BpS,OAAA;UAAAgS,QAAA,EAAOU,KAAK,CAACjR;QAAK;UAAAwQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAFnBO,KAAK;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CACN;;EAED;EACA7S,SAAS,CAAC,MAAM;IACd,IAAIsB,aAAa,IAAIY,KAAK,GAAG,CAAC,EAAE;MAC9BZ,aAAa,CAACY,KAAK,CAAC;IACtB;EACF,CAAC,EAAE,CAACA,KAAK,EAAEZ,aAAa,CAAC,CAAC;;EAE1B;EACA,MAAM2R,SAAS,GAAGA,CAAA,KAAM;IACtB,IAAI1N,WAAW,CAACmB,OAAO,EAAE;MACvBqJ,aAAa,CAACxK,WAAW,CAACmB,OAAO,CAAC;IACpC;IAEA7E,cAAc,CAAC,IAAI,CAAC;IACpBkN,WAAW,CAAC,KAAK,CAAC;IAClB5M,QAAQ,CAAC,CAAC,CAAC;IACXF,WAAW,CAAC,EAAE,CAAC;;IAEf;IACAsD,WAAW,CAACmB,OAAO,GAAGoJ,WAAW,CAAC,MAAM;MACtCwD,UAAU,CAAC,CAAC;MACZC,QAAQ,CAAC,CAAC;IACZ,CAAC,EAAE,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC;EACjB,CAAC;;EAED;EACAvT,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAIuF,WAAW,CAACmB,OAAO,EAAE;QACvBqJ,aAAa,CAACxK,WAAW,CAACmB,OAAO,CAAC;QAClCnB,WAAW,CAACmB,OAAO,GAAG,IAAI;MAC5B;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM6M,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAM3I,GAAG,GAAGpF,SAAS,CAACkB,OAAO,CAACmE,UAAU,CAAC,IAAI,CAAC;IAC9CD,GAAG,CAACE,SAAS,CAAC,CAAC,EAAE,CAAC,EAAEtF,SAAS,CAACkB,OAAO,CAACL,KAAK,EAAEb,SAAS,CAACkB,OAAO,CAACJ,MAAM,CAAC;;IAEtE;IACA,IAAIV,WAAW,CAACc,OAAO,CAAC8M,QAAQ,IAAI5N,WAAW,CAACc,OAAO,CAAC+M,aAAa,KAAK,CAAC,EAAE;MAC3E7I,GAAG,CAACK,SAAS,CAACrF,WAAW,CAACc,OAAO,EAAEtD,cAAc,CAACE,CAAC,EAAEF,cAAc,CAACG,CAAC,CAAC;IACxE,CAAC,MAAM;MACLpC,OAAO,CAACsM,IAAI,CAAC,6CAA6C,CAAC;IAC7D;;IAEA;EACF,CAAC;EAED,oBACEhN,OAAA;IAAK+R,SAAS,EAAC,sBAAsB;IAAAC,QAAA,gBACnChS,OAAA;MACE+R,SAAS,EAAC,uBAAuB;MACjCkB,KAAK,EAAE;QAAE,cAAc,EAAE,OAAO/S,OAAO,CAACC,GAAG,CAAC+S,UAAU;MAAyC,CAAE;MAAAlB,QAAA,EAClG;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLpS,OAAA;MAAK+R,SAAS,EAAC,yBAAyB;MAAAC,QAAA,gBACtChS,OAAA;QAAK+R,SAAS,EAAC,2BAA2B;QAAAC,QAAA,eACxChS,OAAA;UAAQmT,GAAG,EAAEpO,SAAU;UAACgN,SAAS,EAAC;QAAwB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC,eACNpS,OAAA;QAAK+R,SAAS,EAAC,8BAA8B;QAAAC,QAAA,gBAC3ChS,OAAA;UAAK+R,SAAS,EAAC,uBAAuB;UAAAC,QAAA,eACpChS,OAAA;YAAK+R,SAAS,EAAC,wBAAwB;YAAAC,QAAA,GAAC,UAC9B,EAACxP,UAAU;UAAA;YAAAyP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAChB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENpS,OAAA;UAAK+R,SAAS,EAAC,sBAAsB;UAAAC,QAAA,eACnChS,OAAA;YAAK+R,SAAS,EAAC,0BAA0B;YAAAC,QAAA,gBACvChS,OAAA;cAAMoT,IAAI,EAAC,KAAK;cAAC,cAAW,OAAO;cAAApB,QAAA,EAAC;YAAE;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,YAAQ,EAAC3Q,KAAK,EAAC,GAAC,eAAAzB,OAAA;cAAMoT,IAAI,EAAC,KAAK;cAAC,cAAW,UAAU;cAAApB,QAAA,EAAC;YAAG;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,EAC7GhG,YAAY,iBACXpM,OAAA;cACE+R,SAAS,EAAC,yBAAyB;cACnCsB,OAAO,EAAEvF,UAAW;cACpB,cAAW,cAAc;cACzBmF,KAAK,EAAE;gBAAEK,UAAU,EAAE,KAAK;gBAAEC,OAAO,EAAE;cAAe,CAAE;cAAAvB,QAAA,EAErDpE,OAAO,GAAG,IAAI,GAAG;YAAI;cAAAqE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAChB,CACT;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENpS,OAAA;UAAK+R,SAAS,EAAC,sBAAsB;UAAAC,QAAA,eACnChS,OAAA;YAAK+R,SAAS,EAAC,0BAA0B;YAAAC,QAAA,GAAC,QAClC,EAACzQ,QAAQ,EAAC,GAClB;UAAA;YAAA0Q,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAENpS,OAAA;UAAK+R,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBAC3ChS,OAAA;YAAAgS,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBpS,OAAA;YAAAgS,QAAA,gBACEhS,OAAA;cAAAgS,QAAA,EAAI;YAA6B;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACtCpS,OAAA;cAAAgS,QAAA,EAAI;YAAyB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAClCpS,OAAA;cAAAgS,QAAA,EAAI;YAAsB;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC/BpS,OAAA;cAAAgS,QAAA,EAAI;YAAuC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9C,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,EAELK,gBAAgB,CAAC,CAAC,EAElB9L,cAAc,CAACzC,IAAI,iBAClBlE,OAAA;UAAK+R,SAAS,EAAC,8BAA8B;UAAAC,QAAA,gBAC3ChS,OAAA;YAAI+R,SAAS,EAAC,0BAA0B;YAAAC,QAAA,EAAC;UAEzC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACLpS,OAAA;YAAK+R,SAAS,EAAC,yBAAyB;YAAAC,QAAA,EACrCrL,cAAc,CAACzC;UAAI;YAAA+N,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAELlC,eAAe,iBACdlQ,OAAA;MAAK+R,SAAS,EAAC,0BAA0B;MAAAC,QAAA,eACvChS,OAAA;QAAK+R,SAAS,EAAC,mCAAmC;QAAAC,QAAA,gBAChDhS,OAAA;UAAAgS,QAAA,EAAI;QAAkB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC3BpS,OAAA;UAAK+R,SAAS,EAAC,wBAAwB;UAAAC,QAAA,EACpCjK,aAAa,CAACvE,GAAG,CAAEyE,MAAM,iBACxBjI,OAAA;YAEE+R,SAAS,EAAE,4BAA4BlQ,cAAc,KAAKoG,MAAM,CAACD,EAAE,GAAG,UAAU,GAAG,EAAE,EAAG;YACxFqL,OAAO,EAAEA,CAAA,KAAMnL,kBAAkB,CAACD,MAAM,CAACD,EAAE,CAAE;YAAAgK,QAAA,gBAE7ChS,OAAA;cACE0F,GAAG,EAAEuC,MAAM,CAACD,EAAG;cACfwL,GAAG,EAAEvL,MAAM,CAACpD;YAAK;cAAAoN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC,eACFpS,OAAA;cAAAgS,QAAA,EAAI/J,MAAM,CAACpD;YAAI;cAAAoN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GARfnK,MAAM,CAACD,EAAE;YAAAiK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OASX,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEAlG,QAAQ,iBACPlM,OAAA;MAAK+R,SAAS,EAAC,sBAAsB;MAAAC,QAAA,gBACnChS,OAAA;QAAAgS,QAAA,EAAI;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACnBpS,OAAA;QAAQqT,OAAO,EAAEA,CAAA,KAAMI,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAE;QAAA3B,QAAA,EAAC;MAEjD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CACN,EAEAzB,gBAAgB,IAAIF,YAAY,iBAC/BzQ,OAAA;MAAK+R,SAAS,EAAC,kCAAkC;MAAAC,QAAA,gBAC/ChS,OAAA;QAAK+R,SAAS,EAAC,kCAAkC;QAAAC,QAAA,eAC/ChS,OAAA;UACE0F,GAAG,EAAE,GAAGxF,OAAO,CAACC,GAAG,CAACC,0BAA0B,kCAAmC;UACjFoT,GAAG,EAAC;QAAa;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eACNpS,OAAA;QAAK+R,SAAS,EAAC,0BAA0B;QAACkB,KAAK,EAAE;UAC/CW,eAAe,EAAE,wBAAwB;UACzCC,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,MAAM;UACpBC,OAAO,EAAE,MAAM;UACfpF,KAAK,EAAE,SAAS;UAChBqF,QAAQ,EAAE,OAAO;UACjBC,SAAS,EAAE,QAAQ;UACnBC,QAAQ,EAAE,OAAO;UACjBC,QAAQ,EAAE,OAAO;UACjBC,MAAM,EAAE,MAAM;UACdC,SAAS,EAAE,iCAAiC;UAC5CC,MAAM,EAAE;QACV,CAAE;QAAAtC,QAAA,EACCvB;MAAY;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,EAEAlQ,aAAa,iBACZlC,OAAA;MAAK+R,SAAS,EAAC,0BAA0B;MAAAC,QAAA,eACvChS,OAAA;QAAK+R,SAAS,EAAC,kBAAkB;QAAAC,QAAA,gBAC/BhS,OAAA;UAAAgS,QAAA,EAAI;QAA+B;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACxCpS,OAAA;UAAAgS,QAAA,EAAG;QAAkC;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACzCpS,OAAA;UAAMuU,QAAQ,EAAEvD,gBAAiB;UAAAgB,QAAA,gBAC/BhS,OAAA;YACE6R,IAAI,EAAC,MAAM;YACX2C,KAAK,EAAEpS,cAAe;YACtBqS,QAAQ,EAAGpM,CAAC,IAAK;cACfhG,iBAAiB,CAACgG,CAAC,CAACV,MAAM,CAAC6M,KAAK,CAAC;cACjCjS,YAAY,CAAC,EAAE,CAAC;YAClB,CAAE;YACFmS,WAAW,EAAC,WAAW;YACvB3C,SAAS,EAAC,uBAAuB;YACjC4C,SAAS;UAAA;YAAA1C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,EACD9P,SAAS,iBAAItC,OAAA;YAAK+R,SAAS,EAAC,uBAAuB;YAAAC,QAAA,EAAE1P;UAAS;YAAA2P,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtEpS,OAAA;YAAQ6R,IAAI,EAAC,QAAQ;YAACE,SAAS,EAAC,yBAAyB;YAAAC,QAAA,EAAC;UAE1D;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;;AAED;AAAAlR,EAAA,CA7kCMN,UAAU;AAAAgU,EAAA,GAAVhU,UAAU;AA8kChBA,UAAU,CAACiU,SAAS,GAAG;EACrBhU,aAAa,EAAEf,SAAS,CAACgV,IAAI;EAC7BhU,kBAAkB,EAAEhB,SAAS,CAACgV,IAAI;EAClC/T,UAAU,EAAEjB,SAAS,CAACgV,IAAI;EAC1B9T,WAAW,EAAElB,SAAS,CAACiV,KAAK;EAC5B9T,gBAAgB,EAAEnB,SAAS,CAACgV;AAC9B,CAAC;AAED,eAAelU,UAAU;AAAC,IAAAgU,EAAA;AAAAI,YAAA,CAAAJ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}