{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst AWSArchitectureGame = () => {\n  _s();\n  var _currentQuestion$opti, _architectureInfo$mis;\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [architecture, setArchitecture] = useState(null);\n  const [architectureInfo, setArchitectureInfo] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [serviceOptions, setServiceOptions] = useState([]);\n  const [difficulty] = useState('BEGINNER');\n  const [score, setScore] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [feedback, setFeedback] = useState({\n    isCorrect: false,\n    message: '',\n    points: 0\n  });\n  const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n  const API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(TouchSensor));\n  const loadNextArchitecture = useCallback(async () => {\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    try {\n      console.log('🚀 Fetching new architecture...');\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Accept': 'application/json',\n          'Origin': 'http://localhost:3000'\n        },\n        mode: 'cors',\n        credentials: 'omit',\n        body: JSON.stringify({\n          difficulty\n        })\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      console.log('📦 Received data:', data);\n\n      // Set architecture info\n      setArchitectureInfo({\n        name: data.architecture.name,\n        description: data.architecture.description\n      });\n\n      // Transform services with proper error handling\n      const transformedServices = (data.services || []).map(serviceName => {\n        if (!serviceName) {\n          console.warn('⚠️ Undefined service name encountered');\n          return null;\n        }\n        return {\n          id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n          name: serviceName,\n          icon: serviceName.toLowerCase().includes('missing') ? '/aws-icons/missing.svg' : getCachedServiceIcon(serviceName)\n        };\n      }).filter(Boolean);\n\n      // Create service name to ID mapping\n      const serviceNameToId = {};\n      transformedServices.forEach(service => {\n        if (service && service.name) {\n          serviceNameToId[service.name] = service.id;\n        }\n      });\n\n      // Transform connections\n      const transformedConnections = (data.connections || []).filter(conn => conn && conn.from && conn.to).map(conn => ({\n        from: serviceNameToId[conn.from] || conn.from.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n        to: serviceNameToId[conn.to] || conn.to.toLowerCase().replace(/[^a-z0-9]+/g, '-')\n      }));\n      setArchitecture({\n        services: transformedServices,\n        connections: transformedConnections\n      });\n\n      // Handle missing services and questions\n      if (data.missingServices && data.missingServices.length > 0) {\n        const currentMissingService = data.missingServices[0];\n        setCurrentQuestion({\n          text: currentMissingService.question,\n          optimizationFocus: currentMissingService.optimizationFocus,\n          position: currentMissingService.position,\n          options: currentMissingService.options.map(opt => ({\n            id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service,\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: opt.service.toLowerCase().includes('missing') ? '/aws-icons/missing.svg' : getCachedServiceIcon(opt.service)\n          }))\n        });\n      }\n    } catch (error) {\n      console.error('❌ Failed to load architecture:', error);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_URL, difficulty, isLoading]);\n  const handleServiceSelection = selectedService => {\n    const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n    const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n    setShowFeedback(true);\n    if (selectedOption.isCorrect) {\n      const points = selectedOption.rating;\n      setScore(prevScore => prevScore + points);\n      setFeedback({\n        isCorrect: true,\n        message: selectedOption.explanation,\n        points: points,\n        isOptimal: selectedOption.isOptimal\n      });\n    } else {\n      setFeedback({\n        isCorrect: false,\n        message: selectedOption.explanation,\n        points: 0\n      });\n    }\n  };\n  const handleNext = () => {\n    setShowFeedback(false);\n    if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n      setCurrentMissingServiceIndex(prev => prev + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: (architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.name) || 'AWS Architecture Challenge'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"score\",\n          children: [\"Score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-architecture-button\",\n          onClick: loadNextArchitecture,\n          disabled: isLoading,\n          children: isLoading ? 'Loading...' : 'New Architecture'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }, this), architectureInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"architecture-description\",\n        children: architectureInfo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 32\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AWSArchitectureDisplay, {\n          architecture: architecture,\n          currentQuestion: currentQuestion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 15\n        }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question: \", currentQuestion.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Optimization Focus: \", currentQuestion.optimizationFocus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 19\n          }, this), showFeedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedback-content\",\n              children: [feedback.isCorrect ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"\\uD83C\\uDF89 Correct! +\", feedback.points, \" points\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 29\n                }, this), feedback.isOptimal && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\uD83C\\uDF1F Perfect choice! This is the optimal solution.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 52\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"\\u274C Not quite right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: feedback.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 25\n              }, this), currentMissingServiceIndex < architectureInfo.missingServices.length - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"next-button\",\n                onClick: handleNext,\n                children: [\"Next Missing Service (\", currentMissingServiceIndex + 2, \" of \", architectureInfo.missingServices.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"service-options\",\n            children: (_currentQuestion$opti = currentQuestion.options) === null || _currentQuestion$opti === void 0 ? void 0 : _currentQuestion$opti.map((option, index) => /*#__PURE__*/_jsxDEV(DraggableService, {\n              service: option,\n              onClick: () => handleServiceSelection(option.name)\n            }, `${option.id}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 25\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-status\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: [\"Service \", currentMissingServiceIndex + 1, \" of \", (architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis = architectureInfo.missingServices) === null || _architectureInfo$mis === void 0 ? void 0 : _architectureInfo$mis.length) || 0]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 7\n  }, this);\n};\n_s(AWSArchitectureGame, \"H1UQ5j9x6lvcZ1A8ZxJFGcTjmMY=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c = AWSArchitectureGame;\nexport default AWSArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureGame\");","map":{"version":3,"names":["React","useState","useCallback","DndContext","useSensor","useSensors","PointerSensor","TouchSensor","AWSArchitectureDisplay","DraggableService","DndProvider","HTML5Backend","getCachedServiceIcon","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","Fragment","_Fragment","S3_BUCKET_URL","ICONS_BASE_PATH","AWSArchitectureGame","_s","_currentQuestion$opti","_architectureInfo$mis","isLoading","setIsLoading","error","setError","architecture","setArchitecture","architectureInfo","setArchitectureInfo","currentQuestion","setCurrentQuestion","serviceOptions","setServiceOptions","difficulty","score","setScore","showFeedback","setShowFeedback","feedback","setFeedback","isCorrect","message","points","currentMissingServiceIndex","setCurrentMissingServiceIndex","API_URL","sensors","activationConstraint","distance","loadNextArchitecture","console","log","response","fetch","method","headers","mode","credentials","body","JSON","stringify","ok","Error","status","data","json","name","description","transformedServices","services","map","serviceName","warn","id","toLowerCase","replace","icon","includes","filter","Boolean","serviceNameToId","forEach","service","transformedConnections","connections","conn","from","to","missingServices","length","currentMissingService","text","question","optimizationFocus","position","options","opt","isOptimal","explanation","rating","handleServiceSelection","selectedService","selectedOption","find","prevScore","handleNext","prev","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","option","index","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService';\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver';\n\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\n\nconst AWSArchitectureGame = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [architecture, setArchitecture] = useState(null);\n    const [architectureInfo, setArchitectureInfo] = useState(null);\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [serviceOptions, setServiceOptions] = useState([]);\n    const [difficulty] = useState('BEGINNER');\n    const [score, setScore] = useState(0); \n    const [showFeedback, setShowFeedback] = useState(false);\n    const [feedback, setFeedback] = useState({ isCorrect: false, message: '', points: 0 });\n    const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n  \n    const API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n\n    const sensors = useSensors(\n      useSensor(PointerSensor, {\n        activationConstraint: {\n          distance: 8,\n        },\n      }),\n      useSensor(TouchSensor)\n    );\n\n    const loadNextArchitecture = useCallback(async () => {\n      if (isLoading) return;\n      setIsLoading(true);\n      setError(null);\n      \n      try {\n        console.log('🚀 Fetching new architecture...');\n        const response = await fetch(API_URL, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'Accept': 'application/json',\n            'Origin': 'http://localhost:3000'\n          },\n          mode: 'cors',\n          credentials: 'omit',\n          body: JSON.stringify({ difficulty })\n        });\n\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n\n        const data = await response.json();\n        console.log('📦 Received data:', data);\n\n        // Set architecture info\n        setArchitectureInfo({\n          name: data.architecture.name,\n          description: data.architecture.description\n        });\n        \n        // Transform services with proper error handling\n        const transformedServices = (data.services || []).map(serviceName => {\n          if (!serviceName) {\n            console.warn('⚠️ Undefined service name encountered');\n            return null;\n          }\n          return {\n            id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n            name: serviceName,\n            icon: serviceName.toLowerCase().includes('missing') ? \n              '/aws-icons/missing.svg' : \n              getCachedServiceIcon(serviceName)\n          };\n        }).filter(Boolean);\n\n        // Create service name to ID mapping\n        const serviceNameToId = {};\n        transformedServices.forEach(service => {\n          if (service && service.name) {\n            serviceNameToId[service.name] = service.id;\n          }\n        });\n\n        // Transform connections\n        const transformedConnections = (data.connections || [])\n          .filter(conn => conn && conn.from && conn.to)\n          .map(conn => ({\n            from: serviceNameToId[conn.from] || conn.from.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n            to: serviceNameToId[conn.to] || conn.to.toLowerCase().replace(/[^a-z0-9]+/g, '-')\n          }));\n\n        setArchitecture({\n          services: transformedServices,\n          connections: transformedConnections\n        });\n\n        // Handle missing services and questions\n        if (data.missingServices && data.missingServices.length > 0) {\n          const currentMissingService = data.missingServices[0];\n          setCurrentQuestion({\n            text: currentMissingService.question,\n            optimizationFocus: currentMissingService.optimizationFocus,\n            position: currentMissingService.position,\n            options: currentMissingService.options.map(opt => ({\n              id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n              name: opt.service,\n              isCorrect: opt.isCorrect,\n              isOptimal: opt.isOptimal,\n              explanation: opt.explanation,\n              rating: opt.rating,\n              icon: opt.service.toLowerCase().includes('missing') ? \n                '/aws-icons/missing.svg' : \n                getCachedServiceIcon(opt.service)\n            }))\n          });\n        }\n      } catch (error) {\n        console.error('❌ Failed to load architecture:', error);\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }, [API_URL, difficulty, isLoading]);\n\n    const handleServiceSelection = (selectedService) => {\n      const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n      const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n\n      setShowFeedback(true);\n      if (selectedOption.isCorrect) {\n        const points = selectedOption.rating;\n        setScore(prevScore => prevScore + points);\n        setFeedback({\n          isCorrect: true,\n          message: selectedOption.explanation,\n          points: points,\n          isOptimal: selectedOption.isOptimal\n        });\n      } else {\n        setFeedback({\n          isCorrect: false,\n          message: selectedOption.explanation,\n          points: 0\n        });\n      }\n    };\n\n    const handleNext = () => {\n      setShowFeedback(false);\n      if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n        setCurrentMissingServiceIndex(prev => prev + 1);\n      }\n    };\n\n    return (\n      <DndProvider backend={HTML5Backend}>\n        <div className=\"game-container\">\n          <div className=\"game-header\">\n            <h2>{architectureInfo?.name || 'AWS Architecture Challenge'}</h2>\n            <div className=\"score\">Score: {score}</div>\n            <button \n              className=\"new-architecture-button\"\n              onClick={loadNextArchitecture}\n              disabled={isLoading}\n            >\n              {isLoading ? 'Loading...' : 'New Architecture'}\n            </button>\n          </div>\n          \n          {architectureInfo && <p className=\"architecture-description\">{architectureInfo.description}</p>}\n          \n          {error ? (\n            <div className=\"error-message\">{error}</div>\n          ) : (\n            <>\n              <AWSArchitectureDisplay \n                architecture={architecture}\n                currentQuestion={currentQuestion}\n              />\n              \n              {currentQuestion && (\n                <div className=\"question-container\">\n                  <h3>Question: {currentQuestion.text}</h3>\n                  <p>Optimization Focus: {currentQuestion.optimizationFocus}</p>\n                  \n                  {showFeedback ? (\n                    <div className={`feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'}`}>\n                      <div className=\"feedback-content\">\n                        {feedback.isCorrect ? (\n                          <>\n                            <h3>🎉 Correct! +{feedback.points} points</h3>\n                            {feedback.isOptimal && <p>🌟 Perfect choice! This is the optimal solution.</p>}\n                          </>\n                        ) : (\n                          <h3>❌ Not quite right</h3>\n                        )}\n                        <p>{feedback.message}</p>\n                        \n                        {currentMissingServiceIndex < architectureInfo.missingServices.length - 1 && (\n                          <button \n                            className=\"next-button\"\n                            onClick={handleNext}\n                          >\n                            Next Missing Service ({currentMissingServiceIndex + 2} of {architectureInfo.missingServices.length})\n                          </button>\n                        )}\n                      </div>\n                    </div>\n                  ) : (\n                    <div className=\"service-options\">\n                      {currentQuestion.options?.map((option, index) => (\n                        <DraggableService\n                          key={`${option.id}-${index}`}\n                          service={option}\n                          onClick={() => handleServiceSelection(option.name)}\n                        />\n                      ))}\n                    </div>\n                  )}\n                </div>\n              )}\n            </>\n          )}\n          \n          <div className=\"game-status\">\n            <div className=\"progress\">\n              Service {currentMissingServiceIndex + 1} of {architectureInfo?.missingServices?.length || 0}\n            </div>\n          </div>\n        </div>\n      </DndProvider>\n    );\n};\n\nexport default AWSArchitectureGame; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}