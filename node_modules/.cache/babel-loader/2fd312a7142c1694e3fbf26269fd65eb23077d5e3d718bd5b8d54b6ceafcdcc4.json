{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/MatchDefinitionWithIconGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/GameCanvas.css';\nimport { getRandomServices, getRandomDefinition, isGameComplete, formatTime, calculateScore } from '../utils/definitionMatchingUtils';\nimport { getServiceIconUrl } from '../utils/memoryGameUtils';\nimport { AZURE_ICON_CATEGORIES } from '../services/IconResolver';\nimport CosmosDBService from '../services/CosmosDBService';\nimport { translateText, translateBatch } from '../services/TranslationService';\nimport LanguageSelector from './LanguageSelector';\n\n// Add default UI translations\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst defaultTranslations = {\n  title: 'Azure Definition Match',\n  backToHome: 'Back to Home',\n  player: 'PLAYER',\n  score: 'Score',\n  time: 'TIME',\n  howToScore: 'HOW TO SCORE',\n  correctMatch: 'Correct match: +20 points',\n  wrongMatch: 'Wrong match: -5 points',\n  tip: 'Tip: Match definitions as fast as possible!',\n  progress: 'Progress',\n  outOf: 'out of',\n  highScores: 'HIGH SCORES',\n  currentMission: 'CURRENT MISSION',\n  missionText: 'Match the Azure service with its definition!',\n  serviceDefinition: 'Service Definition:',\n  congratulations: 'Congratulations!',\n  timesUp: 'Time\\'s Up!',\n  matchedAll: 'You matched all definitions with {time} remaining!',\n  matchedSome: 'You matched {matched} out of {total} definitions.',\n  playAgain: 'Play Again',\n  welcomeTitle: 'Welcome to Azure Definition Match!',\n  welcomeText: 'Match Azure services with their definitions. Enter your name to start:',\n  yourName: 'Your name',\n  startGame: 'START GAME',\n  loading: 'Loading Azure Service Definitions...',\n  categoryBelongs: 'The Service \"{service}\" belongs to the {category} Category'\n};\n\n// Confetti component for celebration effect\nconst Confetti = ({\n  active\n}) => {\n  if (!active) return null;\n  const confettiCount = 150;\n  const confetti = [];\n  for (let i = 0; i < confettiCount; i++) {\n    const left = `${Math.random() * 100}%`;\n    const animationDelay = `${Math.random() * 5}s`;\n    const initialOpacity = Math.random();\n    const size = `${Math.random() * 10 + 5}px`;\n    const rotation = `${Math.random() * 360}deg`;\n    const color = ['#00ffff',\n    // Cyan (Azure color)\n    '#0078d4',\n    // Blue (Azure color)\n    '#ffb900',\n    // Gold\n    '#e74c3c',\n    // Red\n    '#2ecc71',\n    // Green\n    '#9b59b6',\n    // Purple\n    '#3498db' // Light blue\n    ][Math.floor(Math.random() * 7)];\n    confetti.push(/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"memory-confetti-particle\",\n      style: {\n        left,\n        top: '-10px',\n        width: size,\n        height: size,\n        backgroundColor: color,\n        transform: `rotate(${rotation})`,\n        opacity: initialOpacity,\n        animationDelay\n      }\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"memory-confetti-container\",\n    children: confetti\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 10\n  }, this);\n};\n_c = Confetti;\nconst MatchDefinitionWithIconGame = () => {\n  _s();\n  // Game state\n  const [services, setServices] = useState([]);\n  const [currentDefinition, setCurrentDefinition] = useState(null);\n  const [selectedService, setSelectedService] = useState(null);\n  const [matchedServices, setMatchedServices] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(300); // 5 minutes in seconds\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showWelcome, setShowWelcome] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState('Player');\n  const [leaderboard, setLeaderboard] = useState([]);\n  const gameType = 'DefinitionMatching';\n\n  // Sound state\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const sounds = useRef({});\n\n  // Game container ref\n  const gameContainerRef = useRef(null);\n\n  // High scores\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // Define sound files\n  const soundFiles = {\n    select: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/flip-switch.mp3`,\n    correct: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n    incorrect: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n    hover: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/hover.mp3`,\n    achievement: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/levelup.mp3`\n  };\n\n  // First, add a new state for the current category\n  const [currentCategory, setCurrentCategory] = useState('');\n\n  // Add new state for showing category\n  const [showCategory, setShowCategory] = useState(false);\n\n  // Add loading state\n  const [loading, setLoading] = useState(true);\n\n  // Add translations state\n  const [translations, setTranslations] = useState(defaultTranslations);\n  const [translatedDefinition, setTranslatedDefinition] = useState('');\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n\n  // Add new state for all questions answered\n  const [allQuestionsAnswered, setAllQuestionsAnswered] = useState(false);\n\n  // Helper function to safely create audio objects with timeout\n  const createSafeAudio = useCallback(path => {\n    const audio = new Audio();\n    return new Promise(resolve => {\n      audio.addEventListener('error', () => {\n        console.warn(`Sound file not found: ${path}`);\n        resolve(null);\n      });\n      audio.addEventListener('canplaythrough', () => {\n        resolve(audio);\n      });\n      // Timeout fallback in case sound loading takes too long\n      setTimeout(() => {\n        if (audio.readyState < 3) {\n          console.warn(`Sound loading timeout: ${path}`);\n          resolve(null);\n        }\n      }, 3000);\n      audio.src = path;\n    });\n  }, []);\n\n  // Load all sounds\n  useEffect(() => {\n    const loadSounds = async () => {\n      const soundPromises = Object.entries(soundFiles).map(async ([name, path]) => {\n        try {\n          const audio = await createSafeAudio(path);\n          return [name, audio];\n        } catch (error) {\n          console.error(`Failed to load sound ${name}:`, error);\n          return [name, null];\n        }\n      });\n      try {\n        const loadedSounds = await Promise.all(soundPromises);\n        const soundsMap = Object.fromEntries(loadedSounds);\n        sounds.current = soundsMap;\n\n        // Check if at least some sounds loaded successfully\n        const hasLoadedSounds = Object.values(soundsMap).some(sound => sound !== null);\n        setSoundsLoaded(hasLoadedSounds);\n        if (hasLoadedSounds) {\n          console.log('🔊 Sounds loaded successfully');\n        } else {\n          console.warn('⚠️ No sounds could be loaded');\n        }\n      } catch (error) {\n        console.error('Failed to load sounds:', error);\n      }\n    };\n    loadSounds();\n  }, [createSafeAudio]);\n\n  // Play sound function\n  const playSound = useCallback(soundName => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  }, [isMuted]);\n\n  // Toggle mute function\n  const toggleMute = useCallback(() => {\n    setIsMuted(prev => !prev);\n  }, []);\n\n  // Initialize game state\n  const initGame = useCallback(() => {\n    setGameStarted(false);\n    setGameOver(false);\n    setShowConfetti(false);\n    setScore(0);\n    setTimeLeft(300);\n    setMatchedServices([]);\n    setCurrentDefinition(null);\n    setSelectedService(null);\n    setAllQuestionsAnswered(false);\n\n    // Fetch services and start game\n    fetchServices().then(() => {\n      setLoading(false);\n      setGameStarted(true);\n    });\n  }, []);\n\n  // Update the handleCardClick function\n  const handleCardClick = useCallback((service, index) => {\n    if (gameOver || matchedServices.includes(service.name)) {\n      return;\n    }\n    setSelectedService(service);\n    if (service.name === currentDefinition.name) {\n      // Correct match\n      playSound('correct');\n\n      // Get the category of the service\n      let serviceCategory = 'Other';\n      const servicePath = service.path.toLowerCase();\n\n      // Try to find the category\n      for (const [category, path] of Object.entries(AZURE_ICON_CATEGORIES)) {\n        const normalizedPath = path.toLowerCase();\n        if (servicePath.includes(normalizedPath)) {\n          serviceCategory = category;\n          break;\n        }\n      }\n\n      // Format the category name for display\n      const formattedCategory = serviceCategory.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');\n      setCurrentCategory(formattedCategory);\n      setShowCategory(true); // Show category message\n\n      // Add to matched services\n      const newMatchedServices = [...matchedServices, service.name];\n      setMatchedServices(newMatchedServices);\n\n      // Calculate score bonus based on time\n      const timeBonus = Math.floor(timeLeft / 300 * 50);\n      const points = calculateScore(true);\n      setScore(prevScore => prevScore + points);\n\n      // Check if all services are matched\n      if (newMatchedServices.length === services.length) {\n        setShowConfetti(true);\n        setTimeout(() => {\n          setShowConfetti(false);\n        }, 5000);\n        playSound('achievement');\n        setGameOver(true);\n\n        // Update high scores\n        const newScore = score + 20 + timeBonus;\n        updateHighScores(newScore);\n      } else {\n        // Get next random definition from remaining services\n        const remainingServices = services.filter(s => !newMatchedServices.includes(s.name));\n        const randomIndex = Math.floor(Math.random() * remainingServices.length);\n        setCurrentDefinition({\n          name: remainingServices[randomIndex].name,\n          definition: remainingServices[randomIndex].definition,\n          path: remainingServices[randomIndex].path // Add path for category detection\n        });\n      }\n      console.log('Service path:', service.path);\n      console.log('Available categories:', AZURE_ICON_CATEGORIES);\n      console.log('Found category:', serviceCategory);\n    } else {\n      // Wrong match\n      playSound('incorrect');\n      const points = calculateScore(false);\n      setScore(prevScore => Math.max(0, prevScore + points));\n\n      // Visual feedback for wrong match\n      setTimeout(() => {\n        setSelectedService(null);\n      }, 1000);\n    }\n  }, [gameOver, matchedServices, currentDefinition, timeLeft, score, services, playSound]);\n\n  // Update the useEffect for game completion check\n  useEffect(() => {\n    if (gameStarted && !showWelcome && isGameComplete(matchedServices, services.length) && timeLeft > 0) {\n      setShowConfetti(true);\n      setTimeout(() => {\n        setShowConfetti(false);\n      }, 5000);\n      setGameOver(true);\n      playSound('achievement');\n    }\n  }, [gameStarted, showWelcome, matchedServices, services.length, timeLeft, playSound]);\n\n  // Update high scores\n  const updateHighScores = newScore => {\n    const newHighScores = [...highScores];\n\n    // Add the new score\n    newHighScores.push({\n      name: playerName,\n      score: newScore,\n      date: new Date().toISOString()\n    });\n\n    // Sort by score (highest first)\n    newHighScores.sort((a, b) => b.score - a.score);\n\n    // Keep only top 5\n    const topScores = newHighScores.slice(0, 5);\n\n    // Update state and localStorage\n    setHighScores(topScores);\n    localStorage.setItem('highScores', JSON.stringify(topScores));\n  };\n\n  // Timer countdown\n  useEffect(() => {\n    if (gameStarted && !gameOver) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n      return () => clearInterval(timer);\n    }\n  }, [gameStarted, gameOver]);\n\n  // Start the game when component mounts\n  useEffect(() => {\n    if (!showWelcome) {\n      initGame();\n    }\n  }, [initGame, showWelcome]);\n\n  // Auto-hide confetti after celebration\n  useEffect(() => {\n    if (showConfetti) {\n      const timer = setTimeout(() => {\n        setShowConfetti(false);\n      }, 7000); // Hide confetti after 7 seconds\n\n      return () => clearTimeout(timer);\n    }\n  }, [showConfetti]);\n\n  // Handle name submission\n  const handleNameSubmit = e => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    setShowWelcome(false);\n    initGame(); // Start the game after name submission\n  };\n\n  // Add this to retrieve the nickname\n  const getNickname = () => {\n    return localStorage.getItem('userNickname') || 'Anonymous';\n  };\n\n  // Modify the game over function to save score\n  const handleGameOver = async () => {\n    // ... existing game over code ...\n\n    // Calculate final score based on your game's logic\n    const finalScore = score; // Modify this according to your scoring system\n\n    try {\n      // Save score to CosmosDB\n      await CosmosDBService.saveGameScore(getNickname(), gameType, finalScore, {\n        questionsAnswered: totalQuestions,\n        correctAnswers: correctAnswers,\n        incorrectAnswers: incorrectAnswers\n        // Add any other game-specific metadata\n      });\n      console.log('Score saved successfully!');\n    } catch (error) {\n      console.error('Failed to save score:', error);\n    }\n\n    // Continue with existing game over logic...\n  };\n\n  // Update the language handling function to translate all UI elements\n  const handleLanguageChange = async newLanguage => {\n    setCurrentLanguage(newLanguage);\n    if (newLanguage === 'en') {\n      setTranslations(defaultTranslations);\n      if (currentDefinition) {\n        setTranslatedDefinition(currentDefinition.definition);\n      }\n      return;\n    }\n    try {\n      // Use batch translation for UI elements\n      const keys = Object.keys(defaultTranslations);\n      const values = Object.values(defaultTranslations);\n      const translatedValues = await translateBatch(values, newLanguage);\n      const newTranslations = {};\n      keys.forEach((key, index) => {\n        newTranslations[key] = translatedValues[index];\n      });\n      setTranslations(newTranslations);\n\n      // Translate current definition if it exists\n      if (currentDefinition) {\n        const translated = await translateText(currentDefinition.definition, newLanguage);\n        setTranslatedDefinition(translated);\n      }\n    } catch (error) {\n      console.error('Translation error:', error);\n    }\n  };\n\n  // Translate definition whenever it changes\n  useEffect(() => {\n    if (currentDefinition && currentLanguage !== 'en') {\n      handleLanguageChange(currentLanguage);\n    } else if (currentDefinition) {\n      // Use original definition for English\n      setTranslatedDefinition(currentDefinition.definition);\n    }\n  }, [currentDefinition, currentLanguage]);\n\n  // When a correct answer is selected, update the score\n  const handleCorrectAnswer = () => {\n    const points = calculateScore(true);\n    setScore(prevScore => prevScore + points);\n  };\n\n  // When a wrong answer is selected, update the score\n  const handleWrongAnswer = () => {\n    const points = calculateScore(false);\n    setScore(prevScore => Math.max(0, prevScore + points));\n  };\n\n  // Add new useEffect for all questions answered\n  useEffect(() => {\n    if (allQuestionsAnswered) {\n      setGameOver(true);\n      console.log(\"All questions answered!\");\n      saveScore();\n    }\n  }, [allQuestionsAnswered]);\n\n  // Add new useEffect for game over and saving score\n  useEffect(() => {\n    if (gameOver) {\n      console.log('Game over, saving score...');\n      saveScore();\n    }\n  }, [gameOver]);\n  const handleStartGame = () => {\n    setGameStarted(true);\n    console.log('Game started, fetching leaderboard...');\n    fetchLeaderboard();\n  };\n  const fetchLeaderboard = () => {\n    CosmosDBService.getLeaderboard(gameType).then(data => {\n      console.log('Leaderboard data:', data);\n      setLeaderboard(data);\n    }).catch(error => {\n      console.error('Error fetching leaderboard:', error);\n    });\n  };\n  const saveScore = () => {\n    CosmosDBService.saveGameScore(playerName, gameType, score).then(result => {\n      console.log('Score save result:', result);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gameCanvas-container\",\n    ref: gameContainerRef,\n    children: [loading && !showWelcome && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-overlay\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: translations.loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 541,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 9\n    }, this), showConfetti && !showWelcome && /*#__PURE__*/_jsxDEV(Confetti, {\n      active: showConfetti\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 546,\n      columnNumber: 40\n    }, this), !showWelcome && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"back-to-home-button\",\n        style: {\n          position: 'absolute',\n          top: '20px',\n          left: '20px',\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px 20px',\n          backgroundColor: 'rgba(0, 255, 255, 0.1)',\n          border: '2px solid #00ffff',\n          borderRadius: '5px',\n          color: '#00ffff',\n          textDecoration: 'none',\n          fontFamily: 'Orbitron, sans-serif',\n          fontSize: '14px',\n          transition: 'all 0.3s ease',\n          zIndex: 100\n        },\n        onMouseEnter: () => playSound('hover'),\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          xmlns: \"http://www.w3.org/2000/svg\",\n          viewBox: \"0 0 24 24\",\n          fill: \"currentColor\",\n          style: {\n            width: '20px',\n            height: '20px',\n            marginRight: '8px'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 2L1 12h3v9h6v-6h4v6h6v-9h3L12 2z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 584,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 574,\n          columnNumber: 13\n        }, this), translations.backToHome]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"gameCanvas-game-title\",\n        style: {\n          '--azure-icon': `url(${process.env.PUBLIC_URL}/azure-icons/Microsoft_Azure_Cyan.svg)`\n        },\n        children: [\"zure \", translations.title.replace('Azure', '')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 589,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-game-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-canvas-wrapper\",\n          style: {\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'flex-start',\n            position: 'relative',\n            paddingTop: '80px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              position: 'absolute',\n              top: '20px',\n              right: '20px',\n              zIndex: 100\n            },\n            children: /*#__PURE__*/_jsxDEV(LanguageSelector, {\n              currentLanguage: currentLanguage,\n              onLanguageChange: handleLanguageChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 612,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"memory-game-grid\",\n            style: {\n              margin: '0 auto',\n              display: 'grid',\n              gridTemplateColumns: 'repeat(5, 1fr)',\n              gap: '15px',\n              maxWidth: '800px',\n              marginTop: '40px'\n            },\n            children: services.map((service, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `memory-game-card ${selectedService && selectedService.name === service.name ? service.name === currentDefinition.name ? 'correct' : 'wrong' : matchedServices.includes(service.name) ? 'correct' : ''}`,\n              onClick: () => handleCardClick(service, index),\n              onMouseEnter: () => {\n                playSound('hover');\n                setSelectedService(service);\n\n                // Get the category\n                let serviceCategory = 'Other';\n                const servicePath = service.path.toLowerCase();\n\n                // Find the category\n                for (const [category, path] of Object.entries(AZURE_ICON_CATEGORIES)) {\n                  const normalizedPath = path.toLowerCase();\n                  if (servicePath.includes(normalizedPath)) {\n                    serviceCategory = category;\n                    break;\n                  }\n                }\n\n                // Format the category\n                const formattedCategory = serviceCategory.split('_').map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase()).join(' ');\n                setCurrentCategory(formattedCategory);\n\n                // Only show the category if the service is already matched\n                if (matchedServices.includes(service.name)) {\n                  setShowCategory(true);\n                }\n              },\n              onMouseLeave: () => {\n                setShowCategory(false);\n              },\n              style: {\n                cursor: matchedServices.includes(service.name) ? 'default' : 'pointer',\n                opacity: matchedServices.includes(service.name) ? 0.7 : 1,\n                display: 'flex',\n                flexDirection: 'column',\n                alignItems: 'center',\n                direction: 'ltr',\n                transform: 'none'\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"memory-card-content\",\n                style: {\n                  display: 'flex',\n                  flexDirection: 'column',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  height: '100%',\n                  direction: 'ltr',\n                  transform: 'none'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: getServiceIconUrl(service.path),\n                  alt: service.name,\n                  style: {\n                    width: '50px',\n                    height: '50px',\n                    marginBottom: '8px',\n                    transform: 'none'\n                  },\n                  onError: e => {\n                    e.target.onerror = null;\n                    e.target.src = `${process.env.PUBLIC_URL}/azure-icons/default.svg`;\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 691,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"memory-card-text\",\n                  style: {\n                    fontSize: '12px',\n                    textAlign: 'center',\n                    wordBreak: 'break-word',\n                    direction: 'ltr',\n                    unicodeBidi: 'normal',\n                    transform: 'none'\n                  },\n                  children: service.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 705,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 682,\n                columnNumber: 21\n              }, this)\n            }, `${service.name}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 631,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this), currentCategory && showCategory && selectedService && /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              textAlign: 'center',\n              color: '#00ffff',\n              fontSize: '16px',\n              margin: '20px auto',\n              padding: '10px',\n              fontFamily: 'Orbitron, sans-serif',\n              position: 'absolute',\n              width: '100%',\n              left: '0',\n              top: '580px',\n              zIndex: 2\n            },\n            children: translations.categoryBelongs.replace('{service}', selectedService.name || 'Unknown').replace('{category}', currentCategory)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 722,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"definition-card\",\n            style: {\n              backgroundColor: 'rgba(0, 40, 56, 0.9)',\n              padding: '20px',\n              margin: '40px auto',\n              border: '2px solid #00ffff',\n              borderRadius: '10px',\n              boxShadow: '0 4px 15px rgba(0, 255, 255, 0.3)',\n              width: '90%',\n              maxWidth: '800px',\n              textAlign: 'center',\n              fontSize: '18px',\n              fontWeight: 'normal',\n              color: '#ffffff',\n              lineHeight: '1.5',\n              position: 'relative',\n              zIndex: 1,\n              marginTop: '40px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontWeight: 'bold',\n                marginBottom: '10px',\n                color: '#00ffff'\n              },\n              children: translations.serviceDefinition\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 760,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                fontSize: '16px',\n                padding: '10px',\n                backgroundColor: 'rgba(0, 40, 56, 0.8)',\n                borderRadius: '5px'\n              },\n              children: translatedDefinition || currentDefinition && currentDefinition.definition\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 767,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 742,\n            columnNumber: 15\n          }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-game-over\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: matchedServices.length === services.length ? translations.congratulations : translations.timesUp\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 780,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: matchedServices.length === services.length ? translations.matchedAll.replace('{time}', formatTime(timeLeft)) : translations.matchedSome.replace('{matched}', matchedServices.length).replace('{total}', services.length)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 785,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => {\n                playSound('select');\n                initGame();\n              },\n              children: translations.playAgain\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 792,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 779,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gameCanvas-instruction-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-player-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gameCanvas-player-name\",\n              children: [translations.player, \": \", playerName]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 808,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 807,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-score-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gameCanvas-score-display\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"alien\",\n                children: \"\\uD83D\\uDC7E\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 19\n              }, this), \" \", translations.score, \": \", score, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                role: \"img\",\n                \"aria-label\": \"joystick\",\n                children: \"\\uD83D\\uDD79\\uFE0F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 816,\n                columnNumber: 95\n              }, this), soundsLoaded && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"gameCanvas-sound-toggle\",\n                onClick: toggleMute,\n                \"aria-label\": \"Toggle sound\",\n                style: {\n                  marginLeft: '8px',\n                  display: 'inline-block'\n                },\n                children: isMuted ? '🔇' : '🔊'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 818,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 815,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 814,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-timer-box\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gameCanvas-timer-display\",\n              \"data-label\": translations.time ? `${translations.time}:` : \"TIME:\",\n              children: formatTime(timeLeft)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 832,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 831,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-score-explanation\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: [translations.howToScore, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 842,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"\\u2022 \", translations.correctMatch]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 844,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"\\u2022 \", translations.wrongMatch]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 845,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [\"\\u2022 \", translations.tip]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 846,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 843,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 841,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-progress-display\",\n            children: [translations.progress, \": \", matchedServices.length, \" \", translations.outOf, \" \", services.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 851,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-high-scores\",\n            style: {\n              backgroundColor: 'rgba(0, 40, 56, 0.8)',\n              border: '1px solid #00ffff',\n              borderRadius: '8px',\n              padding: '15px',\n              marginTop: '10px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              style: {\n                color: '#00ffff',\n                marginBottom: '10px',\n                textAlign: 'center'\n              },\n              children: translations.highScores\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 863,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              style: {\n                listStyle: 'none',\n                padding: 0\n              },\n              children: leaderboard.map((entry, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                style: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  padding: '4px 0'\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"gameCanvas-high-score-name\",\n                  children: [entry.nickname, \":\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 877,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: entry.score\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 878,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 872,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 870,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 856,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-mission-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"gameCanvas-mission-title\",\n              children: translations.currentMission\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 886,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"gameCanvas-mission-text\",\n              children: translations.missionText\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 889,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 885,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 805,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 596,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), showWelcome && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gameCanvas-modal-overlay\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gameCanvas-modal\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: translations.welcomeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 902,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: translations.welcomeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 903,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNameSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: tempPlayerName,\n            onChange: e => {\n              setTempPlayerName(e.target.value);\n              setNameError('');\n            },\n            placeholder: translations.yourName,\n            className: \"gameCanvas-name-input\",\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 905,\n            columnNumber: 15\n          }, this), nameError && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"gameCanvas-name-error\",\n            children: nameError\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 916,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"gameCanvas-start-button\",\n            children: translations.startGame\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 917,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 904,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 901,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 900,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 537,\n    columnNumber: 5\n  }, this);\n};\n_s(MatchDefinitionWithIconGame, \"TUAYNN5wVetLQCoTCAYU7V96inE=\");\n_c2 = MatchDefinitionWithIconGame;\nexport default MatchDefinitionWithIconGame;\nvar _c, _c2;\n$RefreshReg$(_c, \"Confetti\");\n$RefreshReg$(_c2, \"MatchDefinitionWithIconGame\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","useRef","Link","getRandomServices","getRandomDefinition","isGameComplete","formatTime","calculateScore","getServiceIconUrl","AZURE_ICON_CATEGORIES","CosmosDBService","translateText","translateBatch","LanguageSelector","jsxDEV","_jsxDEV","Fragment","_Fragment","defaultTranslations","title","backToHome","player","score","time","howToScore","correctMatch","wrongMatch","tip","progress","outOf","highScores","currentMission","missionText","serviceDefinition","congratulations","timesUp","matchedAll","matchedSome","playAgain","welcomeTitle","welcomeText","yourName","startGame","loading","categoryBelongs","Confetti","active","confettiCount","confetti","i","left","Math","random","animationDelay","initialOpacity","size","rotation","color","floor","push","className","style","top","width","height","backgroundColor","transform","opacity","fileName","_jsxFileName","lineNumber","columnNumber","children","_c","MatchDefinitionWithIconGame","_s","services","setServices","currentDefinition","setCurrentDefinition","selectedService","setSelectedService","matchedServices","setMatchedServices","timeLeft","setTimeLeft","setScore","gameStarted","setGameStarted","gameOver","setGameOver","showConfetti","setShowConfetti","showWelcome","setShowWelcome","tempPlayerName","setTempPlayerName","nameError","setNameError","playerName","setPlayerName","leaderboard","setLeaderboard","gameType","soundsLoaded","setSoundsLoaded","isMuted","setIsMuted","sounds","gameContainerRef","setHighScores","saved","localStorage","getItem","JSON","parse","soundFiles","select","process","env","REACT_APP_AZURE_BUCKET_URL","correct","incorrect","hover","achievement","currentCategory","setCurrentCategory","showCategory","setShowCategory","setLoading","translations","setTranslations","translatedDefinition","setTranslatedDefinition","currentLanguage","setCurrentLanguage","allQuestionsAnswered","setAllQuestionsAnswered","createSafeAudio","path","audio","Audio","Promise","resolve","addEventListener","console","warn","setTimeout","readyState","src","loadSounds","soundPromises","Object","entries","map","name","error","loadedSounds","all","soundsMap","fromEntries","current","hasLoadedSounds","values","some","sound","log","playSound","soundName","currentTime","volume","play","catch","err","toggleMute","prev","initGame","fetchServices","then","handleCardClick","service","index","includes","serviceCategory","servicePath","toLowerCase","category","normalizedPath","formattedCategory","split","word","charAt","toUpperCase","slice","join","newMatchedServices","timeBonus","points","prevScore","length","newScore","updateHighScores","remainingServices","filter","s","randomIndex","definition","max","newHighScores","date","Date","toISOString","sort","a","b","topScores","setItem","stringify","timer","setInterval","clearInterval","clearTimeout","handleNameSubmit","e","preventDefault","trim","getNickname","handleGameOver","finalScore","saveGameScore","questionsAnswered","totalQuestions","correctAnswers","incorrectAnswers","handleLanguageChange","newLanguage","keys","translatedValues","newTranslations","forEach","key","translated","handleCorrectAnswer","handleWrongAnswer","saveScore","handleStartGame","fetchLeaderboard","getLeaderboard","data","result","ref","to","position","display","alignItems","padding","border","borderRadius","textDecoration","fontFamily","fontSize","transition","zIndex","onMouseEnter","xmlns","viewBox","fill","marginRight","d","PUBLIC_URL","replace","flexDirection","justifyContent","paddingTop","right","onLanguageChange","margin","gridTemplateColumns","gap","maxWidth","marginTop","onClick","onMouseLeave","cursor","direction","alt","marginBottom","onError","target","onerror","textAlign","wordBreak","unicodeBidi","boxShadow","fontWeight","lineHeight","role","marginLeft","listStyle","entry","nickname","onSubmit","type","value","onChange","placeholder","autoFocus","_c2","$RefreshReg$"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/MatchDefinitionWithIconGame.jsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../styles/GameCanvas.css';\nimport { \n  getRandomServices, \n  getRandomDefinition, \n  isGameComplete,\n  formatTime,\n  calculateScore\n} from '../utils/definitionMatchingUtils';\nimport { getServiceIconUrl } from '../utils/memoryGameUtils';\nimport { AZURE_ICON_CATEGORIES } from '../services/IconResolver';\nimport CosmosDBService from '../services/CosmosDBService';\nimport { translateText, translateBatch } from '../services/TranslationService';\nimport LanguageSelector from './LanguageSelector';\n\n// Add default UI translations\nconst defaultTranslations = {\n  title: 'Azure Definition Match',\n  backToHome: 'Back to Home',\n  player: 'PLAYER',\n  score: 'Score',\n  time: 'TIME',\n  howToScore: 'HOW TO SCORE',\n  correctMatch: 'Correct match: +20 points',\n  wrongMatch: 'Wrong match: -5 points',\n  tip: 'Tip: Match definitions as fast as possible!',\n  progress: 'Progress',\n  outOf: 'out of',\n  highScores: 'HIGH SCORES',\n  currentMission: 'CURRENT MISSION',\n  missionText: 'Match the Azure service with its definition!',\n  serviceDefinition: 'Service Definition:',\n  congratulations: 'Congratulations!',\n  timesUp: 'Time\\'s Up!',\n  matchedAll: 'You matched all definitions with {time} remaining!',\n  matchedSome: 'You matched {matched} out of {total} definitions.',\n  playAgain: 'Play Again',\n  welcomeTitle: 'Welcome to Azure Definition Match!',\n  welcomeText: 'Match Azure services with their definitions. Enter your name to start:',\n  yourName: 'Your name',\n  startGame: 'START GAME',\n  loading: 'Loading Azure Service Definitions...',\n  categoryBelongs: 'The Service \"{service}\" belongs to the {category} Category'\n};\n\n// Confetti component for celebration effect\nconst Confetti = ({ active }) => {\n  if (!active) return null;\n  \n  const confettiCount = 150;\n  const confetti = [];\n  \n  for (let i = 0; i < confettiCount; i++) {\n    const left = `${Math.random() * 100}%`;\n    const animationDelay = `${Math.random() * 5}s`;\n    const initialOpacity = Math.random();\n    const size = `${Math.random() * 10 + 5}px`;\n    const rotation = `${Math.random() * 360}deg`;\n    const color = [\n      '#00ffff', // Cyan (Azure color)\n      '#0078d4', // Blue (Azure color)\n      '#ffb900', // Gold\n      '#e74c3c', // Red\n      '#2ecc71', // Green\n      '#9b59b6', // Purple\n      '#3498db', // Light blue\n    ][Math.floor(Math.random() * 7)];\n    \n    confetti.push(\n      <div \n        key={i}\n        className=\"memory-confetti-particle\"\n        style={{\n          left,\n          top: '-10px',\n          width: size,\n          height: size,\n          backgroundColor: color,\n          transform: `rotate(${rotation})`,\n          opacity: initialOpacity,\n          animationDelay,\n        }}\n      />\n    );\n  }\n  \n  return <div className=\"memory-confetti-container\">{confetti}</div>;\n};\n\nconst MatchDefinitionWithIconGame = () => {\n  // Game state\n  const [services, setServices] = useState([]);\n  const [currentDefinition, setCurrentDefinition] = useState(null);\n  const [selectedService, setSelectedService] = useState(null);\n  const [matchedServices, setMatchedServices] = useState([]);\n  const [timeLeft, setTimeLeft] = useState(300); // 5 minutes in seconds\n  const [score, setScore] = useState(0);\n  const [gameStarted, setGameStarted] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [showConfetti, setShowConfetti] = useState(false);\n  const [showWelcome, setShowWelcome] = useState(true);\n  const [tempPlayerName, setTempPlayerName] = useState('');\n  const [nameError, setNameError] = useState('');\n  const [playerName, setPlayerName] = useState('Player');\n  const [leaderboard, setLeaderboard] = useState([]);\n  const gameType = 'DefinitionMatching';\n  \n  // Sound state\n  const [soundsLoaded, setSoundsLoaded] = useState(false);\n  const [isMuted, setIsMuted] = useState(false);\n  const sounds = useRef({});\n  \n  // Game container ref\n  const gameContainerRef = useRef(null);\n  \n  // High scores\n  const [highScores, setHighScores] = useState(() => {\n    const saved = localStorage.getItem('highScores');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // Define sound files\n  const soundFiles = {\n    select: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/flip-switch.mp3`,\n    correct: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/correct_sound.mp3`,\n    incorrect: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/incorrect_sound.mp3`,\n    hover: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/hover.mp3`,\n    achievement: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/levelup.mp3`\n  };\n\n  // First, add a new state for the current category\n  const [currentCategory, setCurrentCategory] = useState('');\n\n  // Add new state for showing category\n  const [showCategory, setShowCategory] = useState(false);\n\n  // Add loading state\n  const [loading, setLoading] = useState(true);\n\n  // Add translations state\n  const [translations, setTranslations] = useState(defaultTranslations);\n  const [translatedDefinition, setTranslatedDefinition] = useState('');\n  const [currentLanguage, setCurrentLanguage] = useState('en');\n\n  // Add new state for all questions answered\n  const [allQuestionsAnswered, setAllQuestionsAnswered] = useState(false);\n\n  // Helper function to safely create audio objects with timeout\n  const createSafeAudio = useCallback((path) => {\n    const audio = new Audio();\n    return new Promise((resolve) => {\n      audio.addEventListener('error', () => {\n        console.warn(`Sound file not found: ${path}`);\n        resolve(null);\n      });\n      audio.addEventListener('canplaythrough', () => {\n        resolve(audio);\n      });\n      // Timeout fallback in case sound loading takes too long\n      setTimeout(() => {\n        if (audio.readyState < 3) {\n          console.warn(`Sound loading timeout: ${path}`);\n          resolve(null);\n        }\n      }, 3000);\n      audio.src = path;\n    });\n  }, []);\n\n  // Load all sounds\n  useEffect(() => {\n    const loadSounds = async () => {\n      const soundPromises = Object.entries(soundFiles).map(async ([name, path]) => {\n        try {\n          const audio = await createSafeAudio(path);\n          return [name, audio];\n        } catch (error) {\n          console.error(`Failed to load sound ${name}:`, error);\n          return [name, null];\n        }\n      });\n\n      try {\n        const loadedSounds = await Promise.all(soundPromises);\n        const soundsMap = Object.fromEntries(loadedSounds);\n        sounds.current = soundsMap;\n        \n        // Check if at least some sounds loaded successfully\n        const hasLoadedSounds = Object.values(soundsMap).some(sound => sound !== null);\n        setSoundsLoaded(hasLoadedSounds);\n        \n        if (hasLoadedSounds) {\n          console.log('🔊 Sounds loaded successfully');\n        } else {\n          console.warn('⚠️ No sounds could be loaded');\n        }\n      } catch (error) {\n        console.error('Failed to load sounds:', error);\n      }\n    };\n\n    loadSounds();\n  }, [createSafeAudio]);\n  \n  // Play sound function\n  const playSound = useCallback((soundName) => {\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  }, [isMuted]);\n  \n  // Toggle mute function\n  const toggleMute = useCallback(() => {\n    setIsMuted(prev => !prev);\n  }, []);\n\n  // Initialize game state\n  const initGame = useCallback(() => {\n    setGameStarted(false);\n    setGameOver(false);\n    setShowConfetti(false);\n    setScore(0);\n    setTimeLeft(300);\n    setMatchedServices([]);\n    setCurrentDefinition(null);\n    setSelectedService(null);\n    setAllQuestionsAnswered(false);\n    \n    // Fetch services and start game\n    fetchServices().then(() => {\n      setLoading(false);\n      setGameStarted(true);\n    });\n  }, []);\n\n  // Update the handleCardClick function\n  const handleCardClick = useCallback((service, index) => {\n    if (gameOver || matchedServices.includes(service.name)) {\n      return;\n    }\n\n    setSelectedService(service);\n\n    if (service.name === currentDefinition.name) {\n      // Correct match\n      playSound('correct');\n      \n      // Get the category of the service\n      let serviceCategory = 'Other';\n      const servicePath = service.path.toLowerCase();\n      \n      // Try to find the category\n      for (const [category, path] of Object.entries(AZURE_ICON_CATEGORIES)) {\n        const normalizedPath = path.toLowerCase();\n        if (servicePath.includes(normalizedPath)) {\n          serviceCategory = category;\n          break;\n        }\n      }\n      \n      // Format the category name for display\n      const formattedCategory = serviceCategory\n        .split('_')\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' ');\n      \n      setCurrentCategory(formattedCategory);\n      setShowCategory(true); // Show category message\n      \n      // Add to matched services\n      const newMatchedServices = [...matchedServices, service.name];\n      setMatchedServices(newMatchedServices);\n      \n      // Calculate score bonus based on time\n      const timeBonus = Math.floor((timeLeft / 300) * 50);\n      const points = calculateScore(true);\n      setScore(prevScore => prevScore + points);\n\n      // Check if all services are matched\n      if (newMatchedServices.length === services.length) {\n        setShowConfetti(true);\n        setTimeout(() => {\n          setShowConfetti(false);\n        }, 5000);\n        playSound('achievement');\n        setGameOver(true);\n        \n        // Update high scores\n        const newScore = score + 20 + timeBonus;\n        updateHighScores(newScore);\n      } else {\n        // Get next random definition from remaining services\n        const remainingServices = services.filter(s => !newMatchedServices.includes(s.name));\n        const randomIndex = Math.floor(Math.random() * remainingServices.length);\n        setCurrentDefinition({\n          name: remainingServices[randomIndex].name,\n          definition: remainingServices[randomIndex].definition,\n          path: remainingServices[randomIndex].path // Add path for category detection\n        });\n      }\n\n      console.log('Service path:', service.path);\n      console.log('Available categories:', AZURE_ICON_CATEGORIES);\n      console.log('Found category:', serviceCategory);\n    } else {\n      // Wrong match\n      playSound('incorrect');\n      const points = calculateScore(false);\n      setScore(prevScore => Math.max(0, prevScore + points));\n      \n      // Visual feedback for wrong match\n      setTimeout(() => {\n        setSelectedService(null);\n      }, 1000);\n    }\n  }, [gameOver, matchedServices, currentDefinition, timeLeft, score, services, playSound]);\n\n  // Update the useEffect for game completion check\n  useEffect(() => {\n    if (gameStarted && !showWelcome && isGameComplete(matchedServices, services.length) && timeLeft > 0) {\n      setShowConfetti(true);\n      setTimeout(() => {\n        setShowConfetti(false);\n      }, 5000);\n      setGameOver(true);\n      playSound('achievement');\n    }\n  }, [gameStarted, showWelcome, matchedServices, services.length, timeLeft, playSound]);\n\n  // Update high scores\n  const updateHighScores = (newScore) => {\n    const newHighScores = [...highScores];\n    \n    // Add the new score\n    newHighScores.push({\n      name: playerName,\n      score: newScore,\n      date: new Date().toISOString()\n    });\n    \n    // Sort by score (highest first)\n    newHighScores.sort((a, b) => b.score - a.score);\n    \n    // Keep only top 5\n    const topScores = newHighScores.slice(0, 5);\n    \n    // Update state and localStorage\n    setHighScores(topScores);\n    localStorage.setItem('highScores', JSON.stringify(topScores));\n  };\n\n  // Timer countdown\n  useEffect(() => {\n    if (gameStarted && !gameOver) {\n      const timer = setInterval(() => {\n        setTimeLeft(prev => prev - 1);\n      }, 1000);\n\n      return () => clearInterval(timer);\n    }\n  }, [gameStarted, gameOver]);\n\n  // Start the game when component mounts\n  useEffect(() => {\n    if (!showWelcome) {\n      initGame();\n    }\n  }, [initGame, showWelcome]);\n\n  // Auto-hide confetti after celebration\n  useEffect(() => {\n    if (showConfetti) {\n      const timer = setTimeout(() => {\n        setShowConfetti(false);\n      }, 7000); // Hide confetti after 7 seconds\n      \n      return () => clearTimeout(timer);\n    }\n  }, [showConfetti]);\n\n  // Handle name submission\n  const handleNameSubmit = (e) => {\n    e.preventDefault();\n    if (tempPlayerName.trim().length < 2) {\n      setNameError('Name must be at least 2 characters long');\n      return;\n    }\n    if (tempPlayerName.trim().length > 15) {\n      setNameError('Name must be less than 15 characters');\n      return;\n    }\n    setPlayerName(tempPlayerName.trim());\n    setShowWelcome(false);\n    initGame(); // Start the game after name submission\n  };\n\n  // Add this to retrieve the nickname\n  const getNickname = () => {\n    return localStorage.getItem('userNickname') || 'Anonymous';\n  };\n\n  // Modify the game over function to save score\n  const handleGameOver = async () => {\n    // ... existing game over code ...\n    \n    // Calculate final score based on your game's logic\n    const finalScore = score; // Modify this according to your scoring system\n    \n    try {\n      // Save score to CosmosDB\n      await CosmosDBService.saveGameScore(\n        getNickname(),\n        gameType, \n        finalScore,\n        {\n          questionsAnswered: totalQuestions,\n          correctAnswers: correctAnswers,\n          incorrectAnswers: incorrectAnswers,\n          // Add any other game-specific metadata\n        }\n      );\n      console.log('Score saved successfully!');\n    } catch (error) {\n      console.error('Failed to save score:', error);\n    }\n    \n    // Continue with existing game over logic...\n  };\n\n  // Update the language handling function to translate all UI elements\n  const handleLanguageChange = async (newLanguage) => {\n    setCurrentLanguage(newLanguage);\n    \n    if (newLanguage === 'en') {\n      setTranslations(defaultTranslations);\n      if (currentDefinition) {\n        setTranslatedDefinition(currentDefinition.definition);\n      }\n      return;\n    }\n    \n    try {\n      // Use batch translation for UI elements\n      const keys = Object.keys(defaultTranslations);\n      const values = Object.values(defaultTranslations);\n      \n      const translatedValues = await translateBatch(values, newLanguage);\n      \n      const newTranslations = {};\n      keys.forEach((key, index) => {\n        newTranslations[key] = translatedValues[index];\n      });\n      \n      setTranslations(newTranslations);\n      \n      // Translate current definition if it exists\n      if (currentDefinition) {\n        const translated = await translateText(currentDefinition.definition, newLanguage);\n        setTranslatedDefinition(translated);\n      }\n    } catch (error) {\n      console.error('Translation error:', error);\n    }\n  };\n\n  // Translate definition whenever it changes\n  useEffect(() => {\n    if (currentDefinition && currentLanguage !== 'en') {\n      handleLanguageChange(currentLanguage);\n    } else if (currentDefinition) {\n      // Use original definition for English\n      setTranslatedDefinition(currentDefinition.definition);\n    }\n  }, [currentDefinition, currentLanguage]);\n\n  // When a correct answer is selected, update the score\n  const handleCorrectAnswer = () => {\n    const points = calculateScore(true);\n    setScore(prevScore => prevScore + points);\n  };\n\n  // When a wrong answer is selected, update the score\n  const handleWrongAnswer = () => {\n    const points = calculateScore(false);\n    setScore(prevScore => Math.max(0, prevScore + points));\n  };\n\n  // Add new useEffect for all questions answered\n  useEffect(() => {\n    if (allQuestionsAnswered) {\n      setGameOver(true);\n      console.log(\"All questions answered!\");\n      saveScore();\n    }\n  }, [allQuestionsAnswered]);\n\n  // Add new useEffect for game over and saving score\n  useEffect(() => {\n    if (gameOver) {\n      console.log('Game over, saving score...');\n      saveScore();\n    }\n  }, [gameOver]);\n\n  const handleStartGame = () => {\n    setGameStarted(true);\n    console.log('Game started, fetching leaderboard...');\n    fetchLeaderboard();\n  };\n\n  const fetchLeaderboard = () => {\n    CosmosDBService.getLeaderboard(gameType).then(data => {\n      console.log('Leaderboard data:', data);\n      setLeaderboard(data);\n    }).catch(error => {\n      console.error('Error fetching leaderboard:', error);\n    });\n  };\n\n  const saveScore = () => {\n    CosmosDBService.saveGameScore(playerName, gameType, score).then(result => {\n      console.log('Score save result:', result);\n    });\n  };\n\n  return (\n    <div className=\"gameCanvas-container\" ref={gameContainerRef}>\n      {loading && !showWelcome && (\n        <div className=\"loading-overlay\">\n          <div className=\"loading-spinner\"></div>\n          <p>{translations.loading}</p>\n        </div>\n      )}\n      \n      {/* Only show confetti when game is actually over and welcome screen is not shown */}\n      {showConfetti && !showWelcome && <Confetti active={showConfetti} />}\n\n      {/* Only show game content when welcome screen is not shown */}\n      {!showWelcome && (\n        <>\n          {/* Back to Home button */}\n          <Link \n            to=\"/\" \n            className=\"back-to-home-button\"\n            style={{\n              position: 'absolute',\n              top: '20px',\n              left: '20px',\n              display: 'flex',\n              alignItems: 'center',\n              padding: '10px 20px',\n              backgroundColor: 'rgba(0, 255, 255, 0.1)',\n              border: '2px solid #00ffff',\n              borderRadius: '5px',\n              color: '#00ffff',\n              textDecoration: 'none',\n              fontFamily: 'Orbitron, sans-serif',\n              fontSize: '14px',\n              transition: 'all 0.3s ease',\n              zIndex: 100\n            }}\n            onMouseEnter={() => playSound('hover')}\n          >\n            <svg \n              xmlns=\"http://www.w3.org/2000/svg\" \n              viewBox=\"0 0 24 24\" \n              fill=\"currentColor\" \n              style={{\n                width: '20px',\n                height: '20px',\n                marginRight: '8px'\n              }}\n            >\n              <path d=\"M12 2L1 12h3v9h6v-6h4v6h6v-9h3L12 2z\"/>\n            </svg>\n            {translations.backToHome}\n          </Link>\n\n          <h1 \n            className=\"gameCanvas-game-title\"\n            style={{ '--azure-icon': `url(${process.env.PUBLIC_URL}/azure-icons/Microsoft_Azure_Cyan.svg)` }}\n          >\n            zure {translations.title.replace('Azure', '')}\n          </h1>\n          \n          <div className=\"gameCanvas-game-content\">\n            {/* Main game area with centered grid */}\n            <div className=\"gameCanvas-canvas-wrapper\" style={{ \n              display: 'flex', \n              flexDirection: 'column', \n              justifyContent: 'flex-start',\n              position: 'relative',\n              paddingTop: '80px'\n            }}>\n              {/* Add LanguageSelector here with absolute positioning */}\n              <div style={{\n                position: 'absolute',\n                top: '20px',\n                right: '20px',\n                zIndex: 100\n              }}>\n                <LanguageSelector \n                  currentLanguage={currentLanguage}\n                  onLanguageChange={handleLanguageChange}\n                />\n              </div>\n\n              {/* Service icons grid */}\n              <div \n                className=\"memory-game-grid\" \n                style={{ \n                  margin: '0 auto',\n                  display: 'grid',\n                  gridTemplateColumns: 'repeat(5, 1fr)',\n                  gap: '15px',\n                  maxWidth: '800px',\n                  marginTop: '40px'\n                }}\n              >\n                {services.map((service, index) => (\n                  <div\n                    key={`${service.name}-${index}`}\n                    className={`memory-game-card ${\n                      selectedService && selectedService.name === service.name \n                        ? (service.name === currentDefinition.name ? 'correct' : 'wrong') \n                        : matchedServices.includes(service.name) ? 'correct' : ''\n                    }`}\n                    onClick={() => handleCardClick(service, index)}\n                    onMouseEnter={() => {\n                      playSound('hover');\n                      setSelectedService(service);\n                      \n                      // Get the category\n                      let serviceCategory = 'Other';\n                      const servicePath = service.path.toLowerCase();\n                      \n                      // Find the category\n                      for (const [category, path] of Object.entries(AZURE_ICON_CATEGORIES)) {\n                        const normalizedPath = path.toLowerCase();\n                        if (servicePath.includes(normalizedPath)) {\n                          serviceCategory = category;\n                          break;\n                        }\n                      }\n                      \n                      // Format the category\n                      const formattedCategory = serviceCategory\n                        .split('_')\n                        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n                        .join(' ');\n                      \n                      setCurrentCategory(formattedCategory);\n                      \n                      // Only show the category if the service is already matched\n                      if (matchedServices.includes(service.name)) {\n                        setShowCategory(true);\n                      }\n                    }}\n                    onMouseLeave={() => {\n                      setShowCategory(false);\n                    }}\n                    style={{\n                      cursor: matchedServices.includes(service.name) ? 'default' : 'pointer',\n                      opacity: matchedServices.includes(service.name) ? 0.7 : 1,\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'center',\n                      direction: 'ltr',\n                      transform: 'none'\n                    }}\n                  >\n                    <div className=\"memory-card-content\" style={{\n                      display: 'flex',\n                      flexDirection: 'column',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      height: '100%',\n                      direction: 'ltr',\n                      transform: 'none'\n                    }}>\n                      <img \n                        src={getServiceIconUrl(service.path)} \n                        alt={service.name}\n                        style={{\n                          width: '50px',\n                          height: '50px',\n                          marginBottom: '8px',\n                          transform: 'none'\n                        }}\n                        onError={(e) => {\n                          e.target.onerror = null;\n                          e.target.src = `${process.env.PUBLIC_URL}/azure-icons/default.svg`;\n                        }}\n                      />\n                      <div className=\"memory-card-text\" style={{\n                        fontSize: '12px',\n                        textAlign: 'center',\n                        wordBreak: 'break-word',\n                        direction: 'ltr',\n                        unicodeBidi: 'normal',\n                        transform: 'none'\n                      }}>\n                        {service.name}\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n\n              {/* Category display with translations */}\n              {currentCategory && showCategory && selectedService && (\n                <div style={{\n                  textAlign: 'center',\n                  color: '#00ffff',\n                  fontSize: '16px',\n                  margin: '20px auto',\n                  padding: '10px',\n                  fontFamily: 'Orbitron, sans-serif',\n                  position: 'absolute',\n                  width: '100%',\n                  left: '0',\n                  top: '580px',\n                  zIndex: 2\n                }}>\n                  {translations.categoryBelongs\n                    .replace('{service}', selectedService.name || 'Unknown')\n                    .replace('{category}', currentCategory)}\n                </div>\n              )}\n\n              {/* Definition card with translations */}\n              <div className=\"definition-card\" style={{\n                backgroundColor: 'rgba(0, 40, 56, 0.9)',\n                padding: '20px',\n                margin: '40px auto',\n                border: '2px solid #00ffff',\n                borderRadius: '10px',\n                boxShadow: '0 4px 15px rgba(0, 255, 255, 0.3)',\n                width: '90%',\n                maxWidth: '800px',\n                textAlign: 'center',\n                fontSize: '18px',\n                fontWeight: 'normal',\n                color: '#ffffff',\n                lineHeight: '1.5',\n                position: 'relative',\n                zIndex: 1,\n                marginTop: '40px'\n              }}>\n                <div style={{\n                  fontWeight: 'bold',\n                  marginBottom: '10px',\n                  color: '#00ffff'\n                }}>\n                  {translations.serviceDefinition}\n                </div>\n                <div style={{\n                  fontSize: '16px',\n                  padding: '10px',\n                  backgroundColor: 'rgba(0, 40, 56, 0.8)',\n                  borderRadius: '5px'\n                }}>\n                  {translatedDefinition || (currentDefinition && currentDefinition.definition)}\n                </div>\n              </div>\n\n              {/* Game over message with translations */}\n              {gameOver && (\n                <div className=\"gameCanvas-game-over\">\n                  <h3>\n                    {matchedServices.length === services.length \n                      ? translations.congratulations \n                      : translations.timesUp}\n                  </h3>\n                  <p>\n                    {matchedServices.length === services.length \n                      ? translations.matchedAll.replace('{time}', formatTime(timeLeft))\n                      : translations.matchedSome\n                          .replace('{matched}', matchedServices.length)\n                          .replace('{total}', services.length)}\n                  </p>\n                  <button \n                    onClick={() => {\n                      playSound('select');\n                      initGame();\n                    }}\n                  >\n                    {translations.playAgain}\n                  </button>\n                </div>\n              )}\n            </div>\n\n            {/* Right side panel with translations */}\n            <div className=\"gameCanvas-instruction-panel\">\n              {/* Player info box */}\n              <div className=\"gameCanvas-player-box\">\n                <div className=\"gameCanvas-player-name\">\n                  {translations.player}: {playerName}\n                </div>\n              </div>\n\n              {/* Score box */}\n              <div className=\"gameCanvas-score-box\">\n                <div className=\"gameCanvas-score-display\">\n                  <span role=\"img\" aria-label=\"alien\">👾</span> {translations.score}: {score} <span role=\"img\" aria-label=\"joystick\">🕹️</span>\n                  {soundsLoaded && (\n                    <button \n                      className=\"gameCanvas-sound-toggle\"\n                      onClick={toggleMute}\n                      aria-label=\"Toggle sound\"\n                      style={{ marginLeft: '8px', display: 'inline-block' }}\n                    >\n                      {isMuted ? '🔇' : '🔊'}\n                    </button>\n                  )}\n                </div>\n              </div>\n\n              {/* Timer box */}\n              <div className=\"gameCanvas-timer-box\">\n                <div \n                  className=\"gameCanvas-timer-display\"\n                  data-label={translations.time ? `${translations.time}:` : \"TIME:\"}\n                >\n                  {formatTime(timeLeft)}\n                </div>\n              </div>\n\n              {/* How to score box */}\n              <div className=\"gameCanvas-score-explanation\">\n                <h4>{translations.howToScore}:</h4>\n                <ul>\n                  <li>• {translations.correctMatch}</li>\n                  <li>• {translations.wrongMatch}</li>\n                  <li>• {translations.tip}</li>\n                </ul>\n              </div>\n\n              {/* Progress display */}\n              <div className=\"gameCanvas-progress-display\">\n                {translations.progress}: {matchedServices.length} {translations.outOf} {services.length}\n              </div>\n\n              {/* High scores section */}\n              <div className=\"gameCanvas-high-scores\" style={{\n                backgroundColor: 'rgba(0, 40, 56, 0.8)',\n                border: '1px solid #00ffff',\n                borderRadius: '8px',\n                padding: '15px',\n                marginTop: '10px'\n              }}>\n                <h4 style={{ \n                  color: '#00ffff',\n                  marginBottom: '10px',\n                  textAlign: 'center'\n                }}>\n                  {translations.highScores}\n                </h4>\n                <ul style={{ listStyle: 'none', padding: 0 }}>\n                  {leaderboard.map((entry, index) => (\n                    <li key={index} style={{ \n                      display: 'flex', \n                      justifyContent: 'space-between',\n                      padding: '4px 0'\n                    }}>\n                      <span className=\"gameCanvas-high-score-name\">{entry.nickname}:</span>\n                      <span>{entry.score}</span>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n\n              {/* Current mission box */}\n              <div className=\"gameCanvas-mission-container\">\n                <h3 className=\"gameCanvas-mission-title\">\n                  {translations.currentMission}\n                </h3>\n                <div className=\"gameCanvas-mission-text\">\n                  {translations.missionText}\n                </div>\n              </div>\n            </div>\n          </div>\n        </>\n      )}\n\n      {/* Welcome modal */}\n      {showWelcome && (\n        <div className=\"gameCanvas-modal-overlay\">\n          <div className=\"gameCanvas-modal\">\n            <h2>{translations.welcomeTitle}</h2>\n            <p>{translations.welcomeText}</p>\n            <form onSubmit={handleNameSubmit}>\n              <input\n                type=\"text\"\n                value={tempPlayerName}\n                onChange={(e) => {\n                  setTempPlayerName(e.target.value);\n                  setNameError('');\n                }}\n                placeholder={translations.yourName}\n                className=\"gameCanvas-name-input\"\n                autoFocus\n              />\n              {nameError && <div className=\"gameCanvas-name-error\">{nameError}</div>}\n              <button type=\"submit\" className=\"gameCanvas-start-button\">\n                {translations.startGame}\n              </button>\n            </form>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MatchDefinitionWithIconGame; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,EAAEC,MAAM,QAAQ,OAAO;AACvE,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAO,0BAA0B;AACjC,SACEC,iBAAiB,EACjBC,mBAAmB,EACnBC,cAAc,EACdC,UAAU,EACVC,cAAc,QACT,kCAAkC;AACzC,SAASC,iBAAiB,QAAQ,0BAA0B;AAC5D,SAASC,qBAAqB,QAAQ,0BAA0B;AAChE,OAAOC,eAAe,MAAM,6BAA6B;AACzD,SAASC,aAAa,EAAEC,cAAc,QAAQ,gCAAgC;AAC9E,OAAOC,gBAAgB,MAAM,oBAAoB;;AAEjD;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,mBAAmB,GAAG;EAC1BC,KAAK,EAAE,wBAAwB;EAC/BC,UAAU,EAAE,cAAc;EAC1BC,MAAM,EAAE,QAAQ;EAChBC,KAAK,EAAE,OAAO;EACdC,IAAI,EAAE,MAAM;EACZC,UAAU,EAAE,cAAc;EAC1BC,YAAY,EAAE,2BAA2B;EACzCC,UAAU,EAAE,wBAAwB;EACpCC,GAAG,EAAE,6CAA6C;EAClDC,QAAQ,EAAE,UAAU;EACpBC,KAAK,EAAE,QAAQ;EACfC,UAAU,EAAE,aAAa;EACzBC,cAAc,EAAE,iBAAiB;EACjCC,WAAW,EAAE,8CAA8C;EAC3DC,iBAAiB,EAAE,qBAAqB;EACxCC,eAAe,EAAE,kBAAkB;EACnCC,OAAO,EAAE,aAAa;EACtBC,UAAU,EAAE,oDAAoD;EAChEC,WAAW,EAAE,mDAAmD;EAChEC,SAAS,EAAE,YAAY;EACvBC,YAAY,EAAE,oCAAoC;EAClDC,WAAW,EAAE,wEAAwE;EACrFC,QAAQ,EAAE,WAAW;EACrBC,SAAS,EAAE,YAAY;EACvBC,OAAO,EAAE,sCAAsC;EAC/CC,eAAe,EAAE;AACnB,CAAC;;AAED;AACA,MAAMC,QAAQ,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAC/B,IAAI,CAACA,MAAM,EAAE,OAAO,IAAI;EAExB,MAAMC,aAAa,GAAG,GAAG;EACzB,MAAMC,QAAQ,GAAG,EAAE;EAEnB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,aAAa,EAAEE,CAAC,EAAE,EAAE;IACtC,MAAMC,IAAI,GAAG,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG;IACtC,MAAMC,cAAc,GAAG,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,GAAG;IAC9C,MAAME,cAAc,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC;IACpC,MAAMG,IAAI,GAAG,GAAGJ,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE,GAAG,CAAC,IAAI;IAC1C,MAAMI,QAAQ,GAAG,GAAGL,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,KAAK;IAC5C,MAAMK,KAAK,GAAG,CACZ,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS;IAAE;IACX,SAAS,CAAE;IAAA,CACZ,CAACN,IAAI,CAACO,KAAK,CAACP,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;IAEhCJ,QAAQ,CAACW,IAAI,cACX5C,OAAA;MAEE6C,SAAS,EAAC,0BAA0B;MACpCC,KAAK,EAAE;QACLX,IAAI;QACJY,GAAG,EAAE,OAAO;QACZC,KAAK,EAAER,IAAI;QACXS,MAAM,EAAET,IAAI;QACZU,eAAe,EAAER,KAAK;QACtBS,SAAS,EAAE,UAAUV,QAAQ,GAAG;QAChCW,OAAO,EAAEb,cAAc;QACvBD;MACF;IAAE,GAXGJ,CAAC;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAYP,CACH,CAAC;EACH;EAEA,oBAAOxD,OAAA;IAAK6C,SAAS,EAAC,2BAA2B;IAAAY,QAAA,EAAExB;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AACpE,CAAC;AAACE,EAAA,GAzCI5B,QAAQ;AA2Cd,MAAM6B,2BAA2B,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxC;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG/E,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgF,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGjF,QAAQ,CAAC,IAAI,CAAC;EAChE,MAAM,CAACkF,eAAe,EAAEC,kBAAkB,CAAC,GAAGnF,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACoF,eAAe,EAAEC,kBAAkB,CAAC,GAAGrF,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM,CAACsF,QAAQ,EAAEC,WAAW,CAAC,GAAGvF,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACwB,KAAK,EAAEgE,QAAQ,CAAC,GAAGxF,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACyF,WAAW,EAAEC,cAAc,CAAC,GAAG1F,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC2F,QAAQ,EAAEC,WAAW,CAAC,GAAG5F,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAAC6F,YAAY,EAAEC,eAAe,CAAC,GAAG9F,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC+F,WAAW,EAAEC,cAAc,CAAC,GAAGhG,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACiG,cAAc,EAAEC,iBAAiB,CAAC,GAAGlG,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACmG,SAAS,EAAEC,YAAY,CAAC,GAAGpG,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACqG,UAAU,EAAEC,aAAa,CAAC,GAAGtG,QAAQ,CAAC,QAAQ,CAAC;EACtD,MAAM,CAACuG,WAAW,EAAEC,cAAc,CAAC,GAAGxG,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAMyG,QAAQ,GAAG,oBAAoB;;EAErC;EACA,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAG3G,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC4G,OAAO,EAAEC,UAAU,CAAC,GAAG7G,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM8G,MAAM,GAAG3G,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEzB;EACA,MAAM4G,gBAAgB,GAAG5G,MAAM,CAAC,IAAI,CAAC;;EAErC;EACA,MAAM,CAAC6B,UAAU,EAAEgF,aAAa,CAAC,GAAGhH,QAAQ,CAAC,MAAM;IACjD,MAAMiH,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChD,OAAOF,KAAK,GAAGG,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,GAAG,EAAE;EACvC,CAAC,CAAC;;EAEF;EACA,MAAMK,UAAU,GAAG;IACjBC,MAAM,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,0BAA0B,+BAA+B;IAChFC,OAAO,EAAE,GAAGH,OAAO,CAACC,GAAG,CAACC,0BAA0B,iCAAiC;IACnFE,SAAS,EAAE,GAAGJ,OAAO,CAACC,GAAG,CAACC,0BAA0B,mCAAmC;IACvFG,KAAK,EAAE,GAAGL,OAAO,CAACC,GAAG,CAACC,0BAA0B,yBAAyB;IACzEI,WAAW,EAAE,GAAGN,OAAO,CAACC,GAAG,CAACC,0BAA0B;EACxD,CAAC;;EAED;EACA,MAAM,CAACK,eAAe,EAAEC,kBAAkB,CAAC,GAAGhI,QAAQ,CAAC,EAAE,CAAC;;EAE1D;EACA,MAAM,CAACiI,YAAY,EAAEC,eAAe,CAAC,GAAGlI,QAAQ,CAAC,KAAK,CAAC;;EAEvD;EACA,MAAM,CAAC6C,OAAO,EAAEsF,UAAU,CAAC,GAAGnI,QAAQ,CAAC,IAAI,CAAC;;EAE5C;EACA,MAAM,CAACoI,YAAY,EAAEC,eAAe,CAAC,GAAGrI,QAAQ,CAACoB,mBAAmB,CAAC;EACrE,MAAM,CAACkH,oBAAoB,EAAEC,uBAAuB,CAAC,GAAGvI,QAAQ,CAAC,EAAE,CAAC;EACpE,MAAM,CAACwI,eAAe,EAAEC,kBAAkB,CAAC,GAAGzI,QAAQ,CAAC,IAAI,CAAC;;EAE5D;EACA,MAAM,CAAC0I,oBAAoB,EAAEC,uBAAuB,CAAC,GAAG3I,QAAQ,CAAC,KAAK,CAAC;;EAEvE;EACA,MAAM4I,eAAe,GAAG1I,WAAW,CAAE2I,IAAI,IAAK;IAC5C,MAAMC,KAAK,GAAG,IAAIC,KAAK,CAAC,CAAC;IACzB,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAC9BH,KAAK,CAACI,gBAAgB,CAAC,OAAO,EAAE,MAAM;QACpCC,OAAO,CAACC,IAAI,CAAC,yBAAyBP,IAAI,EAAE,CAAC;QAC7CI,OAAO,CAAC,IAAI,CAAC;MACf,CAAC,CAAC;MACFH,KAAK,CAACI,gBAAgB,CAAC,gBAAgB,EAAE,MAAM;QAC7CD,OAAO,CAACH,KAAK,CAAC;MAChB,CAAC,CAAC;MACF;MACAO,UAAU,CAAC,MAAM;QACf,IAAIP,KAAK,CAACQ,UAAU,GAAG,CAAC,EAAE;UACxBH,OAAO,CAACC,IAAI,CAAC,0BAA0BP,IAAI,EAAE,CAAC;UAC9CI,OAAO,CAAC,IAAI,CAAC;QACf;MACF,CAAC,EAAE,IAAI,CAAC;MACRH,KAAK,CAACS,GAAG,GAAGV,IAAI;IAClB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA5I,SAAS,CAAC,MAAM;IACd,MAAMuJ,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,aAAa,GAAGC,MAAM,CAACC,OAAO,CAACrC,UAAU,CAAC,CAACsC,GAAG,CAAC,OAAO,CAACC,IAAI,EAAEhB,IAAI,CAAC,KAAK;QAC3E,IAAI;UACF,MAAMC,KAAK,GAAG,MAAMF,eAAe,CAACC,IAAI,CAAC;UACzC,OAAO,CAACgB,IAAI,EAAEf,KAAK,CAAC;QACtB,CAAC,CAAC,OAAOgB,KAAK,EAAE;UACdX,OAAO,CAACW,KAAK,CAAC,wBAAwBD,IAAI,GAAG,EAAEC,KAAK,CAAC;UACrD,OAAO,CAACD,IAAI,EAAE,IAAI,CAAC;QACrB;MACF,CAAC,CAAC;MAEF,IAAI;QACF,MAAME,YAAY,GAAG,MAAMf,OAAO,CAACgB,GAAG,CAACP,aAAa,CAAC;QACrD,MAAMQ,SAAS,GAAGP,MAAM,CAACQ,WAAW,CAACH,YAAY,CAAC;QAClDjD,MAAM,CAACqD,OAAO,GAAGF,SAAS;;QAE1B;QACA,MAAMG,eAAe,GAAGV,MAAM,CAACW,MAAM,CAACJ,SAAS,CAAC,CAACK,IAAI,CAACC,KAAK,IAAIA,KAAK,KAAK,IAAI,CAAC;QAC9E5D,eAAe,CAACyD,eAAe,CAAC;QAEhC,IAAIA,eAAe,EAAE;UACnBjB,OAAO,CAACqB,GAAG,CAAC,+BAA+B,CAAC;QAC9C,CAAC,MAAM;UACLrB,OAAO,CAACC,IAAI,CAAC,8BAA8B,CAAC;QAC9C;MACF,CAAC,CAAC,OAAOU,KAAK,EAAE;QACdX,OAAO,CAACW,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACZ,eAAe,CAAC,CAAC;;EAErB;EACA,MAAM6B,SAAS,GAAGvK,WAAW,CAAEwK,SAAS,IAAK;IAC3C,MAAMH,KAAK,GAAGzD,MAAM,CAACqD,OAAO,CAACO,SAAS,CAAC;IACvC,IAAIH,KAAK,IAAI,CAAC3D,OAAO,EAAE;MACrB,IAAI;QACF2D,KAAK,CAACI,WAAW,GAAG,CAAC;QACrBJ,KAAK,CAACK,MAAM,GAAG,GAAG;QAClBL,KAAK,CAACM,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,GAAG,IAAI;UACxB5B,OAAO,CAACC,IAAI,CAAC,uBAAuBsB,SAAS,GAAG,EAAEK,GAAG,CAAC;QACxD,CAAC,CAAC;MACJ,CAAC,CAAC,OAAOA,GAAG,EAAE;QACZ5B,OAAO,CAACC,IAAI,CAAC,oBAAoBsB,SAAS,GAAG,EAAEK,GAAG,CAAC;MACrD;IACF;EACF,CAAC,EAAE,CAACnE,OAAO,CAAC,CAAC;;EAEb;EACA,MAAMoE,UAAU,GAAG9K,WAAW,CAAC,MAAM;IACnC2G,UAAU,CAACoE,IAAI,IAAI,CAACA,IAAI,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,QAAQ,GAAGhL,WAAW,CAAC,MAAM;IACjCwF,cAAc,CAAC,KAAK,CAAC;IACrBE,WAAW,CAAC,KAAK,CAAC;IAClBE,eAAe,CAAC,KAAK,CAAC;IACtBN,QAAQ,CAAC,CAAC,CAAC;IACXD,WAAW,CAAC,GAAG,CAAC;IAChBF,kBAAkB,CAAC,EAAE,CAAC;IACtBJ,oBAAoB,CAAC,IAAI,CAAC;IAC1BE,kBAAkB,CAAC,IAAI,CAAC;IACxBwD,uBAAuB,CAAC,KAAK,CAAC;;IAE9B;IACAwC,aAAa,CAAC,CAAC,CAACC,IAAI,CAAC,MAAM;MACzBjD,UAAU,CAAC,KAAK,CAAC;MACjBzC,cAAc,CAAC,IAAI,CAAC;IACtB,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAM2F,eAAe,GAAGnL,WAAW,CAAC,CAACoL,OAAO,EAAEC,KAAK,KAAK;IACtD,IAAI5F,QAAQ,IAAIP,eAAe,CAACoG,QAAQ,CAACF,OAAO,CAACzB,IAAI,CAAC,EAAE;MACtD;IACF;IAEA1E,kBAAkB,CAACmG,OAAO,CAAC;IAE3B,IAAIA,OAAO,CAACzB,IAAI,KAAK7E,iBAAiB,CAAC6E,IAAI,EAAE;MAC3C;MACAY,SAAS,CAAC,SAAS,CAAC;;MAEpB;MACA,IAAIgB,eAAe,GAAG,OAAO;MAC7B,MAAMC,WAAW,GAAGJ,OAAO,CAACzC,IAAI,CAAC8C,WAAW,CAAC,CAAC;;MAE9C;MACA,KAAK,MAAM,CAACC,QAAQ,EAAE/C,IAAI,CAAC,IAAIa,MAAM,CAACC,OAAO,CAAChJ,qBAAqB,CAAC,EAAE;QACpE,MAAMkL,cAAc,GAAGhD,IAAI,CAAC8C,WAAW,CAAC,CAAC;QACzC,IAAID,WAAW,CAACF,QAAQ,CAACK,cAAc,CAAC,EAAE;UACxCJ,eAAe,GAAGG,QAAQ;UAC1B;QACF;MACF;;MAEA;MACA,MAAME,iBAAiB,GAAGL,eAAe,CACtCM,KAAK,CAAC,GAAG,CAAC,CACVnC,GAAG,CAACoC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAACR,WAAW,CAAC,CAAC,CAAC,CACvES,IAAI,CAAC,GAAG,CAAC;MAEZpE,kBAAkB,CAAC8D,iBAAiB,CAAC;MACrC5D,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC;;MAEvB;MACA,MAAMmE,kBAAkB,GAAG,CAAC,GAAGjH,eAAe,EAAEkG,OAAO,CAACzB,IAAI,CAAC;MAC7DxE,kBAAkB,CAACgH,kBAAkB,CAAC;;MAEtC;MACA,MAAMC,SAAS,GAAGjJ,IAAI,CAACO,KAAK,CAAE0B,QAAQ,GAAG,GAAG,GAAI,EAAE,CAAC;MACnD,MAAMiH,MAAM,GAAG9L,cAAc,CAAC,IAAI,CAAC;MACnC+E,QAAQ,CAACgH,SAAS,IAAIA,SAAS,GAAGD,MAAM,CAAC;;MAEzC;MACA,IAAIF,kBAAkB,CAACI,MAAM,KAAK3H,QAAQ,CAAC2H,MAAM,EAAE;QACjD3G,eAAe,CAAC,IAAI,CAAC;QACrBuD,UAAU,CAAC,MAAM;UACfvD,eAAe,CAAC,KAAK,CAAC;QACxB,CAAC,EAAE,IAAI,CAAC;QACR2E,SAAS,CAAC,aAAa,CAAC;QACxB7E,WAAW,CAAC,IAAI,CAAC;;QAEjB;QACA,MAAM8G,QAAQ,GAAGlL,KAAK,GAAG,EAAE,GAAG8K,SAAS;QACvCK,gBAAgB,CAACD,QAAQ,CAAC;MAC5B,CAAC,MAAM;QACL;QACA,MAAME,iBAAiB,GAAG9H,QAAQ,CAAC+H,MAAM,CAACC,CAAC,IAAI,CAACT,kBAAkB,CAACb,QAAQ,CAACsB,CAAC,CAACjD,IAAI,CAAC,CAAC;QACpF,MAAMkD,WAAW,GAAG1J,IAAI,CAACO,KAAK,CAACP,IAAI,CAACC,MAAM,CAAC,CAAC,GAAGsJ,iBAAiB,CAACH,MAAM,CAAC;QACxExH,oBAAoB,CAAC;UACnB4E,IAAI,EAAE+C,iBAAiB,CAACG,WAAW,CAAC,CAAClD,IAAI;UACzCmD,UAAU,EAAEJ,iBAAiB,CAACG,WAAW,CAAC,CAACC,UAAU;UACrDnE,IAAI,EAAE+D,iBAAiB,CAACG,WAAW,CAAC,CAAClE,IAAI,CAAC;QAC5C,CAAC,CAAC;MACJ;MAEAM,OAAO,CAACqB,GAAG,CAAC,eAAe,EAAEc,OAAO,CAACzC,IAAI,CAAC;MAC1CM,OAAO,CAACqB,GAAG,CAAC,uBAAuB,EAAE7J,qBAAqB,CAAC;MAC3DwI,OAAO,CAACqB,GAAG,CAAC,iBAAiB,EAAEiB,eAAe,CAAC;IACjD,CAAC,MAAM;MACL;MACAhB,SAAS,CAAC,WAAW,CAAC;MACtB,MAAM8B,MAAM,GAAG9L,cAAc,CAAC,KAAK,CAAC;MACpC+E,QAAQ,CAACgH,SAAS,IAAInJ,IAAI,CAAC4J,GAAG,CAAC,CAAC,EAAET,SAAS,GAAGD,MAAM,CAAC,CAAC;;MAEtD;MACAlD,UAAU,CAAC,MAAM;QACflE,kBAAkB,CAAC,IAAI,CAAC;MAC1B,CAAC,EAAE,IAAI,CAAC;IACV;EACF,CAAC,EAAE,CAACQ,QAAQ,EAAEP,eAAe,EAAEJ,iBAAiB,EAAEM,QAAQ,EAAE9D,KAAK,EAAEsD,QAAQ,EAAE2F,SAAS,CAAC,CAAC;;EAExF;EACAxK,SAAS,CAAC,MAAM;IACd,IAAIwF,WAAW,IAAI,CAACM,WAAW,IAAIxF,cAAc,CAAC6E,eAAe,EAAEN,QAAQ,CAAC2H,MAAM,CAAC,IAAInH,QAAQ,GAAG,CAAC,EAAE;MACnGQ,eAAe,CAAC,IAAI,CAAC;MACrBuD,UAAU,CAAC,MAAM;QACfvD,eAAe,CAAC,KAAK,CAAC;MACxB,CAAC,EAAE,IAAI,CAAC;MACRF,WAAW,CAAC,IAAI,CAAC;MACjB6E,SAAS,CAAC,aAAa,CAAC;IAC1B;EACF,CAAC,EAAE,CAAChF,WAAW,EAAEM,WAAW,EAAEX,eAAe,EAAEN,QAAQ,CAAC2H,MAAM,EAAEnH,QAAQ,EAAEmF,SAAS,CAAC,CAAC;;EAErF;EACA,MAAMkC,gBAAgB,GAAID,QAAQ,IAAK;IACrC,MAAMQ,aAAa,GAAG,CAAC,GAAGlL,UAAU,CAAC;;IAErC;IACAkL,aAAa,CAACrJ,IAAI,CAAC;MACjBgG,IAAI,EAAExD,UAAU;MAChB7E,KAAK,EAAEkL,QAAQ;MACfS,IAAI,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC;IAC/B,CAAC,CAAC;;IAEF;IACAH,aAAa,CAACI,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAAChM,KAAK,GAAG+L,CAAC,CAAC/L,KAAK,CAAC;;IAE/C;IACA,MAAMiM,SAAS,GAAGP,aAAa,CAACf,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC;;IAE3C;IACAnF,aAAa,CAACyG,SAAS,CAAC;IACxBvG,YAAY,CAACwG,OAAO,CAAC,YAAY,EAAEtG,IAAI,CAACuG,SAAS,CAACF,SAAS,CAAC,CAAC;EAC/D,CAAC;;EAED;EACAxN,SAAS,CAAC,MAAM;IACd,IAAIwF,WAAW,IAAI,CAACE,QAAQ,EAAE;MAC5B,MAAMiI,KAAK,GAAGC,WAAW,CAAC,MAAM;QAC9BtI,WAAW,CAAC0F,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;MAC/B,CAAC,EAAE,IAAI,CAAC;MAER,OAAO,MAAM6C,aAAa,CAACF,KAAK,CAAC;IACnC;EACF,CAAC,EAAE,CAACnI,WAAW,EAAEE,QAAQ,CAAC,CAAC;;EAE3B;EACA1F,SAAS,CAAC,MAAM;IACd,IAAI,CAAC8F,WAAW,EAAE;MAChBmF,QAAQ,CAAC,CAAC;IACZ;EACF,CAAC,EAAE,CAACA,QAAQ,EAAEnF,WAAW,CAAC,CAAC;;EAE3B;EACA9F,SAAS,CAAC,MAAM;IACd,IAAI4F,YAAY,EAAE;MAChB,MAAM+H,KAAK,GAAGvE,UAAU,CAAC,MAAM;QAC7BvD,eAAe,CAAC,KAAK,CAAC;MACxB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;MAEV,OAAO,MAAMiI,YAAY,CAACH,KAAK,CAAC;IAClC;EACF,CAAC,EAAE,CAAC/H,YAAY,CAAC,CAAC;;EAElB;EACA,MAAMmI,gBAAgB,GAAIC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIjI,cAAc,CAACkI,IAAI,CAAC,CAAC,CAAC1B,MAAM,GAAG,CAAC,EAAE;MACpCrG,YAAY,CAAC,yCAAyC,CAAC;MACvD;IACF;IACA,IAAIH,cAAc,CAACkI,IAAI,CAAC,CAAC,CAAC1B,MAAM,GAAG,EAAE,EAAE;MACrCrG,YAAY,CAAC,sCAAsC,CAAC;MACpD;IACF;IACAE,aAAa,CAACL,cAAc,CAACkI,IAAI,CAAC,CAAC,CAAC;IACpCnI,cAAc,CAAC,KAAK,CAAC;IACrBkF,QAAQ,CAAC,CAAC,CAAC,CAAC;EACd,CAAC;;EAED;EACA,MAAMkD,WAAW,GAAGA,CAAA,KAAM;IACxB,OAAOlH,YAAY,CAACC,OAAO,CAAC,cAAc,CAAC,IAAI,WAAW;EAC5D,CAAC;;EAED;EACA,MAAMkH,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC;;IAEA;IACA,MAAMC,UAAU,GAAG9M,KAAK,CAAC,CAAC;;IAE1B,IAAI;MACF;MACA,MAAMZ,eAAe,CAAC2N,aAAa,CACjCH,WAAW,CAAC,CAAC,EACb3H,QAAQ,EACR6H,UAAU,EACV;QACEE,iBAAiB,EAAEC,cAAc;QACjCC,cAAc,EAAEA,cAAc;QAC9BC,gBAAgB,EAAEA;QAClB;MACF,CACF,CAAC;MACDxF,OAAO,CAACqB,GAAG,CAAC,2BAA2B,CAAC;IAC1C,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;;IAEA;EACF,CAAC;;EAED;EACA,MAAM8E,oBAAoB,GAAG,MAAOC,WAAW,IAAK;IAClDpG,kBAAkB,CAACoG,WAAW,CAAC;IAE/B,IAAIA,WAAW,KAAK,IAAI,EAAE;MACxBxG,eAAe,CAACjH,mBAAmB,CAAC;MACpC,IAAI4D,iBAAiB,EAAE;QACrBuD,uBAAuB,CAACvD,iBAAiB,CAACgI,UAAU,CAAC;MACvD;MACA;IACF;IAEA,IAAI;MACF;MACA,MAAM8B,IAAI,GAAGpF,MAAM,CAACoF,IAAI,CAAC1N,mBAAmB,CAAC;MAC7C,MAAMiJ,MAAM,GAAGX,MAAM,CAACW,MAAM,CAACjJ,mBAAmB,CAAC;MAEjD,MAAM2N,gBAAgB,GAAG,MAAMjO,cAAc,CAACuJ,MAAM,EAAEwE,WAAW,CAAC;MAElE,MAAMG,eAAe,GAAG,CAAC,CAAC;MAC1BF,IAAI,CAACG,OAAO,CAAC,CAACC,GAAG,EAAE3D,KAAK,KAAK;QAC3ByD,eAAe,CAACE,GAAG,CAAC,GAAGH,gBAAgB,CAACxD,KAAK,CAAC;MAChD,CAAC,CAAC;MAEFlD,eAAe,CAAC2G,eAAe,CAAC;;MAEhC;MACA,IAAIhK,iBAAiB,EAAE;QACrB,MAAMmK,UAAU,GAAG,MAAMtO,aAAa,CAACmE,iBAAiB,CAACgI,UAAU,EAAE6B,WAAW,CAAC;QACjFtG,uBAAuB,CAAC4G,UAAU,CAAC;MACrC;IACF,CAAC,CAAC,OAAOrF,KAAK,EAAE;MACdX,OAAO,CAACW,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;;EAED;EACA7J,SAAS,CAAC,MAAM;IACd,IAAI+E,iBAAiB,IAAIwD,eAAe,KAAK,IAAI,EAAE;MACjDoG,oBAAoB,CAACpG,eAAe,CAAC;IACvC,CAAC,MAAM,IAAIxD,iBAAiB,EAAE;MAC5B;MACAuD,uBAAuB,CAACvD,iBAAiB,CAACgI,UAAU,CAAC;IACvD;EACF,CAAC,EAAE,CAAChI,iBAAiB,EAAEwD,eAAe,CAAC,CAAC;;EAExC;EACA,MAAM4G,mBAAmB,GAAGA,CAAA,KAAM;IAChC,MAAM7C,MAAM,GAAG9L,cAAc,CAAC,IAAI,CAAC;IACnC+E,QAAQ,CAACgH,SAAS,IAAIA,SAAS,GAAGD,MAAM,CAAC;EAC3C,CAAC;;EAED;EACA,MAAM8C,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAM9C,MAAM,GAAG9L,cAAc,CAAC,KAAK,CAAC;IACpC+E,QAAQ,CAACgH,SAAS,IAAInJ,IAAI,CAAC4J,GAAG,CAAC,CAAC,EAAET,SAAS,GAAGD,MAAM,CAAC,CAAC;EACxD,CAAC;;EAED;EACAtM,SAAS,CAAC,MAAM;IACd,IAAIyI,oBAAoB,EAAE;MACxB9C,WAAW,CAAC,IAAI,CAAC;MACjBuD,OAAO,CAACqB,GAAG,CAAC,yBAAyB,CAAC;MACtC8E,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAAC5G,oBAAoB,CAAC,CAAC;;EAE1B;EACAzI,SAAS,CAAC,MAAM;IACd,IAAI0F,QAAQ,EAAE;MACZwD,OAAO,CAACqB,GAAG,CAAC,4BAA4B,CAAC;MACzC8E,SAAS,CAAC,CAAC;IACb;EACF,CAAC,EAAE,CAAC3J,QAAQ,CAAC,CAAC;EAEd,MAAM4J,eAAe,GAAGA,CAAA,KAAM;IAC5B7J,cAAc,CAAC,IAAI,CAAC;IACpByD,OAAO,CAACqB,GAAG,CAAC,uCAAuC,CAAC;IACpDgF,gBAAgB,CAAC,CAAC;EACpB,CAAC;EAED,MAAMA,gBAAgB,GAAGA,CAAA,KAAM;IAC7B5O,eAAe,CAAC6O,cAAc,CAAChJ,QAAQ,CAAC,CAAC2E,IAAI,CAACsE,IAAI,IAAI;MACpDvG,OAAO,CAACqB,GAAG,CAAC,mBAAmB,EAAEkF,IAAI,CAAC;MACtClJ,cAAc,CAACkJ,IAAI,CAAC;IACtB,CAAC,CAAC,CAAC5E,KAAK,CAAChB,KAAK,IAAI;MAChBX,OAAO,CAACW,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;IACrD,CAAC,CAAC;EACJ,CAAC;EAED,MAAMwF,SAAS,GAAGA,CAAA,KAAM;IACtB1O,eAAe,CAAC2N,aAAa,CAAClI,UAAU,EAAEI,QAAQ,EAAEjF,KAAK,CAAC,CAAC4J,IAAI,CAACuE,MAAM,IAAI;MACxExG,OAAO,CAACqB,GAAG,CAAC,oBAAoB,EAAEmF,MAAM,CAAC;IAC3C,CAAC,CAAC;EACJ,CAAC;EAED,oBACE1O,OAAA;IAAK6C,SAAS,EAAC,sBAAsB;IAAC8L,GAAG,EAAE7I,gBAAiB;IAAArC,QAAA,GACzD7B,OAAO,IAAI,CAACkD,WAAW,iBACtB9E,OAAA;MAAK6C,SAAS,EAAC,iBAAiB;MAAAY,QAAA,gBAC9BzD,OAAA;QAAK6C,SAAS,EAAC;MAAiB;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACvCxD,OAAA;QAAAyD,QAAA,EAAI0D,YAAY,CAACvF;MAAO;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CACN,EAGAoB,YAAY,IAAI,CAACE,WAAW,iBAAI9E,OAAA,CAAC8B,QAAQ;MAACC,MAAM,EAAE6C;IAAa;MAAAvB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGlE,CAACsB,WAAW,iBACX9E,OAAA,CAAAE,SAAA;MAAAuD,QAAA,gBAEEzD,OAAA,CAACb,IAAI;QACHyP,EAAE,EAAC,GAAG;QACN/L,SAAS,EAAC,qBAAqB;QAC/BC,KAAK,EAAE;UACL+L,QAAQ,EAAE,UAAU;UACpB9L,GAAG,EAAE,MAAM;UACXZ,IAAI,EAAE,MAAM;UACZ2M,OAAO,EAAE,MAAM;UACfC,UAAU,EAAE,QAAQ;UACpBC,OAAO,EAAE,WAAW;UACpB9L,eAAe,EAAE,wBAAwB;UACzC+L,MAAM,EAAE,mBAAmB;UAC3BC,YAAY,EAAE,KAAK;UACnBxM,KAAK,EAAE,SAAS;UAChByM,cAAc,EAAE,MAAM;UACtBC,UAAU,EAAE,sBAAsB;UAClCC,QAAQ,EAAE,MAAM;UAChBC,UAAU,EAAE,eAAe;UAC3BC,MAAM,EAAE;QACV,CAAE;QACFC,YAAY,EAAEA,CAAA,KAAMhG,SAAS,CAAC,OAAO,CAAE;QAAA/F,QAAA,gBAEvCzD,OAAA;UACEyP,KAAK,EAAC,4BAA4B;UAClCC,OAAO,EAAC,WAAW;UACnBC,IAAI,EAAC,cAAc;UACnB7M,KAAK,EAAE;YACLE,KAAK,EAAE,MAAM;YACbC,MAAM,EAAE,MAAM;YACd2M,WAAW,EAAE;UACf,CAAE;UAAAnM,QAAA,eAEFzD,OAAA;YAAM6P,CAAC,EAAC;UAAsC;YAAAxM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C,CAAC,EACL2D,YAAY,CAAC9G,UAAU;MAAA;QAAAgD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eAEPxD,OAAA;QACE6C,SAAS,EAAC,uBAAuB;QACjCC,KAAK,EAAE;UAAE,cAAc,EAAE,OAAOyD,OAAO,CAACC,GAAG,CAACsJ,UAAU;QAAyC,CAAE;QAAArM,QAAA,GAClG,OACM,EAAC0D,YAAY,CAAC/G,KAAK,CAAC2P,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC;MAAA;QAAA1M,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eAELxD,OAAA;QAAK6C,SAAS,EAAC,yBAAyB;QAAAY,QAAA,gBAEtCzD,OAAA;UAAK6C,SAAS,EAAC,2BAA2B;UAACC,KAAK,EAAE;YAChDgM,OAAO,EAAE,MAAM;YACfkB,aAAa,EAAE,QAAQ;YACvBC,cAAc,EAAE,YAAY;YAC5BpB,QAAQ,EAAE,UAAU;YACpBqB,UAAU,EAAE;UACd,CAAE;UAAAzM,QAAA,gBAEAzD,OAAA;YAAK8C,KAAK,EAAE;cACV+L,QAAQ,EAAE,UAAU;cACpB9L,GAAG,EAAE,MAAM;cACXoN,KAAK,EAAE,MAAM;cACbZ,MAAM,EAAE;YACV,CAAE;YAAA9L,QAAA,eACAzD,OAAA,CAACF,gBAAgB;cACfyH,eAAe,EAAEA,eAAgB;cACjC6I,gBAAgB,EAAEzC;YAAqB;cAAAtK,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAGNxD,OAAA;YACE6C,SAAS,EAAC,kBAAkB;YAC5BC,KAAK,EAAE;cACLuN,MAAM,EAAE,QAAQ;cAChBvB,OAAO,EAAE,MAAM;cACfwB,mBAAmB,EAAE,gBAAgB;cACrCC,GAAG,EAAE,MAAM;cACXC,QAAQ,EAAE,OAAO;cACjBC,SAAS,EAAE;YACb,CAAE;YAAAhN,QAAA,EAEDI,QAAQ,CAAC8E,GAAG,CAAC,CAAC0B,OAAO,EAAEC,KAAK,kBAC3BtK,OAAA;cAEE6C,SAAS,EAAE,oBACToB,eAAe,IAAIA,eAAe,CAAC2E,IAAI,KAAKyB,OAAO,CAACzB,IAAI,GACnDyB,OAAO,CAACzB,IAAI,KAAK7E,iBAAiB,CAAC6E,IAAI,GAAG,SAAS,GAAG,OAAO,GAC9DzE,eAAe,CAACoG,QAAQ,CAACF,OAAO,CAACzB,IAAI,CAAC,GAAG,SAAS,GAAG,EAAE,EAC1D;cACH8H,OAAO,EAAEA,CAAA,KAAMtG,eAAe,CAACC,OAAO,EAAEC,KAAK,CAAE;cAC/CkF,YAAY,EAAEA,CAAA,KAAM;gBAClBhG,SAAS,CAAC,OAAO,CAAC;gBAClBtF,kBAAkB,CAACmG,OAAO,CAAC;;gBAE3B;gBACA,IAAIG,eAAe,GAAG,OAAO;gBAC7B,MAAMC,WAAW,GAAGJ,OAAO,CAACzC,IAAI,CAAC8C,WAAW,CAAC,CAAC;;gBAE9C;gBACA,KAAK,MAAM,CAACC,QAAQ,EAAE/C,IAAI,CAAC,IAAIa,MAAM,CAACC,OAAO,CAAChJ,qBAAqB,CAAC,EAAE;kBACpE,MAAMkL,cAAc,GAAGhD,IAAI,CAAC8C,WAAW,CAAC,CAAC;kBACzC,IAAID,WAAW,CAACF,QAAQ,CAACK,cAAc,CAAC,EAAE;oBACxCJ,eAAe,GAAGG,QAAQ;oBAC1B;kBACF;gBACF;;gBAEA;gBACA,MAAME,iBAAiB,GAAGL,eAAe,CACtCM,KAAK,CAAC,GAAG,CAAC,CACVnC,GAAG,CAACoC,IAAI,IAAIA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAACR,WAAW,CAAC,CAAC,CAAC,CACvES,IAAI,CAAC,GAAG,CAAC;gBAEZpE,kBAAkB,CAAC8D,iBAAiB,CAAC;;gBAErC;gBACA,IAAI1G,eAAe,CAACoG,QAAQ,CAACF,OAAO,CAACzB,IAAI,CAAC,EAAE;kBAC1C3B,eAAe,CAAC,IAAI,CAAC;gBACvB;cACF,CAAE;cACF0J,YAAY,EAAEA,CAAA,KAAM;gBAClB1J,eAAe,CAAC,KAAK,CAAC;cACxB,CAAE;cACFnE,KAAK,EAAE;gBACL8N,MAAM,EAAEzM,eAAe,CAACoG,QAAQ,CAACF,OAAO,CAACzB,IAAI,CAAC,GAAG,SAAS,GAAG,SAAS;gBACtExF,OAAO,EAAEe,eAAe,CAACoG,QAAQ,CAACF,OAAO,CAACzB,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;gBACzDkG,OAAO,EAAE,MAAM;gBACfkB,aAAa,EAAE,QAAQ;gBACvBjB,UAAU,EAAE,QAAQ;gBACpB8B,SAAS,EAAE,KAAK;gBAChB1N,SAAS,EAAE;cACb,CAAE;cAAAM,QAAA,eAEFzD,OAAA;gBAAK6C,SAAS,EAAC,qBAAqB;gBAACC,KAAK,EAAE;kBAC1CgM,OAAO,EAAE,MAAM;kBACfkB,aAAa,EAAE,QAAQ;kBACvBjB,UAAU,EAAE,QAAQ;kBACpBkB,cAAc,EAAE,QAAQ;kBACxBhN,MAAM,EAAE,MAAM;kBACd4N,SAAS,EAAE,KAAK;kBAChB1N,SAAS,EAAE;gBACb,CAAE;gBAAAM,QAAA,gBACAzD,OAAA;kBACEsI,GAAG,EAAE7I,iBAAiB,CAAC4K,OAAO,CAACzC,IAAI,CAAE;kBACrCkJ,GAAG,EAAEzG,OAAO,CAACzB,IAAK;kBAClB9F,KAAK,EAAE;oBACLE,KAAK,EAAE,MAAM;oBACbC,MAAM,EAAE,MAAM;oBACd8N,YAAY,EAAE,KAAK;oBACnB5N,SAAS,EAAE;kBACb,CAAE;kBACF6N,OAAO,EAAGhE,CAAC,IAAK;oBACdA,CAAC,CAACiE,MAAM,CAACC,OAAO,GAAG,IAAI;oBACvBlE,CAAC,CAACiE,MAAM,CAAC3I,GAAG,GAAG,GAAG/B,OAAO,CAACC,GAAG,CAACsJ,UAAU,0BAA0B;kBACpE;gBAAE;kBAAAzM,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACH,CAAC,eACFxD,OAAA;kBAAK6C,SAAS,EAAC,kBAAkB;kBAACC,KAAK,EAAE;oBACvCuM,QAAQ,EAAE,MAAM;oBAChB8B,SAAS,EAAE,QAAQ;oBACnBC,SAAS,EAAE,YAAY;oBACvBP,SAAS,EAAE,KAAK;oBAChBQ,WAAW,EAAE,QAAQ;oBACrBlO,SAAS,EAAE;kBACb,CAAE;kBAAAM,QAAA,EACC4G,OAAO,CAACzB;gBAAI;kBAAAvF,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OACV,CAAC;cAAA;gBAAAH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACH;YAAC,GAnFD,GAAG6G,OAAO,CAACzB,IAAI,IAAI0B,KAAK,EAAE;cAAAjH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAoF5B,CACN;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,EAGLsD,eAAe,IAAIE,YAAY,IAAI/C,eAAe,iBACjDjE,OAAA;YAAK8C,KAAK,EAAE;cACVqO,SAAS,EAAE,QAAQ;cACnBzO,KAAK,EAAE,SAAS;cAChB2M,QAAQ,EAAE,MAAM;cAChBgB,MAAM,EAAE,WAAW;cACnBrB,OAAO,EAAE,MAAM;cACfI,UAAU,EAAE,sBAAsB;cAClCP,QAAQ,EAAE,UAAU;cACpB7L,KAAK,EAAE,MAAM;cACbb,IAAI,EAAE,GAAG;cACTY,GAAG,EAAE,OAAO;cACZwM,MAAM,EAAE;YACV,CAAE;YAAA9L,QAAA,EACC0D,YAAY,CAACtF,eAAe,CAC1BkO,OAAO,CAAC,WAAW,EAAE9L,eAAe,CAAC2E,IAAI,IAAI,SAAS,CAAC,CACvDmH,OAAO,CAAC,YAAY,EAAEjJ,eAAe;UAAC;YAAAzD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtC,CACN,eAGDxD,OAAA;YAAK6C,SAAS,EAAC,iBAAiB;YAACC,KAAK,EAAE;cACtCI,eAAe,EAAE,sBAAsB;cACvC8L,OAAO,EAAE,MAAM;cACfqB,MAAM,EAAE,WAAW;cACnBpB,MAAM,EAAE,mBAAmB;cAC3BC,YAAY,EAAE,MAAM;cACpBoC,SAAS,EAAE,mCAAmC;cAC9CtO,KAAK,EAAE,KAAK;cACZwN,QAAQ,EAAE,OAAO;cACjBW,SAAS,EAAE,QAAQ;cACnB9B,QAAQ,EAAE,MAAM;cAChBkC,UAAU,EAAE,QAAQ;cACpB7O,KAAK,EAAE,SAAS;cAChB8O,UAAU,EAAE,KAAK;cACjB3C,QAAQ,EAAE,UAAU;cACpBU,MAAM,EAAE,CAAC;cACTkB,SAAS,EAAE;YACb,CAAE;YAAAhN,QAAA,gBACAzD,OAAA;cAAK8C,KAAK,EAAE;gBACVyO,UAAU,EAAE,MAAM;gBAClBR,YAAY,EAAE,MAAM;gBACpBrO,KAAK,EAAE;cACT,CAAE;cAAAe,QAAA,EACC0D,YAAY,CAACjG;YAAiB;cAAAmC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5B,CAAC,eACNxD,OAAA;cAAK8C,KAAK,EAAE;gBACVuM,QAAQ,EAAE,MAAM;gBAChBL,OAAO,EAAE,MAAM;gBACf9L,eAAe,EAAE,sBAAsB;gBACvCgM,YAAY,EAAE;cAChB,CAAE;cAAAzL,QAAA,EACC4D,oBAAoB,IAAKtD,iBAAiB,IAAIA,iBAAiB,CAACgI;YAAW;cAAA1I,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,EAGLkB,QAAQ,iBACP1E,OAAA;YAAK6C,SAAS,EAAC,sBAAsB;YAAAY,QAAA,gBACnCzD,OAAA;cAAAyD,QAAA,EACGU,eAAe,CAACqH,MAAM,KAAK3H,QAAQ,CAAC2H,MAAM,GACvCrE,YAAY,CAAChG,eAAe,GAC5BgG,YAAY,CAAC/F;YAAO;cAAAiC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC,eACLxD,OAAA;cAAAyD,QAAA,EACGU,eAAe,CAACqH,MAAM,KAAK3H,QAAQ,CAAC2H,MAAM,GACvCrE,YAAY,CAAC9F,UAAU,CAAC0O,OAAO,CAAC,QAAQ,EAAExQ,UAAU,CAAC8E,QAAQ,CAAC,CAAC,GAC/D8C,YAAY,CAAC7F,WAAW,CACrByO,OAAO,CAAC,WAAW,EAAE5L,eAAe,CAACqH,MAAM,CAAC,CAC5CuE,OAAO,CAAC,SAAS,EAAElM,QAAQ,CAAC2H,MAAM;YAAC;cAAAnI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACzC,CAAC,eACJxD,OAAA;cACE0Q,OAAO,EAAEA,CAAA,KAAM;gBACblH,SAAS,CAAC,QAAQ,CAAC;gBACnBS,QAAQ,CAAC,CAAC;cACZ,CAAE;cAAAxG,QAAA,EAED0D,YAAY,CAAC5F;YAAS;cAAA8B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACjB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CACN;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,eAGNxD,OAAA;UAAK6C,SAAS,EAAC,8BAA8B;UAAAY,QAAA,gBAE3CzD,OAAA;YAAK6C,SAAS,EAAC,uBAAuB;YAAAY,QAAA,eACpCzD,OAAA;cAAK6C,SAAS,EAAC,wBAAwB;cAAAY,QAAA,GACpC0D,YAAY,CAAC7G,MAAM,EAAC,IAAE,EAAC8E,UAAU;YAAA;cAAA/B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGNxD,OAAA;YAAK6C,SAAS,EAAC,sBAAsB;YAAAY,QAAA,eACnCzD,OAAA;cAAK6C,SAAS,EAAC,0BAA0B;cAAAY,QAAA,gBACvCzD,OAAA;gBAAMyR,IAAI,EAAC,KAAK;gBAAC,cAAW,OAAO;gBAAAhO,QAAA,EAAC;cAAE;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,KAAC,EAAC2D,YAAY,CAAC5G,KAAK,EAAC,IAAE,EAACA,KAAK,EAAC,GAAC,eAAAP,OAAA;gBAAMyR,IAAI,EAAC,KAAK;gBAAC,cAAW,UAAU;gBAAAhO,QAAA,EAAC;cAAG;gBAAAJ,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC,EAC5HiC,YAAY,iBACXzF,OAAA;gBACE6C,SAAS,EAAC,yBAAyB;gBACnC6N,OAAO,EAAE3G,UAAW;gBACpB,cAAW,cAAc;gBACzBjH,KAAK,EAAE;kBAAE4O,UAAU,EAAE,KAAK;kBAAE5C,OAAO,EAAE;gBAAe,CAAE;gBAAArL,QAAA,EAErDkC,OAAO,GAAG,IAAI,GAAG;cAAI;gBAAAtC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAChB,CACT;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGNxD,OAAA;YAAK6C,SAAS,EAAC,sBAAsB;YAAAY,QAAA,eACnCzD,OAAA;cACE6C,SAAS,EAAC,0BAA0B;cACpC,cAAYsE,YAAY,CAAC3G,IAAI,GAAG,GAAG2G,YAAY,CAAC3G,IAAI,GAAG,GAAG,OAAQ;cAAAiD,QAAA,EAEjElE,UAAU,CAAC8E,QAAQ;YAAC;cAAAhB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAGNxD,OAAA;YAAK6C,SAAS,EAAC,8BAA8B;YAAAY,QAAA,gBAC3CzD,OAAA;cAAAyD,QAAA,GAAK0D,YAAY,CAAC1G,UAAU,EAAC,GAAC;YAAA;cAAA4C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACnCxD,OAAA;cAAAyD,QAAA,gBACEzD,OAAA;gBAAAyD,QAAA,GAAI,SAAE,EAAC0D,YAAY,CAACzG,YAAY;cAAA;gBAAA2C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACtCxD,OAAA;gBAAAyD,QAAA,GAAI,SAAE,EAAC0D,YAAY,CAACxG,UAAU;cAAA;gBAAA0C,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC,eACpCxD,OAAA;gBAAAyD,QAAA,GAAI,SAAE,EAAC0D,YAAY,CAACvG,GAAG;cAAA;gBAAAyC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAK,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC3B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eAGNxD,OAAA;YAAK6C,SAAS,EAAC,6BAA6B;YAAAY,QAAA,GACzC0D,YAAY,CAACtG,QAAQ,EAAC,IAAE,EAACsD,eAAe,CAACqH,MAAM,EAAC,GAAC,EAACrE,YAAY,CAACrG,KAAK,EAAC,GAAC,EAAC+C,QAAQ,CAAC2H,MAAM;UAAA;YAAAnI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpF,CAAC,eAGNxD,OAAA;YAAK6C,SAAS,EAAC,wBAAwB;YAACC,KAAK,EAAE;cAC7CI,eAAe,EAAE,sBAAsB;cACvC+L,MAAM,EAAE,mBAAmB;cAC3BC,YAAY,EAAE,KAAK;cACnBF,OAAO,EAAE,MAAM;cACfyB,SAAS,EAAE;YACb,CAAE;YAAAhN,QAAA,gBACAzD,OAAA;cAAI8C,KAAK,EAAE;gBACTJ,KAAK,EAAE,SAAS;gBAChBqO,YAAY,EAAE,MAAM;gBACpBI,SAAS,EAAE;cACb,CAAE;cAAA1N,QAAA,EACC0D,YAAY,CAACpG;YAAU;cAAAsC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC,eACLxD,OAAA;cAAI8C,KAAK,EAAE;gBAAE6O,SAAS,EAAE,MAAM;gBAAE3C,OAAO,EAAE;cAAE,CAAE;cAAAvL,QAAA,EAC1C6B,WAAW,CAACqD,GAAG,CAAC,CAACiJ,KAAK,EAAEtH,KAAK,kBAC5BtK,OAAA;gBAAgB8C,KAAK,EAAE;kBACrBgM,OAAO,EAAE,MAAM;kBACfmB,cAAc,EAAE,eAAe;kBAC/BjB,OAAO,EAAE;gBACX,CAAE;gBAAAvL,QAAA,gBACAzD,OAAA;kBAAM6C,SAAS,EAAC,4BAA4B;kBAAAY,QAAA,GAAEmO,KAAK,CAACC,QAAQ,EAAC,GAAC;gBAAA;kBAAAxO,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAM,CAAC,eACrExD,OAAA;kBAAAyD,QAAA,EAAOmO,KAAK,CAACrR;gBAAK;kBAAA8C,QAAA,EAAAC,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAO,CAAC;cAAA,GANnB8G,KAAK;gBAAAjH,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAOV,CACL;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACA,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF,CAAC,eAGNxD,OAAA;YAAK6C,SAAS,EAAC,8BAA8B;YAAAY,QAAA,gBAC3CzD,OAAA;cAAI6C,SAAS,EAAC,0BAA0B;cAAAY,QAAA,EACrC0D,YAAY,CAACnG;YAAc;cAAAqC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B,CAAC,eACLxD,OAAA;cAAK6C,SAAS,EAAC,yBAAyB;cAAAY,QAAA,EACrC0D,YAAY,CAAClG;YAAW;cAAAoC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACtB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,eACN,CACH,EAGAsB,WAAW,iBACV9E,OAAA;MAAK6C,SAAS,EAAC,0BAA0B;MAAAY,QAAA,eACvCzD,OAAA;QAAK6C,SAAS,EAAC,kBAAkB;QAAAY,QAAA,gBAC/BzD,OAAA;UAAAyD,QAAA,EAAK0D,YAAY,CAAC3F;QAAY;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACpCxD,OAAA;UAAAyD,QAAA,EAAI0D,YAAY,CAAC1F;QAAW;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCxD,OAAA;UAAM8R,QAAQ,EAAE/E,gBAAiB;UAAAtJ,QAAA,gBAC/BzD,OAAA;YACE+R,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEhN,cAAe;YACtBiN,QAAQ,EAAGjF,CAAC,IAAK;cACf/H,iBAAiB,CAAC+H,CAAC,CAACiE,MAAM,CAACe,KAAK,CAAC;cACjC7M,YAAY,CAAC,EAAE,CAAC;YAClB,CAAE;YACF+M,WAAW,EAAE/K,YAAY,CAACzF,QAAS;YACnCmB,SAAS,EAAC,uBAAuB;YACjCsP,SAAS;UAAA;YAAA9O,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACV,CAAC,EACD0B,SAAS,iBAAIlF,OAAA;YAAK6C,SAAS,EAAC,uBAAuB;YAAAY,QAAA,EAAEyB;UAAS;YAAA7B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC,eACtExD,OAAA;YAAQ+R,IAAI,EAAC,QAAQ;YAAClP,SAAS,EAAC,yBAAyB;YAAAY,QAAA,EACtD0D,YAAY,CAACxF;UAAS;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACI,EAAA,CAn0BID,2BAA2B;AAAAyO,GAAA,GAA3BzO,2BAA2B;AAq0BjC,eAAeA,2BAA2B;AAAC,IAAAD,EAAA,EAAA0O,GAAA;AAAAC,YAAA,CAAA3O,EAAA;AAAA2O,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}