{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, useNodesState, useEdgesState, MarkerType, Handle } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { getCachedServiceIcon } from '../services/IconResolver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSServiceNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(motion.div, {\n  className: `aws-service-node ${data.isMissing ? 'missing' : ''}`,\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  animate: {\n    scale: 1,\n    opacity: 1\n  },\n  exit: {\n    scale: 0,\n    opacity: 0\n  },\n  whileHover: {\n    scale: 1.1\n  },\n  transition: {\n    type: \"spring\",\n    stiffness: 300\n  },\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\",\n    id: `${data.id}-target`,\n    className: \"handle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node-content\",\n    children: [data.isMissing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"missing-service-placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.icon,\n      alt: data.label,\n      className: \"service-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"service-label\",\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\",\n    id: `${data.id}-source`,\n    className: \"handle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c = AWSServiceNode;\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\nconst createNodeId = serviceName => {\n  if (typeof serviceName !== 'string') {\n    console.error('Invalid service name:', serviceName);\n    return 'invalid-service';\n  }\n  return serviceName.toLowerCase().replace(/\\s+/g, '-');\n};\nconst AWSArchitectureDisplay = ({\n  architecture,\n  missingServices\n}) => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  // Add a ref to track if we've logged the warning\n  const hasLoggedWarning = React.useRef(false);\n  React.useEffect(() => {\n    // Only log once per mount\n    if (!(architecture !== null && architecture !== void 0 && architecture.services) && !hasLoggedWarning.current) {\n      hasLoggedWarning.current = true;\n      console.log('⚠️ Waiting for architecture data...');\n      return;\n    }\n    if (architecture !== null && architecture !== void 0 && architecture.services) {\n      var _architecture$connect;\n      console.log('📊 Rendering architecture:', {\n        servicesCount: architecture.services.length,\n        connectionsCount: (_architecture$connect = architecture.connections) === null || _architecture$connect === void 0 ? void 0 : _architecture$connect.length\n      });\n      const newNodes = [];\n      const newEdges = [];\n\n      // Process connections and insert missing services\n      (architecture.connections || []).forEach(conn => {\n        const fromId = typeof conn.from === 'string' ? createNodeId(conn.from) : conn.from.id;\n        const toId = typeof conn.to === 'string' ? createNodeId(conn.to) : conn.to.id;\n\n        // Check if there's a missing service between these nodes\n        const missingService = missingServices === null || missingServices === void 0 ? void 0 : missingServices.find(ms => ms.position.includes(fromId) && ms.position.includes(toId));\n        if (missingService) {\n          const placeholderId = `missing-${fromId}-${toId}`;\n          newNodes.push({\n            id: placeholderId,\n            type: 'awsService',\n            position: {\n              x: newNodes.length * 200,\n              y: 200\n            },\n            data: {\n              label: 'Missing Service',\n              isMissing: true\n            }\n          });\n          newEdges.push({\n            id: `${fromId}-${placeholderId}`,\n            source: fromId,\n            target: placeholderId,\n            type: 'smoothstep',\n            animated: true,\n            style: {\n              stroke: '#4FD1C5',\n              strokeWidth: 2\n            },\n            markerEnd: {\n              type: MarkerType.ArrowClosed\n            }\n          });\n          newEdges.push({\n            id: `${placeholderId}-${toId}`,\n            source: placeholderId,\n            target: toId,\n            type: 'smoothstep',\n            animated: true,\n            style: {\n              stroke: '#4FD1C5',\n              strokeWidth: 2\n            },\n            markerEnd: {\n              type: MarkerType.ArrowClosed\n            }\n          });\n        } else {\n          newEdges.push({\n            id: `${fromId}-${toId}`,\n            source: fromId,\n            target: toId,\n            sourceHandle: `${fromId}-source`,\n            targetHandle: `${toId}-target`,\n            type: 'smoothstep',\n            animated: true,\n            style: {\n              stroke: '#4FD1C5',\n              strokeWidth: 2\n            },\n            markerEnd: {\n              type: MarkerType.ArrowClosed\n            }\n          });\n        }\n      });\n\n      // Add regular service nodes\n      architecture.services.forEach(service => {\n        const serviceId = typeof service === 'string' ? createNodeId(service) : service.id;\n        const serviceName = typeof service === 'string' ? service : service.name;\n        const serviceIcon = typeof service === 'string' ? getCachedServiceIcon(service) : service.icon;\n        newNodes.push({\n          id: serviceId,\n          type: 'awsService',\n          position: {\n            x: newNodes.length * 200,\n            y: 200\n          },\n          data: {\n            label: serviceName,\n            icon: serviceIcon,\n            isMissing: false\n          }\n        });\n      });\n      setNodes(newNodes);\n      setEdges(newEdges);\n    }\n\n    // Cleanup function\n    return () => {\n      hasLoggedWarning.current = false;\n    };\n  }, [architecture, missingServices, setNodes, setEdges]);\n\n  // Early return if no data\n  if (!(architecture !== null && architecture !== void 0 && architecture.services)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"architecture-visualizer-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading architecture...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px'\n    },\n    className: \"architecture-visualizer\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      minZoom: 0.5,\n      maxZoom: 1.5,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#4FD1C5\",\n        gap: 16,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: node => node.data.isMissing ? '#FF5656' : '#4FD1C5',\n        maskColor: \"rgba(13, 25, 35, 0.7)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureDisplay, \"ymklbP+YFGCeuuTrnQcK0pTKhKc=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = AWSArchitectureDisplay;\nexport default AWSArchitectureDisplay;\nvar _c, _c2;\n$RefreshReg$(_c, \"AWSServiceNode\");\n$RefreshReg$(_c2, \"AWSArchitectureDisplay\");","map":{"version":3,"names":["React","useEffect","useState","ReactFlow","Background","Controls","MiniMap","useNodesState","useEdgesState","MarkerType","Handle","motion","getCachedServiceIcon","jsxDEV","_jsxDEV","AWSServiceNode","data","div","className","isMissing","initial","scale","opacity","animate","exit","whileHover","transition","type","stiffness","children","position","id","fileName","_jsxFileName","lineNumber","columnNumber","src","icon","alt","label","_c","nodeTypes","awsService","createNodeId","serviceName","console","error","toLowerCase","replace","AWSArchitectureDisplay","architecture","missingServices","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","hasLoggedWarning","useRef","services","current","log","_architecture$connect","servicesCount","length","connectionsCount","connections","newNodes","newEdges","forEach","conn","fromId","from","toId","to","missingService","find","ms","includes","placeholderId","push","x","y","source","target","animated","style","stroke","strokeWidth","markerEnd","ArrowClosed","sourceHandle","targetHandle","service","serviceId","name","serviceIcon","height","fitView","minZoom","maxZoom","color","gap","size","nodeColor","node","maskColor","_c2","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport ReactFlow, { \n  Background, \n  Controls, \n  MiniMap,\n  useNodesState,\n  useEdgesState,\n  MarkerType,\n  Handle\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { getCachedServiceIcon } from '../services/IconResolver';\n\nconst AWSServiceNode = ({ data }) => (\n  <motion.div\n    className={`aws-service-node ${data.isMissing ? 'missing' : ''}`}\n    initial={{ scale: 0, opacity: 0 }}\n    animate={{ scale: 1, opacity: 1 }}\n    exit={{ scale: 0, opacity: 0 }}\n    whileHover={{ scale: 1.1 }}\n    transition={{ type: \"spring\", stiffness: 300 }}\n  >\n    <Handle \n      type=\"target\" \n      position=\"top\" \n      id={`${data.id}-target`}\n      className=\"handle\"\n    />\n    <div className=\"node-content\">\n      {data.isMissing ? (\n        <div className=\"missing-service-placeholder\">\n          <span>?</span>\n        </div>\n      ) : (\n        <img src={data.icon} alt={data.label} className=\"service-icon\" />\n      )}\n      <span className=\"service-label\">{data.label}</span>\n    </div>\n    <Handle \n      type=\"source\" \n      position=\"bottom\" \n      id={`${data.id}-source`}\n      className=\"handle\"\n    />\n  </motion.div>\n);\n\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\n\nconst createNodeId = (serviceName) => {\n  if (typeof serviceName !== 'string') {\n    console.error('Invalid service name:', serviceName);\n    return 'invalid-service';\n  }\n  return serviceName.toLowerCase().replace(/\\s+/g, '-');\n};\n\nconst AWSArchitectureDisplay = ({ architecture, missingServices }) => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  \n  // Add a ref to track if we've logged the warning\n  const hasLoggedWarning = React.useRef(false);\n\n  React.useEffect(() => {\n    // Only log once per mount\n    if (!architecture?.services && !hasLoggedWarning.current) {\n      hasLoggedWarning.current = true;\n      console.log('⚠️ Waiting for architecture data...');\n      return;\n    }\n\n    if (architecture?.services) {\n      console.log('📊 Rendering architecture:', {\n        servicesCount: architecture.services.length,\n        connectionsCount: architecture.connections?.length\n      });\n      \n      const newNodes = [];\n      const newEdges = [];\n      \n      // Process connections and insert missing services\n      (architecture.connections || []).forEach((conn) => {\n        const fromId = typeof conn.from === 'string' ? createNodeId(conn.from) : conn.from.id;\n        const toId = typeof conn.to === 'string' ? createNodeId(conn.to) : conn.to.id;\n        \n        // Check if there's a missing service between these nodes\n        const missingService = missingServices?.find(ms => \n          ms.position.includes(fromId) && ms.position.includes(toId)\n        );\n\n        if (missingService) {\n          const placeholderId = `missing-${fromId}-${toId}`;\n          newNodes.push({\n            id: placeholderId,\n            type: 'awsService',\n            position: { \n              x: newNodes.length * 200,\n              y: 200 \n            },\n            data: {\n              label: 'Missing Service',\n              isMissing: true\n            }\n          });\n\n          newEdges.push({\n            id: `${fromId}-${placeholderId}`,\n            source: fromId,\n            target: placeholderId,\n            type: 'smoothstep',\n            animated: true,\n            style: { stroke: '#4FD1C5', strokeWidth: 2 },\n            markerEnd: { type: MarkerType.ArrowClosed }\n          });\n          newEdges.push({\n            id: `${placeholderId}-${toId}`,\n            source: placeholderId,\n            target: toId,\n            type: 'smoothstep',\n            animated: true,\n            style: { stroke: '#4FD1C5', strokeWidth: 2 },\n            markerEnd: { type: MarkerType.ArrowClosed }\n          });\n        } else {\n          newEdges.push({\n            id: `${fromId}-${toId}`,\n            source: fromId,\n            target: toId,\n            sourceHandle: `${fromId}-source`,\n            targetHandle: `${toId}-target`,\n            type: 'smoothstep',\n            animated: true,\n            style: { stroke: '#4FD1C5', strokeWidth: 2 },\n            markerEnd: { type: MarkerType.ArrowClosed }\n          });\n        }\n      });\n\n      // Add regular service nodes\n      architecture.services.forEach((service) => {\n        const serviceId = typeof service === 'string' ? createNodeId(service) : service.id;\n        const serviceName = typeof service === 'string' ? service : service.name;\n        const serviceIcon = typeof service === 'string' ? getCachedServiceIcon(service) : service.icon;\n\n        newNodes.push({\n          id: serviceId,\n          type: 'awsService',\n          position: { x: newNodes.length * 200, y: 200 },\n          data: {\n            label: serviceName,\n            icon: serviceIcon,\n            isMissing: false\n          }\n        });\n      });\n\n      setNodes(newNodes);\n      setEdges(newEdges);\n    }\n\n    // Cleanup function\n    return () => {\n      hasLoggedWarning.current = false;\n    };\n  }, [architecture, missingServices, setNodes, setEdges]);\n\n  // Early return if no data\n  if (!architecture?.services) {\n    return (\n      <div className=\"architecture-visualizer-loading\">\n        <span>Loading architecture...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ height: '500px' }} className=\"architecture-visualizer\">\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        nodeTypes={nodeTypes}\n        fitView\n        minZoom={0.5}\n        maxZoom={1.5}\n      >\n        <Background color=\"#4FD1C5\" gap={16} size={1} />\n        <Controls />\n        <MiniMap \n          nodeColor={(node) => node.data.isMissing ? '#FF5656' : '#4FD1C5'}\n          maskColor=\"rgba(13, 25, 35, 0.7)\"\n        />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default AWSArchitectureDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}