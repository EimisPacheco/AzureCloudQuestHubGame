{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/ArchitectureVisualizer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useEffect, useState } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, useNodesState, useEdgesState } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArchitectureVisualizer = ({\n  architecture,\n  missingServices = [],\n  onNodeClick\n}) => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const convertArchitectureToNodes = useCallback(() => {\n    if (!(architecture !== null && architecture !== void 0 && architecture.services)) return;\n\n    // Create a circular layout\n    const radius = 200;\n    const totalNodes = architecture.services.length;\n\n    // Create nodes in a circle\n    const newNodes = architecture.services.map((service, index) => {\n      const angle = index / totalNodes * 2 * Math.PI;\n      const x = radius * Math.cos(angle);\n      const y = radius * Math.sin(angle);\n      return {\n        id: service.id,\n        type: 'awsService',\n        position: {\n          x: x + 300,\n          y: y + 200\n        },\n        // Center in view\n        data: {\n          label: service.name,\n          icon: service.icon,\n          missing: missingServices.includes(service.id)\n        },\n        style: {\n          width: 150,\n          height: 100,\n          borderRadius: '8px',\n          background: missingServices.includes(service.id) ? 'rgba(255, 86, 86, 0.1)' : 'rgba(79, 209, 197, 0.1)',\n          border: missingServices.includes(service.id) ? '2px dashed #FF5656' : '2px solid #4FD1C5'\n        }\n      };\n    });\n\n    // Create edges with curved lines and animations\n    const newEdges = architecture.connections.map((conn, index) => ({\n      id: `${conn.from}-${conn.to}`,\n      source: conn.from,\n      target: conn.to,\n      type: 'smoothstep',\n      animated: true,\n      style: {\n        stroke: '#4FD1C5',\n        strokeWidth: 2\n      }\n    }));\n    setNodes(newNodes);\n    setEdges(newEdges);\n  }, [architecture, missingServices, setNodes, setEdges]);\n  useEffect(() => {\n    convertArchitectureToNodes();\n  }, [architecture, convertArchitectureToNodes]);\n  const AWSServiceNode = ({\n    data\n  }) => /*#__PURE__*/_jsxDEV(motion.div, {\n    className: `aws-service-node ${data.missing ? 'missing' : ''}`,\n    initial: {\n      scale: 0\n    },\n    animate: {\n      scale: 1\n    },\n    whileHover: {\n      scale: 1.1\n    },\n    transition: {\n      type: \"spring\",\n      stiffness: 300\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.icon,\n      alt: data.label,\n      className: \"service-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"service-label\",\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n  const nodeTypes = {\n    awsService: AWSServiceNode\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px'\n    },\n    className: \"architecture-visualizer\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      nodeTypes: nodeTypes,\n      onNodeClick: (_, node) => onNodeClick(node.id),\n      fitView: true,\n      minZoom: 0.5,\n      maxZoom: 1.5,\n      defaultViewport: {\n        x: 0,\n        y: 0,\n        zoom: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#4FD1C5\",\n        gap: 16,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        position: \"bottom-right\",\n        style: {\n          background: 'rgba(79, 209, 197, 0.1)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: node => node.data.missing ? '#FF5656' : '#4FD1C5',\n        maskColor: \"rgba(13, 25, 35, 0.7)\",\n        style: {\n          background: 'rgba(13, 25, 35, 0.8)'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(ArchitectureVisualizer, \"C8fKIW38D/dLX1wgnyhgyflo8NU=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = ArchitectureVisualizer;\nexport default ArchitectureVisualizer;\nvar _c;\n$RefreshReg$(_c, \"ArchitectureVisualizer\");","map":{"version":3,"names":["React","useCallback","useEffect","useState","ReactFlow","Background","Controls","MiniMap","useNodesState","useEdgesState","motion","jsxDEV","_jsxDEV","ArchitectureVisualizer","architecture","missingServices","onNodeClick","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","convertArchitectureToNodes","services","radius","totalNodes","length","newNodes","map","service","index","angle","Math","PI","x","cos","y","sin","id","type","position","data","label","name","icon","missing","includes","style","width","height","borderRadius","background","border","newEdges","connections","conn","from","to","source","target","animated","stroke","strokeWidth","AWSServiceNode","div","className","initial","scale","animate","whileHover","transition","stiffness","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","nodeTypes","awsService","_","node","fitView","minZoom","maxZoom","defaultViewport","zoom","color","gap","size","nodeColor","maskColor","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/ArchitectureVisualizer.jsx"],"sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport ReactFlow, { \n  Background, \n  Controls, \n  MiniMap,\n  useNodesState,\n  useEdgesState\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\n\nconst ArchitectureVisualizer = ({ architecture, missingServices = [], onNodeClick }) => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  const convertArchitectureToNodes = useCallback(() => {\n    if (!architecture?.services) return;\n\n    // Create a circular layout\n    const radius = 200;\n    const totalNodes = architecture.services.length;\n    \n    // Create nodes in a circle\n    const newNodes = architecture.services.map((service, index) => {\n      const angle = (index / totalNodes) * 2 * Math.PI;\n      const x = radius * Math.cos(angle);\n      const y = radius * Math.sin(angle);\n\n      return {\n        id: service.id,\n        type: 'awsService',\n        position: { x: x + 300, y: y + 200 }, // Center in view\n        data: {\n          label: service.name,\n          icon: service.icon,\n          missing: missingServices.includes(service.id)\n        },\n        style: {\n          width: 150,\n          height: 100,\n          borderRadius: '8px',\n          background: missingServices.includes(service.id) \n            ? 'rgba(255, 86, 86, 0.1)'\n            : 'rgba(79, 209, 197, 0.1)',\n          border: missingServices.includes(service.id)\n            ? '2px dashed #FF5656'\n            : '2px solid #4FD1C5'\n        }\n      };\n    });\n\n    // Create edges with curved lines and animations\n    const newEdges = architecture.connections.map((conn, index) => ({\n      id: `${conn.from}-${conn.to}`,\n      source: conn.from,\n      target: conn.to,\n      type: 'smoothstep',\n      animated: true,\n      style: { stroke: '#4FD1C5', strokeWidth: 2 }\n    }));\n\n    setNodes(newNodes);\n    setEdges(newEdges);\n  }, [architecture, missingServices, setNodes, setEdges]);\n\n  useEffect(() => {\n    convertArchitectureToNodes();\n  }, [architecture, convertArchitectureToNodes]);\n\n  const AWSServiceNode = ({ data }) => (\n    <motion.div\n      className={`aws-service-node ${data.missing ? 'missing' : ''}`}\n      initial={{ scale: 0 }}\n      animate={{ scale: 1 }}\n      whileHover={{ scale: 1.1 }}\n      transition={{ type: \"spring\", stiffness: 300 }}\n    >\n      <img src={data.icon} alt={data.label} className=\"service-icon\" />\n      <span className=\"service-label\">{data.label}</span>\n    </motion.div>\n  );\n\n  const nodeTypes = {\n    awsService: AWSServiceNode\n  };\n\n  return (\n    <div style={{ height: '500px' }} className=\"architecture-visualizer\">\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        nodeTypes={nodeTypes}\n        onNodeClick={(_, node) => onNodeClick(node.id)}\n        fitView\n        minZoom={0.5}\n        maxZoom={1.5}\n        defaultViewport={{ x: 0, y: 0, zoom: 1 }}\n      >\n        <Background color=\"#4FD1C5\" gap={16} size={1} />\n        <Controls \n          position=\"bottom-right\"\n          style={{ background: 'rgba(79, 209, 197, 0.1)' }}\n        />\n        <MiniMap \n          nodeColor={(node) => node.data.missing ? '#FF5656' : '#4FD1C5'}\n          maskColor=\"rgba(13, 25, 35, 0.7)\"\n          style={{ background: 'rgba(13, 25, 35, 0.8)' }}\n        />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default ArchitectureVisualizer; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}