{"ast":null,"code":"import * as levenshteinModule from 'fast-levenshtein';\nconst AZURE_ICON_CATEGORIES = {\n  AI_MACHINE_LEARNING: 'ai + machine learning',\n  ANALYTICS: 'analytics',\n  APP_SERVICES: 'app services',\n  AZURE_ECOSYSTEM: 'azure ecosystem',\n  AZURE_STACK: 'azure stack',\n  BLOCKCHAIN: 'blockchain',\n  COMPUTE: 'compute',\n  CONTAINERS: 'containers',\n  DATABASES: 'databases',\n  DEVOPS: 'devops',\n  GENERAL: 'general',\n  HYBRID_MULTICLOUD: 'hybrid + multicloud',\n  IDENTITY: 'identity',\n  INTEGRATION: 'integration',\n  INTUNE: 'intune',\n  IOT: 'iot',\n  MANAGEMENT_GOVERNANCE: 'management + governance',\n  MENU: 'menu',\n  MIGRATE: 'migrate',\n  MIGRATION: 'migration',\n  MIXED_REALITY: 'mixed reality',\n  MOBILE: 'mobile',\n  MONITOR: 'monitor',\n  NETWORKING: 'networking',\n  NEW_ICONS: 'new icons',\n  OTHER: 'other',\n  SECURITY: 'security',\n  STORAGE: 'storage',\n  WEB: 'web'\n};\nconst SERVICE_MAPPINGS = {\n  // AI + machine learning\n  \"Batch AI\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00028-icon-service-Batch-AI.svg\",\n  \"Machine Learning Studio (Classic) Web Services\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00030-icon-service-Machine-Learning-Studio-(Classic)-Web-Services.svg\",\n  \"Genomics\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00031-icon-service-Genomics.svg\",\n  \"Computer Vision\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00792-icon-service-Computer-Vision.svg\",\n  \"Custom Vision\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00793-icon-service-Custom-Vision.svg\",\n  \"Face APIs\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00794-icon-service-Face-APIs.svg\",\n  \"Content Moderators\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00795-icon-service-Content-Moderators.svg\",\n  \"Personalizers\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00796-icon-service-Personalizers.svg\",\n  \"Speech Services\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00797-icon-service-Speech-Services.svg\",\n  \"QnA Makers\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00799-icon-service-QnA-Makers.svg\",\n  \"Translator Text\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00800-icon-service-Translator-Text.svg\",\n  \"Language Understanding\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00801-icon-service-Language-Understanding.svg\",\n  \"Immersive Readers\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00812-icon-service-Immersive-Readers.svg\",\n  \"Anomaly Detector\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00814-icon-service-Anomaly-Detector.svg\",\n  \"Form Recognizers\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00819-icon-service-Form-Recognizers.svg\",\n  \"Azure Experimentation Studio\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/01239-icon-service-Azure-Experimentation-Studio.svg\",\n  \"Azure Object Understanding\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/01688-icon-service-Azure-Object-Understanding.svg\",\n  \"Metrics Advisor\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/02409-icon-service-Metrics-Advisor.svg\",\n  \"Azure Applied AI Services\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/02749-icon-service-Azure-Applied-AI-Services.svg\",\n  \"Language\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/02876-icon-service-Language.svg\",\n  \"Cognitive Services Decisions\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/03173-icon-service-Cognitive-Services-Decisions.svg\",\n  \"Serverless Search\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/03321-icon-service-Serverless-Search.svg\",\n  \"Bonsai\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/03337-icon-service-Bonsai.svg\",\n  \"Content Safety\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/03390-icon-service-Content-Safety.svg\",\n  \"Azure OpenAI\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/03438-icon-service-Azure-OpenAI.svg\",\n  \"AI Studio\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/03513-icon-service-AI-Studio.svg\",\n  \"Cognitive Search\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/10044-icon-service-Cognitive-Search.svg\",\n  \"Cognitive Services\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/10162-icon-service-Cognitive-Services.svg\",\n  \"Genomics Accounts\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/10164-icon-service-Genomics-Accounts.svg\",\n  \"Bot Services\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/10165-icon-service-Bot-Services.svg\"\n};\nconst S3_BUCKET_URL = 'ttps://azurehackthonsep2025.blob.core.windows.net/';\nconst ICONS_BASE_PATH = '/azure-icons-set/Architecture-Service-Icons_06072024';\n\n// Cache for resolved icons\nconst iconCache = new Map();\n\n// Acronym to full name mapping\nconst ACRONYM_MAPPING = {\n  'IAM': 'Identity and Access Management',\n  'Azure IAM': 'Identity and Access Management',\n  'EC2': 'Elastic Compute Cloud',\n  'RDS': 'Relational Database Service',\n  'S3': 'Simple Storage Service',\n  'VPC': 'Virtual Private Cloud',\n  'ELB': 'Elastic Load Balancing',\n  'ALB': 'Application Load Balancer',\n  'NLB': 'Network Load Balancer',\n  'EFS': 'Elastic File System',\n  'EBS': 'Elastic Block Store',\n  'SNS': 'Simple Notification Service',\n  'SQS': 'Simple Queue Service',\n  'SES': 'Simple Email Service',\n  'CloudFront': 'CloudFront',\n  'Route 53': 'Route 53',\n  'DynamoDB': 'DynamoDB',\n  'ElastiCache': 'ElastiCache',\n  'Lambda': 'Lambda',\n  'API Gateway': 'API Gateway',\n  'ECS': 'Elastic Container Service',\n  'EKS': 'Elastic Kubernetes Service',\n  'ECR': 'Elastic Container Registry',\n  'CloudWatch': 'CloudWatch',\n  'CloudTrail': 'CloudTrail',\n  'CloudFormation': 'CloudFormation',\n  'WAF': 'Web Application Firewall',\n  'KMS': 'Key Management Service',\n  'SWF': 'Simple Workflow Service',\n  'EMR': 'Elastic MapReduce',\n  'Redshift': 'Redshift',\n  'Athena': 'Athena',\n  'Glue': 'Glue',\n  'Kinesis': 'Kinesis',\n  'Step Functions': 'Step Functions',\n  'Cognito': 'Cognito',\n  'Elastic Beanstalk': 'Elastic Beanstalk',\n  'ACM': 'Certificate Manager',\n  'SSM': 'Systems Manager',\n  'OpsWorks': 'OpsWorks',\n  'Config': 'Config',\n  'Direct Connect': 'Direct Connect',\n  'Storage Gateway': 'Storage Gateway',\n  'AppSync': 'AppSync',\n  'Neptune': 'Neptune',\n  'Aurora': 'Aurora',\n  'DocumentDB': 'DocumentDB',\n  'Elasticsearch Service': 'Elasticsearch Service',\n  'MSK': 'Managed Streaming for Apache Kafka',\n  'SageMaker': 'SageMaker',\n  'Comprehend': 'Comprehend',\n  'Lex': 'Lex',\n  'Polly': 'Polly',\n  'Rekognition': 'Rekognition',\n  'Textract': 'Textract',\n  'Translate': 'Translate',\n  'Connect': 'Connect',\n  'WorkSpaces': 'WorkSpaces',\n  'GuardDuty': 'GuardDuty',\n  'Inspector': 'Inspector',\n  'Macie': 'Macie',\n  'Secrets Manager': 'Secrets Manager',\n  'Shield': 'Shield',\n  'Firewall Manager': 'Firewall Manager',\n  'Lake Formation': 'Lake Formation',\n  'Batch': 'Batch',\n  'Amplify': 'Amplify',\n  'AppStream': 'AppStream',\n  'FSx': 'FSx',\n  'Global Accelerator': 'Global Accelerator',\n  'Outposts': 'Outposts',\n  'Snow Family': 'Snow Family',\n  'Transfer Family': 'Transfer Family',\n  'VMware Cloud': 'VMware Cloud on Azure'\n};\n\n// Reverse mapping for full names to acronyms\nconst FULL_NAME_TO_ACRONYM = Object.fromEntries(_c2 = Object.entries(ACRONYM_MAPPING).map(_c = ([acronym, fullName]) => [fullName.toLowerCase(), acronym]));\n_c3 = FULL_NAME_TO_ACRONYM;\nexport const getCachedServiceIcon = serviceName => {\n  if (!serviceName) {\n    console.error('❌ No service name provided to getServiceIcon');\n    return null;\n  }\n\n  // Handle missing services first\n  if (serviceName.toLowerCase().includes('missing')) {\n    console.log('🎯 Missing service detected, using local missing.svg');\n    return '/Azure-icons/missing.svg';\n  }\n\n  // Check cache first\n  if (iconCache.has(serviceName)) {\n    return iconCache.get(serviceName);\n  }\n  const normalizeServiceName = name => {\n    return name.toLowerCase().replace(/^(Azure|amazon)\\s+/i, '') // Remove Azure/Amazon prefix\n    .replace(/\\([^)]*\\)/g, '') // Remove parentheses and content\n    .replace(/\\s+/g, ' ') // Normalize spaces\n    .trim();\n  };\n\n  // Clean and normalize the input service name\n  const normalizedInput = normalizeServiceName(serviceName);\n  console.log(`🔍 Looking for service: \"${normalizedInput}\" (original: \"${serviceName}\")`);\n\n  // Find the best match\n  let bestMatch = null;\n  let bestScore = Infinity;\n  Object.entries(SERVICE_MAPPINGS).forEach(([key, value]) => {\n    const normalizedKey = normalizeServiceName(key);\n\n    // Check for exact match first (case insensitive)\n    if (normalizedKey === normalizedInput) {\n      bestMatch = [key, value];\n      bestScore = 0;\n      console.log(`✅ Exact match found for ${serviceName} -> ${key}`);\n      return;\n    }\n\n    // Check if one string contains the other\n    if (normalizedKey.includes(normalizedInput) || normalizedInput.includes(normalizedKey)) {\n      const score = 1; // Prioritize partial matches over Levenshtein\n      if (score < bestScore) {\n        bestScore = score;\n        bestMatch = [key, value];\n        console.log(`📎 Partial match found: ${serviceName} -> ${key}`);\n      }\n    } else {\n      // Use Levenshtein as a fallback\n      const score = levenshteinModule.get(normalizedKey, normalizedInput);\n      if (score < bestScore && score < 3) {\n        // threshold of 3 for similarity\n        bestScore = score;\n        bestMatch = [key, value];\n        console.log(`📊 Levenshtein match found: ${serviceName} -> ${key} (score: ${score})`);\n      }\n    }\n  });\n  if (!bestMatch) {\n    console.warn(`⚠️ No icon mapping found for service: ${serviceName}`);\n    return `${S3_BUCKET_URL}${ICONS_BASE_PATH}/General/16/Arch_Azure-General_16.svg`;\n  }\n  const fullUrl = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${bestMatch[1]}`;\n  console.log(`🎨 Resolved icon for ${serviceName}:`, fullUrl);\n\n  // Cache the result\n  iconCache.set(serviceName, fullUrl);\n  return fullUrl;\n};\nexport { AZURE_ICON_CATEGORIES, SERVICE_MAPPINGS };\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"FULL_NAME_TO_ACRONYM$Object.fromEntries$Object.entries(ACRONYM_MAPPING).map\");\n$RefreshReg$(_c2, \"FULL_NAME_TO_ACRONYM$Object.fromEntries\");\n$RefreshReg$(_c3, \"FULL_NAME_TO_ACRONYM\");","map":{"version":3,"names":["levenshteinModule","AZURE_ICON_CATEGORIES","AI_MACHINE_LEARNING","ANALYTICS","APP_SERVICES","AZURE_ECOSYSTEM","AZURE_STACK","BLOCKCHAIN","COMPUTE","CONTAINERS","DATABASES","DEVOPS","GENERAL","HYBRID_MULTICLOUD","IDENTITY","INTEGRATION","INTUNE","IOT","MANAGEMENT_GOVERNANCE","MENU","MIGRATE","MIGRATION","MIXED_REALITY","MOBILE","MONITOR","NETWORKING","NEW_ICONS","OTHER","SECURITY","STORAGE","WEB","SERVICE_MAPPINGS","S3_BUCKET_URL","ICONS_BASE_PATH","iconCache","Map","ACRONYM_MAPPING","FULL_NAME_TO_ACRONYM","Object","fromEntries","_c2","entries","map","_c","acronym","fullName","toLowerCase","_c3","getCachedServiceIcon","serviceName","console","error","includes","log","has","get","normalizeServiceName","name","replace","trim","normalizedInput","bestMatch","bestScore","Infinity","forEach","key","value","normalizedKey","score","warn","fullUrl","set","$RefreshReg$"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/services/IconResolver.js"],"sourcesContent":["import * as levenshteinModule from 'fast-levenshtein';\n\n\n\nconst AZURE_ICON_CATEGORIES = {\n  AI_MACHINE_LEARNING: 'ai + machine learning',\n  ANALYTICS: 'analytics',\n  APP_SERVICES: 'app services',\n  AZURE_ECOSYSTEM: 'azure ecosystem',\n  AZURE_STACK: 'azure stack',\n  BLOCKCHAIN: 'blockchain',\n  COMPUTE: 'compute',\n  CONTAINERS: 'containers',\n  DATABASES: 'databases',\n  DEVOPS: 'devops',\n  GENERAL: 'general',\n  HYBRID_MULTICLOUD: 'hybrid + multicloud',\n  IDENTITY: 'identity',\n  INTEGRATION: 'integration',\n  INTUNE: 'intune',\n  IOT: 'iot',\n  MANAGEMENT_GOVERNANCE: 'management + governance',\n  MENU: 'menu',\n  MIGRATE: 'migrate',\n  MIGRATION: 'migration',\n  MIXED_REALITY: 'mixed reality',\n  MOBILE: 'mobile',\n  MONITOR: 'monitor',\n  NETWORKING: 'networking',\n  NEW_ICONS: 'new icons',\n  OTHER: 'other',\n  SECURITY: 'security',\n  STORAGE: 'storage',\n  WEB: 'web'\n};\n\n\nconst SERVICE_MAPPINGS = {\n  // AI + machine learning\n  \"Batch AI\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00028-icon-service-Batch-AI.svg\",\n  \"Machine Learning Studio (Classic) Web Services\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00030-icon-service-Machine-Learning-Studio-(Classic)-Web-Services.svg\",\n  \"Genomics\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00031-icon-service-Genomics.svg\",\n  \"Computer Vision\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00792-icon-service-Computer-Vision.svg\",\n  \"Custom Vision\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00793-icon-service-Custom-Vision.svg\",\n  \"Face APIs\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00794-icon-service-Face-APIs.svg\",\n  \"Content Moderators\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00795-icon-service-Content-Moderators.svg\",\n  \"Personalizers\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00796-icon-service-Personalizers.svg\",\n  \"Speech Services\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00797-icon-service-Speech-Services.svg\",\n  \"QnA Makers\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00799-icon-service-QnA-Makers.svg\",\n  \"Translator Text\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00800-icon-service-Translator-Text.svg\",\n  \"Language Understanding\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00801-icon-service-Language-Understanding.svg\",\n  \"Immersive Readers\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00812-icon-service-Immersive-Readers.svg\",\n  \"Anomaly Detector\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00814-icon-service-Anomaly-Detector.svg\",\n  \"Form Recognizers\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/00819-icon-service-Form-Recognizers.svg\",\n  \"Azure Experimentation Studio\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/01239-icon-service-Azure-Experimentation-Studio.svg\",\n  \"Azure Object Understanding\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/01688-icon-service-Azure-Object-Understanding.svg\",\n  \"Metrics Advisor\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/02409-icon-service-Metrics-Advisor.svg\",\n  \"Azure Applied AI Services\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/02749-icon-service-Azure-Applied-AI-Services.svg\",\n  \"Language\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/02876-icon-service-Language.svg\",\n  \"Cognitive Services Decisions\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/03173-icon-service-Cognitive-Services-Decisions.svg\",\n  \"Serverless Search\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/03321-icon-service-Serverless-Search.svg\",\n  \"Bonsai\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/03337-icon-service-Bonsai.svg\",\n  \"Content Safety\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/03390-icon-service-Content-Safety.svg\",\n  \"Azure OpenAI\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/03438-icon-service-Azure-OpenAI.svg\",\n  \"AI Studio\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/03513-icon-service-AI-Studio.svg\",\n  \"Cognitive Search\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/10044-icon-service-Cognitive-Search.svg\",\n  \"Cognitive Services\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/10162-icon-service-Cognitive-Services.svg\",\n  \"Genomics Accounts\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/10164-icon-service-Genomics-Accounts.svg\",\n  \"Bot Services\": \"azure-cloud-hub-games-ep/azure-icon-sets/ai + machine learning/10165-icon-service-Bot-Services.svg\"\n};\n\n  \nconst S3_BUCKET_URL = 'ttps://azurehackthonsep2025.blob.core.windows.net/';\nconst ICONS_BASE_PATH = '/azure-icons-set/Architecture-Service-Icons_06072024';\n\n// Cache for resolved icons\nconst iconCache = new Map();\n\n// Acronym to full name mapping\nconst ACRONYM_MAPPING = {\n    'IAM': 'Identity and Access Management',\n    'Azure IAM': 'Identity and Access Management',\n    'EC2': 'Elastic Compute Cloud',\n    'RDS': 'Relational Database Service',\n    'S3': 'Simple Storage Service',\n    'VPC': 'Virtual Private Cloud',\n    'ELB': 'Elastic Load Balancing',\n    'ALB': 'Application Load Balancer',\n    'NLB': 'Network Load Balancer',\n    'EFS': 'Elastic File System',\n    'EBS': 'Elastic Block Store',\n    'SNS': 'Simple Notification Service',\n    'SQS': 'Simple Queue Service',\n    'SES': 'Simple Email Service',\n    'CloudFront': 'CloudFront',\n    'Route 53': 'Route 53',\n    'DynamoDB': 'DynamoDB',\n    'ElastiCache': 'ElastiCache',\n    'Lambda': 'Lambda',\n    'API Gateway': 'API Gateway',\n    'ECS': 'Elastic Container Service',\n    'EKS': 'Elastic Kubernetes Service',\n    'ECR': 'Elastic Container Registry',\n    'CloudWatch': 'CloudWatch',\n    'CloudTrail': 'CloudTrail',\n    'CloudFormation': 'CloudFormation',\n    'WAF': 'Web Application Firewall',\n    'KMS': 'Key Management Service',\n    'SWF': 'Simple Workflow Service',\n    'EMR': 'Elastic MapReduce',\n    'Redshift': 'Redshift',\n    'Athena': 'Athena',\n    'Glue': 'Glue',\n    'Kinesis': 'Kinesis',\n    'Step Functions': 'Step Functions',\n    'Cognito': 'Cognito',\n    'Elastic Beanstalk': 'Elastic Beanstalk',\n    'ACM': 'Certificate Manager',\n    'SSM': 'Systems Manager',\n    'OpsWorks': 'OpsWorks',\n    'Config': 'Config',\n    'Direct Connect': 'Direct Connect',\n    'Storage Gateway': 'Storage Gateway',\n    'AppSync': 'AppSync',\n    'Neptune': 'Neptune',\n    'Aurora': 'Aurora',\n    'DocumentDB': 'DocumentDB',\n    'Elasticsearch Service': 'Elasticsearch Service',\n    'MSK': 'Managed Streaming for Apache Kafka',\n    'SageMaker': 'SageMaker',\n    'Comprehend': 'Comprehend',\n    'Lex': 'Lex',\n    'Polly': 'Polly',\n    'Rekognition': 'Rekognition',\n    'Textract': 'Textract',\n    'Translate': 'Translate',\n    'Connect': 'Connect',\n    'WorkSpaces': 'WorkSpaces',\n    'GuardDuty': 'GuardDuty',\n    'Inspector': 'Inspector',\n    'Macie': 'Macie',\n    'Secrets Manager': 'Secrets Manager',\n    'Shield': 'Shield',\n    'Firewall Manager': 'Firewall Manager',\n    'Lake Formation': 'Lake Formation',\n    'Batch': 'Batch',\n    'Amplify': 'Amplify',\n    'AppStream': 'AppStream',\n    'FSx': 'FSx',\n    'Global Accelerator': 'Global Accelerator',\n    'Outposts': 'Outposts',\n    'Snow Family': 'Snow Family',\n    'Transfer Family': 'Transfer Family',\n    'VMware Cloud': 'VMware Cloud on Azure'\n  };\n\n\n// Reverse mapping for full names to acronyms\nconst FULL_NAME_TO_ACRONYM = Object.fromEntries(\n  Object.entries(ACRONYM_MAPPING).map(([acronym, fullName]) => [fullName.toLowerCase(), acronym])\n);\n\nexport const getCachedServiceIcon = (serviceName) => {\n  if (!serviceName) {\n    console.error('❌ No service name provided to getServiceIcon');\n    return null;\n  }\n\n  // Handle missing services first\n  if (serviceName.toLowerCase().includes('missing')) {\n    console.log('🎯 Missing service detected, using local missing.svg');\n    return '/Azure-icons/missing.svg';\n  }\n\n  // Check cache first\n  if (iconCache.has(serviceName)) {\n    return iconCache.get(serviceName);\n  }\n\n  const normalizeServiceName = (name) => {\n    return name\n      .toLowerCase()\n      .replace(/^(Azure|amazon)\\s+/i, '')  // Remove Azure/Amazon prefix\n      .replace(/\\([^)]*\\)/g, '')         // Remove parentheses and content\n      .replace(/\\s+/g, ' ')              // Normalize spaces\n      .trim();\n  };\n\n  // Clean and normalize the input service name\n  const normalizedInput = normalizeServiceName(serviceName);\n  console.log(`🔍 Looking for service: \"${normalizedInput}\" (original: \"${serviceName}\")`);\n\n  // Find the best match\n  let bestMatch = null;\n  let bestScore = Infinity;\n\n  Object.entries(SERVICE_MAPPINGS).forEach(([key, value]) => {\n    const normalizedKey = normalizeServiceName(key);\n    \n    // Check for exact match first (case insensitive)\n    if (normalizedKey === normalizedInput) {\n      bestMatch = [key, value];\n      bestScore = 0;\n      console.log(`✅ Exact match found for ${serviceName} -> ${key}`);\n      return;\n    }\n\n    // Check if one string contains the other\n    if (normalizedKey.includes(normalizedInput) || normalizedInput.includes(normalizedKey)) {\n      const score = 1; // Prioritize partial matches over Levenshtein\n      if (score < bestScore) {\n        bestScore = score;\n        bestMatch = [key, value];\n        console.log(`📎 Partial match found: ${serviceName} -> ${key}`);\n      }\n    } else {\n      // Use Levenshtein as a fallback\n      const score = levenshteinModule.get(normalizedKey, normalizedInput);\n      if (score < bestScore && score < 3) { // threshold of 3 for similarity\n        bestScore = score;\n        bestMatch = [key, value];\n        console.log(`📊 Levenshtein match found: ${serviceName} -> ${key} (score: ${score})`);\n      }\n    }\n  });\n\n  if (!bestMatch) {\n    console.warn(`⚠️ No icon mapping found for service: ${serviceName}`);\n    return `${S3_BUCKET_URL}${ICONS_BASE_PATH}/General/16/Arch_Azure-General_16.svg`;\n  }\n\n  const fullUrl = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/${bestMatch[1]}`;\n  console.log(`🎨 Resolved icon for ${serviceName}:`, fullUrl);\n  \n  // Cache the result\n  iconCache.set(serviceName, fullUrl);\n  \n  return fullUrl;\n};\n\nexport { AZURE_ICON_CATEGORIES, SERVICE_MAPPINGS };"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}