{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/CloudShooter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useRef, useEffect } from 'react';\nimport GameCanvas from './GameCanvas';\nimport { Link } from 'react-router-dom';\nimport CosmosDBService from '../services/CosmosDBService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CloudShooter = () => {\n  _s();\n  // Add state for player and leaderboard\n  const [playerName, setPlayerName] = useState('');\n  const [score, setScore] = useState(0);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const gameType = 'CloudShooter';\n\n  // Add a state to track if game is initialized\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  // Fetch leaderboard only once on initial mount\n  useEffect(() => {\n    if (!isInitialized) {\n      fetchLeaderboard();\n      setIsInitialized(true);\n    }\n  }, [isInitialized]);\n\n  // Add score saving function\n  const saveScore = async () => {\n    console.log('🎯 Attempting to save score:', {\n      playerName,\n      gameType,\n      score\n    });\n    if (!playerName || score === 0) {\n      console.warn('❌ Score save prevented:', {\n        playerName,\n        score\n      });\n      return;\n    }\n    try {\n      const result = await CosmosDBService.saveGameScore(playerName, gameType, score);\n      console.log('✅ Score saved successfully:', result);\n    } catch (error) {\n      console.error('❌ Error saving score:', error);\n    }\n  };\n\n  // Add leaderboard fetching function\n  const fetchLeaderboard = async () => {\n    console.log('🏆 Fetching leaderboard for:', gameType);\n    try {\n      const data = await CosmosDBService.getLeaderboard(gameType);\n      console.log('✅ Leaderboard fetched:', data);\n      setLeaderboard(data);\n      return data;\n    } catch (error) {\n      console.error('❌ Error fetching leaderboard:', error);\n      return [];\n    }\n  };\n\n  // Sound state\n  const [isMuted, setIsMuted] = useState(false);\n  const sounds = useRef({});\n\n  // Define sound files\n  const soundFiles = {\n    hover: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/hover.mp3`\n  };\n\n  // Play sound function\n  const playSound = useCallback(soundName => {\n    if (!sounds.current[soundName] && soundFiles[soundName]) {\n      sounds.current[soundName] = new Audio(soundFiles[soundName]);\n    }\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  }, [isMuted]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"azure-cloud-shooter\",\n    children: [/*#__PURE__*/_jsxDEV(GameCanvas, {\n      onScoreUpdate: setScore,\n      onPlayerNameChange: setPlayerName,\n      onGameOver: saveScore,\n      leaderboard: leaderboard,\n      fetchLeaderboard: fetchLeaderboard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"gameCanvas-game-title\",\n      children: \"AZURE CLOUD SHOOTER\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/\",\n      className: \"back-to-home-button\",\n      style: {\n        position: 'absolute',\n        top: '20px',\n        left: '20px',\n        display: 'flex',\n        alignItems: 'center',\n        padding: '10px 20px',\n        backgroundColor: 'rgba(0, 255, 255, 0.1)',\n        border: '2px solid #00ffff',\n        borderRadius: '5px',\n        color: '#00ffff',\n        textDecoration: 'none',\n        fontFamily: 'Orbitron, sans-serif',\n        fontSize: '14px',\n        transition: 'all 0.3s ease',\n        zIndex: 100\n      },\n      onMouseEnter: () => playSound('hover'),\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        style: {\n          width: '20px',\n          height: '20px',\n          marginRight: '8px'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          d: \"M12 2L1 12h3v9h6v-6h4v6h6v-9h3L12 2z\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), \"Back to Home\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n};\n_s(CloudShooter, \"91R6EDKbUgkxmYZj6pSM1Za2bnY=\");\n_c = CloudShooter;\nexport default CloudShooter;\nvar _c;\n$RefreshReg$(_c, \"CloudShooter\");","map":{"version":3,"names":["React","useState","useCallback","useRef","useEffect","GameCanvas","Link","CosmosDBService","jsxDEV","_jsxDEV","CloudShooter","_s","playerName","setPlayerName","score","setScore","leaderboard","setLeaderboard","gameType","isInitialized","setIsInitialized","fetchLeaderboard","saveScore","console","log","warn","result","saveGameScore","error","data","getLeaderboard","isMuted","setIsMuted","sounds","soundFiles","hover","process","env","REACT_APP_AZURE_BUCKET_URL","playSound","soundName","current","Audio","sound","currentTime","volume","play","catch","err","id","children","onScoreUpdate","onPlayerNameChange","onGameOver","fileName","_jsxFileName","lineNumber","columnNumber","className","to","style","position","top","left","display","alignItems","padding","backgroundColor","border","borderRadius","color","textDecoration","fontFamily","fontSize","transition","zIndex","onMouseEnter","xmlns","viewBox","fill","width","height","marginRight","d","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/Azure Hackthons/azure-cloud-architecture-game /src/components/CloudShooter.jsx"],"sourcesContent":["import React, { useState, useCallback, useRef, useEffect } from 'react';\nimport GameCanvas from './GameCanvas';\nimport { Link } from 'react-router-dom';\nimport CosmosDBService from '../services/CosmosDBService';\n\nconst CloudShooter = () => {\n  // Add state for player and leaderboard\n  const [playerName, setPlayerName] = useState('');\n  const [score, setScore] = useState(0);\n  const [leaderboard, setLeaderboard] = useState([]);\n  const gameType = 'CloudShooter';\n\n  // Add a state to track if game is initialized\n  const [isInitialized, setIsInitialized] = useState(false);\n\n  // Fetch leaderboard only once on initial mount\n  useEffect(() => {\n    if (!isInitialized) {\n      fetchLeaderboard();\n      setIsInitialized(true);\n    }\n  }, [isInitialized]);\n\n  // Add score saving function\n  const saveScore = async () => {\n    console.log('🎯 Attempting to save score:', {\n      playerName,\n      gameType,\n      score\n    });\n\n    if (!playerName || score === 0) {\n      console.warn('❌ Score save prevented:', {\n        playerName,\n        score\n      });\n      return;\n    }\n\n    try {\n      const result = await CosmosDBService.saveGameScore(playerName, gameType, score);\n      console.log('✅ Score saved successfully:', result);\n    } catch (error) {\n      console.error('❌ Error saving score:', error);\n    }\n  };\n\n  // Add leaderboard fetching function\n  const fetchLeaderboard = async () => {\n    console.log('🏆 Fetching leaderboard for:', gameType);\n    try {\n      const data = await CosmosDBService.getLeaderboard(gameType);\n      console.log('✅ Leaderboard fetched:', data);\n      setLeaderboard(data);\n      return data;\n    } catch (error) {\n      console.error('❌ Error fetching leaderboard:', error);\n      return [];\n    }\n  };\n\n  // Sound state\n  const [isMuted, setIsMuted] = useState(false);\n  const sounds = useRef({});\n\n  // Define sound files\n  const soundFiles = {\n    hover: `${process.env.REACT_APP_AZURE_BUCKET_URL}/games/sounds/hover.mp3`\n  };\n\n  // Play sound function\n  const playSound = useCallback((soundName) => {\n    if (!sounds.current[soundName] && soundFiles[soundName]) {\n      sounds.current[soundName] = new Audio(soundFiles[soundName]);\n    }\n\n    const sound = sounds.current[soundName];\n    if (sound && !isMuted) {\n      try {\n        sound.currentTime = 0;\n        sound.volume = 0.3;\n        sound.play().catch(err => {\n          console.warn(`Error playing sound ${soundName}:`, err);\n        });\n      } catch (err) {\n        console.warn(`Error with sound ${soundName}:`, err);\n      }\n    }\n  }, [isMuted]);\n\n  return (\n    <div id=\"azure-cloud-shooter\">\n      <GameCanvas \n        onScoreUpdate={setScore}\n        onPlayerNameChange={setPlayerName}\n        onGameOver={saveScore}\n        leaderboard={leaderboard}\n        fetchLeaderboard={fetchLeaderboard}\n      />\n      <h1 className=\"gameCanvas-game-title\">AZURE CLOUD SHOOTER</h1>\n\n      {/* Back to Home button */}\n      <Link \n        to=\"/\" \n        className=\"back-to-home-button\"\n        style={{\n          position: 'absolute',\n          top: '20px',\n          left: '20px',\n          display: 'flex',\n          alignItems: 'center',\n          padding: '10px 20px',\n          backgroundColor: 'rgba(0, 255, 255, 0.1)',\n          border: '2px solid #00ffff',\n          borderRadius: '5px',\n          color: '#00ffff',\n          textDecoration: 'none',\n          fontFamily: 'Orbitron, sans-serif',\n          fontSize: '14px',\n          transition: 'all 0.3s ease',\n          zIndex: 100\n        }}\n        onMouseEnter={() => playSound('hover')}\n      >\n        <svg \n          xmlns=\"http://www.w3.org/2000/svg\" \n          viewBox=\"0 0 24 24\" \n          fill=\"currentColor\" \n          style={{\n            width: '20px',\n            height: '20px',\n            marginRight: '8px'\n          }}\n        >\n          <path d=\"M12 2L1 12h3v9h6v-6h4v6h6v-9h3L12 2z\"/>\n        </svg>\n        Back to Home\n      </Link>\n    </div>\n  );\n};\n\nexport default CloudShooter;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}