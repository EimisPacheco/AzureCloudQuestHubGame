{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/ServicesLayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServicesLayer = ({\n  services,\n  positions,\n  getServiceIcon\n}) => {\n  _s();\n  // Cache the icon URLs for all services\n  const serviceIcons = useMemo(() => {\n    return services.reduce((acc, service) => {\n      acc[service.name] = getServiceIcon(service.name);\n      return acc;\n    }, {});\n  }, [services, getServiceIcon]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"services-layer\",\n    children: services.map((service, index) => {\n      const position = positions[service.name];\n      if (!position) return null;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"service-node\",\n        style: {\n          transform: `translate(${position.x}px, ${position.y}px)`\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"service-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: serviceIcons[service.name],\n            alt: service.name,\n            onError: e => {\n              e.target.src = '/aws-icons/default.svg';\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"service-name\",\n          children: service.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, `${service.name}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 5\n  }, this);\n};\n_s(ServicesLayer, \"P3JZC6IyxExofLBbHnOspZOoLrc=\");\n_c = ServicesLayer;\nexport default ServicesLayer;\nvar _c;\n$RefreshReg$(_c, \"ServicesLayer\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","ServicesLayer","services","positions","getServiceIcon","_s","serviceIcons","reduce","acc","service","name","className","children","map","index","position","style","transform","x","y","src","alt","onError","e","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/ServicesLayer.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\n\nconst ServicesLayer = ({ services, positions, getServiceIcon }) => {\n  // Cache the icon URLs for all services\n  const serviceIcons = useMemo(() => {\n    return services.reduce((acc, service) => {\n      acc[service.name] = getServiceIcon(service.name);\n      return acc;\n    }, {});\n  }, [services, getServiceIcon]);\n\n  return (\n    <div className=\"services-layer\">\n      {services.map((service, index) => {\n        const position = positions[service.name];\n        if (!position) return null;\n\n        return (\n          <div\n            key={`${service.name}-${index}`}\n            className=\"service-node\"\n            style={{\n              transform: `translate(${position.x}px, ${position.y}px)`\n            }}\n          >\n            <div className=\"service-icon\">\n              <img \n                src={serviceIcons[service.name]} \n                alt={service.name}\n                onError={(e) => {\n                  e.target.src = '/aws-icons/default.svg';\n                }}\n              />\n            </div>\n            <span className=\"service-name\">{service.name}</span>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ServicesLayer; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACjE;EACA,MAAMC,YAAY,GAAGR,OAAO,CAAC,MAAM;IACjC,OAAOI,QAAQ,CAACK,MAAM,CAAC,CAACC,GAAG,EAAEC,OAAO,KAAK;MACvCD,GAAG,CAACC,OAAO,CAACC,IAAI,CAAC,GAAGN,cAAc,CAACK,OAAO,CAACC,IAAI,CAAC;MAChD,OAAOF,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACR,CAAC,EAAE,CAACN,QAAQ,EAAEE,cAAc,CAAC,CAAC;EAE9B,oBACEJ,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5BV,QAAQ,CAACW,GAAG,CAAC,CAACJ,OAAO,EAAEK,KAAK,KAAK;MAChC,MAAMC,QAAQ,GAAGZ,SAAS,CAACM,OAAO,CAACC,IAAI,CAAC;MACxC,IAAI,CAACK,QAAQ,EAAE,OAAO,IAAI;MAE1B,oBACEf,OAAA;QAEEW,SAAS,EAAC,cAAc;QACxBK,KAAK,EAAE;UACLC,SAAS,EAAE,aAAaF,QAAQ,CAACG,CAAC,OAAOH,QAAQ,CAACI,CAAC;QACrD,CAAE;QAAAP,QAAA,gBAEFZ,OAAA;UAAKW,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3BZ,OAAA;YACEoB,GAAG,EAAEd,YAAY,CAACG,OAAO,CAACC,IAAI,CAAE;YAChCW,GAAG,EAAEZ,OAAO,CAACC,IAAK;YAClBY,OAAO,EAAGC,CAAC,IAAK;cACdA,CAAC,CAACC,MAAM,CAACJ,GAAG,GAAG,wBAAwB;YACzC;UAAE;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN5B,OAAA;UAAMW,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEH,OAAO,CAACC;QAAI;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAf/C,GAAGnB,OAAO,CAACC,IAAI,IAAII,KAAK,EAAE;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgB5B,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACvB,EAAA,CAtCIJ,aAAa;AAAA4B,EAAA,GAAb5B,aAAa;AAwCnB,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}