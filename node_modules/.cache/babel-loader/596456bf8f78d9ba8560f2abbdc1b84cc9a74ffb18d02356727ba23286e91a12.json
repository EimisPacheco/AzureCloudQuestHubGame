{"ast":null,"code":"\"use strict\";\n\n// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ContentFilterFinishReasonError = exports.LengthFinishReasonError = exports.InternalServerError = exports.RateLimitError = exports.UnprocessableEntityError = exports.ConflictError = exports.NotFoundError = exports.PermissionDeniedError = exports.AuthenticationError = exports.BadRequestError = exports.APIConnectionTimeoutError = exports.APIConnectionError = exports.APIUserAbortError = exports.APIError = exports.OpenAIError = void 0;\nconst core_1 = require(\"./core.js\");\nclass OpenAIError extends Error {}\nexports.OpenAIError = OpenAIError;\nclass APIError extends OpenAIError {\n  constructor(status, error, message, headers) {\n    super(\"\".concat(APIError.makeMessage(status, error, message)));\n    this.status = status;\n    this.headers = headers;\n    this.request_id = headers === null || headers === void 0 ? void 0 : headers['x-request-id'];\n    this.error = error;\n    const data = error;\n    this.code = data === null || data === void 0 ? void 0 : data['code'];\n    this.param = data === null || data === void 0 ? void 0 : data['param'];\n    this.type = data === null || data === void 0 ? void 0 : data['type'];\n  }\n  static makeMessage(status, error, message) {\n    const msg = error !== null && error !== void 0 && error.message ? typeof error.message === 'string' ? error.message : JSON.stringify(error.message) : error ? JSON.stringify(error) : message;\n    if (status && msg) {\n      return \"\".concat(status, \" \").concat(msg);\n    }\n    if (status) {\n      return \"\".concat(status, \" status code (no body)\");\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n  static generate(status, errorResponse, message, headers) {\n    if (!status || !headers) {\n      return new APIConnectionError({\n        message,\n        cause: (0, core_1.castToError)(errorResponse)\n      });\n    }\n    const error = errorResponse === null || errorResponse === void 0 ? void 0 : errorResponse['error'];\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n    return new APIError(status, error, message, headers);\n  }\n}\nexports.APIError = APIError;\nclass APIUserAbortError extends APIError {\n  constructor() {\n    let {\n      message\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\nexports.APIUserAbortError = APIUserAbortError;\nclass APIConnectionError extends APIError {\n  constructor(_ref) {\n    let {\n      message,\n      cause\n    } = _ref;\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\nexports.APIConnectionError = APIConnectionError;\nclass APIConnectionTimeoutError extends APIConnectionError {\n  constructor() {\n    let {\n      message\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    super({\n      message: message !== null && message !== void 0 ? message : 'Request timed out.'\n    });\n  }\n}\nexports.APIConnectionTimeoutError = APIConnectionTimeoutError;\nclass BadRequestError extends APIError {}\nexports.BadRequestError = BadRequestError;\nclass AuthenticationError extends APIError {}\nexports.AuthenticationError = AuthenticationError;\nclass PermissionDeniedError extends APIError {}\nexports.PermissionDeniedError = PermissionDeniedError;\nclass NotFoundError extends APIError {}\nexports.NotFoundError = NotFoundError;\nclass ConflictError extends APIError {}\nexports.ConflictError = ConflictError;\nclass UnprocessableEntityError extends APIError {}\nexports.UnprocessableEntityError = UnprocessableEntityError;\nclass RateLimitError extends APIError {}\nexports.RateLimitError = RateLimitError;\nclass InternalServerError extends APIError {}\nexports.InternalServerError = InternalServerError;\nclass LengthFinishReasonError extends OpenAIError {\n  constructor() {\n    super(\"Could not parse response content as the length limit was reached\");\n  }\n}\nexports.LengthFinishReasonError = LengthFinishReasonError;\nclass ContentFilterFinishReasonError extends OpenAIError {\n  constructor() {\n    super(\"Could not parse response content as the request was rejected by the content filter\");\n  }\n}\nexports.ContentFilterFinishReasonError = ContentFilterFinishReasonError;","map":{"version":3,"names":["core_1","require","OpenAIError","Error","exports","APIError","constructor","status","error","message","headers","concat","makeMessage","request_id","data","code","param","type","msg","JSON","stringify","generate","errorResponse","APIConnectionError","cause","castToError","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","arguments","length","undefined","_ref","APIConnectionTimeoutError","LengthFinishReasonError","ContentFilterFinishReasonError"],"sources":["/Users/eimis/test-server/react_projects/legendary-lines-game/node_modules/openai/src/error.ts"],"sourcesContent":["// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\n\nimport { castToError, Headers } from './core';\n\nexport class OpenAIError extends Error {}\n\nexport class APIError<\n  TStatus extends number | undefined = number | undefined,\n  THeaders extends Headers | undefined = Headers | undefined,\n  TError extends Object | undefined = Object | undefined,\n> extends OpenAIError {\n  /** HTTP status for the response that caused the error */\n  readonly status: TStatus;\n  /** HTTP headers for the response that caused the error */\n  readonly headers: THeaders;\n  /** JSON body of the response that caused the error */\n  readonly error: TError;\n\n  readonly code: string | null | undefined;\n  readonly param: string | null | undefined;\n  readonly type: string | undefined;\n\n  readonly request_id: string | null | undefined;\n\n  constructor(status: TStatus, error: TError, message: string | undefined, headers: THeaders) {\n    super(`${APIError.makeMessage(status, error, message)}`);\n    this.status = status;\n    this.headers = headers;\n    this.request_id = headers?.['x-request-id'];\n    this.error = error;\n\n    const data = error as Record<string, any>;\n    this.code = data?.['code'];\n    this.param = data?.['param'];\n    this.type = data?.['type'];\n  }\n\n  private static makeMessage(status: number | undefined, error: any, message: string | undefined) {\n    const msg =\n      error?.message ?\n        typeof error.message === 'string' ?\n          error.message\n        : JSON.stringify(error.message)\n      : error ? JSON.stringify(error)\n      : message;\n\n    if (status && msg) {\n      return `${status} ${msg}`;\n    }\n    if (status) {\n      return `${status} status code (no body)`;\n    }\n    if (msg) {\n      return msg;\n    }\n    return '(no status code or body)';\n  }\n\n  static generate(\n    status: number | undefined,\n    errorResponse: Object | undefined,\n    message: string | undefined,\n    headers: Headers | undefined,\n  ): APIError {\n    if (!status || !headers) {\n      return new APIConnectionError({ message, cause: castToError(errorResponse) });\n    }\n\n    const error = (errorResponse as Record<string, any>)?.['error'];\n\n    if (status === 400) {\n      return new BadRequestError(status, error, message, headers);\n    }\n\n    if (status === 401) {\n      return new AuthenticationError(status, error, message, headers);\n    }\n\n    if (status === 403) {\n      return new PermissionDeniedError(status, error, message, headers);\n    }\n\n    if (status === 404) {\n      return new NotFoundError(status, error, message, headers);\n    }\n\n    if (status === 409) {\n      return new ConflictError(status, error, message, headers);\n    }\n\n    if (status === 422) {\n      return new UnprocessableEntityError(status, error, message, headers);\n    }\n\n    if (status === 429) {\n      return new RateLimitError(status, error, message, headers);\n    }\n\n    if (status >= 500) {\n      return new InternalServerError(status, error, message, headers);\n    }\n\n    return new APIError(status, error, message, headers);\n  }\n}\n\nexport class APIUserAbortError extends APIError<undefined, undefined, undefined> {\n  constructor({ message }: { message?: string } = {}) {\n    super(undefined, undefined, message || 'Request was aborted.', undefined);\n  }\n}\n\nexport class APIConnectionError extends APIError<undefined, undefined, undefined> {\n  constructor({ message, cause }: { message?: string | undefined; cause?: Error | undefined }) {\n    super(undefined, undefined, message || 'Connection error.', undefined);\n    // in some environments the 'cause' property is already declared\n    // @ts-ignore\n    if (cause) this.cause = cause;\n  }\n}\n\nexport class APIConnectionTimeoutError extends APIConnectionError {\n  constructor({ message }: { message?: string } = {}) {\n    super({ message: message ?? 'Request timed out.' });\n  }\n}\n\nexport class BadRequestError extends APIError<400, Headers> {}\n\nexport class AuthenticationError extends APIError<401, Headers> {}\n\nexport class PermissionDeniedError extends APIError<403, Headers> {}\n\nexport class NotFoundError extends APIError<404, Headers> {}\n\nexport class ConflictError extends APIError<409, Headers> {}\n\nexport class UnprocessableEntityError extends APIError<422, Headers> {}\n\nexport class RateLimitError extends APIError<429, Headers> {}\n\nexport class InternalServerError extends APIError<number, Headers> {}\n\nexport class LengthFinishReasonError extends OpenAIError {\n  constructor() {\n    super(`Could not parse response content as the length limit was reached`);\n  }\n}\n\nexport class ContentFilterFinishReasonError extends OpenAIError {\n  constructor() {\n    super(`Could not parse response content as the request was rejected by the content filter`);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}