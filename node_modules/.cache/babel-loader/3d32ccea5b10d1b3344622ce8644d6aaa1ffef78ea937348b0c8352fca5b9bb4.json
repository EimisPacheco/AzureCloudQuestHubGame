{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService'; // Make sure this import is correct\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver'; //Import IconResolver\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\nconst AWSArchitectureGame = () => {\n  _s();\n  var _architectureInfo$mis, _architectureInfo$mis2, _currentQuestion$opti;\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [architecture, setArchitecture] = useState(null);\n  const [architectureInfo, setArchitectureInfo] = useState(null);\n  const [currentQuestion, setCurrentQuestion] = useState(null);\n  const [serviceOptions, setServiceOptions] = useState([]);\n  const [difficulty] = useState('BEGINNER');\n  const [score, setScore] = useState(0);\n  const [showFeedback, setShowFeedback] = useState(false);\n  const [feedback, setFeedback] = useState({\n    isCorrect: false,\n    message: '',\n    points: 0\n  });\n  const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n  const [questionStartTime, setQuestionStartTime] = useState(null);\n  const [elapsedTime, setElapsedTime] = useState(0);\n  const API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n  const sensors = useSensors(useSensor(PointerSensor, {\n    activationConstraint: {\n      distance: 8\n    }\n  }), useSensor(TouchSensor));\n  const S3_ICONS_PATH = `${S3_BUCKET_URL}${ICONS_BASE_PATH}`;\n  const getCachedServiceIcon = serviceName => {\n    console.log(\"serviceName:\", serviceName, typeof serviceName);\n    if (typeof serviceName !== 'string' || serviceName === null || serviceName === undefined) {\n      console.error(\"serviceName is not a string or is null/undefined:\", serviceName);\n      return '/aws-icons/default.svg';\n    }\n    // Handle missing services locally\n    if (serviceName.toLowerCase().includes('missing')) {\n      console.log('Loading missing service icon locally:', '/aws-icons/missing.svg');\n      return '/aws-icons/missing.svg';\n    }\n\n    // Construct the potential S3 URL based on the service name\n    const cleanedServiceName = serviceName.toLowerCase().replace(/^(amazon|aws)\\s+/, '').replace(/\\s+/g, '-');\n    const potentialS3Url = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/Arch_${cleanedServiceName}_64.svg`;\n    console.log(`🔍 Attempting to load icon for \"${serviceName}\" from: ${potentialS3Url}`);\n\n    //Try getting icon from SERVICE_MAPPINGS first\n    const resolvedIcon = SERVICE_MAPPINGS[serviceName.toLowerCase()] || null;\n    if (resolvedIcon) {\n      console.log(`✅ Successfully resolved icon for \"${serviceName}\": ${resolvedIcon}`);\n      return resolvedIcon;\n    }\n\n    // If IconResolver returns null (icon not found), log and use default\n    console.warn(`❌ Icon not found for \"${serviceName}\" at attempted path: ${potentialS3Url}`);\n    return '/aws-icons/default.svg';\n  };\n  const loadNextArchitecture = useCallback(async () => {\n    if (isLoading) return;\n    setIsLoading(true);\n    setError(null);\n    try {\n      var _data$missingServices;\n      const response = await fetch(API_URL, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          difficulty\n        })\n      });\n      if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n      const data = await response.json();\n      console.log('Raw AI Response:', JSON.stringify(data, null, 2));\n      console.log('data.services before transform:', data.services);\n      const transformedServices = data.services.map(serviceName => {\n        if (serviceName === undefined || serviceName === null) {\n          console.error(\"Undefined or null serviceName encountered.\");\n          return null;\n        }\n        return {\n          id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n          name: serviceName,\n          icon: getCachedServiceIcon(serviceName)\n        };\n      }).filter(Boolean);\n      setArchitecture({\n        services: transformedServices,\n        connections: data.connections\n      });\n      if (((_data$missingServices = data.missingServices) === null || _data$missingServices === void 0 ? void 0 : _data$missingServices.length) > 0) {\n        const currentMissingService = data.missingServices[0];\n        setCurrentQuestion({\n          text: currentMissingService.question,\n          optimizationFocus: currentMissingService.optimizationFocus,\n          options: currentMissingService.options.map(opt => ({\n            id: (opt.service || \"\").toLowerCase().replace(/\\s+/g, '-'),\n            name: opt.service || \"Unknown Service\",\n            isCorrect: opt.isCorrect,\n            isOptimal: opt.isOptimal,\n            explanation: opt.explanation,\n            rating: opt.rating,\n            icon: getCachedServiceIcon(opt.service)\n          })).filter(Boolean)\n        });\n      }\n      setArchitectureInfo({\n        name: data.architecture.name,\n        description: data.architecture.description,\n        missingServices: data.missingServices\n      });\n    } catch (error) {\n      console.error('Failed to load architecture:', error);\n      setError(error.message);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [API_URL, difficulty, isLoading]);\n  const handleServiceSelection = selectedService => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n    const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n    if (selectedOption) {\n      setShowFeedback(true);\n      if (selectedOption.isCorrect) {\n        const points = selectedOption.rating;\n        setScore(prevScore => prevScore + points);\n        setFeedback({\n          isCorrect: true,\n          message: selectedOption.explanation,\n          points: points,\n          isOptimal: selectedOption.isOptimal\n        });\n      } else {\n        setFeedback({\n          isCorrect: false,\n          message: selectedOption.explanation,\n          points: 0\n        });\n      }\n    }\n  };\n  const handleNext = () => {\n    if (!(architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices)) return;\n    setShowFeedback(false);\n    if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n      const nextIndex = currentMissingServiceIndex + 1;\n      setCurrentMissingServiceIndex(nextIndex);\n      const nextMissingService = architectureInfo.missingServices[nextIndex];\n      setCurrentQuestion({\n        text: nextMissingService.question,\n        optimizationFocus: nextMissingService.optimizationFocus,\n        options: nextMissingService.options.map(opt => ({\n          id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n          name: opt.service,\n          isCorrect: opt.isCorrect,\n          isOptimal: opt.isOptimal,\n          explanation: opt.explanation,\n          rating: opt.rating,\n          icon: getCachedServiceIcon(opt.service)\n        }))\n      });\n    }\n  };\n  useEffect(() => {\n    if (currentQuestion !== null && currentQuestion !== void 0 && currentQuestion.options) {\n      const updatedOptions = currentQuestion.options.map(option => ({\n        ...option,\n        icon: getCachedServiceIcon(option.name)\n      }));\n      setServiceOptions(updatedOptions);\n    }\n  }, [currentQuestion]);\n  useEffect(() => {\n    if (currentQuestion && !questionStartTime) {\n      setQuestionStartTime(Date.now());\n    }\n    const timer = setInterval(() => {\n      if (questionStartTime && !showFeedback) {\n        const elapsed = Math.floor((Date.now() - questionStartTime) / 1000);\n        setElapsedTime(elapsed);\n      }\n    }, 1000);\n    return () => clearInterval(timer);\n  }, [currentQuestion, questionStartTime, showFeedback]);\n  return /*#__PURE__*/_jsxDEV(DndProvider, {\n    backend: HTML5Backend,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: (architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.name) || 'AWS Architecture Challenge'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"game-stats\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"score\",\n            children: [\"Score: \", score]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"complexity\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"complexity-icon\",\n              children: \"\\uD83C\\uDFAF\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 29\n            }, this), difficulty]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 25\n          }, this), currentQuestion && !showFeedback && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `timer ${elapsedTime > 60 ? 'danger' : elapsedTime > 30 ? 'warning' : ''}`,\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"timer-icon\",\n              children: \"\\u23F1\\uFE0F\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 33\n            }, this), Math.floor(elapsedTime / 60), \":\", (elapsedTime % 60).toString().padStart(2, '0')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-architecture-button\",\n          onClick: loadNextArchitecture,\n          disabled: isLoading,\n          children: isLoading ? 'Loading...' : 'New Architecture'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 17\n      }, this), architectureInfo && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"architecture-description\",\n        children: architectureInfo.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 38\n      }, this), error ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AWSArchitectureDisplay, {\n          architecture: architecture,\n          missingServices: architectureInfo === null || architectureInfo === void 0 ? void 0 : architectureInfo.missingServices\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 25\n        }, this), currentQuestion && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"question-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: [\"Question: \", currentQuestion.text]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Optimization Focus: \", currentQuestion.optimizationFocus]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 33\n          }, this), showFeedback ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"feedback-content\",\n              children: [feedback.isCorrect ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [\"\\uD83C\\uDF89 Correct! +\", feedback.points, \" points\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 53\n                }, this), feedback.isOptimal && /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"\\uD83C\\uDF1F Perfect choice! This is the optimal solution.\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 76\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"\\u274C Not quite right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: feedback.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 45\n              }, this), currentMissingServiceIndex < (architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis = architectureInfo.missingServices) === null || _architectureInfo$mis === void 0 ? void 0 : _architectureInfo$mis.length) - 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"next-button\",\n                onClick: handleNext,\n                children: [\"Next Service (\", currentMissingServiceIndex + 2, \" of \", architectureInfo === null || architectureInfo === void 0 ? void 0 : (_architectureInfo$mis2 = architectureInfo.missingServices) === null || _architectureInfo$mis2 === void 0 ? void 0 : _architectureInfo$mis2.length, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 37\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"service-options\",\n            children: /*#__PURE__*/_jsxDEV(DndContext, {\n              sensors: sensors,\n              children: (_currentQuestion$opti = currentQuestion.options) === null || _currentQuestion$opti === void 0 ? void 0 : _currentQuestion$opti.map((option, index) => /*#__PURE__*/_jsxDEV(DraggableService, {\n                service: option,\n                onClick: () => handleServiceSelection(option.name)\n              }, `${option.id}-${index}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 296,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 293,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-status\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress\",\n          children: architectureInfo !== null && architectureInfo !== void 0 && architectureInfo.missingServices ? `Service ${currentMissingServiceIndex + 1} of ${architectureInfo.missingServices.length}` : 'Loading...'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 224,\n    columnNumber: 9\n  }, this);\n};\n_s(AWSArchitectureGame, \"Nvv8PtCFx+MPaKhNNYlYexkq3Sg=\", false, function () {\n  return [useSensors, useSensor, useSensor];\n});\n_c = AWSArchitectureGame;\nexport default AWSArchitectureGame;\nvar _c;\n$RefreshReg$(_c, \"AWSArchitectureGame\");","map":{"version":3,"names":["React","useState","useCallback","useEffect","DndContext","useSensor","useSensors","PointerSensor","TouchSensor","AWSArchitectureDisplay","DraggableService","DndProvider","HTML5Backend","getCachedServiceIcon","SERVICE_MAPPINGS","jsxDEV","_jsxDEV","Fragment","_Fragment","S3_BUCKET_URL","ICONS_BASE_PATH","AWSArchitectureGame","_s","_architectureInfo$mis","_architectureInfo$mis2","_currentQuestion$opti","isLoading","setIsLoading","error","setError","architecture","setArchitecture","architectureInfo","setArchitectureInfo","currentQuestion","setCurrentQuestion","serviceOptions","setServiceOptions","difficulty","score","setScore","showFeedback","setShowFeedback","feedback","setFeedback","isCorrect","message","points","currentMissingServiceIndex","setCurrentMissingServiceIndex","questionStartTime","setQuestionStartTime","elapsedTime","setElapsedTime","API_URL","sensors","activationConstraint","distance","S3_ICONS_PATH","serviceName","console","log","undefined","toLowerCase","includes","cleanedServiceName","replace","potentialS3Url","resolvedIcon","warn","loadNextArchitecture","_data$missingServices","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","services","transformedServices","map","id","name","icon","filter","Boolean","connections","missingServices","length","currentMissingService","text","question","optimizationFocus","options","opt","service","isOptimal","explanation","rating","description","handleServiceSelection","selectedService","selectedOption","find","prevScore","handleNext","nextIndex","nextMissingService","updatedOptions","option","Date","now","timer","setInterval","elapsed","Math","floor","clearInterval","backend","children","className","fileName","_jsxFileName","lineNumber","columnNumber","toString","padStart","onClick","disabled","index","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureGame.jsx"],"sourcesContent":["import React, { useState, useCallback, useEffect } from 'react';\nimport { DndContext, useSensor, useSensors, PointerSensor, TouchSensor } from '@dnd-kit/core';\nimport AWSArchitectureDisplay from './AWSArchitectureDisplay';\nimport DraggableService from './DraggableService'; // Make sure this import is correct\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { getCachedServiceIcon, SERVICE_MAPPINGS } from '../services/IconResolver'; //Import IconResolver\n\nconst S3_BUCKET_URL = 'https://hackthon-backend-files-ep-2024.s3.amazonaws.com';\nconst ICONS_BASE_PATH = '/amazon-icons-set/Architecture-Service-Icons_06072024';\n\nconst AWSArchitectureGame = () => {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [architecture, setArchitecture] = useState(null);\n    const [architectureInfo, setArchitectureInfo] = useState(null);\n    const [currentQuestion, setCurrentQuestion] = useState(null);\n    const [serviceOptions, setServiceOptions] = useState([]);\n    const [difficulty] = useState('BEGINNER');\n    const [score, setScore] = useState(0);\n    const [showFeedback, setShowFeedback] = useState(false);\n    const [feedback, setFeedback] = useState({ isCorrect: false, message: '', points: 0 });\n    const [currentMissingServiceIndex, setCurrentMissingServiceIndex] = useState(0);\n    const [questionStartTime, setQuestionStartTime] = useState(null);\n    const [elapsedTime, setElapsedTime] = useState(0);\n\n    const API_URL = 'https://p7bwtrx47e.execute-api.us-east-1.amazonaws.com/stage/amazon-architecture';\n\n    const sensors = useSensors(\n        useSensor(PointerSensor, {\n            activationConstraint: {\n                distance: 8,\n            },\n        }),\n        useSensor(TouchSensor)\n    );\n\n    const S3_ICONS_PATH = `${S3_BUCKET_URL}${ICONS_BASE_PATH}`;\n\n    const getCachedServiceIcon = (serviceName) => {\n        console.log(\"serviceName:\", serviceName, typeof serviceName);\n        if (typeof serviceName !== 'string' || serviceName === null || serviceName === undefined) {\n            console.error(\"serviceName is not a string or is null/undefined:\", serviceName);\n            return '/aws-icons/default.svg';\n        }\n        // Handle missing services locally\n        if (serviceName.toLowerCase().includes('missing')) {\n            console.log('Loading missing service icon locally:', '/aws-icons/missing.svg');\n            return '/aws-icons/missing.svg';\n        }\n\n        // Construct the potential S3 URL based on the service name\n        const cleanedServiceName = serviceName\n            .toLowerCase()\n            .replace(/^(amazon|aws)\\s+/, '')\n            .replace(/\\s+/g, '-');\n\n        const potentialS3Url = `${S3_BUCKET_URL}${ICONS_BASE_PATH}/Arch_${cleanedServiceName}_64.svg`;\n        console.log(`🔍 Attempting to load icon for \"${serviceName}\" from: ${potentialS3Url}`);\n\n        //Try getting icon from SERVICE_MAPPINGS first\n        const resolvedIcon = SERVICE_MAPPINGS[serviceName.toLowerCase()] || null;\n\n        if (resolvedIcon) {\n            console.log(`✅ Successfully resolved icon for \"${serviceName}\": ${resolvedIcon}`);\n            return resolvedIcon;\n        }\n\n\n        // If IconResolver returns null (icon not found), log and use default\n        console.warn(`❌ Icon not found for \"${serviceName}\" at attempted path: ${potentialS3Url}`);\n        return '/aws-icons/default.svg';\n    };\n\n\n    const loadNextArchitecture = useCallback(async () => {\n        if (isLoading) return;\n        setIsLoading(true);\n        setError(null);\n\n        try {\n            const response = await fetch(API_URL, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({ difficulty })\n            });\n\n            if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);\n\n            const data = await response.json();\n            console.log('Raw AI Response:', JSON.stringify(data, null, 2));\n\n            console.log('data.services before transform:', data.services);\n\n            const transformedServices = data.services.map(serviceName => {\n                if (serviceName === undefined || serviceName === null) {\n                    console.error(\"Undefined or null serviceName encountered.\");\n                    return null;\n                }\n                return {\n                    id: serviceName.toLowerCase().replace(/[^a-z0-9]+/g, '-'),\n                    name: serviceName,\n                    icon: getCachedServiceIcon(serviceName)\n                };\n            }).filter(Boolean);\n\n\n            setArchitecture({\n                services: transformedServices,\n                connections: data.connections\n            });\n\n            if (data.missingServices?.length > 0) {\n                const currentMissingService = data.missingServices[0];\n                setCurrentQuestion({\n                    text: currentMissingService.question,\n                    optimizationFocus: currentMissingService.optimizationFocus,\n                    options: currentMissingService.options.map(opt => ({\n                        id: (opt.service || \"\").toLowerCase().replace(/\\s+/g, '-'),\n                        name: opt.service || \"Unknown Service\",\n                        isCorrect: opt.isCorrect,\n                        isOptimal: opt.isOptimal,\n                        explanation: opt.explanation,\n                        rating: opt.rating,\n                        icon: getCachedServiceIcon(opt.service)\n                    })).filter(Boolean)\n                });\n            }\n\n            setArchitectureInfo({\n                name: data.architecture.name,\n                description: data.architecture.description,\n                missingServices: data.missingServices\n            });\n\n        } catch (error) {\n            console.error('Failed to load architecture:', error);\n            setError(error.message);\n        } finally {\n            setIsLoading(false);\n        }\n    }, [API_URL, difficulty, isLoading]);\n\n    const handleServiceSelection = (selectedService) => {\n        if (!architectureInfo?.missingServices) return;\n\n        const currentMissingService = architectureInfo.missingServices[currentMissingServiceIndex];\n        const selectedOption = currentMissingService.options.find(opt => opt.service === selectedService);\n\n        if (selectedOption) {\n            setShowFeedback(true);\n            if (selectedOption.isCorrect) {\n                const points = selectedOption.rating;\n                setScore(prevScore => prevScore + points);\n                setFeedback({\n                    isCorrect: true,\n                    message: selectedOption.explanation,\n                    points: points,\n                    isOptimal: selectedOption.isOptimal\n                });\n            } else {\n                setFeedback({\n                    isCorrect: false,\n                    message: selectedOption.explanation,\n                    points: 0\n                });\n            }\n        }\n    };\n\n    const handleNext = () => {\n        if (!architectureInfo?.missingServices) return;\n\n        setShowFeedback(false);\n        if (currentMissingServiceIndex < architectureInfo.missingServices.length - 1) {\n            const nextIndex = currentMissingServiceIndex + 1;\n            setCurrentMissingServiceIndex(nextIndex);\n\n            const nextMissingService = architectureInfo.missingServices[nextIndex];\n            setCurrentQuestion({\n                text: nextMissingService.question,\n                optimizationFocus: nextMissingService.optimizationFocus,\n                options: nextMissingService.options.map(opt => ({\n                    id: opt.service.toLowerCase().replace(/\\s+/g, '-'),\n                    name: opt.service,\n                    isCorrect: opt.isCorrect,\n                    isOptimal: opt.isOptimal,\n                    explanation: opt.explanation,\n                    rating: opt.rating,\n                    icon: getCachedServiceIcon(opt.service)\n                }))\n            });\n        }\n    };\n\n    useEffect(() => {\n        if (currentQuestion?.options) {\n            const updatedOptions = currentQuestion.options.map(option => ({\n                ...option,\n                icon: getCachedServiceIcon(option.name)\n            }));\n            setServiceOptions(updatedOptions);\n        }\n    }, [currentQuestion]);\n\n    useEffect(() => {\n        if (currentQuestion && !questionStartTime) {\n            setQuestionStartTime(Date.now());\n        }\n\n        const timer = setInterval(() => {\n            if (questionStartTime && !showFeedback) {\n                const elapsed = Math.floor((Date.now() - questionStartTime) / 1000);\n                setElapsedTime(elapsed);\n            }\n        }, 1000);\n\n        return () => clearInterval(timer);\n    }, [currentQuestion, questionStartTime, showFeedback]);\n\n    return (\n        <DndProvider backend={HTML5Backend}>\n            <div className=\"game-container\">\n                <div className=\"game-header\">\n                    <h2>{architectureInfo?.name || 'AWS Architecture Challenge'}</h2>\n                    <div className=\"game-stats\">\n                        <div className=\"score\">Score: {score}</div>\n                        <div className=\"complexity\">\n                            <span className=\"complexity-icon\">🎯</span>\n                            {difficulty}\n                        </div>\n                        {currentQuestion && !showFeedback && (\n                            <div className={`timer ${\n                                elapsedTime > 60 ? 'danger' :\n                                    elapsedTime > 30 ? 'warning' : ''\n                            }`}>\n                                <span className=\"timer-icon\">⏱️</span>\n                                {Math.floor(elapsedTime / 60)}:{(elapsedTime % 60).toString().padStart(2, '0')}\n                            </div>\n                        )}\n                    </div>\n                    <button\n                        className=\"new-architecture-button\"\n                        onClick={loadNextArchitecture}\n                        disabled={isLoading}\n                    >\n                        {isLoading ? 'Loading...' : 'New Architecture'}\n                    </button>\n                </div>\n\n                {architectureInfo && <p className=\"architecture-description\">{architectureInfo.description}</p>}\n\n                {error ? (\n                    <div className=\"error-message\">{error}</div>\n                ) : (\n                    <>\n                        <AWSArchitectureDisplay\n                            architecture={architecture}\n                            missingServices={architectureInfo?.missingServices}\n                        />\n\n                        {currentQuestion && (\n                            <div className=\"question-container\">\n                                <h3>Question: {currentQuestion.text}</h3>\n                                <p>Optimization Focus: {currentQuestion.optimizationFocus}</p>\n\n                                {showFeedback ? (\n                                    <div className={`feedback-modal ${feedback.isCorrect ? 'correct' : 'incorrect'}`}>\n                                        <div className=\"feedback-content\">\n                                            {feedback.isCorrect ? (\n                                                <>\n                                                    <h3>🎉 Correct! +{feedback.points} points</h3>\n                                                    {feedback.isOptimal && <p>🌟 Perfect choice! This is the optimal solution.</p>}\n                                                </>\n                                            ) : (\n                                                <h3>❌ Not quite right</h3>\n                                            )}\n                                            <p>{feedback.message}</p>\n\n                                            {currentMissingServiceIndex < (architectureInfo?.missingServices?.length - 1) && (\n                                                <button\n                                                    className=\"next-button\"\n                                                    onClick={handleNext}\n                                                >\n                                                    Next Service ({currentMissingServiceIndex + 2} of {architectureInfo?.missingServices?.length})\n                                                </button>\n                                            )}\n                                        </div>\n                                    </div>\n                                ) : (\n                                    <div className=\"service-options\">\n                                        <DndContext sensors={sensors}>\n                                            {currentQuestion.options?.map((option, index) => (\n                                                <DraggableService\n                                                    key={`${option.id}-${index}`}\n                                                    service={option}\n                                                    onClick={() => handleServiceSelection(option.name)}\n                                                />\n                                            ))}\n                                        </DndContext>\n                                    </div>\n                                )}\n                            </div>\n                        )}\n                    </>\n                )}\n\n                <div className=\"game-status\">\n                    <div className=\"progress\">\n                        {architectureInfo?.missingServices ?\n                            `Service ${currentMissingServiceIndex + 1} of ${architectureInfo.missingServices.length}` :\n                            'Loading...'\n                        }\n                    </div>\n                </div>\n            </div>\n        </DndProvider>\n    );\n};\n\nexport default AWSArchitectureGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}