{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/ServicesLayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ServicesLayer = ({\n  services,\n  positions,\n  getServiceIcon\n}) => {\n  _s();\n  // Cache the icon URLs for all services\n  const serviceIcons = useMemo(() => {\n    const icons = {};\n    services.forEach(service => {\n      // Log each service name and its resolved icon URL\n      const iconUrl = getServiceIcon(service.name);\n      console.log(`üéØ Resolving icon for ${service.name}:`, iconUrl);\n      icons[service.name] = iconUrl;\n    });\n    return icons;\n  }, [services, getServiceIcon]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"services-layer\",\n    children: services.map((service, index) => {\n      const position = positions[service.name];\n      if (!position) return null;\n\n      // Log the actual icon URL being used\n      console.log(`üñºÔ∏è Rendering service ${service.name} with icon:`, serviceIcons[service.name]);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"service-node\",\n        style: {\n          transform: `translate(${position.x}px, ${position.y}px)`,\n          opacity: 1 // Make sure the node is visible\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"service-icon\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: serviceIcons[service.name],\n            alt: service.name,\n            onError: e => {\n              console.error(`‚ùå Failed to load icon for ${service.name}:`, e);\n              e.target.src = '/aws-icons/default.svg';\n            },\n            style: {\n              width: '48px',\n              height: '48px',\n              display: 'block' // Ensure image is visible\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"service-name\",\n          children: service.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, `${service.name}-${index}`, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(ServicesLayer, \"P3JZC6IyxExofLBbHnOspZOoLrc=\");\n_c = ServicesLayer;\nexport default ServicesLayer;\nvar _c;\n$RefreshReg$(_c, \"ServicesLayer\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","ServicesLayer","services","positions","getServiceIcon","_s","serviceIcons","icons","forEach","service","iconUrl","name","console","log","className","children","map","index","position","style","transform","x","y","opacity","src","alt","onError","e","error","target","width","height","display","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/ServicesLayer.jsx"],"sourcesContent":["import React, { useMemo } from 'react';\n\nconst ServicesLayer = ({ services, positions, getServiceIcon }) => {\n  // Cache the icon URLs for all services\n  const serviceIcons = useMemo(() => {\n    const icons = {};\n    services.forEach(service => {\n      // Log each service name and its resolved icon URL\n      const iconUrl = getServiceIcon(service.name);\n      console.log(`üéØ Resolving icon for ${service.name}:`, iconUrl);\n      icons[service.name] = iconUrl;\n    });\n    return icons;\n  }, [services, getServiceIcon]);\n\n  return (\n    <div className=\"services-layer\">\n      {services.map((service, index) => {\n        const position = positions[service.name];\n        if (!position) return null;\n\n        // Log the actual icon URL being used\n        console.log(`üñºÔ∏è Rendering service ${service.name} with icon:`, serviceIcons[service.name]);\n\n        return (\n          <div\n            key={`${service.name}-${index}`}\n            className=\"service-node\"\n            style={{\n              transform: `translate(${position.x}px, ${position.y}px)`,\n              opacity: 1 // Make sure the node is visible\n            }}\n          >\n            <div className=\"service-icon\">\n              <img \n                src={serviceIcons[service.name]}\n                alt={service.name}\n                onError={(e) => {\n                  console.error(`‚ùå Failed to load icon for ${service.name}:`, e);\n                  e.target.src = '/aws-icons/default.svg';\n                }}\n                style={{\n                  width: '48px',\n                  height: '48px',\n                  display: 'block' // Ensure image is visible\n                }}\n              />\n            </div>\n            <span className=\"service-name\">{service.name}</span>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default ServicesLayer; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,SAAS;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EACjE;EACA,MAAMC,YAAY,GAAGR,OAAO,CAAC,MAAM;IACjC,MAAMS,KAAK,GAAG,CAAC,CAAC;IAChBL,QAAQ,CAACM,OAAO,CAACC,OAAO,IAAI;MAC1B;MACA,MAAMC,OAAO,GAAGN,cAAc,CAACK,OAAO,CAACE,IAAI,CAAC;MAC5CC,OAAO,CAACC,GAAG,CAAC,yBAAyBJ,OAAO,CAACE,IAAI,GAAG,EAAED,OAAO,CAAC;MAC9DH,KAAK,CAACE,OAAO,CAACE,IAAI,CAAC,GAAGD,OAAO;IAC/B,CAAC,CAAC;IACF,OAAOH,KAAK;EACd,CAAC,EAAE,CAACL,QAAQ,EAAEE,cAAc,CAAC,CAAC;EAE9B,oBACEJ,OAAA;IAAKc,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5Bb,QAAQ,CAACc,GAAG,CAAC,CAACP,OAAO,EAAEQ,KAAK,KAAK;MAChC,MAAMC,QAAQ,GAAGf,SAAS,CAACM,OAAO,CAACE,IAAI,CAAC;MACxC,IAAI,CAACO,QAAQ,EAAE,OAAO,IAAI;;MAE1B;MACAN,OAAO,CAACC,GAAG,CAAC,yBAAyBJ,OAAO,CAACE,IAAI,aAAa,EAAEL,YAAY,CAACG,OAAO,CAACE,IAAI,CAAC,CAAC;MAE3F,oBACEX,OAAA;QAEEc,SAAS,EAAC,cAAc;QACxBK,KAAK,EAAE;UACLC,SAAS,EAAE,aAAaF,QAAQ,CAACG,CAAC,OAAOH,QAAQ,CAACI,CAAC,KAAK;UACxDC,OAAO,EAAE,CAAC,CAAC;QACb,CAAE;QAAAR,QAAA,gBAEFf,OAAA;UAAKc,SAAS,EAAC,cAAc;UAAAC,QAAA,eAC3Bf,OAAA;YACEwB,GAAG,EAAElB,YAAY,CAACG,OAAO,CAACE,IAAI,CAAE;YAChCc,GAAG,EAAEhB,OAAO,CAACE,IAAK;YAClBe,OAAO,EAAGC,CAAC,IAAK;cACdf,OAAO,CAACgB,KAAK,CAAC,6BAA6BnB,OAAO,CAACE,IAAI,GAAG,EAAEgB,CAAC,CAAC;cAC9DA,CAAC,CAACE,MAAM,CAACL,GAAG,GAAG,wBAAwB;YACzC,CAAE;YACFL,KAAK,EAAE;cACLW,KAAK,EAAE,MAAM;cACbC,MAAM,EAAE,MAAM;cACdC,OAAO,EAAE,OAAO,CAAC;YACnB;UAAE;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACNpC,OAAA;UAAMc,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAEN,OAAO,CAACE;QAAI;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAtB/C,GAAG3B,OAAO,CAACE,IAAI,IAAIM,KAAK,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAuB5B,CAAC;IAEV,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC/B,EAAA,CApDIJ,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AAsDnB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}