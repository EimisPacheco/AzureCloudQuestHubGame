{"ast":null,"code":"var _jsxFileName = \"/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport ReactFlow, { Background, Controls, MiniMap, useNodesState, useEdgesState, MarkerType, Handle } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { getCachedServiceIcon } from '../services/IconResolver';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AWSServiceNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(motion.div, {\n  className: `aws-service-node ${data.isMissing ? 'missing' : ''}`,\n  initial: {\n    scale: 0,\n    opacity: 0\n  },\n  animate: {\n    scale: 1,\n    opacity: 1\n  },\n  exit: {\n    scale: 0,\n    opacity: 0\n  },\n  whileHover: {\n    scale: 1.1\n  },\n  transition: {\n    type: \"spring\",\n    stiffness: 300\n  },\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\",\n    id: `${data.id}-target`,\n    className: \"handle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"node-content\",\n    children: [data.isMissing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"missing-service-placeholder\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.icon,\n      alt: data.label,\n      className: \"service-icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"service-label\",\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\",\n    id: `${data.id}-source`,\n    className: \"handle\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 16,\n  columnNumber: 3\n}, this);\n_c = AWSServiceNode;\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\nconst createNodeId = serviceName => {\n  if (typeof serviceName !== 'string') {\n    console.error('Invalid service name:', serviceName);\n    return 'invalid-service';\n  }\n  return serviceName.toLowerCase().replace(/\\s+/g, '-');\n};\nconst AWSArchitectureDisplay = ({\n  architecture,\n  missingServices\n}) => {\n  _s();\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n\n  // Add a ref to track if we've logged the warning\n  const hasLoggedWarning = React.useRef(false);\n  React.useEffect(() => {\n    // Only log once per mount\n    if (!(architecture !== null && architecture !== void 0 && architecture.services) && !hasLoggedWarning.current) {\n      hasLoggedWarning.current = true;\n      console.log('⚠️ Waiting for architecture data...');\n      return;\n    }\n    if (architecture !== null && architecture !== void 0 && architecture.services) {\n      var _architecture$connect;\n      console.log('📊 Rendering architecture:', {\n        servicesCount: architecture.services.length,\n        connectionsCount: (_architecture$connect = architecture.connections) === null || _architecture$connect === void 0 ? void 0 : _architecture$connect.length\n      });\n      const newNodes = [];\n      const newEdges = [];\n      const nodePositions = {};\n\n      // Calculate total width needed\n      const HORIZONTAL_SPACING = 250; // Increased spacing between nodes\n      const startX = 50; // Starting position\n      const centerY = 150; // Fixed Y position for better visibility\n\n      // First, create all nodes with more spacing\n      architecture.services.forEach((service, index) => {\n        const nodeId = service.id || service.name.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n        const node = {\n          id: nodeId,\n          type: 'awsService',\n          // Position nodes with more space between them\n          position: {\n            x: startX + index * HORIZONTAL_SPACING,\n            y: centerY + (index % 2 === 0 ? -20 : 20) // Slight vertical offset for better edge visibility\n          },\n          data: {\n            label: service.name,\n            icon: service.icon,\n            isMissing: service.name.toLowerCase().includes('missing')\n          },\n          style: {\n            width: 120,\n            // Fixed width for consistency\n            height: 80 // Fixed height for consistency\n          }\n        };\n        newNodes.push(node);\n        nodePositions[nodeId] = node.position;\n      });\n\n      // Create edges with improved styling\n      if (architecture.connections) {\n        architecture.connections.forEach(conn => {\n          const fromId = typeof conn.from === 'string' ? conn.from.toLowerCase().replace(/[^a-z0-9]+/g, '-') : conn.from.id;\n          const toId = typeof conn.to === 'string' ? conn.to.toLowerCase().replace(/[^a-z0-9]+/g, '-') : conn.to.id;\n          if (nodePositions[fromId] && nodePositions[toId]) {\n            newEdges.push({\n              id: `${fromId}-${toId}`,\n              source: fromId,\n              target: toId,\n              type: 'smoothstep',\n              animated: true,\n              style: {\n                stroke: '#4FD1C5',\n                strokeWidth: 2,\n                opacity: 0.8\n              },\n              markerEnd: {\n                type: MarkerType.ArrowClosed,\n                width: 20,\n                height: 20\n              },\n              // Add curve to the connections for better visibility\n              sourceHandle: 'right',\n              targetHandle: 'left',\n              // Adjust the curve of the connection\n              curvature: 0.4\n            });\n          }\n        });\n      }\n      setNodes(newNodes);\n      setEdges(newEdges);\n    }\n\n    // Cleanup function\n    return () => {\n      hasLoggedWarning.current = false;\n    };\n  }, [architecture, setNodes, setEdges]);\n\n  // Early return if no data\n  if (!(architecture !== null && architecture !== void 0 && architecture.services)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"architecture-visualizer-loading\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Loading architecture...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '500px',\n      width: '100%'\n    },\n    children: [\" \", /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes,\n      edges: edges,\n      onNodesChange: onNodesChange,\n      onEdgesChange: onEdgesChange,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      fitViewOptions: {\n        padding: 0.2,\n        // Add padding around the view\n        minZoom: 0.5,\n        maxZoom: 1.5\n      },\n      defaultViewport: {\n        zoom: 1\n      },\n      minZoom: 0.5,\n      maxZoom: 1.5,\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#4FD1C5\",\n        gap: 16,\n        size: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: node => node.data.isMissing ? '#FF5656' : '#4FD1C5',\n        maskColor: \"rgba(13, 25, 35, 0.7)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(AWSArchitectureDisplay, \"ymklbP+YFGCeuuTrnQcK0pTKhKc=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c2 = AWSArchitectureDisplay;\nexport default AWSArchitectureDisplay;\nvar _c, _c2;\n$RefreshReg$(_c, \"AWSServiceNode\");\n$RefreshReg$(_c2, \"AWSArchitectureDisplay\");","map":{"version":3,"names":["React","useState","useEffect","ReactFlow","Background","Controls","MiniMap","useNodesState","useEdgesState","MarkerType","Handle","motion","getCachedServiceIcon","jsxDEV","_jsxDEV","AWSServiceNode","data","div","className","isMissing","initial","scale","opacity","animate","exit","whileHover","transition","type","stiffness","children","position","id","fileName","_jsxFileName","lineNumber","columnNumber","src","icon","alt","label","_c","nodeTypes","awsService","createNodeId","serviceName","console","error","toLowerCase","replace","AWSArchitectureDisplay","architecture","missingServices","_s","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","hasLoggedWarning","useRef","services","current","log","_architecture$connect","servicesCount","length","connectionsCount","connections","newNodes","newEdges","nodePositions","HORIZONTAL_SPACING","startX","centerY","forEach","service","index","nodeId","name","node","x","y","includes","style","width","height","push","conn","fromId","from","toId","to","source","target","animated","stroke","strokeWidth","markerEnd","ArrowClosed","sourceHandle","targetHandle","curvature","fitView","fitViewOptions","padding","minZoom","maxZoom","defaultViewport","zoom","color","gap","size","nodeColor","maskColor","_c2","$RefreshReg$"],"sources":["/Users/eimis/test-server/react_projects/cloud-architecture-game/src/components/AWSArchitectureDisplay.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport ReactFlow, { \n  Background, \n  Controls, \n  MiniMap,\n  useNodesState,\n  useEdgesState,\n  MarkerType,\n  Handle\n} from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport { motion } from 'framer-motion';\nimport { getCachedServiceIcon } from '../services/IconResolver';\n\nconst AWSServiceNode = ({ data }) => (\n  <motion.div\n    className={`aws-service-node ${data.isMissing ? 'missing' : ''}`}\n    initial={{ scale: 0, opacity: 0 }}\n    animate={{ scale: 1, opacity: 1 }}\n    exit={{ scale: 0, opacity: 0 }}\n    whileHover={{ scale: 1.1 }}\n    transition={{ type: \"spring\", stiffness: 300 }}\n  >\n    <Handle \n      type=\"target\" \n      position=\"top\" \n      id={`${data.id}-target`}\n      className=\"handle\"\n    />\n    <div className=\"node-content\">\n      {data.isMissing ? (\n        <div className=\"missing-service-placeholder\">\n          <span>?</span>\n        </div>\n      ) : (\n        <img src={data.icon} alt={data.label} className=\"service-icon\" />\n      )}\n      <span className=\"service-label\">{data.label}</span>\n    </div>\n    <Handle \n      type=\"source\" \n      position=\"bottom\" \n      id={`${data.id}-source`}\n      className=\"handle\"\n    />\n  </motion.div>\n);\n\nconst nodeTypes = {\n  awsService: AWSServiceNode\n};\n\nconst createNodeId = (serviceName) => {\n  if (typeof serviceName !== 'string') {\n    console.error('Invalid service name:', serviceName);\n    return 'invalid-service';\n  }\n  return serviceName.toLowerCase().replace(/\\s+/g, '-');\n};\n\nconst AWSArchitectureDisplay = ({ architecture, missingServices }) => {\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  \n  // Add a ref to track if we've logged the warning\n  const hasLoggedWarning = React.useRef(false);\n\n  React.useEffect(() => {\n    // Only log once per mount\n    if (!architecture?.services && !hasLoggedWarning.current) {\n      hasLoggedWarning.current = true;\n      console.log('⚠️ Waiting for architecture data...');\n      return;\n    }\n\n    if (architecture?.services) {\n      console.log('📊 Rendering architecture:', {\n        servicesCount: architecture.services.length,\n        connectionsCount: architecture.connections?.length\n      });\n      \n      const newNodes = [];\n      const newEdges = [];\n      const nodePositions = {};\n      \n      // Calculate total width needed\n      const HORIZONTAL_SPACING = 250; // Increased spacing between nodes\n      const startX = 50; // Starting position\n      const centerY = 150; // Fixed Y position for better visibility\n\n      // First, create all nodes with more spacing\n      architecture.services.forEach((service, index) => {\n        const nodeId = service.id || service.name.toLowerCase().replace(/[^a-z0-9]+/g, '-');\n        const node = {\n          id: nodeId,\n          type: 'awsService',\n          // Position nodes with more space between them\n          position: { \n            x: startX + (index * HORIZONTAL_SPACING), \n            y: centerY + (index % 2 === 0 ? -20 : 20) // Slight vertical offset for better edge visibility\n          },\n          data: {\n            label: service.name,\n            icon: service.icon,\n            isMissing: service.name.toLowerCase().includes('missing')\n          },\n          style: {\n            width: 120, // Fixed width for consistency\n            height: 80  // Fixed height for consistency\n          }\n        };\n        newNodes.push(node);\n        nodePositions[nodeId] = node.position;\n      });\n\n      // Create edges with improved styling\n      if (architecture.connections) {\n        architecture.connections.forEach((conn) => {\n          const fromId = typeof conn.from === 'string' ? \n            conn.from.toLowerCase().replace(/[^a-z0-9]+/g, '-') : \n            conn.from.id;\n          const toId = typeof conn.to === 'string' ? \n            conn.to.toLowerCase().replace(/[^a-z0-9]+/g, '-') : \n            conn.to.id;\n\n          if (nodePositions[fromId] && nodePositions[toId]) {\n            newEdges.push({\n              id: `${fromId}-${toId}`,\n              source: fromId,\n              target: toId,\n              type: 'smoothstep',\n              animated: true,\n              style: { \n                stroke: '#4FD1C5', \n                strokeWidth: 2,\n                opacity: 0.8\n              },\n              markerEnd: { \n                type: MarkerType.ArrowClosed,\n                width: 20,\n                height: 20\n              },\n              // Add curve to the connections for better visibility\n              sourceHandle: 'right',\n              targetHandle: 'left',\n              // Adjust the curve of the connection\n              curvature: 0.4\n            });\n          }\n        });\n      }\n\n      setNodes(newNodes);\n      setEdges(newEdges);\n    }\n\n    // Cleanup function\n    return () => {\n      hasLoggedWarning.current = false;\n    };\n  }, [architecture, setNodes, setEdges]);\n\n  // Early return if no data\n  if (!architecture?.services) {\n    return (\n      <div className=\"architecture-visualizer-loading\">\n        <span>Loading architecture...</span>\n      </div>\n    );\n  }\n\n  return (\n    <div style={{ height: '500px', width: '100%' }}> {/* Increased height for better visibility */}\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        nodeTypes={nodeTypes}\n        fitView\n        fitViewOptions={{\n          padding: 0.2, // Add padding around the view\n          minZoom: 0.5,\n          maxZoom: 1.5\n        }}\n        defaultViewport={{ zoom: 1 }}\n        minZoom={0.5}\n        maxZoom={1.5}\n      >\n        <Background color=\"#4FD1C5\" gap={16} size={1} />\n        <Controls />\n        <MiniMap \n          nodeColor={(node) => node.data.isMissing ? '#FF5656' : '#4FD1C5'}\n          maskColor=\"rgba(13, 25, 35, 0.7)\"\n        />\n      </ReactFlow>\n    </div>\n  );\n};\n\nexport default AWSArchitectureDisplay;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}